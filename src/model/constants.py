JAVA_VOCABULARY_MAPPINGS = {
    0: "AnnotationDeclaration",
    1: "AnnotationMemberDeclaration",
    2: "ArrayAccessExpr",
    3: "ArrayCreationExpr",
    4: "ArrayInitializerExpr",
    5: "AssertStmt",
    6: "AssignExpr",
    7: "BinaryExprOr",
    8: "BlockComment",
    9: "BlockStmt",
    10: "BooleanLiteralExpr",
    11: "BreakStmt",
    12: "CastExpr",
    13: "CatchClause",
    14: "CharLiteralExpr",
    15: "ClassExpr",
    16: "ClassOrInterfaceDeclaration",
    17: "CompilationUnit",
    18: "ConditionalExpr",
    19: "ConstructorDeclaration",
    20: "ContinueStmt",
    21: "DoStmt",
    22: "DoubleLiteralExpr",
    23: "EmptyStmt",
    24: "EnclosedExpr",
    25: "EnumConstantDeclaration",
    26: "EnumDeclaration",
    27: "ExplicitConstructorInvocationStmt",
    28: "ExpressionStmt",
    29: "FieldDeclaration",
    30: "ForEachStmt",
    31: "ForStmt",
    32: "IfStmt",
    33: "InitializerDeclaration",
    34: "InstanceOfExpr",
    35: "IntegerLiteralExpr",
    36: "JavadocComment",
    37: "LabeledStmt",
    38: "LineComment",
    39: "LongLiteralExpr",
    40: "MarkerAnnotationExpr",
    41: "MemberValuePair",
    42: "MethodCallExpr",
    43: "MethodDeclaration",
    44: "NameExpr",
    45: "NormalAnnotationExpr",
    46: "NullLiteralExpr",
    47: "ObjectCreationExpr",
    48: "PackageDeclaration",
    49: "Parameter",
    50: "Name",
    51: "SimpleName",
    52: "ArrayCreationLevel",
    53: "ReturnStmt",
    54: "SingleMemberAnnotationExpr",
    55: "StringLiteralExpr",
    56: "SuperExpr",
    57: "SwitchEntry",
    58: "SynchronizedStmt",
    59: "ThisExpr",
    60: "TryStmt",
    61: "LocalClassDeclarationStmt",
    62: "UnaryExpr",
    63: "VariableDeclarationExpr",
    64: "VariableDeclarator",
    65: "WhileStmt",
    66: "LambdaExpr",
    67: "MethodReferenceExpr",
    68: "TypeExpr",
    69: "NodeList",
    70: "ImportDeclaration",
    71: "ModuleDeclaration",
    72: "ModuleRequiresDirective",
    73: "ModuleExportsDirective",
    74: "ModuleProvidesDirective",
    75: "ModuleUsesDirective",
    76: "ModuleOpensDirective",
    77: "UnparsableStmt",
    78: "ReceiverParameter",
    79: "SwitchExpr",
    80: "TextBlockLiteralExpr",
    81: "YieldStmt",
    82: "TypePatternExpr",
    83: "RecordDeclaration",
    84: "CompactConstructorDeclaration",
    85: "RecordPatternExpr",
    86: "ClassOrInterfaceType",
    87: "FieldAccessExpr",
    88: "PrimitiveType",
    89: "ArrayType",
    90: "IntersectionType",
    91: "UnionType",
    92: "SwitchStmt",
    93: "ThrowStmt",
    94: "LocalRecordDeclarationStmt",
    95: "TypeParameter",
    96: "UnknownType",
    97: "VoidType",
    98: "WildcardType",
    99: "VarType",
    100: "Modifier",
    101: "BinaryExprAnd",
    102: "BinaryExprBinaryOr",
    103: "BinaryExprBinaryAnd",
    104: "BinaryExprXor",
    105: "BinaryExprEquals",
    106: "BinaryExprNotEquals",
    107: "BinaryExprLess",
    108: "BinaryExprGreater",
    109: "BinaryExprLessEquals",
    110: "BinaryExprGreaterEquals",
    111: "BinaryExprLeftShift",
    112: "BinaryExprSignedRightShift",
    113: "BinaryExprUnsignedRightShift",
    114: "BinaryExprPlus",
    115: "BinaryExprMinus",
    116: "BinaryExprMultiply",
    117: "BinaryExprDivide",
    118: "BinaryExprRemainder",
    119: "AssignExprAssign",
    120: "AssignExprMinus",
    121: "AssignExprMultiply",
    122: "AssignExprDivide",
    123: "AssignExprBinaryAnd",
    124: "AssignExprBinaryOr",
    125: "AssignExprXor",
    126: "AssignExprRemainder",
    127: "AssignExprLeftShift",
    128: "AssignExprSignedRightShift",
    129: "AssignExprUnsignedRightShift",
    130: "UnaryExprPlus",
    131: "UnaryExprMinus",
    132: "UnaryExprPrefixIncrement",
    133: "UnaryExprPrefixDecrement",
    134: "UnaryExprLogicalComplement",
    135: "UnaryExprBitwiseComplement",
    136: "UnaryExprPostfixIncrement",
    137: "UnaryExprPostfixDecrement"
}

FILES = [
    'koko-eating-bananas', 'two-sum', 'binary-tree-preorder-traversal',
    'binary-tree-postorder-traversal', 'merge-k-sorted-lists', 'minimum-number-of-arrows-to-burst-balloons',
    'kth-smallest-element-in-a-bst', 'intersection-of-two-arrays', 'longest-palindromic-substring', 'combinations',
    '3sum', '4sum', 'majority-element', 'generate-parentheses', 'valid-anagram', 'product-of-array-except-self',
    'median-of-two-sorted-arrays', 'integer-to-roman', 'single-number', 'longest-consecutive-sequence', 
    'sqrtx', 'find-the-index-of-the-first-occurrence-in-a-string',  
    'plus-one', 'linked-list-cycle', 'jump-game',   
    'minimum-size-subarray-sum',  'unique-paths-ii', 'permutations', 'coin-change', 
    'group-anagrams', 'maximum-subarray', 'counting-bits', 'remove-nth-node-from-end-of-list', 'longest-common-prefix', 
    'remove-duplicates-from-sorted-array-ii', 'is-subsequence', 
    'best-time-to-buy-and-sell-stock', 'odd-even-linked-list', 'game-of-life', 'happy-number', 'valid-palindrome', 
    'sum-of-left-leaves', 'find-minimum-in-rotated-sorted-array', 'first-missing-positive',  
    'binary-tree-zigzag-level-order-traversal', 'average-of-levels-in-binary-tree', 'remove-duplicates-from-sorted-array', 
    'combination-sum-ii', 'target-sum',  'merge-sorted-array', 
    'evaluate-reverse-polish-notation', 'reverse-nodes-in-k-group',  '3sum-closest', 'swap-nodes-in-pairs', 
    'word-pattern', 'palindrome-partitioning', 'reverse-linked-list',  'count-complete-tree-nodes', 
    'best-time-to-buy-and-sell-stock-ii', 'pascals-triangle', 'delete-node-in-a-bst', 'move-zeroes', 'missing-number', 
    'course-schedule',  'third-maximum-number', 'sort-characters-by-frequency', 
    'climbing-stairs', 'linked-list-cycle-ii', 'permutations-ii', 'course-schedule-ii', 
    'kth-largest-element-in-an-array', 'symmetric-tree', 'find-pivot-index', 'non-overlapping-intervals', 'rotate-image', 
    'path-sum-ii', 'gas-station',  'zigzag-conversion', 'asteroid-collision', 'majority-element-ii', 
    'powx-n', 'longest-increasing-subsequence', 'reverse-words-in-a-string', 'minimum-window-substring', 'next-permutation', 
    'sort-colors', 'add-two-numbers-ii', 'word-break', 'string-compression', 'merge-two-sorted-lists', 'binary-tree-paths', 
    'search-in-rotated-sorted-array', 'palindrome-number', 'path-sum', 'binary-tree-inorder-traversal', 
    'binary-tree-maximum-path-sum', 'contains-duplicate-ii', 'ransom-note', 'add-two-numbers', 
    'intersection-of-two-arrays-ii'
]