JAVA_VOCABULARY_MAPPINGS = {
    0: "AnnotationDeclaration",
    1: "AnnotationMemberDeclaration",
    2: "ArrayAccessExpr",
    3: "ArrayCreationExpr",
    4: "ArrayInitializerExpr",
    5: "AssertStmt",
    6: "AssignExpr",
    7: "BinaryExprOr",
    8: "BlockComment",
    9: "BlockStmt",
    10: "BooleanLiteralExpr",
    11: "BreakStmt",
    12: "CastExpr",
    13: "CatchClause",
    14: "CharLiteralExpr",
    15: "ClassExpr",
    16: "ClassOrInterfaceDeclaration",
    17: "CompilationUnit",
    18: "ConditionalExpr",
    19: "ConstructorDeclaration",
    20: "ContinueStmt",
    21: "DoStmt",
    22: "DoubleLiteralExpr",
    23: "EmptyStmt",
    24: "EnclosedExpr",
    25: "EnumConstantDeclaration",
    26: "EnumDeclaration",
    27: "ExplicitConstructorInvocationStmt",
    28: "ExpressionStmt",
    29: "FieldDeclaration",
    30: "ForEachStmt",
    31: "ForStmt",
    32: "IfStmt",
    33: "InitializerDeclaration",
    34: "InstanceOfExpr",
    35: "IntegerLiteralExpr",
    36: "JavadocComment",
    37: "LabeledStmt",
    38: "LineComment",
    39: "LongLiteralExpr",
    40: "MarkerAnnotationExpr",
    41: "MemberValuePair",
    42: "MethodCallExpr",
    43: "MethodDeclaration",
    44: "NameExpr",
    45: "NormalAnnotationExpr",
    46: "NullLiteralExpr",
    47: "ObjectCreationExpr",
    48: "PackageDeclaration",
    49: "Parameter",
    50: "Name",
    51: "SimpleName",
    52: "ArrayCreationLevel",
    53: "ReturnStmt",
    54: "SingleMemberAnnotationExpr",
    55: "StringLiteralExpr",
    56: "SuperExpr",
    57: "SwitchEntry",
    58: "SynchronizedStmt",
    59: "ThisExpr",
    60: "TryStmt",
    61: "LocalClassDeclarationStmt",
    62: "UnaryExpr",
    63: "VariableDeclarationExpr",
    64: "VariableDeclarator",
    65: "WhileStmt",
    66: "LambdaExpr",
    67: "MethodReferenceExpr",
    68: "TypeExpr",
    69: "NodeList",
    70: "ImportDeclaration",
    71: "ModuleDeclaration",
    72: "ModuleRequiresDirective",
    73: "ModuleExportsDirective",
    74: "ModuleProvidesDirective",
    75: "ModuleUsesDirective",
    76: "ModuleOpensDirective",
    77: "UnparsableStmt",
    78: "ReceiverParameter",
    79: "SwitchExpr",
    80: "TextBlockLiteralExpr",
    81: "YieldStmt",
    82: "TypePatternExpr",
    83: "RecordDeclaration",
    84: "CompactConstructorDeclaration",
    85: "RecordPatternExpr",
    86: "ClassOrInterfaceType",
    87: "FieldAccessExpr",
    88: "PrimitiveType",
    89: "ArrayType",
    90: "IntersectionType",
    91: "UnionType",
    92: "SwitchStmt",
    93: "ThrowStmt",
    94: "LocalRecordDeclarationStmt",
    95: "TypeParameter",
    96: "UnknownType",
    97: "VoidType",
    98: "WildcardType",
    99: "VarType",
    100: "Modifier",
    101: "BinaryExprAnd",
    102: "BinaryExprBinaryOr",
    103: "BinaryExprBinaryAnd",
    104: "BinaryExprXor",
    105: "BinaryExprEquals",
    106: "BinaryExprNotEquals",
    107: "BinaryExprLess",
    108: "BinaryExprGreater",
    109: "BinaryExprLessEquals",
    110: "BinaryExprGreaterEquals",
    111: "BinaryExprLeftShift",
    112: "BinaryExprSignedRightShift",
    113: "BinaryExprUnsignedRightShift",
    114: "BinaryExprPlus",
    115: "BinaryExprMinus",
    116: "BinaryExprMultiply",
    117: "BinaryExprDivide",
    118: "BinaryExprRemainder",
    119: "AssignExprAssign",
    120: "AssignExprMinus",
    121: "AssignExprMultiply",
    122: "AssignExprDivide",
    123: "AssignExprBinaryAnd",
    124: "AssignExprBinaryOr",
    125: "AssignExprXor",
    126: "AssignExprRemainder",
    127: "AssignExprLeftShift",
    128: "AssignExprSignedRightShift",
    129: "AssignExprUnsignedRightShift",
    130: "UnaryExprPlus",
    131: "UnaryExprMinus",
    132: "UnaryExprPrefixIncrement",
    133: "UnaryExprPrefixDecrement",
    134: "UnaryExprLogicalComplement",
    135: "UnaryExprBitwiseComplement",
    136: "UnaryExprPostfixIncrement",
    137: "UnaryExprPostfixDecrement"
}