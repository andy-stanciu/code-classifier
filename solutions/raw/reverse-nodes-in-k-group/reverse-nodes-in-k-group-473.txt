/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        int n = 0;
        ListNode temp = head;
        while (temp != null) {
            temp = temp.next;
            n++;
        }
        ListNode dummyNode = new ListNode(0), dummyNodeTail = dummyNode;
        int reverseNumber = n / k;
        while (reverseNumber > 0) {
            ListNode tail = head;
            ListNode prev = null;
            for (int i = 0; i < k; i++) {
                ListNode next = head.next;
                head.next = prev;
                prev = head;
                head = next;
            }
            dummyNodeTail.next = prev;
            dummyNodeTail = tail;
            reverseNumber--;
        }
        dummyNodeTail.next = head;
        return dummyNode.next;
    }
}
