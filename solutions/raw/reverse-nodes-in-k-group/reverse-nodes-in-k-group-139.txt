/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        int len = 0;
        ListNode temp = head;
        while (temp != null) {
            len++;
            temp = temp.next;
        }
        int numTimes = len / k;
        ListNode res = new ListNode();
        ListNode dummy = res;
        while (numTimes-- > 0) {
            dummy.next = helper(head, k);
            dummy = head;
            head = head.next;
        }
        return res.next;
    }

    private ListNode helper(ListNode head, int k) {
        ListNode newHead = null;
        ListNode temp = head;
        while (k-- > 0) {
            ListNode tempNext = temp.next;
            temp.next = newHead;
            newHead = temp;
            temp = tempNext;
        }
        head.next = temp;
        return newHead;
    }
}
