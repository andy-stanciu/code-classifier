/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode start = head, end = head;
        int count = 1;
        while (end != null && count != k) {
            count++;
            end = end.next;
        }
        if (end == null) {
            return head;
        } else {
            ListNode ans = reverseKGroup(end.next, k);
            return reverseNode(start, end, ans, k);
        }
    }

    public ListNode reverseNode(ListNode start, ListNode end, ListNode prev, int k) {
        ListNode temp = start, next = start;
        int count = 1;
        while (count <= k) {
            next = temp.next;
            temp.next = prev;
            prev = temp;
            temp = next;
            count++;
        }
        return prev;
    }
}
