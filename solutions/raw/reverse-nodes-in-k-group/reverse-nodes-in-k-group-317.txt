/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        int size = 0;
        ListNode temp = head;
        while (temp != null) {
            size++;
            temp = temp.next;
        }
        if (size < k)
            return head;
        int cnt = 0;
        ListNode current = head;
        ListNode prev = null;
        while (cnt < k && current != null) {
            ListNode next = current.next;
            current.next = prev;
            prev = current;
            current = next;
            cnt++;
        }
        if (current != null) {
            head.next = reverseKGroup(current, k);
        }
        return prev;
    }
}
