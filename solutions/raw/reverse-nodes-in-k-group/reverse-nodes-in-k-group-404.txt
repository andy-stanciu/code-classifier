class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        if (head == null) {
            return head;
        }
        ListNode node_curr = head;
        int count = 0;
        while (node_curr != null && count < k) {
            node_curr = node_curr.next;
            count++;
        }
        node_curr = head;
        ListNode node_Next = null;
        ListNode node_prev = null;
        if (count == k) {
            count = 0;
            while (node_curr != null && count < k) {
                node_Next = node_curr.next;
                node_curr.next = node_prev;
                node_prev = node_curr;
                node_curr = node_Next;
                count++;
            }
        } else {
            node_prev = head;
        }
        if (node_Next != null) {
            head.next = reverseKGroup(node_Next, k);
        }
        return node_prev;
    }
}
