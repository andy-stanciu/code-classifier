class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode temp = head;
        int count = 0;
        while (temp != null) {
            count++;
            temp = temp.next;
        }
        return reverse(head, count, k);
    }

    private ListNode reverse(ListNode head, int count, int k) {
        if (head == null || head.next == null || count < k)
            return head;
        ListNode curr = head;
        ListNode prev = null;
        ListNode next = null;
        int i = k;
        while (i > 0 && curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
            i--;
        }
        ListNode dummy = head;
        ListNode head1 = reverse(curr, count - k, k);
        dummy.next = head1;
        return prev;
    }
}
