class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode curr = head;
        int count = 0;
        while (curr != null) {
            curr = curr.next;
            count++;
        }
        int n = count / k;
        ListNode curr1 = head;
        int a = 0;
        while (a != k - 1) {
            curr1 = curr1.next;
            a++;
        }
        ListNode temp1 = null, prev = null, temp = null, temp2 = null;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= k; j++) {
                if (j == 1) {
                    temp1 = head;
                }
                temp = head.next;
                head.next = prev;
                prev = head;
                head = temp;
            }
            temp = null;
            if (i > 1) {
                temp2.next = prev;
            }
            prev = null;
            temp2 = temp1;
        }
        if (count % k > 0) {
            temp2.next = head;
        }
        return curr1;
    }
}
