class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode dummy = new ListNode();
        ListNode curr = head;
        ListNode temp = dummy;
        Stack<Integer> stack = new Stack<>();
        Stack<Integer> stack2 = new Stack<>();
        while (curr != null) {
            for (int i = 0; i < k; i++) {
                if (curr == null) {
                    while (!stack.isEmpty()) stack2.push(stack.pop());
                    while (!stack2.isEmpty()) {
                        temp.next = new ListNode(stack2.pop());
                        temp = temp.next;
                    }
                    return dummy.next;
                }
                stack.push(curr.val);
                curr = curr.next;
            }
            for (int i = 0; i < k; i++) {
                temp.next = new ListNode(stack.pop());
                temp = temp.next;
            }
        }
        return dummy.next;
    }
}
