/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode current = head;
        int value = k;
        while (current != null && value > 0) {
            current = current.next;
            value--;
        }
        if (value > 0)
            return head;
        ListNode node = reverseKGroup(current, k);
        ListNode reversedNode = reverseList(head, current);
        head.next = node;
        return reversedNode;
    }

    public ListNode reverseList(ListNode start, ListNode end) {
        ListNode prev = start;
        ListNode current = prev.next;
        ListNode temp;
        while (current != end) {
            temp = current.next;
            current.next = prev;
            prev = current;
            current = temp;
        }
        return prev;
    }
}
