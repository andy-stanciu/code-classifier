/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode p = head;
        int size = 0;
        while (p != null) {
            size++;
            p = p.next;
        }
        if (size < k) {
            return head;
        }
        ListNode temp = head;
        ListNode prev = null;
        ListNode Next = null;
        int count = 0;
        while (count < k && temp != null) {
            Next = temp.next;
            temp.next = prev;
            prev = temp;
            temp = Next;
            count++;
        }
        if (Next != null) {
            head.next = reverseKGroup(Next, k);
        }
        return prev;
    }
}
