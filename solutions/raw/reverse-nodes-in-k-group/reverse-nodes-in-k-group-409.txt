/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        int index = 0;
        ListNode current = head;
        ListNode next = null;
        ListNode prev = null;
        while (current != null && index < k) {
            current = current.next;
            index++;
        }
        current = head;
        if (index == k) {
            index = 0;
            while (current != null && index < k) {
                next = current.next;
                current.next = prev;
                prev = current;
                current = next;
                index++;
            }
        } else {
            prev = head;
        }
        if (next != null) {
            head.next = reverseKGroup(next, k);
        }
        return prev;
    }
}
