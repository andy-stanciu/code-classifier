class Solution {

    public int size(ListNode head) {
        if (head == null) {
            return 0;
        }
        if (head.next == null) {
            return 1;
        }
        ListNode curr = head;
        int p = 0;
        while (curr != null) {
            curr = curr.next;
            p++;
        }
        return p;
    }

    public ListNode reverseKGroup(ListNode head, int k) {
        if (head == null) {
            return head;
        }
        ListNode curr = head;
        ListNode prev = null;
        ListNode fwd = null;
        int count = 0;
        while (curr != null && count < k) {
            fwd = curr.next;
            curr.next = prev;
            prev = curr;
            curr = fwd;
            count++;
        }
        if (fwd != null && size(fwd) >= k) {
            head.next = reverseKGroup(fwd, k);
        } else {
            head.next = fwd;
        }
        return prev;
    }
}
