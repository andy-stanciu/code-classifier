/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode temp = head;
        int count = 0;
        while (temp != null) {
            count++;
            temp = temp.next;
        }
        if (k == 1)
            return head;
        int turns = count / k;
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode dummyPrev = dummy;
        while (turns > 0) {
            ListNode start = dummyPrev.next;
            ListNode prev = null;
            ListNode curr = start;
            ListNode next = null;
            for (int i = 1; i <= k; i++) {
                next = curr.next;
                curr.next = prev;
                prev = curr;
                curr = next;
            }
            dummyPrev.next = prev;
            start.next = curr;
            dummyPrev = start;
            turns--;
        }
        return dummy.next;
    }
}
