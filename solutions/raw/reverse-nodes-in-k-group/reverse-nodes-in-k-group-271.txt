class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        return solve(head, k);
    }

    ListNode solve(ListNode head, int k) {
        if (head == null)
            return null;
        int count = getLength(head);
        if (count < k) {
            return head;
        }
        ListNode prev = null, curr = head;
        for (int i = 0; i < k; i++) {
            ListNode nnext = curr.next;
            curr.next = prev;
            prev = curr;
            curr = nnext;
        }
        head.next = solve(curr, k);
        return prev;
    }

    int getLength(ListNode head) {
        int c = 0;
        while (head != null) {
            c++;
            head = head.next;
        }
        return c;
    }
}
