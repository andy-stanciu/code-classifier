/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        if (head == null)
            return head;
        ListNode temp = head;
        ListNode prev = head;
        int cnt = 0;
        int[] x = new int[k];
        while (temp != null) {
            cnt = 0;
            while (temp != null && cnt < k) {
                x[cnt++] = temp.val;
                temp = temp.next;
            }
            if (cnt == k) {
                while (cnt > 0) {
                    prev.val = x[--cnt];
                    prev = prev.next;
                }
            } else
                break;
        }
        return head;
    }
}
