/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseKGroup(ListNode head, int k) {
        int i = 1;
        ListNode p = head;
        while (p != null && i < k) {
            p = p.next;
            i++;
        }
        if (p != null) {
            ListNode dum = reverseKGroup(p.next, k);
            p.next = null;
            p = Reverse(head);
            ListNode c = p;
            while (p.next != null) p = p.next;
            p.next = dum;
            return c;
        }
        return head;
    }

    static ListNode Reverse(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode p = Reverse(head.next);
        head.next.next = head;
        head.next = null;
        return p;
    }
}
