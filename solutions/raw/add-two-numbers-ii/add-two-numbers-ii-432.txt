class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1 = rev(l1);
        l2 = rev(l2);
        ListNode head = new ListNode(-1);
        ListNode curr = head;
        int carry = 0;
        while (l1 != null && l2 != null) {
            int val = l1.val + l2.val + carry;
            if (val >= 10) {
                carry = 1;
                val -= 10;
            } else {
                carry = 0;
            }
            curr.val = val;
            curr.next = new ListNode(-1);
            curr = curr.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        while (l1 != null) {
            int val = l1.val + carry;
            if (val >= 10) {
                carry = 1;
                val -= 10;
            } else {
                carry = 0;
            }
            curr.val = val;
            curr.next = new ListNode(-1);
            curr = curr.next;
            l1 = l1.next;
        }
        while (l2 != null) {
            int val = l2.val + carry;
            if (val >= 10) {
                carry = 1;
                val -= 10;
            } else {
                carry = 0;
            }
            curr.val = val;
            curr.next = new ListNode(-1);
            curr = curr.next;
            l2 = l2.next;
        }
        if (carry == 1) {
            curr.val = 1;
            curr.next = new ListNode(-1);
            curr = curr.next;
        }
        return rev(head).next;
    }

    public ListNode rev(ListNode l) {
        ListNode prev = null;
        while (l != null) {
            ListNode next = l.next;
            l.next = prev;
            prev = l;
            l = next;
        }
        return prev;
    }
}
