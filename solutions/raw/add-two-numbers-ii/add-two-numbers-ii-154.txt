/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode h1, ListNode h2) {
        ListNode l1 = reverse(h1);
        ListNode l2 = reverse(h2);
        int sum = 0;
        int carry = 0;
        ListNode dummy = new ListNode(-1);
        ListNode prev = dummy;
        while (l1 != null || l2 != null) {
            sum = carry;
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }
            carry = sum / 10;
            prev.next = new ListNode(sum % 10);
            prev = prev.next;
        }
        if (carry != 0) {
            prev.next = new ListNode(carry);
        }
        return reverse(dummy.next);
    }

    public static ListNode reverse(ListNode head) {
        ListNode temp = head;
        ListNode pre = null;
        while (temp != null) {
            ListNode curr = temp.next;
            temp.next = pre;
            pre = temp;
            temp = curr;
        }
        return pre;
    }
}
