/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode rev(ListNode l) {
        ListNode prev = null;
        while (l != null) {
            ListNode temp = l.next;
            l.next = prev;
            prev = l;
            l = temp;
        }
        return prev;
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int n1 = 0, n2 = 0;
        l1 = rev(l1);
        l2 = rev(l2);
        int carry = 0;
        ListNode prev = null;
        while (l1 != null || l2 != null || carry == 1) {
            int sx = 0;
            if (l1 != null) {
                sx += (l1.val);
                l1 = l1.next;
            }
            if (l2 != null) {
                sx += (l2.val);
                l2 = l2.next;
            }
            sx += carry;
            carry = sx / 10;
            ListNode temp = new ListNode(sx % 10);
            temp.next = prev;
            prev = temp;
        }
        return prev;
    }
}
