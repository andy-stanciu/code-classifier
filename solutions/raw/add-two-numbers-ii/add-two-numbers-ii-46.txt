class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // l1 will be reversed now.
        ListNode L = reverseLL(l1);
        // l2 will be reversed now.
        ListNode LL = reverseLL(l2);
        // dummy node
        ListNode dummy = new ListNode();
        // put dummy node in some temporary node.
        ListNode node = dummy;
        int carry = 0;
        while (L != null || LL != null || carry == 1) {
            int sum = 0;
            if (L != null) {
                sum += L.val;
                L = L.next;
            }
            if (LL != null) {
                sum += LL.val;
                LL = LL.next;
            }
            sum += carry;
            carry = sum / 10;
            ListNode c = new ListNode(sum % 10);
            node.next = c;
            node = node.next;
        }
        return reverseLL(dummy.next);
    }

    //recursively reverse the linked list.
    public ListNode reverseLL(ListNode node) {
        if (node == null || node.next == null) {
            return node;
        }
        ListNode p = reverseLL(node.next);
        node.next.next = node;
        node.next = null;
        return p;
    }
}
