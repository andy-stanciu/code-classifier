/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode list1, ListNode list2) {
        ListNode l1 = reverse(list1);
        ListNode l2 = reverse(list2);
        ListNode ans = add(l1, l2);
        ListNode m = reverse(ans);
        return m;
    }

    public ListNode reverse(ListNode head) {
        ListNode temp = head;
        ListNode ans = null;
        ListNode temp2 = ans;
        while (temp != null) {
            ListNode t = new ListNode(temp.val);
            t.next = temp2;
            temp2 = t;
            temp = temp.next;
        }
        return temp2;
    }

    public ListNode add(ListNode l1, ListNode l2) {
        int r = 0, div = 0;
        ListNode head = new ListNode(0);
        ListNode temp1 = l1, temp2 = l2, p = head;
        while (temp1 != null && temp2 != null) {
            int sum = (temp1.val + temp2.val + div);
            r = (sum) % 10;
            ListNode t = new ListNode(r);
            p.next = t;
            p = p.next;
            div = sum / 10;
            temp1 = temp1.next;
            temp2 = temp2.next;
        }
        while (temp1 != null) {
            int sum = temp1.val + div;
            r = sum % 10;
            ListNode t = new ListNode(r);
            p.next = t;
            p = p.next;
            div = sum / 10;
            temp1 = temp1.next;
        }
        while (temp2 != null) {
            int sum = temp2.val + div;
            r = sum % 10;
            ListNode t = new ListNode(r);
            p.next = t;
            p = p.next;
            div = sum / 10;
            temp2 = temp2.next;
        }
        if (div != 0) {
            ListNode t = new ListNode(div);
            p.next = t;
            p = p.next;
        }
        return head.next;
    }
}
// brute force approach will be to reverse both linked list and apply Add Two Numbers-I and reverse the ans and return it.
// reverse---- temp=0; t=7; temp=t;
