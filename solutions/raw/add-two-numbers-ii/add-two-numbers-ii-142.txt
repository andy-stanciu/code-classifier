/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head1 = l1;
        ListNode newHead1 = null;
        while (head1 != null) {
            ListNode temp = head1;
            head1 = head1.next;
            temp.next = newHead1;
            newHead1 = temp;
        }
        head1 = l2;
        ListNode newHead2 = null;
        while (head1 != null) {
            ListNode temp = head1;
            head1 = head1.next;
            temp.next = newHead2;
            newHead2 = temp;
        }
        ListNode dum = new ListNode();
        ListNode res = null;
        int t = 0, c = 0;
        while (newHead1 != null || newHead2 != null || c != 0) {
            t = c;
            if (newHead1 != null) {
                t += newHead1.val;
                newHead1 = newHead1.next;
            }
            if (newHead2 != null) {
                t += newHead2.val;
                newHead2 = newHead2.next;
            }
            int num = t % 10;
            c = t / 10;
            dum = new ListNode(num);
            dum.next = res;
            res = dum;
        }
        return res;
    }
}
