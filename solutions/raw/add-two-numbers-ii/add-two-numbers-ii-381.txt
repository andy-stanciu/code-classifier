/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode revList(ListNode head) {
        ListNode prev = null, temp;
        while (head != null) {
            temp = head.next;
            head.next = prev;
            prev = head;
            head = temp;
        }
        return prev;
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode revListOne = revList(l1);
        ListNode revListTwo = revList(l2);
        int totSum = 0, carry = 0;
        ListNode ans = new ListNode();
        while (revListOne != null || revListTwo != null) {
            if (revListOne != null)
                totSum += revListOne.val;
            if (revListTwo != null)
                totSum += revListTwo.val;
            ans.val = totSum % 10;
            carry = totSum / 10;
            ListNode head = new ListNode(carry);
            head.next = ans;
            ans = head;
            totSum = carry;
            revListOne = revListOne != null ? revListOne.next : null;
            revListTwo = revListTwo != null ? revListTwo.next : null;
        }
        return carry == 0 ? ans.next : ans;
    }
}
