class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode list1 = reverseList(l1);
        ListNode list2 = reverseList(l2);
        ListNode dummy = new ListNode(0);
        ListNode node = dummy;
        int carry = 0;
        while (list1 != null || list2 != null || carry != 0) {
            int number1 = (list1 != null) ? list1.val : 0;
            int number2 = (list2 != null) ? list2.val : 0;
            int sum = number1 + number2 + carry;
            carry = sum / 10;
            int res = sum % 10;
            node.next = new ListNode(res);
            node = node.next;
            if (list1 != null)
                list1 = list1.next;
            if (list2 != null)
                list2 = list2.next;
        }
        // Reverse the result before returning
        return reverseList(dummy.next);
    }

    // Helper function to reverse the linked list
    public ListNode reverseList(ListNode list) {
        ListNode dummy = null;
        ListNode node = list;
        while (node != null) {
            ListNode next = node.next;
            node.next = dummy;
            dummy = node;
            node = next;
        }
        return dummy;
    }
}
