class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> stack1 = new Stack<>();
        Stack<Integer> stack2 = new Stack<>();
        // Pushing stack elements
        while (l1 != null || l2 != null) {
            if (l1 != null) {
                stack1.push(l1.val);
                l1 = l1.next;
            }
            if (l2 != null) {
                stack2.push(l2.val);
                l2 = l2.next;
            }
        }
        int carry = 0;
        ListNode nxt = null;
        ListNode curr = null;
        // Building the result
        while (!stack1.empty() || !stack2.empty() || carry != 0) {
            int n1 = stack1.empty() ? 0 : stack1.pop();
            int n2 = stack2.empty() ? 0 : stack2.pop();
            int _sum = n1 + n2 + carry;
            int digit = _sum % 10;
            carry = _sum / 10;
            nxt = new ListNode(digit, curr);
            curr = nxt;
        }
        return curr;
    }
}
