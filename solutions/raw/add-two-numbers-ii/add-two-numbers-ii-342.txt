/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Deque<Integer> r1 = new ArrayDeque<>();
        while (l1 != null) {
            r1.add(l1.val);
            l1 = l1.next;
        }
        //System.out.println( r1.toString());
        Deque<Integer> r2 = new ArrayDeque<>();
        while (l2 != null) {
            r2.add(l2.val);
            l2 = l2.next;
        }
        //System.out.println( r2.toString());
        ListNode first = null;
        //Deque<Integer> sum = new ArrayDeque<>();
        int carry = 0;
        while (r1.peekLast() != null || r2.peekLast() != null || carry != 0) {
            int t = carry;
            if (r1.peekLast() != null) {
                t += r1.pollLast();
            }
            if (r2.peekLast() != null) {
                t += r2.pollLast();
            }
            //sum.addFirst( t % 10);
            ListNode now = new ListNode(t % 10);
            now.next = first;
            first = now;
            //System.out.print( t%10 + " ");
            carry = t / 10;
        }
        //System.out.print( sum.toString());
        return first;
    }
}
