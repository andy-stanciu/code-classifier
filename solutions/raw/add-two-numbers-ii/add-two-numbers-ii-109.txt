class Solution {

    public ListNode rev(ListNode ls) {
        ListNode curr = ls;
        ListNode prev = null;
        while (curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode ls1 = rev(l1);
        ListNode ls2 = rev(l2);
        ListNode dummy = new ListNode(0);
        ListNode temp = dummy;
        int carry = 0;
        while (ls1 != null || ls2 != null || carry == 1) {
            int sum = 0;
            if (ls1 != null) {
                sum += ls1.val;
                ls1 = ls1.next;
            }
            if (ls2 != null) {
                sum += ls2.val;
                ls2 = ls2.next;
            }
            sum += carry;
            carry = sum / 10;
            ListNode t = new ListNode(sum % 10);
            temp.next = t;
            temp = temp.next;
        }
        ListNode ans = rev(dummy.next);
        return ans;
    }
}
