/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        String s1 = "";
        while (l1 != null) {
            s1 += l1.val;
            l1 = l1.next;
        }
        String s2 = "";
        while (l2 != null) {
            s2 += l2.val;
            l2 = l2.next;
        }
        int n1 = s1.length();
        int n2 = s2.length();
        ListNode prev = null;
        int cry = 0;
        int i = 1;
        int n = Math.max(n1, n2);
        while (n != 0) {
            int first = i <= n2 ? Integer.parseInt(String.valueOf(s2.charAt(n2 - i))) : 0;
            int second = i <= n1 ? Integer.parseInt(String.valueOf(s1.charAt(n1 - i))) : 0;
            int sum = first + second + cry;
            int num = sum % 10;
            cry = sum / 10;
            ListNode cur = new ListNode(num);
            cur.next = prev;
            prev = cur;
            i++;
            n--;
        }
        if (cry > 0) {
            ListNode c = new ListNode(cry);
            c.next = prev;
            prev = c;
        }
        return prev;
    }
}
