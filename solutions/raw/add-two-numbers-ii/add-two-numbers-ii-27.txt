class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode prev = null;
        while (l1 != null) {
            ListNode temp1 = l1.next;
            l1.next = prev;
            prev = l1;
            l1 = temp1;
        }
        ListNode prev1 = null;
        while (l2 != null) {
            ListNode temp2 = l2.next;
            l2.next = prev1;
            prev1 = l2;
            l2 = temp2;
        }
        //prev =l1 reverse
        //prev =l2 reverse
        ListNode temp = new ListNode();
        ListNode dummy = temp;
        int sum = 0, carry = 0;
        while ((prev != null) || (prev1 != null) || (carry != 0)) {
            if (prev != null) {
                sum = sum + prev.val;
                prev = prev.next;
            }
            if (prev1 != null) {
                sum = sum + prev1.val;
                prev1 = prev1.next;
            }
            ListNode var = new ListNode(sum % 10);
            temp.next = var;
            temp = temp.next;
            carry = sum / 10;
            sum = 0;
            sum = sum + carry;
        }
        // reverse answer
        ListNode prev3 = dummy.next;
        ListNode porn = null;
        while (prev3 != null) {
            ListNode temp2 = prev3.next;
            prev3.next = porn;
            porn = prev3;
            prev3 = temp2;
        }
        return porn;
    }
}
