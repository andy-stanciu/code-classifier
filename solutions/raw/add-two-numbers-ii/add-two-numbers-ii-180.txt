/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode first = null;
        ListNode temp = l1;
        while (temp != null) {
            ListNode newNode = new ListNode(temp.val);
            newNode.next = first;
            first = newNode;
            temp = temp.next;
        }
        ListNode second = null;
        temp = l2;
        while (temp != null) {
            ListNode newNode = new ListNode(temp.val);
            newNode.next = second;
            second = newNode;
            temp = temp.next;
        }
        int carry = 0;
        ListNode list = new ListNode(0);
        ListNode head = null;
        temp = first;
        ListNode tempi = second;
        while (temp != null || tempi != null) {
            int a = temp != null ? temp.val : 0;
            if (temp != null)
                temp = temp.next;
            int b = tempi != null ? tempi.val : 0;
            if (tempi != null)
                tempi = tempi.next;
            int sum = a + b + carry;
            ListNode newNode = new ListNode(sum % 10);
            newNode.next = head;
            head = newNode;
            carry = sum / 10;
        }
        if (carry > 0) {
            ListNode newNode = new ListNode(carry);
            newNode.next = head;
            head = newNode;
        }
        return head;
    }
}
