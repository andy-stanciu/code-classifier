/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1.val == 0 && l2.val == 0)
            return new ListNode(0);
        if (l1.val == 0)
            return l2;
        if (l2.val == 0)
            return l1;
        Stack<Integer> s1 = new Stack<>();
        Stack<Integer> s2 = new Stack<>();
        while (l1 != null) {
            s1.push(l1.val);
            l1 = l1.next;
        }
        while (l2 != null) {
            s2.push(l2.val);
            l2 = l2.next;
        }
        ListNode node;
        ListNode ans = null;
        int c = 0;
        int sum = 0;
        while (!s1.isEmpty() || !s2.isEmpty() || c != 0) {
            sum = c;
            if (!s1.isEmpty()) {
                sum += s1.pop();
            }
            if (!s2.isEmpty()) {
                sum += s2.pop();
            }
            node = new ListNode(sum % 10);
            node.next = ans;
            ans = node;
            c = sum / 10;
        }
        return ans;
    }
}
// PLEASE UPVOTE !!
