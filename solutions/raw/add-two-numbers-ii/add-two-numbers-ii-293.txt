/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    private ListNode reverseList(ListNode h1) {
        ListNode prev = null, temp = null;
        while (h1 != null) {
            temp = h1.next;
            h1.next = prev;
            prev = h1;
            h1 = temp;
        }
        return prev;
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode h1 = reverseList(l1);
        ListNode h2 = reverseList(l2);
        int carry = 0;
        ListNode curr = null;
        while (h1 != null || h2 != null || carry != 0) {
            int sum = carry;
            sum += h1 != null ? h1.val : 0;
            sum += h2 != null ? h2.val : 0;
            ListNode n = new ListNode(sum % 10);
            carry = sum / 10;
            n.next = curr;
            curr = n;
            if (h1 != null)
                h1 = h1.next;
            if (h2 != null)
                h2 = h2.next;
        }
        return curr;
    }
}
