/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverse(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;
        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode a = reverse(l1);
        ListNode b = reverse(l2);
        int sum = 0;
        int carry = 0;
        ListNode dummy = new ListNode(-1);
        ListNode d = dummy;
        while (a != null || b != null) {
            sum += carry;
            if (a != null) {
                sum += a.val;
                a = a.next;
            }
            if (b != null) {
                sum += b.val;
                b = b.next;
            }
            carry = sum / 10;
            ListNode node = new ListNode(sum % 10);
            dummy.next = node;
            dummy = dummy.next;
            sum = 0;
        }
        if (carry > 0) {
            dummy.next = new ListNode(carry);
        }
        ListNode ans = reverse(d.next);
        return ans;
    }
}
