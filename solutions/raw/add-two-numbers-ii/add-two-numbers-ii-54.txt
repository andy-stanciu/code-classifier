class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode();
        ListNode ans = dummy;
        ListNode l1Rev = reverseLL(l1);
        ListNode l2Rev = reverseLL(l2);
        int sum = 0, carry = 0;
        while (l1Rev != null || l2Rev != null) {
            sum = 0;
            int l1Val = (l1Rev != null) ? l1Rev.val : 0;
            int l2Val = (l2Rev != null) ? l2Rev.val : 0;
            sum = l1Val + l2Val + carry;
            carry = sum / 10;
            ans.next = new ListNode(sum % 10);
            ans = ans.next;
            if (l1Rev != null) {
                l1Rev = l1Rev.next;
            }
            if (l2Rev != null) {
                l2Rev = l2Rev.next;
            }
        }
        if (carry != 0) {
            ans.next = new ListNode(carry);
        }
        return reverseLL(dummy.next);
    }

    public ListNode reverseLL(ListNode head) {
        ListNode curr = head, prev = null;
        while (curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
