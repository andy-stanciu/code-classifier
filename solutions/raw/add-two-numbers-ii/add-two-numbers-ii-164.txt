/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode list1 = reverseLL(l1);
        ListNode list2 = reverseLL(l2);
        ListNode dummy = new ListNode();
        ListNode curr = dummy;
        int result = 0, carry = 0;
        while (list1 != null || list2 != null || carry != 0) {
            result = carry;
            if (list1 != null) {
                result += list1.val;
                list1 = list1.next;
            }
            if (list2 != null) {
                result += list2.val;
                list2 = list2.next;
            }
            int tmp = result % 10;
            carry = result / 10;
            dummy.next = new ListNode(tmp);
            dummy = dummy.next;
        }
        return reverseLL(curr.next);
    }

    public ListNode reverseLL(ListNode node) {
        ListNode cur = node;
        ListNode prev = null, temp = null;
        while (cur != null) {
            temp = cur.next;
            cur.next = prev;
            prev = cur;
            cur = temp;
        }
        node = prev;
        return node;
    }
}
