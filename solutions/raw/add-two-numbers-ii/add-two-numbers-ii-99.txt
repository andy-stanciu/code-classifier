class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode i = reverse(l1);
        ListNode j = reverse(l2);
        ListNode head = new ListNode(3);
        ListNode temp = head, h;
        int carry = 0, sum = 0;
        while (i != null && j != null) {
            sum = i.val + j.val + carry;
            h = new ListNode(sum % 10);
            temp.next = h;
            temp = h;
            sum /= 10;
            carry = sum % 10;
            i = i.next;
            j = j.next;
        }
        while (i != null) {
            sum = i.val + carry;
            h = new ListNode(sum % 10);
            temp.next = h;
            temp = h;
            sum /= 10;
            carry = sum % 10;
            i = i.next;
        }
        while (j != null) {
            sum = j.val + carry;
            h = new ListNode(sum % 10);
            temp.next = h;
            temp = h;
            sum /= 10;
            carry = sum % 10;
            j = j.next;
        }
        if (carry != 0) {
            h = new ListNode(sum % 10);
            temp.next = h;
            temp = h;
        }
        head = reverse(head.next);
        return head;
    }

    public ListNode reverse(ListNode c) {
        ListNode p = null, f = c;
        while (f != null) {
            f = c.next;
            c.next = p;
            p = c;
            c = f;
        }
        return p == null ? c : p;
    }
}
