class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        TreeMap<Integer, Integer> map = new TreeMap<>();
        for (int i = 0; i <= lists.length - 1; i++) {
            ListNode temp = lists[i];
            while (temp != null) {
                if (map.containsKey(temp.val)) {
                    int x = map.get(temp.val);
                    map.put(temp.val, x + 1);
                } else
                    map.put(temp.val, 1);
                temp = temp.next;
            }
        }
        List<Integer> list = new ArrayList<>();
        for (int ele : map.keySet()) {
            for (int i = 1; i <= map.get(ele); i++) {
                list.add(ele);
            }
        }
        if (list.size() == 0)
            return null;
        ListNode a = new ListNode(list.get(0));
        ListNode c = a;
        for (int i = 1; i <= list.size() - 1; i++) {
            ListNode b = new ListNode(list.get(i));
            a.next = b;
            a = a.next;
        }
        return c;
    }
}
