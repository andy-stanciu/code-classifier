/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> pq = new PriorityQueue<>((n1, n2) -> n1.val - n2.val);
        for (int i = 0; i < lists.length; i++) {
            if (lists[i] != null) {
                pq.add(lists[i]);
            }
        }
        ListNode ans = new ListNode(0);
        ListNode currans = ans;
        while (!pq.isEmpty()) {
            ListNode l = pq.poll();
            currans.next = l;
            if (l.next != null) {
                pq.add(l.next);
            }
            currans = currans.next;
        }
        return ans.next;
    }
}
