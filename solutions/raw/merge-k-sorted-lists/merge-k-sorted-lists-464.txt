/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<Integer> minHeap = new PriorityQueue<>();
        for (int i = 0; i < lists.length; i++) {
            ListNode head = lists[i];
            while (head != null) {
                minHeap.add(head.val);
                head = head.next;
            }
        }
        ListNode temp = new ListNode();
        ListNode dummy = temp;
        while (!minHeap.isEmpty()) {
            temp.next = new ListNode(minHeap.poll());
            temp = temp.next;
        }
        return dummy.next;
    }
}
