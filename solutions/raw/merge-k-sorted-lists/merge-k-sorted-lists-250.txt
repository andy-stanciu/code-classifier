/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        if (lists.length == 0)
            return null;
        ArrayList<Integer> ar = new ArrayList<Integer>();
        ListNode head = new ListNode();
        ListNode t = head;
        for (ListNode l : lists) {
            if (l == null)
                continue;
            ListNode temp = l;
            while (temp != null) {
                ar.add(temp.val);
                temp = temp.next;
            }
        }
        // for(int i : ar){
        //     System.out.println(i);
        // }
        if (ar.size() == 0)
            return null;
        Object[] arr = ar.toArray();
        Arrays.sort(arr);
        t.val = (int) arr[0];
        for (int i = 1; i < arr.length; i++) {
            ListNode temp = new ListNode();
            temp.val = (int) (arr[i]);
            t.next = temp;
            t = t.next;
        }
        return head;
    }
}
