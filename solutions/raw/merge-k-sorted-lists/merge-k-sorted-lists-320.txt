/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        ArrayList<Integer> lst = new ArrayList<>();
        for (ListNode list : lists) {
            ListNode curr = list;
            while (curr != null) {
                lst.add(curr.val);
                curr = curr.next;
            }
        }
        int[] res = lst.stream().mapToInt(i -> i).toArray();
        Arrays.sort(res);
        ListNode ans = new ListNode(0);
        ListNode res1 = ans;
        for (int i = 0; i < res.length; i++) {
            ans.next = new ListNode(res[i]);
            ans = ans.next;
        }
        return res1.next;
    }
}
