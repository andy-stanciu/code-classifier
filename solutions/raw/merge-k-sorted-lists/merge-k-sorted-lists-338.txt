/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
        for (ListNode l : lists) {
            while (l != null) {
                pq.add(l.val);
                l = l.next;
            }
        }
        ListNode node = new ListNode(-1);
        ListNode head = node;
        while (!pq.isEmpty()) {
            int v = pq.poll();
            ListNode n = new ListNode(v);
            head.next = n;
            head = head.next;
        }
        return node.next;
    }
}
