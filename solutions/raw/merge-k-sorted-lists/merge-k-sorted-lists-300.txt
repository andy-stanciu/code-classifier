/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        ArrayList<Integer> array = new ArrayList<>();
        for (ListNode list : lists) {
            while (list != null) {
                array.add(list.val);
                list = list.next;
            }
        }
        if (array.size() == 0)
            return null;
        array.sort(Integer::compareTo);
        ListNode listNode = new ListNode(array.get(0));
        ListNode cur = listNode;
        for (int i = 1; i < array.size(); i++) {
            cur.next = new ListNode(array.get(i));
            cur = cur.next;
        }
        return listNode;
    }
}
