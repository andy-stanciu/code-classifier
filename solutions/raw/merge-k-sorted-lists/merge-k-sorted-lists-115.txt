/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> q = new PriorityQueue<ListNode>((a, b) -> (a.val - b.val));
        for (ListNode i : lists) {
            if (i != null)
                q.add(i);
        }
        ListNode head = null;
        ListNode tail = null;
        while (!q.isEmpty()) {
            ListNode p = q.poll();
            if (head == null) {
                head = p;
                tail = p;
            } else {
                tail.next = p;
                tail = p;
            }
            if (p.next != null) {
                q.add(p.next);
            }
        }
        return head;
    }
}
