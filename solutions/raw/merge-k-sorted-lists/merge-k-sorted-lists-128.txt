/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        ListNode firstList = null;
        if (lists.length > 0) {
            firstList = lists[0];
        }
        for (int i = 1; i < lists.length; i++) {
            firstList = getSortedListUsingTwo(firstList, lists[i]);
        }
        return firstList;
    }

    public ListNode getSortedListUsingTwo(ListNode currentList, ListNode nextList) {
        ListNode tempList = new ListNode();
        ListNode dummy = tempList;
        while (currentList != null && nextList != null) {
            if (currentList.val < nextList.val) {
                tempList.next = currentList;
                currentList = currentList.next;
            } else {
                tempList.next = nextList;
                nextList = nextList.next;
            }
            tempList = tempList.next;
        }
        if (currentList != null) {
            tempList.next = currentList;
        } else {
            tempList.next = nextList;
        }
        return dummy.next;
    }
}
