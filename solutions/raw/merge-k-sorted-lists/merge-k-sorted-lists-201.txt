/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        List<Integer> nums = new ArrayList<>();
        for (ListNode list : lists) {
            while (list != null) {
                nums.add(list.val);
                list = list.next;
            }
        }
        int[] sorted = new int[nums.size()];
        for (int i = 0; i < nums.size(); i++) {
            sorted[i] = nums.get(i);
        }
        Arrays.sort(sorted);
        ListNode dummy = new ListNode(-1);
        ListNode head = new ListNode(-1);
        dummy.next = head;
        for (int i = 0; i < sorted.length; i++) {
            head.next = new ListNode(sorted[i]);
            head = head.next;
        }
        return dummy.next.next;
    }
}
