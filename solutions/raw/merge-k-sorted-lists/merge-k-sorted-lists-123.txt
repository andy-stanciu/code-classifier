/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        ArrayList<Integer> arr = new ArrayList<>();
        LinkedList<Integer> link = new LinkedList<>();
        //[1,1,2]
        for (ListNode temp : lists) {
            while (temp != null) {
                int value = temp.val;
                arr.add(value);
                temp = temp.next;
            }
        }
        Collections.sort(arr);
        if (arr.isEmpty())
            return null;
        ListNode head = new ListNode(arr.get(0));
        ListNode mover = head;
        for (int i = 1; i < arr.size(); i++) {
            ListNode temporary = new ListNode(arr.get(i));
            mover.next = temporary;
            mover = temporary;
        }
        return head;
    }
}
