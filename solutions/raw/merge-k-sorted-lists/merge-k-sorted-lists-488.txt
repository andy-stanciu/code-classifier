/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        if (lists == null || lists.length == 0) {
            return null;
        }
        List<Integer> arr = new ArrayList<>();
        for (int i = 0; i < lists.length; i++) {
            ListNode h = lists[i];
            while (h != null) {
                arr.add(h.val);
                h = h.next;
            }
        }
        Collections.sort(arr);
        if (arr.size() == 0) {
            return null;
        }
        ListNode h = new ListNode(arr.get(0));
        ListNode t = h;
        int i = 1;
        while (i < arr.size()) {
            ListNode n = new ListNode(arr.get(i));
            t.next = n;
            t = n;
            i++;
        }
        return h;
    }
}
