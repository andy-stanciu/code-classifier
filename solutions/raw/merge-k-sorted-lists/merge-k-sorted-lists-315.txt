/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        int a = lists.length;
        if (a == 0) {
            return null;
        }
        ArrayList<Integer> arr = new ArrayList<>();
        for (ListNode b : lists) {
            ListNode curr = b;
            while (curr != null) {
                arr.add(curr.val);
                curr = curr.next;
            }
        }
        Collections.sort(arr);
        if (arr.size() == 0) {
            return null;
        }
        ListNode res = new ListNode(arr.get(0));
        ListNode pres = res;
        for (int i = 1; i < arr.size(); i++) {
            pres.next = new ListNode(arr.get(i));
            pres = pres.next;
        }
        return res;
    }
}
