/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        if (lists.length == 0)
            return null;
        PriorityQueue<Integer> queue = new PriorityQueue<Integer>();
        for (ListNode listNode : lists) {
            while (listNode != null) {
                queue.add(listNode.val);
                listNode = listNode.next;
            }
        }
        ListNode head = null;
        ListNode pList = null;
        while (queue.peek() != null) {
            ListNode tNode = new ListNode();
            tNode.val = queue.poll();
            if (pList != null) {
                pList.next = tNode;
            } else {
                head = tNode;
            }
            pList = tNode;
        }
        return head;
    }
}
