/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode merge(ListNode list1, ListNode list2) {
        ListNode temp1 = list1;
        ListNode temp2 = list2;
        ListNode dummy = new ListNode(-1);
        ListNode res = dummy;
        while (temp1 != null && temp2 != null) {
            if (temp1.val < temp2.val) {
                res.next = temp1;
                res = temp1;
                temp1 = temp1.next;
            } else {
                res.next = temp2;
                res = temp2;
                temp2 = temp2.next;
            }
        }
        if (temp1 != null)
            res.next = temp1;
        else
            res.next = temp2;
        return dummy.next;
    }

    public ListNode mergeKLists(ListNode[] lists) {
        if (lists == null || lists.length == 0)
            return null;
        ListNode head = lists[0];
        for (int i = 1; i < lists.length; i++) {
            head = merge(head, lists[i]);
        }
        return head;
    }
}
