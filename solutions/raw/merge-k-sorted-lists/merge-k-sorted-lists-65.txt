/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        ListNode dummyHead = new ListNode();
        // try pq
        PriorityQueue<ListNode> pq = new PriorityQueue<ListNode>((a, b) -> a.val - b.val);
        for (int i = 0; i < lists.length; i++) {
            ListNode cp = lists[i];
            while (cp != null) {
                pq.add(cp);
                ListNode next = cp.next;
                cp.next = null;
                cp = next;
            }
        }
        ListNode dp = dummyHead;
        while (pq.isEmpty() == false) {
            dp.next = pq.poll();
            dp = dp.next;
        }
        return dummyHead.next;
    }
}
