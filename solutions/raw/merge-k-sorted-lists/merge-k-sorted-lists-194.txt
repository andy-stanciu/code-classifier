/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        if (lists == null || lists.length == 0) {
            return null;
        } else if (lists.length == 1) {
            return lists[0];
        }
        ListNode res = merge(lists[0], lists[1]);
        for (int i = 2; i < lists.length; i++) {
            res = merge(lists[i], res);
        }
        return res;
    }

    public ListNode merge(ListNode ln1, ListNode ln2) {
        ListNode ln = new ListNode(0);
        ListNode h = ln;
        while (ln1 != null && ln2 != null) {
            if (ln1.val < ln2.val) {
                h.next = ln1;
                ln1 = ln1.next;
            } else {
                h.next = ln2;
                ln2 = ln2.next;
            }
            h = h.next;
        }
        h.next = (ln1 != null) ? ln1 : ln2;
        return ln.next;
    }
}
