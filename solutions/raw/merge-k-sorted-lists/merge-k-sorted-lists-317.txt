/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        int k = lists.length;
        ListNode head = null, temp = null;
        List<Integer> arr = new ArrayList<>();
        for (int i = 0; i < k; i++) {
            temp = lists[i];
            while (temp != null) {
                arr.add(temp.val);
                temp = temp.next;
            }
        }
        Collections.sort(arr);
        for (int i : arr) {
            if (head == null) {
                head = temp = new ListNode(i, null);
            } else {
                temp.next = new ListNode(i, null);
                temp = temp.next;
            }
        }
        return head;
    }
}
