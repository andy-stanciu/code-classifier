/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        if (lists == null || lists.length == 0)
            return null;
        ListNode result = null;
        ListNode temp = null;
        while (true) {
            var min = Integer.MAX_VALUE;
            for (var head : lists) {
                if (head != null) {
                    if (head.val <= min) {
                        min = head.val;
                    }
                }
            }
            if (min == Integer.MAX_VALUE) {
                break;
            }
            if (result == null) {
                result = new ListNode(min);
                temp = result;
            } else {
                temp.next = new ListNode(min);
                temp = temp.next;
            }
            for (int i = 0; i < lists.length; i++) {
                if (lists[i] != null) {
                    if (lists[i].val == min) {
                        lists[i] = lists[i].next;
                        break;
                    }
                }
            }
        }
        return result;
    }
}
