/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<Integer> q = new PriorityQueue<>();
        for (int i = 0; i < lists.length; i++) {
            ListNode h = lists[i];
            while (h != null) {
                q.add(h.val);
                h = h.next;
            }
        }
        ListNode ans = new ListNode(-1);
        ListNode head = ans;
        while (!q.isEmpty()) {
            ListNode n = new ListNode(q.remove());
            ans.next = n;
            ans = n;
        }
        return head.next;
    }
}
