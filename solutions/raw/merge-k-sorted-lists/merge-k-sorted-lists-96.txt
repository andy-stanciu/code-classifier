/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        ArrayList<Integer> list = new ArrayList<>();
        for (int i = 0; i < lists.length; i++) {
            ListNode temp = lists[i];
            while (temp != null) {
                list.add(temp.val);
                temp = temp.next;
            }
        }
        Collections.sort(list);
        ListNode head = convert(list);
        return head;
    }

    private static ListNode convert(ArrayList<Integer> list) {
        if (list.isEmpty())
            return null;
        ListNode head = new ListNode(list.get(0));
        ListNode mover = head;
        for (int i = 1; i < list.size(); i++) {
            ListNode temp = new ListNode(list.get(i));
            mover.next = temp;
            mover = temp;
        }
        return head;
    }
}
