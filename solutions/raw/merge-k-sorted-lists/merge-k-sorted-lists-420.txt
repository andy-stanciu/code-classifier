/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        int n = lists.length;
        ArrayList<Integer> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            while (lists[i] != null) {
                list.add(lists[i].val);
                lists[i] = lists[i].next;
            }
        }
        ListNode head = new ListNode(0);
        ListNode temp = head;
        Collections.sort(list);
        for (int j = 0; j < list.size(); j++) {
            ListNode curr = new ListNode(list.get(j));
            head.next = curr;
            head = curr;
        }
        return temp.next;
    }
}
