/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<Integer> pq = new PriorityQueue<>(new Comparator<Integer>() {

            public int compare(Integer a, Integer b) {
                return a - b;
            }
        });
        for (ListNode m : lists) {
            while (m != null) {
                pq.add(m.val);
                m = m.next;
            }
        }
        ListNode dummy = new ListNode(-1);
        ListNode temp = dummy;
        while (!pq.isEmpty()) {
            ListNode d = new ListNode(pq.poll());
            temp.next = d;
            temp = d;
        }
        return dummy.next;
    }
}
