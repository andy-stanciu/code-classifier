/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeKLists(ListNode[] lists) {
        List<Integer> sortedList = new ArrayList<>();
        for (ListNode item : lists) {
            ListNode currentItem = item;
            while (currentItem != null) {
                sortedList.add(currentItem.val);
                currentItem = currentItem.next;
            }
        }
        sortedList = sortedList.stream().sorted().collect(Collectors.toList());
        ListNode result = null;
        ListNode currentNode = null;
        for (Integer value : sortedList) {
            if (result == null) {
                result = new ListNode(value);
                currentNode = result;
            } else {
                currentNode.next = new ListNode(value);
                currentNode = currentNode.next;
            }
        }
        return result;
    }
}
