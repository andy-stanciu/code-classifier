class Solution {

    public boolean check(int a, int b) {
        if (a > 0 && b < 0)
            return true;
        return false;
    }

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> s = new Stack<>();
        s.add(asteroids[0]);
        for (int i = 1; i < asteroids.length; i++) {
            boolean flag = true;
            boolean check2 = true;
            while (s.isEmpty() == false && check(s.peek(), asteroids[i]) && check2) {
                if (Math.abs(s.peek()) < Math.abs(asteroids[i])) {
                    s.pop();
                    flag = false;
                } else if (Math.abs(s.peek()) == Math.abs(asteroids[i])) {
                    s.pop();
                    flag = false;
                    check2 = false;
                } else {
                    flag = false;
                    check2 = false;
                }
            }
            if (flag || check2)
                s.add(asteroids[i]);
        }
        int[] res = new int[s.size()];
        while (s.size() > 0) {
            res[s.size() - 1] = s.pop();
        }
        return res;
    }
}
