class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        LinkedList<Integer> armageddon = new LinkedList<>();
        for (int asteroid : asteroids) {
            if (armageddon.isEmpty() || asteroid > 0) {
                armageddon.add(asteroid);
            } else {
                move(armageddon, asteroid);
            }
        }
        return armageddon.stream().mapToInt(Integer::intValue).toArray();
    }

    private void move(LinkedList<Integer> armageddon, int asteroid) {
        if (armageddon.isEmpty() || armageddon.getLast() < 0) {
            armageddon.add(asteroid);
        } else {
            if (Math.abs(asteroid) > Math.abs(armageddon.getLast())) {
                armageddon.removeLast();
                move(armageddon, asteroid);
            } else if (Math.abs(asteroid) == Math.abs(armageddon.getLast())) {
                armageddon.removeLast();
            }
        }
    }
}
