class Solution {

    public int[] asteroidCollision(int[] arr) {
        int n = arr.length;
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            if (st.size() == 0 || arr[i] >= 0)
                st.push(arr[i]);
            else {
                if (st.peek() < 0)
                    st.push(arr[i]);
                else if (st.peek() == -arr[i])
                    st.pop();
                else if (st.peek() > -arr[i])
                    continue;
                else {
                    while (st.size() != 0 && st.peek() >= 0 && st.peek() < -arr[i]) st.pop();
                    if (st.size() != 0 && st.peek() == -arr[i])
                        st.pop();
                    else if (st.size() != 0 && st.peek() > -arr[i])
                        continue;
                    else
                        st.push(arr[i]);
                }
            }
        }
        int[] ans = new int[st.size()];
        for (int i = st.size() - 1; i >= 0; i--) {
            ans[i] = st.pop();
        }
        return ans;
    }
}
