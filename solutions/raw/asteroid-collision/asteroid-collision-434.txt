class Solution {

    public int[] asteroidCollision(int[] arr) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < arr.length; i++) {
            int ele = arr[i];
            if (stack.isEmpty()) {
                stack.push(ele);
            } else {
                int topEle = stack.peek();
                if (topEle * ele >= 0) {
                    stack.push(ele);
                } else {
                    while (!stack.isEmpty() && Math.abs(stack.peek()) < Math.abs(ele) && stack.peek() >= 0) {
                        stack.pop();
                    }
                    if (stack.isEmpty()) {
                        stack.push(ele);
                    } else if (stack.peek() < 0) {
                        stack.push(ele);
                    } else {
                        if (Math.abs(stack.peek()) == Math.abs(ele)) {
                            stack.pop();
                            continue;
                        } else {
                            continue;
                        }
                    }
                }
            }
        }
        int[] ans = new int[stack.size()];
        int ptr = ans.length - 1;
        while (!stack.isEmpty()) {
            ans[ptr] = stack.pop();
            ptr--;
        }
        return ans;
    }
}
