class Solution {

    public int[] asteroidCollision(int[] arr) {
        Stack<Integer> st = new Stack<>();
        int flag = 0;
        int open = 0;
        int k = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] < 0) {
                while (!st.isEmpty() && Math.abs(arr[i]) > Math.abs(st.peek()) && arr[i] * st.peek() < 0) {
                    st.pop();
                }
                if (!st.isEmpty() && st.peek() == Math.abs(arr[i]))
                    k = st.pop();
                else
                    k = arr[i];
                if ((st.isEmpty() || arr[i] * st.peek() > 0) && (k != Math.abs(arr[i])))
                    st.push(arr[i]);
            } else {
                st.push(arr[i]);
            }
        }
        int[] arr1 = new int[st.size()];
        int p = st.size() - 1;
        while (!st.isEmpty()) {
            arr1[p--] = st.pop();
        }
        return arr1;
    }
}
