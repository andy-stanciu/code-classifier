class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        int j = 0;
        for (int a = asteroids.length - 1; a >= 0; a--) {
            if (asteroids[a] != 0) {
                for (int i = asteroids.length - 1; i > 0; i--) {
                    if (asteroids[i] < 0 && asteroids[i - 1] > 0) {
                        int max = 0;
                        max = Math.max(Math.abs(asteroids[i]), Math.abs(asteroids[i - 1]));
                        if (Math.abs(asteroids[i]) == asteroids[i - 1]) {
                            asteroids[i] = 0;
                            asteroids[i - 1] = 0;
                        }
                        if (max != Math.abs(asteroids[i]))
                            asteroids[i] = 0;
                        else
                            asteroids[i - 1] = 0;
                    }
                    if (i < asteroids.length - 1 && asteroids[i] == 0) {
                        int temp = asteroids[i + 1];
                        asteroids[i + 1] = asteroids[i];
                        asteroids[i] = temp;
                    }
                    if (asteroids[i - 1] == 0) {
                        int temp = asteroids[i];
                        asteroids[i] = asteroids[i - 1];
                        asteroids[i - 1] = temp;
                    }
                }
            }
        }
        for (int i = 0; i < asteroids.length; i++) {
            if (asteroids[i] == 0)
                j++;
        }
        int size = 0;
        int[] ans = new int[asteroids.length - j];
        for (int i = 0; i < asteroids.length; i++) {
            if (asteroids[i] != 0) {
                ans[size] = asteroids[i];
                size++;
            }
        }
        return ans;
    }
}
