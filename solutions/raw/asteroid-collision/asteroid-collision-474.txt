class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stAst = new Stack<Integer>();
        stAst.push(asteroids[0]);
        for (int i = 1; i < asteroids.length; i++) {
            int tempVal = asteroids[i];
            if (stAst.size() > 0 && tempVal < 0 && stAst.peek() > 0) {
                tempVal = tempVal * -1;
                while (stAst.size() > 0) {
                    if (stAst.peek() >= tempVal || stAst.peek() < 0) {
                        break;
                    }
                    stAst.pop();
                }
                if (stAst.size() == 0) {
                    stAst.push(tempVal * -1);
                } else if (stAst.peek() == tempVal) {
                    stAst.pop();
                } else if (stAst.peek() < 0) {
                    stAst.push(tempVal * -1);
                }
            } else {
                stAst.push(tempVal);
            }
        }
        int[] retArr = new int[stAst.size()];
        int i = stAst.size() - 1;
        while (stAst.size() > 0) {
            retArr[i--] = stAst.pop();
        }
        return retArr;
    }
}
