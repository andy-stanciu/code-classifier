class Solution {

    public int[] asteroidCollision(int[] a) {
        Stack<Integer> s = new Stack<>();
        int i = 0;
        for (i = 0; i < a.length; ) {
            if (s.isEmpty()) {
                s.push(a[i]);
                i++;
            } else if (!s.isEmpty(O(n))) {
                int top = s.peek();
                if (top > 0 && a[i] < 0) {
                    if (Math.abs(top) < Math.abs(a[i])) {
                        s.pop();
                    } else if (Math.abs(top) == Math.abs(a[i])) {
                        s.pop();
                        i++;
                    } else {
                        i++;
                    }
                } else
                    s.push(a[i++]);
            }
        }
        if (s.isEmpty()) {
            return new int[0];
        }
        int[] arr = new int[s.size()];
        i = arr.length - 1;
        while (!s.isEmpty()) {
            arr[i--] = s.pop();
        }
        return arr;
    }
}
