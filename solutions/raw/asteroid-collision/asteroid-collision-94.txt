class Solution {

    public int[] asteroidCollision(int[] arr) {
        int n = arr.length;
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            if (arr[i] > 0) {
                st.push(arr[i]);
                System.out.println(st.peek());
            } else {
                while (!st.isEmpty() && st.peek() > 0 && st.peek() < Math.abs(arr[i])) {
                    System.out.println(st.peek());
                    st.pop();
                }
                if (st.isEmpty() || st.peek() < 0) {
                    st.push(arr[i]);
                    continue;
                } else if (!st.isEmpty()) {
                    if (st.peek() == Math.abs(arr[i])) {
                        st.pop();
                    }
                }
            }
        }
        System.out.println(st.size());
        int[] a1 = new int[st.size()];
        int i = 0;
        while (st.size() != 0) {
            a1[st.size() - 1] = st.peek();
            st.pop();
            // i++;
        }
        return a1;
    }
}
