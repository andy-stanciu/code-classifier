class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        ArrayDeque<Integer> afterCollision = new ArrayDeque<>();
        for (int asteroid : asteroids) {
            // When there are asteroids in the stack and the new asteroid not explodes.
            while (!afterCollision.isEmpty() && asteroid != 0) {
                // Peek the last asteroid in the stack.
                int last = afterCollision.peekLast();
                // Only when they are facing each other, they collides.
                if (asteroid < 0 && last > 0) {
                    // If the old one wins, set the new one to 0. If the new one wins, remove the old one from the stack.
                    if (Math.abs(asteroid) == last) {
                        asteroid = 0;
                        afterCollision.removeLast();
                    } else if (Math.abs(asteroid) < last) {
                        asteroid = 0;
                    } else {
                        afterCollision.removeLast();
                    }
                } else {
                    break;
                }
            }
            // After all the collision, if the new asteroid still not explodes, add it to the stack.
            if (asteroid != 0) {
                afterCollision.addLast(asteroid);
            }
        }
        int[] res = new int[afterCollision.size()];
        int index = 0;
        for (int asteroid : afterCollision) {
            res[index++] = asteroid;
        }
        return res;
    }
}
