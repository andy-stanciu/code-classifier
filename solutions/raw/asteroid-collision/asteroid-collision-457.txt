class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < asteroids.length; i++) {
            int cur = asteroids[i];
            if (stack.isEmpty()) {
                stack.add(cur);
            } else {
                while (!stack.isEmpty()) {
                    int top = stack.peek();
                    if (Math.abs(top) + Math.abs(cur) == Math.abs(top + cur)) {
                        stack.add(cur);
                        break;
                    } else if (Math.abs(cur) == Math.abs(top)) {
                        if (top > cur) {
                            stack.pop();
                            break;
                        } else {
                            stack.add(cur);
                            break;
                        }
                    } else {
                        if (top < 0 && cur > 0) {
                            stack.add(cur);
                            break;
                        } else if (Math.abs(top) > Math.abs(cur)) {
                            break;
                        } else {
                            stack.pop();
                            if (stack.isEmpty()) {
                                stack.add(cur);
                                break;
                            }
                        }
                    }
                }
            }
        }
        int[] res = new int[stack.size()];
        for (int j = stack.size() - 1; j >= 0; j--) {
            res[j] = stack.pop();
        }
        return res;
    }
}
