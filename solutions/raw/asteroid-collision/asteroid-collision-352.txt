class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<>();
        ArrayList<Integer> list = new ArrayList<>();
        int max = Integer.MAX_VALUE;
        for (int i = 0; i < asteroids.length; i++) {
            while (!stack.isEmpty() && stack.peek() > 0 && asteroids[i] < 0) {
                int a = stack.peek();
                int sum = a + asteroids[i];
                if (sum < 0) {
                    stack.pop();
                } else if (sum == 0) {
                    stack.pop();
                    asteroids[i] = 0;
                } else {
                    asteroids[i] = 0;
                }
            }
            if (asteroids[i] != 0) {
                stack.push(asteroids[i]);
            }
        }
        while (!stack.isEmpty()) {
            list.add(stack.pop());
        }
        Collections.reverse(list);
        int[] arr = new int[list.size()];
        for (int i = 0; i < list.size(); i++) {
            arr[i] = list.get(i);
        }
        return arr;
    }
}
