class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        int n = asteroids.length;
        Stack<Integer> s = new Stack<>();
        s.push(asteroids[0]);
        for (int i = 1; i < n; i++) {
            if (asteroids[i] > 0) {
                // positive
                s.push(asteroids[i]);
            } else {
                if (s.isEmpty() || s.peek() < 0) {
                    // neg but stack empty or peek neg
                    s.push(asteroids[i]);
                    continue;
                }
                if (//10>-5 -> ignore -5
                s.peek() > Math.abs(asteroids[i]))
                    //10>-5 -> ignore -5
                    continue;
                else if (s.peek() < Math.abs(asteroids[i])) {
                    // 2<-5 -> remove 2 and still have -5( i--;)
                    s.pop();
                    i--;
                } else {
                    // 8==-8 -> just remove 8
                    s.pop();
                }
            }
        }
        int[] r = new int[s.size()];
        for (int i = s.size() - 1; i >= 0; i--) {
            r[i] = s.pop();
        }
        return r;
    }
}
