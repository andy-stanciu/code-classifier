class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        ArrayList<Integer> arr = new ArrayList<>();
        ArrayDeque<Integer> dq = new ArrayDeque<>();
        for (int x : asteroids) {
            if (x > 0) {
                dq.offerLast(x);
            } else {
                while (!dq.isEmpty() && dq.peekLast() < Math.abs(x)) {
                    dq.pollLast();
                }
                if (dq.isEmpty()) {
                    arr.add(x);
                } else if (dq.peekLast() == Math.abs(x)) {
                    dq.pollLast();
                }
            }
        }
        while (!dq.isEmpty()) {
            arr.add(dq.pollFirst());
        }
        int[] ans = new int[arr.size()];
        for (int i = 0; i < arr.size(); i++) {
            ans[i] = arr.get(i);
        }
        return ans;
    }
}
