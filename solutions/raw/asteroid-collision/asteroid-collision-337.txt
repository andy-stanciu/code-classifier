class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<>();
        for (int asteroid : asteroids) {
            handleCollision(stack, asteroid);
        }
        int[] result = new int[stack.size()];
        for (int i = stack.size() - 1; i >= 0; i--) {
            result[i] = stack.pop();
        }
        return result;
    }

    private void handleCollision(Stack<Integer> stack, int asteroid) {
        while (!stack.isEmpty() && asteroid < 0 && stack.peek() > 0) {
            int lastAsteroid = stack.pop();
            if (Math.abs(asteroid) > lastAsteroid) {
                // Current asteroid destroys the one in the stack
                continue;
            } else if (Math.abs(asteroid) == lastAsteroid) {
                // Both asteroids explode
                return;
            } else {
                // The asteroid in the stack survives, push back the current asteroid
                stack.push(lastAsteroid);
                return;
            }
        }
        // No collision occurred, push the current asteroid onto the stack
        stack.push(asteroid);
    }
}
