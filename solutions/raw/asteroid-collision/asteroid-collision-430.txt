class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<Integer>();
        stack.push(0);
        for (int i = 0; i < asteroids.length; i++) {
            if (stack.peek() > 0 && stack.peek() == -asteroids[i])
                stack.pop();
            else if (stack.peek() > 0 && asteroids[i] < 0) {
                while (!stack.isEmpty() && stack.peek() > 0 && Math.abs(asteroids[i]) > stack.peek()) stack.pop();
                if (!stack.isEmpty() && Math.abs(asteroids[i]) == stack.peek() && stack.peek() > 0)
                    stack.pop();
                else if (stack.peek() <= 0)
                    stack.push(asteroids[i]);
            } else
                stack.push(asteroids[i]);
        }
        int[] fin = new int[stack.size() - 1];
        int j = 0;
        for (int i : stack) {
            if (i == 0)
                continue;
            fin[j++] = i;
        }
        return fin;
    }
}
