class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> st = new Stack<>();
        ;
        for (int i = 0; i < asteroids.length; i++) {
            if (asteroids[i] > 0) {
                st.push(asteroids[i]);
            } else if (st.size() == 0 && asteroids[i] < 0) {
                st.push(asteroids[i]);
            } else {
                int collison = 0;
                while (!st.isEmpty() && st.peek() > 0) {
                    if (Math.abs(asteroids[i]) > st.peek()) {
                        st.pop();
                    } else if (Math.abs(asteroids[i]) == st.peek()) {
                        st.pop();
                        collison = 1;
                        break;
                    } else {
                        break;
                    }
                }
                if (asteroids[i] < 0 && ((!st.isEmpty() && st.peek() < 0 && collison != 1) || (st.isEmpty() && asteroids[i] < 0 && collison != 1))) {
                    st.push(asteroids[i]);
                }
            }
        }
        int[] ans = new int[st.size()];
        for (int i = ans.length - 1; i >= 0; i--) {
            ans[i] = st.pop();
        }
        return ans;
    }
}
