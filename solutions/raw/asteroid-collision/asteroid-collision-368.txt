class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> s1 = new Stack<Integer>();
        Stack<Integer> s2 = new Stack<Integer>();
        for (int i : asteroids) {
            if (i > 0) {
                s1.push(i);
            } else {
                if (s1.isEmpty()) {
                    s2.push(i);
                } else {
                    while (!s1.isEmpty() && (-1 * i > s1.peek() || -1 * i == s1.peek())) {
                        if (-1 * i == s1.peek()) {
                            i = 0;
                        }
                        s1.pop();
                    }
                    if (s1.isEmpty() && i != 0) {
                        s2.push(i);
                    }
                }
            }
        }
        int[] res = new int[s1.size() + s2.size()];
        for (int i = s2.size() - 1; i >= 0; i--) {
            res[i] = s2.pop();
        }
        for (int i = res.length - 1; !s1.isEmpty(); i--) {
            res[i] = s1.pop();
        }
        return res;
    }
}
