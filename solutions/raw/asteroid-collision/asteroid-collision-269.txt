class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        int i = 0;
        int n = asteroids.length;
        Stack<Integer> st = new Stack<>();
        while (i < n) {
            if (asteroids[i] < 0) {
                if (st.isEmpty() || st.peek() < 0) {
                    st.push(asteroids[i]);
                    i++;
                } else if (Math.abs(asteroids[i]) == st.peek()) {
                    st.pop();
                    i++;
                } else if (st.peek() > Math.abs(asteroids[i])) {
                    i++;
                } else if (st.peek() < Math.abs(asteroids[i])) {
                    st.pop();
                }
            } else if (asteroids[i] > 0) {
                st.push(asteroids[i]);
                i++;
            }
        }
        int[] arr = new int[st.size()];
        for (int j = st.size() - 1; j >= 0; j--) {
            arr[j] = st.pop();
        }
        return arr;
    }
}
