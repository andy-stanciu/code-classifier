class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> st = new Stack<>();
        int n = asteroids.length;
        st.push(asteroids[0]);
        for (int i = 1; i < n; i++) {
            if (!st.isEmpty() && asteroids[i] < 0 && st.peek() >= 0) {
                while (!st.isEmpty() && Math.abs(asteroids[i]) > st.peek() && st.peek() > 0) {
                    st.pop();
                }
                if (!st.isEmpty() && Math.abs(asteroids[i]) < st.peek()) {
                    continue;
                } else if (!st.isEmpty() && Math.abs(asteroids[i]) == st.peek()) {
                    st.pop();
                    continue;
                } else
                    st.push(asteroids[i]);
            } else
                st.push(asteroids[i]);
        }
        int p = st.size();
        int[] ans = new int[p];
        for (int i = p - 1; i >= 0; i--) {
            ans[i] = st.pop();
        }
        return ans;
    }
}
