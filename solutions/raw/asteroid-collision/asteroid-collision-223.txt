class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<>();
        int i = 0;
        while (i < asteroids.length && asteroids[i] < 0) {
            stack.push(asteroids[i]);
            i++;
        }
        while (i < asteroids.length) {
            if (asteroids[i] > 0)
                stack.push(asteroids[i]);
            else {
                while (!stack.isEmpty() && stack.peek() > 0 && Math.abs(asteroids[i]) > stack.peek()) {
                    stack.pop();
                }
                if (!stack.isEmpty() && asteroids[i] + stack.peek() == 0) {
                    stack.pop();
                } else if (stack.isEmpty() || (!stack.isEmpty() && stack.peek() < 0)) {
                    stack.push(asteroids[i]);
                }
            }
            i++;
        }
        if (stack.isEmpty())
            return new int[] {};
        int[] result = new int[stack.size()];
        int idx = result.length - 1;
        while (!stack.isEmpty()) {
            result[idx--] = stack.pop();
        }
        return result;
    }
}
