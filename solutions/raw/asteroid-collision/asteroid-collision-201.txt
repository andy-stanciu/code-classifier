class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> asteroidsAfterCollision = new Stack<>();
        asteroidsAfterCollision.push(asteroids[0]);
        for (int i = 1; i < asteroids.length; i++) {
            if (asteroids[i] < 0) {
                while (!asteroidsAfterCollision.isEmpty() && asteroidsAfterCollision.peek() > 0 && asteroidsAfterCollision.peek() < -asteroids[i]) {
                    asteroidsAfterCollision.pop();
                }
                if (asteroidsAfterCollision.isEmpty() || asteroidsAfterCollision.peek() < 0) {
                    asteroidsAfterCollision.push(asteroids[i]);
                }
                if (!asteroidsAfterCollision.isEmpty() && asteroidsAfterCollision.peek() == -asteroids[i]) {
                    asteroidsAfterCollision.pop();
                }
            } else {
                asteroidsAfterCollision.push(asteroids[i]);
            }
        }
        asteroids = new int[asteroidsAfterCollision.size()];
        for (int i = 0; i < asteroids.length; i++) {
            asteroids[i] = asteroidsAfterCollision.get(i);
        }
        return asteroids;
    }
}
