class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        //use the left part of input array to simulate a stack
        int i = -1, j = 0;
        while (j < asteroids.length) {
            if (i == -1 || asteroids[i] < 0 && asteroids[j] > 0) {
                asteroids[++i] = asteroids[j++];
            } else {
                if (asteroids[i] > 0 && asteroids[j] > 0 || asteroids[i] < 0 && asteroids[j] < 0) {
                    asteroids[++i] = asteroids[j++];
                } else if (Math.abs(asteroids[i]) == Math.abs(asteroids[j])) {
                    i--;
                    j++;
                } else if (Math.abs(asteroids[i]) > Math.abs(asteroids[j])) {
                    j++;
                } else {
                    i--;
                }
            }
        }
        int[] res = new int[i + 1];
        for (int m = 0; m < res.length; m++) {
            res[m] = asteroids[m];
        }
        return res;
    }
}
// time : O(n)
// space : O(1)
