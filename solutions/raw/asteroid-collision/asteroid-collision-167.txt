class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<Integer>();
        for (int asteroid : asteroids) {
            // variable to track if asteroid is alive to push in stack
            boolean alive = true;
            /*
             check if stack is not empty
             check asteroid is less the zero
             check if stack peek is greater than zero
             */
            while (!stack.isEmpty() && asteroid < 0 && stack.peek() > 0) {
                // if stack peek is less than negative of asteroid
                // Meaning that Asteroid collision happened and the peek asteroid in the stack is destroyed
                if (stack.peek() < -asteroid) {
                    stack.pop();
                    continue;
                } else if (stack.peek() == -asteroid) {
                    stack.pop();
                }
                alive = false;
                break;
            }
            if (alive) {
                // if the existing traversing asteroid is alive push it in stack
                stack.push(asteroid);
            }
        }
        int[] result = new int[stack.size()];
        for (int index = stack.size() - 1; index >= 0; --index) {
            result[index] = stack.pop();
        }
        return result;
    }
}
