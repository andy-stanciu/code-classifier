class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        int n = asteroids.length;
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            if (st.isEmpty() || asteroids[i] > 0) {
                st.push(asteroids[i]);
            } else {
                while (true) {
                    int topEl = st.peek();
                    if (topEl < 0) {
                        st.push(asteroids[i]);
                        break;
                    } else if (topEl == -asteroids[i]) {
                        st.pop();
                        break;
                    } else if (topEl > -asteroids[i]) {
                        break;
                    } else {
                        st.pop();
                        if (st.isEmpty()) {
                            st.push(asteroids[i]);
                            break;
                        }
                    }
                }
            }
        }
        int[] remainingAsteroids = new int[st.size()];
        int index = st.size() - 1;
        while (!st.isEmpty()) {
            remainingAsteroids[index--] = st.pop();
        }
        return remainingAsteroids;
    }
}
