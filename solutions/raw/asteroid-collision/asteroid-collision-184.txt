class Solution {

    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> s = new Stack<>();
        for (int i = 0; i < asteroids.length; i++) {
            // if stack is empty or a positive integer then perform blind insertion
            if (s.isEmpty() || asteroids[i] > 0) {
                s.push(asteroids[i]);
            } else {
                while (!s.isEmpty()) {
                    int top = s.peek();
                    if (top < 0) {
                        s.push(asteroids[i]);
                        break;
                    }
                    int mod = Math.abs(asteroids[i]);
                    if (mod == top) {
                        s.pop();
                        break;
                    } else if (mod < top) {
                        break;
                    } else {
                        s.pop();
                        if (s.isEmpty()) {
                            s.push(asteroids[i]);
                            break;
                        }
                    }
                }
            }
        }
        int len = s.size();
        int[] ans = new int[len];
        for (int i = len - 1; i >= 0; i--) {
            ans[i] = s.pop();
        }
        return ans;
    }
}
