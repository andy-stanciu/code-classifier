class Solution {

    public String frequencySort(String s) {
        Map<Character, Integer> m = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (m.containsKey(c)) {
                m.put(c, m.get(c) + 1);
            } else {
                m.put(c, 1);
            }
        }
        List<Map.Entry<Character, Integer>> l = new ArrayList<>(m.entrySet());
        Collections.sort(l, new sortonvalues());
        // System.out.println(l);
        StringBuilder ans = new StringBuilder();
        for (Map.Entry<Character, Integer> mp : l) {
            int t = mp.getValue();
            char c = mp.getKey();
            for (int j = 0; j < t; j++) {
                ans.append(c);
            }
        }
        return ans.toString();
    }
}

class sortonvalues implements Comparator<Map.Entry<Character, Integer>> {

    public int compare(Map.Entry<Character, Integer> obj1, Map.Entry<Character, Integer> obj2) {
        return obj2.getValue() - obj1.getValue();
    }
}
