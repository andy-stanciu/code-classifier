class Solution {

    public String frequencySort(String s) {
        Map<Character, Integer> freq = new HashMap<>();
        for (char c : s.toCharArray()) {
            // we are getting frequencies of all characters in the String
            freq.put(c, freq.getOrDefault(c, 0) + 1);
        }
        // System.out.println(freq);
        // get bring the value of the key only
        PriorityQueue<Character> pq = new PriorityQueue<>((a, b) -> freq.get(b) - freq.get(a));
        // by default priorityqueue sorts in asending order
        // now the keys are sorted in reverse order.
        pq.addAll(freq.keySet());
        // we are adding the freq keys into priorityQueue it will then sort in reverse order
        StringBuilder sb = new StringBuilder();
        while (!pq.isEmpty()) {
            // getting one val at a time from pq
            // we need to poll the priorityqueue in order to get the values in sorted order
            char c = pq.poll();
            for (int i = 0; i < freq.get(c); i++) {
                // finding the frequency of that val or char and setting that as the upper limit for the loop
                // appending that many times of the frequency of that particular character
                sb.append(c);
            }
        }
        return sb.toString();
    }
}
