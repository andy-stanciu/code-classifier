class Solution {

    static class Pair {

        char c;

        int i;

        Pair(char c, int i) {
            this.c = c;
            this.i = i;
        }
    }

    public String frequencySort(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
        }
        PriorityQueue<Pair> p = new PriorityQueue<>((a, b) -> map.get(b.c) - map.get(a.c));
        for (char c : map.keySet()) {
            p.add(new Pair(c, map.get(c)));
        }
        StringBuilder str = new StringBuilder();
        while (p.size() > 0) {
            for (int j = 0; j < p.peek().i; j++) {
                str.append(p.peek().c);
            }
            p.remove();
        }
        return String.valueOf(str);
    }
}
