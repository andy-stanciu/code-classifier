class Solution {

    public String frequencySort(String s) {
        // Assuming ASCII characters
        int[] count = new int[256];
        Arrays.fill(count, 0);
        for (char c : s.toCharArray()) {
            count[c]++;
        }
        // Create an array of character-frequency pairs
        CharacterFrequency[] charFreq = new CharacterFrequency[256];
        for (int i = 0; i < 256; i++) {
            charFreq[i] = new CharacterFrequency((char) i, count[i]);
        }
        Arrays.sort(charFreq, (a, b) -> b.freq - a.freq);
        StringBuilder sb = new StringBuilder();
        for (CharacterFrequency cf : charFreq) {
            for (int i = 0; i < cf.freq; i++) {
                sb.append(cf.ch);
            }
        }
        return sb.toString();
    }
}

class CharacterFrequency {

    char ch;

    int freq;

    public CharacterFrequency(char ch, int freq) {
        this.ch = ch;
        this.freq = freq;
    }
}
