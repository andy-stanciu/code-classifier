class Solution {

    public String frequencySort(String s) {
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        char[] str = s.toCharArray();
        for (char ch : str) {
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        Map<Character, Integer> sortedMap = sortByValueDescending(map);
        StringBuilder sb = new StringBuilder();
        for (char ch : sortedMap.keySet()) {
            int n = map.get(ch);
            while (n-- > 0) {
                sb.append(ch);
            }
        }
        return sb.toString();
    }

    public static Map<Character, Integer> sortByValueDescending(Map<Character, Integer> map) {
        return map.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).collect(LinkedHashMap::new, (m, e) -> m.put(e.getKey(), e.getValue()), Map::putAll);
    }
}
