class Solution {

    public String frequencySort(String s) {
        int[] freq = new int[128];
        for (int i = 0; i < s.length(); i++) {
            freq[s.charAt(i)]++;
        }
        PriorityQueue<Pair> pq = new PriorityQueue<>();
        for (int i = 0; i < 128; i++) {
            if (freq[i] != 0) {
                // Convert int to char
                char c = (char) (i);
                pq.offer(new Pair(c, freq[i]));
            }
        }
        String ans = "";
        while (!pq.isEmpty()) {
            Pair p = pq.poll();
            for (int i = 0; i < p.freq; i++) {
                ans += p.a;
            }
        }
        return ans;
    }
}

class Pair implements Comparable<Pair> {

    char a;

    int freq;

    Pair(char a, int f) {
        this.a = a;
        this.freq = f;
    }

    public int compareTo(Pair other) {
        // To sort in descending order, compare other.freq to this.freq
        return Integer.compare(other.freq, this.freq);
    }
}
