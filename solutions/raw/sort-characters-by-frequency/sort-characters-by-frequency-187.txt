class Solution {

    class Pair {

        char ch;

        int freq;

        Pair(char ch, int fre) {
            this.ch = ch;
            this.freq = fre;
        }
    }

    public String frequencySort(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        PriorityQueue<Pair> pq = new PriorityQueue<>((a, b) -> b.freq - a.freq);
        for (Map.Entry<Character, Integer> entry : map.entrySet()) {
            pq.add(new Pair(entry.getKey(), entry.getValue()));
        }
        StringBuilder sb = new StringBuilder();
        while (!pq.isEmpty()) {
            Pair p = pq.poll();
            System.out.println(p.ch);
            while (p.freq > 0) {
                sb.append(p.ch);
                p.freq--;
            }
        }
        return sb.toString();
    }
}
