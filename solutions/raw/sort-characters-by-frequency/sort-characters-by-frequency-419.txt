class Solution {

    public String frequencySort(String s) {
        if (s == null || s.length() <= 1) {
            return s;
        }
        Map<Character, Integer> frequencyMap = new HashMap<>();
        int maxFrequency = 0;
        for (char c : s.toCharArray()) {
            frequencyMap.put(c, frequencyMap.getOrDefault(c, 0) + 1);
            maxFrequency = Math.max(maxFrequency, frequencyMap.get(c));
        }
        StringBuilder[] buckets = new StringBuilder[maxFrequency + 1];
        for (char c : frequencyMap.keySet()) {
            int frequency = frequencyMap.get(c);
            if (buckets[frequency] == null) {
                buckets[frequency] = new StringBuilder();
            }
            for (int i = 0; i < frequency; i++) {
                buckets[frequency].append(c);
            }
        }
        StringBuilder result = new StringBuilder();
        for (int i = maxFrequency; i > 0; i--) {
            if (buckets[i] != null) {
                result.append(buckets[i]);
            }
        }
        return result.toString();
    }
}
