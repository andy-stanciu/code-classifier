class Solution {

    public String frequencySort(String s) {
        int n = s.length();
        char[] sArr = s.toCharArray();
        StringBuilder sb = new StringBuilder();
        Map<Integer, List<Character>> freqCharMap = new TreeMap<>(Collections.reverseOrder());
        Arrays.sort(sArr);
        int i = 0;
        while (i < n) {
            int freq = 0;
            int j = i;
            char ch = sArr[i];
            while (j < n && ch == sArr[j]) {
                freq++;
                j++;
            }
            freqCharMap.computeIfAbsent(freq, k -> new ArrayList<>()).add(ch);
            i = j;
        }
        for (Map.Entry<Integer, List<Character>> entry : freqCharMap.entrySet()) {
            int freq = entry.getKey();
            List<Character> charList = entry.getValue();
            for (char ch : charList) {
                for (int k = 0; k < freq; k++) {
                    sb.append(ch);
                }
            }
        }
        return sb.toString();
    }
}
