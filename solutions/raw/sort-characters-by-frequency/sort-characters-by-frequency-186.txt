class Solution {

    public class Info {

        char data;

        int count;

        Info(char data, int count) {
            this.data = data;
            this.count = count;
        }
    }

    public String frequencySort(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        ArrayList<Info> list = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            if (map.containsKey(s.charAt(i))) {
                int value = map.get(s.charAt(i));
                map.put(s.charAt(i), value + 1);
            } else {
                map.put(s.charAt(i), 1);
            }
        }
        for (char i : map.keySet()) {
            list.add(new Info(i, map.get(i)));
        }
        Collections.sort(list, new Comparator<Info>() {

            public int compare(Info i1, Info i2) {
                return Integer.compare(i1.count, i2.count);
            }
        });
        StringBuilder str = new StringBuilder("");
        for (int i = list.size() - 1; i >= 0; i--) {
            int n = map.get(list.get(i).data);
            for (int j = 0; j < n; j++) {
                str.append(list.get(i).data);
            }
        }
        return str.toString();
    }
}
