class Solution {

    public String frequencySort(String s) {
        // Create a HashMap to store character frequencies
        HashMap<Character, Integer> charCount = new HashMap<>();
        // Count frequencies of characters in the input string
        for (Character c : s.toCharArray()) {
            charCount.put(c, charCount.getOrDefault(c, 0) + 1);
        }
        // Create a list of unique characters
        List<Character> sortedChar = new ArrayList<>(charCount.keySet());
        // Sort the characters based on their frequencies in descending order
        Collections.sort(sortedChar, (a, b) -> charCount.get(b) - charCount.get(a));
        // Reconstruct the sorted string
        StringBuilder res = new StringBuilder();
        for (char c : sortedChar) {
            // Append each character the number of times it occurs in the input string
            res.append(String.valueOf(c).repeat(charCount.get(c)));
        }
        // Return the sorted string
        return res.toString();
    }
}
