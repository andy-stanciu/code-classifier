class Solution {

    public String frequencySort(String s) {
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        char[] array = s.toCharArray();
        for (char key : array) {
            int value = map.getOrDefault(key, 0) + 1;
            map.put(key, value);
        }
        PriorityQueue<Map.Entry<Character, Integer>> q = new PriorityQueue<Map.Entry<Character, Integer>>(new Comparator<Map.Entry<Character, Integer>>() {

            public int compare(Map.Entry<Character, Integer> external, Map.Entry<Character, Integer> internal) {
                return -external.getValue() + internal.getValue();
            }
        });
        for (Map.Entry<Character, Integer> et : map.entrySet()) {
            q.add(et);
        }
        StringBuilder str = new StringBuilder();
        while (!q.isEmpty()) {
            Map.Entry<Character, Integer> et = q.remove();
            char ch = et.getKey();
            int val = et.getValue();
            while (val > 0) {
                str.append(ch);
                val--;
            }
        }
        return str.toString();
    }
}
