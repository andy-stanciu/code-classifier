class Solution {

    public String frequencySort(String s) {
        // Step 1: Create a frequency map
        Map<Character, Integer> frequencyMap = new HashMap<>();
        for (char ch : s.toCharArray()) {
            frequencyMap.put(ch, frequencyMap.getOrDefault(ch, 0) + 1);
        }
        // Step 2: Create a priority queue to process characters based on frequencies
        PriorityQueue<Character> pq = new PriorityQueue<>((a, b) -> frequencyMap.get(b) - frequencyMap.get(a));
        pq.addAll(frequencyMap.keySet());
        // Step 3: Construct the sorted string
        StringBuilder sortedString = new StringBuilder();
        while (!pq.isEmpty()) {
            char ch = pq.poll();
            int frequency = frequencyMap.get(ch);
            for (int i = 0; i < frequency; i++) {
                sortedString.append(ch);
            }
        }
        return sortedString.toString();
    }
}
