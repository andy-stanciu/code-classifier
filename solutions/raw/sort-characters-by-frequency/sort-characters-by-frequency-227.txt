class Solution {

    public class pair {

        char x;

        int y;

        public pair(char x, int y) {
            this.x = x;
            this.y = y;
        }
    }

    public static class sorting implements Comparator<pair> {

        public int compare(pair a, pair b) {
            if (a.y == b.y) {
                return b.x - a.x;
            }
            return b.y - a.y;
        }
    }

    public String frequencySort(String s) {
        HashMap<Character, Integer> hm = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            hm.put(s.charAt(i), hm.getOrDefault(s.charAt(i), 0) + 1);
        }
        List<pair> arr = new ArrayList<>();
        for (Character itr : hm.keySet()) {
            arr.add(new pair(itr, hm.get(itr)));
        }
        Collections.sort(arr, new sorting());
        StringBuilder str = new StringBuilder();
        for (int j = 0; j < arr.size(); j++) {
            pair a = arr.get(j);
            for (int k = 0; k < a.y; k++) {
                str.append(a.x);
            }
        }
        return str.toString();
    }
}
