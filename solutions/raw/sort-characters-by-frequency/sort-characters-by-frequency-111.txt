class Solution {

    public String frequencySort(String s) {
        // Map<Character, Integer> map = new HashMap<>();
        // for(int i = 0; i<s.length(); i++){
        //     char ch = s.charAt(i);
        //     if(map.containsKey(ch)){
        //         map.put(ch, map.get(ch)+1);
        //     }
        //     else{
        //         map.put(ch, 1);
        //     }
        // }
        // List <Character> chars = new ArrayList<>(map.keySet());
        // collections.sort(char), (a, b) -> map.get(b)-map.get(a);
        // StringBuilder sb = new SringBuilder();
        // for(Character ch:chars){
        //     for(int i = 0; i<map.get(ch); i++){
        //         sb.append(ch);
        //     }
        // }
        // return sb.toString();
        Map<Character, Integer> cnt = new HashMap<>(52);
        for (int i = 0; i < s.length(); ++i) {
            cnt.merge(s.charAt(i), 1, Integer::sum);
        }
        List<Character> cs = new ArrayList<>(cnt.keySet());
        cs.sort((a, b) -> cnt.get(b) - cnt.get(a));
        StringBuilder ans = new StringBuilder();
        for (char c : cs) {
            for (int v = cnt.get(c); v > 0; --v) {
                ans.append(c);
            }
        }
        return ans.toString();
    }
}
