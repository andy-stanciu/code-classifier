class Solution {

    public String frequencySort(String s) {
        int index = 0;
        HashSet<Character> set = new HashSet<>();
        for (char c : s.toCharArray()) {
            set.add(c);
        }
        char[] arr = new char[set.size()];
        for (char c : set) {
            arr[index] = c;
            index++;
        }
        Hashtable<Character, Integer> ht = new Hashtable<>();
        for (char c : s.toCharArray()) {
            ht.put(c, ht.getOrDefault(c, 0) + 1);
        }
        internal[] arr2 = new internal[arr.length];
        for (int i = 0; i < arr.length; i++) {
            arr2[i] = new internal(ht.get(arr[i]), arr[i]);
        }
        Arrays.sort(arr2, (a, b) -> b.count - a.count);
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < arr2.length; i++) {
            for (int j = 0; j < arr2[i].count; j++) {
                sb.append(arr2[i].C);
            }
        }
        return sb.toString();
    }
}

class internal {

    int count;

    char C;

    public internal(int a, char c) {
        count = a;
        C = c;
    }
}
