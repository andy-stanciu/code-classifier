class Solution {

    public String frequencySort(String s) {
        int[] freq = new int[76];
        List<Integer> vals = new ArrayList<Integer>();
        char[] res = new char[s.length()];
        HashMap<Integer, List<Character>> freq_char = new HashMap<Integer, List<Character>>();
        for (int i = 0; i < freq.length; ++i) freq[i] = 0;
        for (int i = 0; i < s.length(); ++i) {
            freq[(int) s.charAt(i) - 48]++;
        }
        for (int i = 0; i < freq.length; ++i) {
            int f = freq[i];
            if (f != 0) {
                if (freq_char.containsKey(f)) {
                    freq_char.get(f).add((char) (i + 48));
                } else {
                    List<Character> temp = new ArrayList<Character>();
                    temp.add((char) (i + 48));
                    vals.add(f);
                    freq_char.put(f, temp);
                }
            }
        }
        Collections.sort(vals);
        int l = 0;
        for (int i = vals.size() - 1; i >= 0; --i) {
            int f = vals.get(i);
            List<Character> chars = freq_char.get(f);
            for (Character c : chars) {
                for (int k = 0; k < f; ++k) {
                    res[l++] = c.charValue();
                }
            }
        }
        return new String(res);
    }
}
