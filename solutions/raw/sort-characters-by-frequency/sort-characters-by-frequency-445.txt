class Solution {

    public String frequencySort(String s) {
        // Create a HashMap to store character frequencies
        Map<Character, Integer> charFrequency = new HashMap<>();
        // Count the frequency of each character
        for (char c : s.toCharArray()) {
            charFrequency.put(c, charFrequency.getOrDefault(c, 0) + 1);
        }
        // Create a PriorityQueue to sort characters based on their frequencies
        PriorityQueue<Character> maxHeap = new PriorityQueue<>((a, b) -> charFrequency.get(b) - charFrequency.get(a));
        // Add all characters to the PriorityQueue
        maxHeap.addAll(charFrequency.keySet());
        // Build the result string by appending characters based on their frequencies
        StringBuilder result = new StringBuilder();
        while (!maxHeap.isEmpty()) {
            char currentChar = maxHeap.poll();
            int frequency = charFrequency.get(currentChar);
            for (int i = 0; i < frequency; i++) {
                result.append(currentChar);
            }
        }
        return result.toString();
    }
}
