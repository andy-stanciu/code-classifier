class Solution {

    // Static variables to store character frequency map, maximum frequency, and the final answer
    static HashMap<Character, Integer> m;

    static int max;

    static String jawab;

    // Method to sort characters in a string based on their frequency
    public String frequencySort(String s) {
        // Initializing the character frequency map and maximum frequency
        m = new HashMap<>();
        max = 0;
        // Populating the character frequency map and update the maximum frequency
        for (char c : s.toCharArray()) {
            m.put(c, m.getOrDefault(c, 0) + 1);
            max = Math.max(max, m.get(c));
        }
        // Initializing the final answer string
        jawab = "";
        // Iterating over frequencies in descending order
        for (int i = max; i > 0; i--) {
            // Iterating over characters in the frequency map
            for (char c : m.keySet()) {
                // Appending the character to the answer string for its corresponding frequency
                if (m.get(c) == i) {
                    for (int d = 0; d < i; d++) {
                        jawab += c;
                    }
                }
            }
        }
        // Returning the final answer string
        return jawab;
    }
}
