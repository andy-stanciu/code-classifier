class Solution {

    public String frequencySort(String s) {
        TreeMap<Character, Integer> lm = new TreeMap<>();
        for (int i = 0; i < s.length(); i++) {
            lm.put(s.charAt(i), lm.getOrDefault(s.charAt(i), 0) + 1);
        }
        TreeMap<Character, Integer> map = new TreeMap<>(new Comparator<Character>() {

            @Override
            public int compare(Character a, Character b) {
                int countA = lm.getOrDefault(a, 0);
                int countB = lm.getOrDefault(b, 0);
                int result = Integer.compare(countB, countA);
                if (result == 0) {
                    return a.compareTo(b);
                }
                return result;
            }
        });
        map.putAll(lm);
        String sorted = "";
        for (Character a : map.keySet()) {
            int i = map.get(a);
            while (i != 0) {
                i--;
                sorted = sorted + a;
            }
        }
        return sorted;
    }
}
