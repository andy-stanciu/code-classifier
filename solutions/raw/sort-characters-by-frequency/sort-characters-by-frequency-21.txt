public class Solution {

    public String frequencySort(String s) {
        List<Pair> list = new ArrayList<>();
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        for (Map.Entry<Character, Integer> e : map.entrySet()) {
            list.add(new Pair(e.getKey(), e.getValue()));
        }
        Collections.sort(list, new Comparator<Pair>() {

            @Override
            public int compare(Pair p1, Pair p2) {
                return Integer.compare(p2.getVal(), p1.getVal());
            }
        });
        StringBuilder str = new StringBuilder();
        for (int i = 0; i < list.size(); i++) {
            char key = list.get(i).getKey();
            int val = list.get(i).getVal();
            for (int j = 0; j < val; j++) {
                str.append(key);
            }
        }
        return str.toString();
    }

    class Pair {

        char key;

        int val;

        Pair(char key, int val) {
            this.key = key;
            this.val = val;
        }

        int getVal() {
            return val;
        }

        char getKey() {
            return key;
        }
    }
}
