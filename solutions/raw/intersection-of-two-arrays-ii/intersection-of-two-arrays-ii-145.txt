class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        HashMap<Integer, Integer> map1 = new HashMap<>();
        if (nums1.length > nums2.length)
            return intersection(nums2, nums1);
        else
            return intersection(nums1, nums2);
    }

    static int[] intersection(int[] Snums, int[] Bnums) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int n : Snums) {
            map.put(n, map.getOrDefault(n, 0) + 1);
        }
        ArrayList<Integer> list = new ArrayList<>();
        for (int i : Bnums) {
            if (map.containsKey(i) && map.get(i) > 0) {
                list.add(i);
                map.put(i, map.get(i) - 1);
            }
        }
        int[] res = new int[list.size()];
        for (int i = 0; i < list.size(); i++) {
            res[i] = list.get(i);
        }
        return res;
    }
}
