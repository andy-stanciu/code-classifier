class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        //9ms
        // List<Integer> lst = new ArrayList<>();
        // for(int i=0; i<nums1.length; i++){
        //     lst.add(nums1[i]);
        // }
        // List<Integer> l = new ArrayList<>();
        // for(int i=0; i<nums2.length; i++){
        //     if(lst.contains(nums2[i])){
        //         l.add(nums2[i]);
        //         lst.remove(Integer.valueOf(nums2[i]));
        //     }
        // }
        // int[] arr =new int[l.size()];
        // for(int i=0;i<arr.length; i++){
        //     arr[i]=l.get(i);
        // }
        // return arr;
        //3ms
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums1.length; i++) {
            map.put(nums1[i], map.getOrDefault(nums1[i], 0) + 1);
        }
        ArrayList<Integer> lst = new ArrayList<>();
        for (int i = 0; i < nums2.length; i++) {
            if (map.containsKey(nums2[i])) {
                lst.add(nums2[i]);
                int count = map.get(nums2[i]) - 1;
                if (count <= 0) {
                    map.remove(nums2[i]);
                } else {
                    map.put(nums2[i], count);
                }
            }
        }
        int[] arr = new int[lst.size()];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = lst.get(i);
        }
        return arr;
    }
}
