class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer, Integer> map1 = new HashMap<>();
        Map<Integer, Integer> map2 = new HashMap<>();
        for (int n : nums1) {
            if (map1.containsKey(n)) {
                map1.put(n, map1.get(n) + 1);
            } else {
                map1.put(n, 1);
            }
        }
        for (int n : nums2) {
            if (map2.containsKey(n)) {
                map2.put(n, map2.get(n) + 1);
            } else {
                map2.put(n, 1);
            }
        }
        List<Integer> list = new ArrayList<>();
        for (Integer key : map1.keySet()) {
            Integer f1 = map1.get(key), f2 = map2.get(key);
            if (f2 != null) {
                f1 = Math.min(f1, f2);
                for (int i = 0; i < f1; i++) {
                    list.add(key);
                }
            }
        }
        int[] res = new int[list.size()];
        for (int i = 0; i < res.length; i++) {
            res[i] = list.get(i);
        }
        return res;
    }
}
