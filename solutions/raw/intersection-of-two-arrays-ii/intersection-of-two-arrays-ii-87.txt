class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        HashMap<Integer, Integer> hashmap1 = new HashMap<>();
        int len1 = nums1.length;
        int len2 = nums2.length;
        int[] result = new int[len1];
        for (int i = 0; i < len1; i++) {
            if (!hashmap1.containsKey(nums1[i]))
                hashmap1.put(nums1[i], 1);
            else
                hashmap1.put(nums1[i], hashmap1.get(nums1[i]) + 1);
        }
        int k = 0;
        int count = 0;
        for (int i = 0; i < len2; i++) {
            if (hashmap1.containsKey(nums2[i]) && hashmap1.get(nums2[i]) > 0) {
                result[k++] = nums2[i];
                hashmap1.put(nums2[i], hashmap1.get(nums2[i]) - 1);
                count++;
            }
        }
        return Arrays.copyOf(result, count);
    }
}
