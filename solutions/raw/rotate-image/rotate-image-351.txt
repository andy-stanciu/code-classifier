class Solution {

    public void rotate(int[][] matrix) {
        int n = matrix.length;
        if (n == 0)
            return;
        int[][] result = new int[n][n];
        // row i is shifted to n-1-i column after clockwise shift.
        // If we don\'t want extra memory we can first transpose the matrix.
        // (i,j) -> (j,i)
        // then flip the columns in each row
        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                int temp = matrix[j][i];
                matrix[j][i] = matrix[i][j];
                matrix[i][j] = temp;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n / 2; j++) {
                int temp = matrix[i][j];
                matrix[i][j] = matrix[i][n - j - 1];
                matrix[i][n - j - 1] = temp;
            }
        }
    }
}
