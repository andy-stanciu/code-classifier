class Solution {

    public void rotate(int[][] matrix) {
        int n = matrix.length;
        //i=1 to n-1 because avoiding diagonal elements
        //j=i+1 because we only need to go through top half of the matrix
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                //swap the ooposite
                int temp = matrix[i][j];
                System.out.println(matrix[i][j] + " " + matrix[j][i]);
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
                System.out.println(matrix[i][j] + " " + matrix[j][i]);
            }
        }
        //revere each row
        for (int i = 0; i < n; i++) {
            int[] a = matrix[i];
            reverse(a);
        }
    }

    private void reverse(int[] a) {
        int i = 0;
        int j = a.length - 1;
        while (i < j) {
            int temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            i++;
            j--;
        }
    }
}
