class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> list = new ArrayList<>();
        validParenthesisMakerChecker(list, "", 0, 0, n);
        return list;
    }

    public void validParenthesisMakerChecker(List<String> list, String current, int open, int close, int n) {
        if (open == n && close == n) {
            list.add(current);
        }
        if (open < n) {
            validParenthesisMakerChecker(list, current + "(", open + 1, close, n);
        }
        if (close < open) {
            validParenthesisMakerChecker(list, current + ")", open, close + 1, n);
        }
    }
}
