class Solution {

    public List<String> generateParenthesis(int n) {
        return helper("", n, n, new ArrayList<String>());
    }

    static List<String> helper(String p, int open, int close, List<String> list) {
        if (open == 0 && close == 0) {
            list.add(p);
            return list;
        }
        // if open and close are equal always open.
        // open can never be greater than close because that would generate invalid parentheses
        if (open == close) {
            helper(p + "(", open - 1, close, list);
        } else {
            if (open != 0) {
                helper(p + "(", open - 1, close, list);
            }
            helper(p + ")", open, close - 1, list);
        }
        return list;
    }
}
