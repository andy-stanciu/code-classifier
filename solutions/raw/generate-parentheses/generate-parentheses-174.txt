class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        int oc = 0, cc = 0;
        backtrack(result, n, 0, 0, "");
        return result;
    }

    private void backtrack(List<String> result, int n, int oc, int cc, String s) {
        if (oc == n && cc == n) {
            result.add(s);
            return;
        }
        if (oc < n) {
            backtrack(result, n, oc + 1, cc, s + "(");
        }
        if (cc < oc) {
            backtrack(result, n, oc, cc + 1, s + ")");
        }
    }
}
