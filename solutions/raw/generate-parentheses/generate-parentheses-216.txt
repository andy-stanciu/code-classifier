class Solution {

    private List<String> result = new ArrayList<>();

    public List<String> generateParenthesis(int n) {
        dfs(n, 0, "");
        return result;
    }

    private void dfs(int maxToOpen, int currOpen, String parenthesis) {
        if (maxToOpen == 0 && currOpen == 0) {
            result.add(parenthesis);
            return;
        }
        if (maxToOpen == 0) {
            dfs(0, currOpen - 1, parenthesis + ")");
        } else {
            if (currOpen == 0) {
                dfs(maxToOpen - 1, currOpen + 1, parenthesis + "(");
            } else {
                dfs(maxToOpen - 1, currOpen + 1, parenthesis + "(");
                dfs(maxToOpen, currOpen - 1, parenthesis + ")");
            }
        }
    }
}
