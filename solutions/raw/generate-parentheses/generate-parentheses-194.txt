class Solution {

    public List<String> generateParenthesis(int n) {
        return solve("", 0, n);
    }

    List<String> solve(String str, int open, int left) {
        if (open == 0 && left == 0)
            return Arrays.asList(str);
        ArrayList<String> res = new ArrayList<String>();
        if (left > 0) {
            StringBuilder presentStr = new StringBuilder(str);
            res.addAll(solve(presentStr.append("(").toString(), open + 1, left - 1));
        }
        if (open > 0) {
            StringBuilder presentStr = new StringBuilder(str);
            res.addAll(solve(presentStr.append(")").toString(), open - 1, left));
        }
        return res;
    }
}
