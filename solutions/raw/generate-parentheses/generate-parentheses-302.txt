class Solution {

    List<String> results;

    public List<String> generateParenthesis(int n) {
        results = new ArrayList<>();
        gpUtil("(", n - 1, 1);
        return results;
    }

    private void gpUtil(String str, int n, int closures) {
        if (n == 0) {
            StringBuffer sb = new StringBuffer(str);
            for (int i = 0; i < closures; i++) {
                sb.append(")");
            }
            results.add(sb.toString());
            return;
        }
        if (n > 0) {
            gpUtil(str + "(", n - 1, closures + 1);
        }
        if (closures > 0) {
            gpUtil(str + ")", n, closures - 1);
        }
    }
}
