class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> answer = new ArrayList<>();
        int openCount = n;
        int closeCount = n;
        solve(openCount, closeCount, "", answer);
        return answer;
    }

    public void solve(int openCount, int closeCount, String balancedParaenthesis, List<String> answer) {
        if (openCount == 0 && closeCount == 0) {
            answer.add(balancedParaenthesis);
            return;
        }
        if (openCount != 0) {
            solve(openCount - 1, closeCount, balancedParaenthesis + "(", answer);
        }
        if (closeCount > openCount) {
            solve(openCount, closeCount - 1, balancedParaenthesis + ")", answer);
        }
    }
}
