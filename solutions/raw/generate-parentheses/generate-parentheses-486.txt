class Solution {

    public static List<String> helper(List<String> list, int open, int close, String newStr) {
        if (open == 0 && close == 0) {
            list.add(newStr);
            return list;
        }
        if (open < close) {
            if (open != 0) {
                helper(list, open - 1, close, newStr + "(");
                return helper(list, open, close - 1, newStr + ")");
            } else
                return helper(list, open, close - 1, newStr + ")");
        } else
            return helper(list, open - 1, close, newStr + "(");
    }

    public static List<String> generateParenthesis(int n) {
        List<String> list = new ArrayList<>();
        return helper(list, n, n, "");
    }
}
