class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> ans = new ArrayList<>();
        solve(ans, new StringBuilder(""), n, n);
        return ans;
    }

    public void solve(List<String> ans, StringBuilder sb, int open, int closed) {
        if (open == 0 && closed == 0)
            ans.add(sb.toString());
        else {
            if (open > 0) {
                solve(ans, sb.append("("), open - 1, closed);
                sb.deleteCharAt(sb.length() - 1);
            }
            if (closed > open) {
                solve(ans, sb.append(")"), open, closed - 1);
                sb.deleteCharAt(sb.length() - 1);
            }
        }
    }
}
