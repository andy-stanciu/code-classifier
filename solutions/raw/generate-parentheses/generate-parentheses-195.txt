class Solution {

    public void recurse(List<String> ans, String s, int left, int right, int n) {
        if (s.length() == 2 * n) {
            ans.add(s);
            return;
        }
        if (left < n) {
            recurse(ans, s + "(", left + 1, right, n);
        }
        if (left > right) {
            recurse(ans, s + ")", left, right + 1, n);
        }
    }

    public List<String> generateParenthesis(int n) {
        List<String> ans = new ArrayList<>();
        recurse(ans, "", 0, 0, n);
        return ans;
    }
}
