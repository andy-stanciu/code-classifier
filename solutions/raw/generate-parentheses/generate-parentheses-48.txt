class Solution {

    List<String> an = new ArrayList<>();

    StringBuilder str = new StringBuilder();

    public List<String> generateParenthesis(int n) {
        recurse(0, 0, n);
        return an;
    }

    public void recurse(int s, int e, int n) {
        //s=start,e=end
        if (str.length() == n * 2) {
            an.add(str.toString());
            return;
        }
        if (s < n) {
            str.append("(");
            recurse(s + 1, e, n);
            str.deleteCharAt(str.length() - 1);
        }
        if (s > e) {
            str.append(")");
            recurse(s, e + 1, n);
            str.deleteCharAt(str.length() - 1);
        }
    }
}
