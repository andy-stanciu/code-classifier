class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> lt = new ArrayList<>();
        StringBuilder list = new StringBuilder();
        generate(n, n, lt, list);
        return lt;
    }

    public static void generate(int open, int close, List<String> lt, StringBuilder list) {
        if (open == 0 && close == 0) {
            String replace = list.toString();
            lt.add(replace);
        }
        if (open != 0) {
            list.append("(");
            generate(open - 1, close, lt, list);
            list.deleteCharAt(list.length() - 1);
        }
        if (close != open) {
            list.append(")");
            generate(open, close - 1, lt, list);
            list.deleteCharAt(list.length() - 1);
        }
    }
}
