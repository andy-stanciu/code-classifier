class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> ans = new ArrayList<>();
        int opening_count = 0, closing_count = 0;
        solve(opening_count, closing_count, ans, n, "");
        return ans;
    }

    static void solve(int opening_count, int closing_count, List<String> ans, int n, String s) {
        if (opening_count == n && closing_count == n) {
            ans.add(new String(s));
            return;
        }
        if (opening_count < n)
            solve(opening_count + 1, closing_count, ans, n, s + "(");
        if (closing_count < opening_count)
            solve(opening_count, closing_count + 1, ans, n, s + ")");
    }
}
