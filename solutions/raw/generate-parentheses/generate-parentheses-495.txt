class Solution {

    List<String> ls = new ArrayList<>();

    public void backtrack(int n, int start_brack, int close_brack, String str) {
        if (n == start_brack && start_brack == close_brack) {
            ls.add(str);
            return;
        }
        if (start_brack < n) {
            backtrack(n, start_brack + 1, close_brack, str + "(");
        }
        if (close_brack < start_brack) {
            backtrack(n, start_brack, close_brack + 1, str + ")");
        }
    }

    public List<String> generateParenthesis(int n) {
        backtrack(n, 1, 0, "(");
        return ls;
    }
}
