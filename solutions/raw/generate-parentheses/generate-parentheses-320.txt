class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList();
        findAll("(", 1, 0, n, result);
        return result;
    }

    void findAll(String curr, int open, int close, int n, List<String> result) {
        if (curr.length() == 2 * n) {
            result.add(curr);
            return;
        }
        if (open < n)
            findAll(curr + "(", open + 1, close, n, result);
        if (close < open)
            findAll(curr + ")", open, close + 1, n, result);
    }
}
