class Solution {

    public void generate(List<String> result, int open, int close, String ds, int max) {
        //base case
        if (ds.length() >= 2 * max) {
            result.add(ds);
            return;
        }
        //HAVE TO ALWAYS START WITH {
        if (open < max) {
            generate(result, open + 1, close, ds + "(", max);
        }
        if (close < open) {
            generate(result, open, close + 1, ds + ")", max);
        }
    }

    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        generate(result, 0, 0, "", n);
        return result;
    }
}
