class Solution {

    public void solve(String str, List<String> ans, int open, int closed, int n) {
        if (open == n && closed == n) {
            ans.add(str);
            return;
        }
        if (open < n) {
            str += "(";
            solve(str, ans, open + 1, closed, n);
            str = str.substring(0, str.length() - 1);
        }
        if (closed < open) {
            str += ")";
            solve(str, ans, open, closed + 1, n);
            str = str.substring(0, str.length() - 1);
        }
    }

    public List<String> generateParenthesis(int n) {
        List<String> ans = new ArrayList<>();
        solve("", ans, 0, 0, n);
        return ans;
    }
}
