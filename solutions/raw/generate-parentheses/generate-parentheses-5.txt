class Solution {

    public void fun(int n, List<String> list, StringBuilder sb, int co, int cc) {
        if (sb.length() == 2 * n) {
            list.add(sb.toString());
            return;
        }
        if (co < n) {
            sb.append("(");
            fun(n, list, sb, co + 1, cc + 1);
            sb.deleteCharAt(sb.length() - 1);
        }
        if (cc > 0) {
            sb.append(")");
            fun(n, list, sb, co, cc - 1);
            sb.deleteCharAt(sb.length() - 1);
        }
    }

    public List<String> generateParenthesis(int n) {
        List<String> list = new ArrayList<>();
        fun(n, list, new StringBuilder(), 0, 0);
        return list;
    }
}
