class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> list = new ArrayList<>();
        StringBuilder tempString = new StringBuilder();
        generateParenthesisHelper(list, tempString, 0, 0, n);
        return list;
    }

    public void generateParenthesisHelper(List<String> list, StringBuilder tempString, int i, int j, int n) {
        if (tempString.length() == n * 2) {
            list.add(tempString.toString());
            return;
        }
        if (i < n) {
            tempString.append("(");
            generateParenthesisHelper(list, tempString, i + 1, j, n);
            tempString.deleteCharAt(tempString.length() - 1);
        }
        if (j < i) {
            tempString.append(")");
            generateParenthesisHelper(list, tempString, i, j + 1, n);
            tempString.deleteCharAt(tempString.length() - 1);
        }
    }
}
