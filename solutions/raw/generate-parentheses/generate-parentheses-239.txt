class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        helper(n, 0, 0, 0, "", res);
        return res;
    }

    void helper(int n, int open, int opened, int closed, String curr, List<String> res) {
        if (opened == n && closed == n) {
            res.add(curr);
            return;
        }
        if (opened < n) {
            helper(n, open + 1, opened + 1, closed, curr + "(", res);
        }
        if (closed < n && open > 0) {
            helper(n, open - 1, opened, closed + 1, curr + ")", res);
        }
        return;
    }
}
