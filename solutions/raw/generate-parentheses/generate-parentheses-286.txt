class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        calculateCombinations(res, "", n, n);
        return res;
    }

    private void calculateCombinations(List<String> res, String temp, int open, int close) {
        if (open == 0 && close == 0) {
            res.add(temp);
            return;
        }
        if (open > close)
            return;
        if (open > 0)
            calculateCombinations(res, temp + "(", open - 1, close);
        if (close > 0)
            calculateCombinations(res, temp + ")", open, close - 1);
    }
}
