class Solution {

    void fill(List<String> ans, int n, int open, int close, String curr) {
        if (curr.length() == (n * 2)) {
            ans.add(curr);
            return;
        }
        if (open < n)
            fill(ans, n, open + 1, close, curr + "(");
        if (close < open)
            fill(ans, n, open, close + 1, curr + ")");
    }

    public List<String> generateParenthesis(int n) {
        List<String> ans = new ArrayList<>();
        fill(ans, n, 0, 0, "");
        return ans;
    }
}
