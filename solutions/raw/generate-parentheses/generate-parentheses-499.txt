class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> lst = new ArrayList<>();
        backtrack("", n, n, lst);
        return lst;
    }

    public void backtrack(String s, int open, int close, List<String> lst) {
        if (open > close) {
            return;
        }
        if (open > 0) {
            backtrack(s + "(", open - 1, close, lst);
        }
        if (close > 0) {
            backtrack(s + ")", open, close - 1, lst);
        }
        if (open == 0 && close == 0) {
            lst.add(s);
        }
    }
}
