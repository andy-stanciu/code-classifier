class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        generate(2 * n, n, n, "", result);
        return result;
    }

    private void generate(int length, int left, int right, String currStr, List<String> result) {
        // base case where we have reached the desired length
        if (currStr.length() == length) {
            result.add(currStr);
            return;
        }
        // if we have left brackets that we can add, recurse the function while addig left bracket to the currString
        if (left > 0)
            generate(length, left - 1, right, currStr + "(", result);
        // if we have right brackets greater than the left brackets, recurse the function while adding right bracket to the currString
        if (right > left)
            generate(length, left, right - 1, currStr + ")", result);
    }
}
