class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        int left = 0, right = 0;
        String s = "";
        dfs(result, s, 0, 0, n);
        return result;
    }

    private void dfs(List<String> res, String s, int left, int right, int n) {
        if (left == n && left == right) {
            res.add(s);
            return;
        }
        if (left < n) {
            dfs(res, s + "(", left + 1, right, n);
        }
        if (right < left) {
            dfs(res, s + ")", left, right + 1, n);
        }
    }
}
