class Solution {

    private void helper(String curr, int open, int close, int max, List<String> res) {
        if (curr.length() == max * 2) {
            res.add(curr);
            return;
        }
        if (open < max) {
            helper(curr + "(", open + 1, close, max, res);
        }
        if (close < open) {
            helper(curr + ")", open, close + 1, max, res);
        }
    }

    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        helper("", 0, 0, n, res);
        return res;
    }
}
