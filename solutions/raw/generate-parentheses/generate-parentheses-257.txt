class Solution {

    public List<String> generateParenthesis(int n) {
        int open = 0;
        int close = 0;
        List<String> list = new ArrayList<>();
        util(list, new StringBuilder(), open, close, n);
        return list;
    }

    public static void util(List<String> list, StringBuilder sb, int open, int close, int n) {
        if (close > open || close > n || open > n)
            return;
        if (open == n && close == n) {
            list.add(sb.toString());
            return;
        }
        util(list, sb.append("("), open + 1, close, n);
        sb.deleteCharAt(sb.length() - 1);
        util(list, sb.append(")"), open, close + 1, n);
        sb.deleteCharAt(sb.length() - 1);
    }
}
