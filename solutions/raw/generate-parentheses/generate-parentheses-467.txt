class Solution {

    public static List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        dfs(0, 0, n, res, "");
        return res;
    }

    public static void dfs(int open, int close, int n, List<String> res, String current) {
        if (close <= n) {
            if (close == open && close == n)
                res.add(current);
            else {
                if (open < n)
                    dfs(open + 1, close, n, res, current + "(");
                if (open > close)
                    dfs(open, close + 1, n, res, current + ")");
            }
        }
    }
}
