class Solution {

    int end;

    List<String> lst;

    public List<String> generateParenthesis(int n) {
        lst = new ArrayList<>();
        end = n;
        this.combinations(0, 0, "");
        return lst;
    }

    void combinations(int open, int close, String s) {
        if (open == close && s.length() == 2 * end)
            lst.add(s);
        if (open < end)
            this.combinations(open + 1, close, s + "(");
        if (close < open)
            this.combinations(open, close + 1, s + ")");
    }
}
