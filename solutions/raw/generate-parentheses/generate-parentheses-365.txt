class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        backtrack(0, 0, n, "", res);
        return res;
    }

    private void backtrack(int open, int closed, int n, String str, List<String> res) {
        if (open == closed && open == n) {
            res.add(str);
        }
        if (open < n) {
            backtrack(open + 1, closed, n, str + "(", res);
        }
        if (closed < open) {
            backtrack(open, closed + 1, n, str + ")", res);
        }
    }
}
