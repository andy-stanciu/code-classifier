class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        backtrack(0, 0, n, res, "");
        return res;
    }

    public void backtrack(int open, int close, int n, List<String> res, String cur) {
        if (open == close && close == n) {
            res.add(cur);
            return;
        }
        if (open < n) {
            backtrack(open + 1, close, n, res, cur + "(");
        }
        if (open > close) {
            backtrack(open, close + 1, n, res, cur + ")");
        }
    }
}
