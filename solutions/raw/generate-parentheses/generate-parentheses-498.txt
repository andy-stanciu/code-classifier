class Solution {

    HashMap<Integer, List<String>> map;

    public List<String> generateParenthesis(int n) {
        map = new HashMap<>();
        return dfs(n);
    }

    public List<String> dfs(int n) {
        List<String> res = new ArrayList<>();
        if (n == 0) {
            res.add("");
            return res;
        }
        if (map.containsKey(n)) {
            return map.get(n);
        }
        for (int i = n - 1; i >= 0; i--) {
            for (String left : dfs(i)) {
                for (String right : dfs(n - i - 1)) {
                    res.add("(" + left + ")" + right);
                }
            }
        }
        map.put(n, res);
        return map.get(n);
    }
}
