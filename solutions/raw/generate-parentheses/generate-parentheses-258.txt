class Solution {

    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        int open = n;
        int close = n;
        String op = "";
        solve(open, close, op, result);
        return result;
    }

    private void solve(int open, int close, String op, List<String> result) {
        if (open == 0 && close == 0) {
            result.add(op);
            return;
        }
        if (open > 0) {
            solve(open - 1, close, op + "(", result);
        }
        if (close > open) {
            solve(open, close - 1, op + ")", result);
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        List<String> result = solution.generateParenthesis(3);
        System.out.println(result);
    }
}
