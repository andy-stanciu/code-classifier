/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] arr = new int[1];
        arr[0] = Integer.MIN_VALUE;
        sum(root, arr);
        return arr[0];
    }

    public int sum(TreeNode root, int[] arr) {
        if (root == null)
            return 0;
        int lsum = Math.max(0, sum(root.left, arr));
        int rsum = Math.max(0, sum(root.right, arr));
        arr[0] = Math.max(arr[0], lsum + rsum + root.val);
        return Math.max(lsum, rsum) + root.val;
    }
}
