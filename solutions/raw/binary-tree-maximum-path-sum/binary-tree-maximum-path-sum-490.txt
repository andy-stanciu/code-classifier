/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] maxi = { Integer.MIN_VALUE };
        maxPath(root, maxi);
        return maxi[0];
    }

    public int maxPath(TreeNode root, int[] maxi) {
        if (root == null) {
            return 0;
        }
        int leftSum = maxPath(root.left, maxi);
        int rightSum = maxPath(root.right, maxi);
        if (leftSum < 0) {
            leftSum = 0;
        }
        if (rightSum < 0) {
            rightSum = 0;
        }
        maxi[0] = Math.max(maxi[0], leftSum + rightSum + root.val);
        return root.val + Math.max(leftSum, rightSum);
    }
}
