/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = 0;

    public int getMaxPathSum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int left = getMaxPathSum(root.left);
        int right = getMaxPathSum(root.right);
        int nodeMax = Math.max(root.val, root.val + Math.max(left, right));
        max = Math.max(max, Math.max(nodeMax, root.val + left + right));
        return nodeMax;
    }

    public int maxPathSum(TreeNode root) {
        max = Integer.MIN_VALUE;
        getMaxPathSum(root);
        return max;
    }
}
