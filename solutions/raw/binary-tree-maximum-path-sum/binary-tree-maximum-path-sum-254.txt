/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        solve(root);
        return max;
    }

    public int solve(TreeNode root) {
        if (root == null)
            return 0;
        int l = solve(root.left);
        int r = solve(root.right);
        int max_Left_or_Right = Math.max(root.val, Math.max(l, r) + root.val);
        int max_top = Math.max(max_Left_or_Right, root.val + l + r);
        max = Math.max(max, max_top);
        return max_Left_or_Right;
    }
}
