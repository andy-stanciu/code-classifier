/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int sum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        if (root.left == null && root.right == null) {
            return root.val;
        }
        getSum(root);
        return this.sum;
    }

    private int getSum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int sumLeft = getSum(root.left);
        int sumRight = getSum(root.right);
        this.sum = Math.max(sum, sumLeft + sumRight + root.val);
        return Math.max(root.val + Math.max(sumLeft, sumRight), 0);
    }
}
