/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxSum = (int) -1e8;

    public int maxPathSum(TreeNode node) {
        maxPathSum_(node);
        return maxSum;
    }

    public int maxPathSum_(TreeNode node) {
        if (node == null)
            return (int) -1e8;
        int leftsum = maxPathSum_(node.left);
        int rightsum = maxPathSum_(node.right);
        int sideMax = Math.max(leftsum, rightsum) + node.val;
        maxSum = Math.max(Math.max(maxSum, sideMax), Math.max(leftsum + rightsum + node.val, node.val));
        return Math.max(sideMax, node.val);
    }
}
