/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max;

    public int maxPathSum(TreeNode root) {
        max = Integer.MIN_VALUE;
        Maxgain(root);
        return max;
    }

    int Maxgain(TreeNode node) {
        if (node == null)
            return 0;
        int leftg = Math.max(Maxgain(node.left), 0);
        int rightg = Math.max(Maxgain(node.right), 0);
        int current = node.val + leftg + rightg;
        max = Math.max(max, current);
        return node.val + Math.max(leftg, rightg);
    }
}
