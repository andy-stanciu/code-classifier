/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int myPathSum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int left = myPathSum(root.left);
        int right = myPathSum(root.right);
        int max = Math.max(left, right);
        return max > 0 ? root.val + max : root.val;
    }

    public int maxPathSum(TreeNode root) {
        if (root == null) {
            return Integer.MIN_VALUE;
        }
        int left = maxPathSum(root.left);
        int right = maxPathSum(root.right);
        int own = root.val;
        int ownleft = myPathSum(root.left);
        int ownright = myPathSum(root.right);
        if (ownleft > 0)
            own += ownleft;
        if (ownright > 0)
            own += ownright;
        return Math.max(own, Math.max(left, right));
    }
}
