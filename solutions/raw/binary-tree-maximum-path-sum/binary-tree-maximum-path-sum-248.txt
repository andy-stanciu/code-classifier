/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int max;

    public int dfs(TreeNode root) {
        if (root == null)
            return -1;
        int lsum = dfs(root.left);
        int rsum = dfs(root.right);
        lsum = Math.max(lsum, 0);
        rsum = Math.max(rsum, 0);
        int currSum = lsum + rsum + root.val;
        max = Math.max(currSum, max);
        return Math.max(lsum, rsum) + root.val;
    }

    public int maxPathSum(TreeNode root) {
        max = Integer.MIN_VALUE;
        dfs(root);
        return max;
    }
}
