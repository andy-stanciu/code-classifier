/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] maxi = { Integer.MIN_VALUE };
        findMaxPathSum(root, maxi);
        return maxi[0];
    }

    private int findMaxPathSum(TreeNode nodes, int[] maxi) {
        if (nodes == null) {
            return 0;
        }
        int left = Math.max(0, findMaxPathSum(nodes.left, maxi));
        int right = Math.max(0, findMaxPathSum(nodes.right, maxi));
        maxi[0] = Math.max(maxi[0], left + right + nodes.val);
        return Math.max(left, right) + nodes.val;
    }
}
