/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxSum;

    public int maxPathSum(TreeNode root) {
        maxSum = Integer.MIN_VALUE;
        calMaxPathSum(root);
        return maxSum;
    }

    public int calMaxPathSum(TreeNode root) {
        if (root == null)
            return 0;
        int left = calMaxPathSum(root.left);
        int right = calMaxPathSum(root.right);
        int maxChild = Math.max(left, right);
        int maxRoot = Math.max(maxChild + root.val, root.val);
        int maxTree = Math.max(maxRoot, root.val + left + right);
        maxSum = Math.max(maxSum, maxTree);
        return maxRoot;
    }
}
