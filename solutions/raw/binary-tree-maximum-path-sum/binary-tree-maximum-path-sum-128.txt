/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int maxsum;

    public int maxPathSum(TreeNode root) {
        maxsum = Integer.MIN_VALUE;
        maxsum(root);
        return maxsum;
    }

    public int maxsum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int leftsum = Math.max(0, maxsum(root.left));
        int rightsum = Math.max(0, maxsum(root.right));
        int currsum = leftsum + rightsum + root.val;
        maxsum = Math.max(maxsum, currsum);
        return root.val + Math.max(leftsum, rightsum);
    }
}
