/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = -1001;

    private int dfs(TreeNode node) {
        if (node != null) {
            int a = dfs(node.left);
            int b = dfs(node.right);
            int val = node.val;
            if (a + val > val) {
                val = a + val;
            }
            if (b + val > val) {
                val = b + val;
            }
            max = Math.max(val, max);
            return Math.max(a + node.val, Math.max(b + node.val, node.val));
        }
        return 0;
    }

    public int maxPathSum(TreeNode root) {
        dfs(root);
        return max;
    }
}
