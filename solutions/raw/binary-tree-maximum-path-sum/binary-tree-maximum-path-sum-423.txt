/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxValue = -1001;

    public int maxPathSum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        getMaxSum(root);
        return maxValue;
    }

    public int getMaxSum(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int left = getMaxSum(root.left);
        int right = getMaxSum(root.right);
        maxValue = (int) Math.max(maxValue, root.val + ((left > 0) ? left : 0) + ((right > 0) ? right : 0));
        return root.val + (int) Math.max(left, (int) Math.max(right, 0));
    }
}
