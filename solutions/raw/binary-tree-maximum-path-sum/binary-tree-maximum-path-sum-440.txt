class Solution {

    // Initialize maxSum as the smallest possible integer
    int maxSum = Integer.MIN_VALUE;

    int solve(TreeNode root) {
        if (root == null)
            return 0;
        // Consider negative values as 0
        int l = Math.max(0, solve(root.left));
        int r = Math.max(0, solve(root.right));
        int dono_achha_hai = l + r + root.val;
        int koi_ek_achha_hai = Math.max(l, r) + root.val;
        int Bs_root_acha_hai = root.val;
        maxSum = Math.max(maxSum, Math.max(dono_achha_hai, Math.max(koi_ek_achha_hai, Bs_root_acha_hai)));
        return Math.max(koi_ek_achha_hai, Bs_root_acha_hai);
    }

    public int maxPathSum(TreeNode root) {
        solve(root);
        return maxSum;
    }
}
