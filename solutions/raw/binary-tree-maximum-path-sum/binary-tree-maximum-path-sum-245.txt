/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = Integer.MIN_VALUE;

    public int func(TreeNode r, int sum) {
        if (r == null) {
            return 0;
        }
        int leftsum = func(r.left, 0);
        int rightsum = func(r.right, 0);
        int ans1 = leftsum + rightsum + r.val;
        int ans2 = leftsum + r.val;
        int ans3 = rightsum + r.val;
        int ans = Math.max(ans1, Math.max(ans2, ans3));
        max = Math.max(r.val, Math.max(ans, max));
        return Math.max(r.val, r.val + Math.max(leftsum, rightsum));
    }

    public int maxPathSum(TreeNode root) {
        func(root, 0);
        return max;
    }
}
