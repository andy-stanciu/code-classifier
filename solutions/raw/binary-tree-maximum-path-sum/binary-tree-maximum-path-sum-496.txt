/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int answer = -1000000000;

    public int maxPathSum(TreeNode root) {
        helper(root);
        return answer;
    }

    int helper(TreeNode node) {
        if (node == null) {
            return 0;
        }
        int maxLeftPath = Math.max(helper(node.left), 0);
        int maxRightPath = Math.max(helper(node.right), 0);
        answer = Math.max(answer, maxLeftPath + maxRightPath + node.val);
        return Math.max(maxLeftPath, maxRightPath) + node.val;
    }
}
