/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxsum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        maxPath(root);
        return maxsum;
    }

    public int maxPath(TreeNode node) {
        if (node == null)
            return 0;
        int LHS = Math.max(0, maxPath(node.left));
        int RHS = Math.max(0, maxPath(node.right));
        maxsum = Math.max(maxsum, node.val + LHS + RHS);
        return node.val + Math.max(LHS, RHS);
    }
}
