/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    // int ans = 0;
    int ans = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        dfs(root);
        return ans;
    }

    private int dfs(TreeNode node) {
        if (node == null) {
            return 0;
        }
        // int val = node.val >= 0 ? node.val : 0;
        int lLen = dfs(node.left);
        int rLen = dfs(node.right);
        ans = Math.max(ans, lLen + rLen + node.val);
        return Math.max(Math.max(lLen, rLen) + node.val, 0);
    }
}
