/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] maximum = new int[1];
        maximum[0] = Integer.MIN_VALUE;
        find(root, maximum);
        return maximum[0];
    }

    int find(TreeNode node, int[] maximum) {
        if (node == null)
            return 0;
        int left = Math.max(0, find(node.left, maximum));
        int right = Math.max(0, find(node.right, maximum));
        int total = left + right + node.val;
        maximum[0] = Math.max(maximum[0], total);
        return Math.max(left, right) + node.val;
    }
}
