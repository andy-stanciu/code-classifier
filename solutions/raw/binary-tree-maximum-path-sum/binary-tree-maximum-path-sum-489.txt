/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] maxsum = new int[1];
        maxsum[0] = Integer.MIN_VALUE;
        maxpathsum(root, maxsum);
        return maxsum[0];
    }

    private int maxpathsum(TreeNode root, int[] maxsum) {
        if (root == null)
            return 0;
        int left = Math.max(0, maxpathsum(root.left, maxsum));
        int right = Math.max(0, maxpathsum(root.right, maxsum));
        maxsum[0] = Math.max(maxsum[0], right + left + root.val);
        return Math.max(left, right) + root.val;
    }
}
