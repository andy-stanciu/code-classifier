/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static class Maxi {

        int val;

        Maxi() {
            this.val = Integer.MIN_VALUE;
        }
    }

    public static int findMaxSum(TreeNode root, Maxi maxi) {
        if (root == null) {
            return 0;
        }
        int leftSum = Math.max(0, findMaxSum(root.left, maxi));
        int rightSum = Math.max(0, findMaxSum(root.right, maxi));
        maxi.val = Math.max(maxi.val, (rightSum + leftSum + root.val));
        return Math.max(leftSum, rightSum) + root.val;
    }

    public int maxPathSum(TreeNode root) {
        Maxi maxi = new Maxi();
        findMaxSum(root, maxi);
        return maxi.val;
    }
}
