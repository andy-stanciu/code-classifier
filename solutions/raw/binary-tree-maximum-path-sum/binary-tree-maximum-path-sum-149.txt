/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int ans = -11000;

    public int maxPathSum(TreeNode root) {
        if (root == null)
            return 0;
        call(root);
        return ans;
    }

    public int call(TreeNode root) {
        if (root == null)
            return 0;
        int l = call(root.left);
        int r = call(root.right);
        if (ans < l + r + root.val) {
            ans = l + r + root.val;
        }
        int x = Math.max(l, r) + root.val;
        if (x < 0) {
            return 0;
        }
        ;
        return x;
    }
}
