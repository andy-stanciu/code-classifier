/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxSum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        dfs(root);
        return maxSum;
    }

    public int dfs(TreeNode root) {
        int left = 0;
        int right = 0;
        if (root.left != null) {
            left = dfs(root.left);
        }
        if (root.right != null) {
            right = dfs(root.right);
        }
        int leftPlusRightPlusNode = left + right + root.val;
        int leftPlusNode = left + root.val;
        int rightPlusNode = right + root.val;
        maxSum = Math.max(maxSum, Math.max(root.val, Math.max(rightPlusNode, Math.max(leftPlusRightPlusNode, leftPlusNode))));
        return Math.max(root.val, Math.max(left + root.val, right + root.val));
    }
}
