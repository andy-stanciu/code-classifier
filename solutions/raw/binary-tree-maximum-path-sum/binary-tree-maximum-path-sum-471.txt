/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int temp = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        if (root == null)
            return 0;
        paths(root);
        return temp;
    }

    int paths(TreeNode root) {
        if (root == null)
            return 0;
        int left = Math.max(0, paths(root.left));
        int right = Math.max(0, paths(root.right));
        temp = Math.max(left + right + root.val, temp);
        return Math.max(left, right) + root.val;
    }
}
