/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    // public List<Integer> ans=new ArrayList<Integer>();
    public int max = 0;

    public int maxPathSum(TreeNode root) {
        max = root.val;
        int i = pathTrace(root);
        return max;
        //    Collections.sort(ans);
        //    return ans.get(ans.size()-1);
    }

    public int pathTrace(TreeNode node) {
        if (node == null) {
            return 0;
        }
        int l = pathTrace(node.left);
        int r = pathTrace(node.right);
        if (l < 0)
            l = 0;
        if (r < 0)
            r = 0;
        int sum = node.val + Math.max(l, r);
        // ans.add(node.val+l+r);
        max = Math.max(max, node.val + l + r);
        return sum;
    }
}
