/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        AtomicInteger maxSum = new AtomicInteger(Integer.MIN_VALUE);
        helper(root, maxSum);
        return maxSum.get();
    }

    private static int helper(TreeNode root, AtomicInteger maxSum) {
        if (root == null) {
            return 0;
        }
        int left = Math.max(helper(root.left, maxSum), 0);
        int right = Math.max(helper(root.right, maxSum), 0);
        int newMax = Math.max(maxSum.get(), left + right + root.val);
        maxSum.set(newMax);
        return Math.max(left + root.val, right + root.val);
    }
}
