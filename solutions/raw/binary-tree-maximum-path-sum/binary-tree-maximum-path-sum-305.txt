/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPath(TreeNode root, int[] sum) {
        if (root == null)
            return 0;
        int ls = maxPath(root.left, sum);
        int rs = maxPath(root.right, sum);
        sum[0] = Math.max(ls + rs + root.val, sum[0]);
        int ret = Math.max(ls + root.val, rs + root.val);
        return ret > 0 ? ret : 0;
    }

    public int maxPathSum(TreeNode root) {
        int[] max = new int[1];
        max[0] = -(int) 1e9;
        maxPath(root, max);
        return max[0];
    }
}
