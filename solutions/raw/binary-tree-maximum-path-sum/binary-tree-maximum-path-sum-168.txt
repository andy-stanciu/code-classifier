/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] sum = { Integer.MIN_VALUE };
        maxSum(root, sum);
        return sum[0];
    }

    int maxSum(TreeNode root, int[] sum) {
        if (root == null)
            return 0;
        int subleft = maxSum(root.left, sum);
        int subright = maxSum(root.right, sum);
        sum[0] = Math.max(sum[0], subleft + subright + root.val);
        return Math.max(0, Math.max(subleft, subright) + root.val);
    }
}
