/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxSum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        this.maxSum = Integer.MIN_VALUE;
        maxContrib(root);
        return this.maxSum;
    }

    private int maxContrib(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int leftMax = maxContrib(root.left);
        int rightMax = maxContrib(root.right);
        int leftSubTree = 0;
        int rightSubTree = 0;
        if (leftMax > 0)
            leftSubTree = leftMax;
        if (rightMax > 0)
            rightSubTree = rightMax;
        int newPathValue = root.val + leftSubTree + rightSubTree;
        this.maxSum = Math.max(maxSum, newPathValue);
        return root.val + Math.max(leftSubTree, rightSubTree);
    }
}
