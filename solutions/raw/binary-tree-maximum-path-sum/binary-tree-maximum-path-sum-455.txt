class Solution {

    int ans = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        getMaxPathSum(root);
        return ans;
    }

    private int getMaxPathSum(TreeNode root) {
        if (root == null)
            return 0;
        int left = getMaxPathSum(root.left);
        int right = getMaxPathSum(root.right);
        int takingAll = left + right + root.val;
        int skippingOne = Math.max(left, right) + root.val;
        int skippingBoth = root.val;
        int currNodeSum = Math.max(takingAll, Math.max(skippingOne, skippingBoth));
        ans = Math.max(ans, currNodeSum);
        return Math.max(skippingOne, skippingBoth);
    }
}
