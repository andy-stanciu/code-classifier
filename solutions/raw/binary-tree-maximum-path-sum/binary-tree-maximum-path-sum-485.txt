/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        int t = diameter(root);
        return max;
    }

    public int diameter(TreeNode root) {
        if (root == null)
            return 0;
        int l = diameter(root.left);
        int r = diameter(root.right);
        int self = l + r + root.val;
        if (self < root.val)
            self = root.val;
        int temp = Math.max(l, r) + root.val;
        if (temp < root.val)
            temp = root.val;
        int ans = Math.max(self, temp);
        max = Math.max(max, ans);
        return temp;
    }
}
