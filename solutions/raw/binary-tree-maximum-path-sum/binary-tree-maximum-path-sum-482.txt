/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        find(root);
        return max;
    }

    private int find(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int leftPath = find(root.left);
        int rightPath = find(root.right);
        int self = root.val;
        int midPath = leftPath + rightPath + self;
        int pathMax = Math.max(leftPath, rightPath);
        max = Math.max(max, self + Math.max(0, Math.max(leftPath + rightPath, pathMax)));
        return self + Math.max(0, pathMax);
    }
}
