/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int max = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        findMax(root);
        return max;
    }

    public int findMax(TreeNode root) {
        if (root == null) {
            return -10001;
        }
        int left = findMax(root.left);
        int right = findMax(root.right);
        int sumL = root.val + left;
        int sumR = root.val + right;
        max = Math.max(max, Math.max(sumL, sumR));
        max = Math.max(max, root.val);
        max = Math.max(max, root.val + left + right);
        return Math.max(root.val, Math.max(sumR, sumL));
    }
}
