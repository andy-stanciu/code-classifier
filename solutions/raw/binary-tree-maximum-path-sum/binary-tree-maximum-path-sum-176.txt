/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxSum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        int result = calcSum(root);
        return maxSum;
    }

    int calcSum(TreeNode node) {
        if (node == null)
            return 0;
        int lh = calcSum(node.left);
        if (lh < 0)
            lh = 0;
        int rh = calcSum(node.right);
        if (rh < 0)
            rh = 0;
        maxSum = Math.max(maxSum, lh + rh + node.val);
        return node.val + Math.max(lh, rh);
    }
}
