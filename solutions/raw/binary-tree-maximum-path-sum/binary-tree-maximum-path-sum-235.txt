/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int ans = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        ans = Integer.MIN_VALUE;
        find(root);
        return ans;
    }

    public int find(TreeNode root) {
        if (root == null)
            return 0;
        int left = find(root.left);
        int right = find(root.right);
        int currsum = Math.max(left + root.val, Math.max(right + root.val, Math.max(left + right + root.val, root.val)));
        ans = Math.max(currsum, ans);
        return Math.max(left + root.val, Math.max(right + root.val, root.val));
    }
}
