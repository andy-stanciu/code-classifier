/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max;

    public int maxPathSum(TreeNode root) {
        max = Integer.MIN_VALUE;
        postOrder(root);
        return max;
    }

    public int postOrder(TreeNode root) {
        if (root == null)
            return 0;
        int left = postOrder(root.left);
        int right = postOrder(root.right);
        int oneWayPath = Math.max(root.val, Math.max(root.val + left, root.val + right));
        int maxPathFromThis = Math.max(oneWayPath, root.val + left + right);
        max = max > maxPathFromThis ? max : maxPathFromThis;
        return oneWayPath;
    }
}
