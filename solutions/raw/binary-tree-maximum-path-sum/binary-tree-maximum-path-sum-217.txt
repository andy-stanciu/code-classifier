/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int maxSum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        maxPathSum1(root);
        return maxSum;
    }

    private int maxPathSum1(TreeNode node) {
        if (node == null)
            return -100000;
        int leftSum = maxPathSum1(node.left);
        int rightSum = maxPathSum1(node.right);
        int sum = Integer.MIN_VALUE;
        if (node.val > sum)
            sum = node.val;
        if (leftSum + node.val > sum)
            sum = leftSum + node.val;
        if (rightSum + node.val > sum)
            sum = rightSum + node.val;
        if (sum > maxSum)
            maxSum = sum;
        if (leftSum + rightSum + node.val > maxSum)
            maxSum = leftSum + rightSum + node.val;
        return sum;
    }
}
