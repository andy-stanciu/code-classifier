/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int sum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        CalculateMaxSum(root);
        return sum;
    }

    private int CalculateMaxSum(TreeNode root) {
        if (root == null)
            return 0;
        int leftsum = Math.max(CalculateMaxSum(root.left), 0);
        int rightsum = Math.max(CalculateMaxSum(root.right), 0);
        int currentsum = root.val + leftsum + rightsum;
        sum = Math.max(currentsum, sum);
        return root.val + Math.max(leftsum, rightsum);
    }
}
