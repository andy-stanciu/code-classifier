/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] count = new int[] { Integer.MIN_VALUE };
        recursion(root, count);
        return count[0];
    }

    private int recursion(TreeNode root, int[] count) {
        if (root == null)
            return 0;
        int left = Math.max(0, recursion(root.left, count));
        int right = Math.max(0, recursion(root.right, count));
        count[0] = Math.max(count[0], left + right + root.val);
        return Math.max(left, right) + root.val;
    }
}
