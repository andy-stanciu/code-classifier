/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int maxSum;

    private int helper(TreeNode head) {
        if (head == null)
            return 0;
        int left = helper(head.left);
        int right = helper(head.right);
        int maxSumEndingAtThisNode = Math.max(head.val, (Math.max(left + head.val, right + head.val)));
        int maxSumIncludingThisNode = Math.max(maxSumEndingAtThisNode, head.val + left + right);
        maxSum = Math.max(maxSum, maxSumIncludingThisNode);
        return maxSumEndingAtThisNode;
    }

    public int maxPathSum(TreeNode root) {
        maxSum = Integer.MIN_VALUE;
        helper(root);
        return maxSum;
    }
}
