/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxsum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        inorder(root, root);
        return maxsum;
    }

    public int inorder(TreeNode root, TreeNode org) {
        if (root == null) {
            return 0;
        }
        int left = inorder(root.left, org);
        int right = inorder(root.right, org);
        int sum2 = root.val + left;
        int sum3 = root.val + right;
        int sum4 = root.val + left + right;
        int sum = Math.max(Math.max(sum2, sum4), Math.max(sum3, root.val));
        int retsum = Math.max(sum2, Math.max(root.val, sum3));
        maxsum = Math.max(maxsum, sum);
        return retsum;
    }
}
