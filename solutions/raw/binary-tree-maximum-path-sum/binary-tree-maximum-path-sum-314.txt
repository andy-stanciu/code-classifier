/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    int maxSum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        findPath(root);
        return maxSum;
    }

    public int findPath(TreeNode root) {
        if (root == null)
            return 0;
        int left = findPath(root.left);
        int right = findPath(root.right);
        int sum = left + right + root.val;
        if (sum > maxSum)
            maxSum = sum;
        int max = Math.max(left, right);
        if (max + root.val > maxSum)
            maxSum = max + root.val;
        if (root.val > maxSum)
            maxSum = root.val;
        return Math.max(root.val, max + root.val);
    }
}
