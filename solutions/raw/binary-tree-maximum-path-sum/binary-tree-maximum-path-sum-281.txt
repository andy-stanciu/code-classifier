class Solution {

    private int sum = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        return Math.max(dfs(root), sum);
    }

    private int dfs(TreeNode node) {
        // Termination condition.
        if (node == null)
            return 0;
        if (node.left == null && node.right == null) {
            sum = Math.max(sum, node.val);
            return node.val;
        }
        // Traverse condition.
        int leftSum = dfs(node.left);
        int rightSum = dfs(node.right);
        // Return value
        int pathVal = Math.max(Math.max(node.val, rightSum + node.val), leftSum + node.val);
        sum = Math.max(sum, Math.max(pathVal, leftSum + node.val + rightSum));
        return pathVal;
    }
}
