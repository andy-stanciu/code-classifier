/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        // if(root.val<0 && root.left==null && root.right==null){
        //     return root.val;
        // }
        int[] maxPath = new int[1];
        maxPath[0] = Integer.MIN_VALUE;
        helper(root, maxPath);
        return maxPath[0];
    }

    public int helper(TreeNode root, int[] maxPath) {
        if (root == null) {
            return 0;
        }
        int left = Math.max(0, helper(root.left, maxPath));
        int right = Math.max(0, helper(root.right, maxPath));
        maxPath[0] = Math.max(maxPath[0], root.val + left + right);
        return Math.max(left, right) + root.val;
    }
}
