/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int result = Integer.MIN_VALUE;

    public int maxPathSum(TreeNode root) {
        find(root);
        return result;
    }

    int find(TreeNode node) {
        if (node == null) {
            return 0;
        }
        int l = find(node.left);
        int r = find(node.right);
        l = Math.max(0, l);
        r = Math.max(0, r);
        int d = l + r + node.val;
        result = Math.max(d, result);
        return Math.max(l, r) + node.val;
    }
}
