/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] m = new int[1];
        m[0] = Integer.MIN_VALUE;
        p(root, m);
        return m[0];
    }

    public int p(TreeNode root, int[] m) {
        if (root == null) {
            return 0;
        }
        int l = Math.max(0, p(root.left, m));
        int r = Math.max(0, p(root.right, m));
        m[0] = Math.max(m[0], l + r + root.val);
        return root.val + Math.max(r, l);
    }
}
