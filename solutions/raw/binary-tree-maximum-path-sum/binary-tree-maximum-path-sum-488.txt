/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPathSum(TreeNode root) {
        int[] maxvalu = new int[1];
        maxvalu[0] = Integer.MIN_VALUE;
        maxpath(root, maxvalu);
        return maxvalu[0];
    }

    private int maxpath(TreeNode node, int[] maxvalu) {
        if (node == null)
            return 0;
        int lef = Math.max(0, maxpath(node.left, maxvalu));
        int rit = Math.max(0, maxpath(node.right, maxvalu));
        maxvalu[0] = Math.max(maxvalu[0], lef + rit + node.val);
        return Math.max(lef, rit) + node.val;
    }
}
