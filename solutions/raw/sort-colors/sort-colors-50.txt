class Solution {

    public void sortColors(int[] nums) {
        //Most Optimised One pass Algorithm->>Dutch National Flag algorithm
        //3 pointer (partitioning) approach
        int n = nums.length;
        int low = 0, mid = 0, high = n - 1;
        //Algorithmic assumtions
        //0->low-1=>>all 0\'s sorted then low->mid-1=>all 1\'s sorted, then mid->high=>0/1/2 unsorted
        //then high+1->last n-1=>all 2\'s sorted
        while (mid <= high) {
            if (nums[mid] == 0) {
                //swap nums[mid] with nums[low]
                int temp = nums[mid];
                nums[mid] = nums[low];
                nums[low] = temp;
                low++;
                mid++;
            } else if (//as 1 is already at it\'s right place
            nums[mid] == 1)
                //as 1 is already at it\'s right place
                mid++;
            else {
                //nums[mid]==2 is the last case left
                //swap nums[mid] with nums[high
                int temp = nums[mid];
                nums[mid] = nums[high];
                nums[high] = temp;
                //leaving the sorted 2 in the last
                high--;
            }
        }
    }
}
