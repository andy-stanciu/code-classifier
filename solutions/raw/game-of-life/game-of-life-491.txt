class Solution {

    public void gameOfLife(int[][] board) {
        // Map<Integer,Integer> = new HashMap<>();
        List<Integer> x = new ArrayList<>();
        List<Integer> y = new ArrayList<>();
        int m = board.length;
        int n = board[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int numOfLive = 0;
                if (i + 1 < m && board[i + 1][j] == 1)
                    numOfLive++;
                if (i - 1 >= 0 && board[i - 1][j] == 1)
                    numOfLive++;
                if (j + 1 < n && board[i][j + 1] == 1)
                    numOfLive++;
                if (j - 1 >= 0 && board[i][j - 1] == 1)
                    numOfLive++;
                if (i + 1 < m && j + 1 < n && board[i + 1][j + 1] == 1)
                    numOfLive++;
                if (i - 1 >= 0 && j - 1 >= 0 && board[i - 1][j - 1] == 1)
                    numOfLive++;
                if (i - 1 >= 0 && j + 1 < n && board[i - 1][j + 1] == 1)
                    numOfLive++;
                if (i + 1 < m && j - 1 >= 0 && board[i + 1][j - 1] == 1)
                    numOfLive++;
                if ((numOfLive == 3 && board[i][j] == 0) || (numOfLive < 2 && board[i][j] == 1) || (numOfLive > 3 && board[i][j] == 1)) {
                    x.add(i);
                    y.add(j);
                }
            }
        }
        for (int i = 0; i < x.size(); i++) {
            board[x.get(i)][y.get(i)] = board[x.get(i)][y.get(i)] == 0 ? 1 : 0;
        }
    }
}
