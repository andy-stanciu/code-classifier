class Solution {

    public int countAlive(int[][] bord, int i, int j) {
        int count = 0;
        if (i == 0) {
            if (j == 0) {
                count = bord[i][j + 1] + bord[i + 1][j] + bord[i + 1][j + 1];
            } else if (j == bord[i].length - 1) {
                count = bord[i][j - 1] + bord[i + 1][j - 1] + bord[i + 1][j];
            } else {
                count = bord[i + 1][j - 1] + bord[i + 1][j] + bord[i + 1][j + 1] + bord[i][j - 1] + bord[i][j + 1];
            }
        } else if (i == bord.length - 1) {
            if (j == 0) {
                count = bord[i - 1][j] + bord[i - 1][j + 1] + bord[i][j + 1];
            } else if (j == bord[i].length - 1) {
                count = bord[i - 1][j] + bord[i - 1][j - 1] + bord[i][j - 1];
            } else {
                count = bord[i - 1][j] + bord[i - 1][j + 1] + bord[i][j + 1] + bord[i - 1][j - 1] + bord[i][j - 1];
            }
        } else {
            if (j == 0) {
                count = bord[i - 1][j] + bord[i - 1][j + 1] + bord[i][j + 1] + bord[i + 1][j + 1] + bord[i + 1][j];
            } else if (j == bord[i].length - 1) {
                count = bord[i - 1][j] + bord[i - 1][j - 1] + bord[i][j - 1] + bord[i + 1][j - 1] + bord[i + 1][j];
            } else {
                count = bord[i - 1][j - 1] + bord[i - 1][j] + bord[i - 1][j + 1] + bord[i][j + 1] + bord[i + 1][j + 1] + bord[i + 1][j] + bord[i + 1][j - 1] + bord[i][j - 1];
            }
        }
        return count;
    }

    public int[][] gameOfLife(int[][] board) {
        if (board.length == 1 || board[0].length == 1) {
            for (int i = 0; i < board.length; i++) {
                for (int j = 0; j < board[0].length; j++) {
                    board[i][j] = 0;
                }
            }
            return board;
        }
        int[][] returnedBoard = new int[board.length][board[0].length];
        int res = 0;
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                res = countAlive(board, i, j);
                if (board[i][j] == 0) {
                    if (res == 3) {
                        returnedBoard[i][j] = 1;
                    } else {
                        returnedBoard[i][j] = 0;
                    }
                } else if (board[i][j] == 1) {
                    if (res < 2 || res > 3) {
                        returnedBoard[i][j] = 0;
                    } else {
                        returnedBoard[i][j] = 1;
                    }
                }
            }
        }
        for (int i = 0; i < returnedBoard.length; i++) {
            for (int j = 0; j < returnedBoard[i].length; j++) {
                board[i][j] = returnedBoard[i][j];
            }
        }
        return board;
    }
}
