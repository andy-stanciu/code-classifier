class Solution {

    public void gameOfLife(int[][] board) {
        int[][] res = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                helper(board, res, i, j);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] /= 10;
            }
        }
    }

    public void helper(int[][] board, int[][] res, int i, int j) {
        int nOnes = 0;
        if (i - 1 >= 0) {
            nOnes += board[i - 1][j] % 10;
            if (j - 1 >= 0) {
                nOnes += board[i - 1][j - 1] % 10;
            }
            if (j + 1 < board[0].length) {
                nOnes += board[i - 1][j + 1] % 10;
            }
        }
        if (i + 1 < board.length) {
            nOnes += board[i + 1][j] % 10;
            if (j - 1 >= 0) {
                nOnes += board[i + 1][j - 1] % 10;
            }
            if (j + 1 < board[0].length) {
                nOnes += board[i + 1][j + 1] % 10;
            }
        }
        if (j - 1 >= 0) {
            nOnes += board[i][j - 1] % 10;
        }
        if (j + 1 < board[0].length) {
            nOnes += board[i][j + 1] % 10;
        }
        if (board[i][j] == 1 && (nOnes == 2 || nOnes == 3)) {
            board[i][j] += 10;
        }
        if (board[i][j] == 0 && (nOnes == 3)) {
            board[i][j] += 10;
        }
        return;
    }
}
