class Solution {

    public void gameOfLife(int[][] board) {
        int[][] newboard = new int[board.length][board[0].length];
        //  int newboard[][];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                newboard[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < newboard.length; i++) {
            for (int j = 0; j < newboard[0].length; j++) {
                int c = 0;
                if ((i != (newboard.length - 1) && newboard[i + 1][j] == 1)) {
                    c++;
                }
                if (((i != 0) && newboard[i - 1][j] == 1)) {
                    c++;
                }
                if ((j != newboard[0].length - 1) && newboard[i][j + 1] == 1) {
                    c++;
                }
                if ((j != 0) && newboard[i][j - 1] == 1) {
                    c++;
                }
                if ((i != 0) && (j != 0) && newboard[i - 1][j - 1] == 1) {
                    c++;
                }
                if ((j != 0) && (i != newboard.length - 1) && newboard[i + 1][j - 1] == 1) {
                    c++;
                }
                if (i != 0 && (j != newboard[0].length - 1) && newboard[i - 1][j + 1] == 1) {
                    c++;
                }
                if (i != (newboard.length - 1) && (j != newboard[0].length - 1) && newboard[i + 1][j + 1] == 1) {
                    c++;
                }
                if (newboard[i][j] == 1) {
                    if (c < 2 || c > 3) {
                        board[i][j] = 0;
                    } else {
                        board[i][j] = 1;
                    }
                } else {
                    if (c == 3) {
                        board[i][j] = 1;
                    } else {
                        board[i][j] = 0;
                    }
                }
            }
        }
    }
}
