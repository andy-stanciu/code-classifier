class Solution {

    public void gameOfLife(int[][] board) {
        updateBoard(board);
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int val = board[i][j];
                if (val == 2) {
                    board[i][j] = 0;
                } else if (val == -1) {
                    board[i][j] = 1;
                }
            }
        }
    }

    public boolean isValid(int[][] board, int i, int j) {
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || board[i][j] <= 0) {
            return false;
        }
        return true;
    }

    public void updateBoard(int[][] board) {
        int[] xDir = { -1, -1, -1, 0, 0, 1, 1, 1 };
        int[] yDir = { -1, 0, 1, -1, 1, -1, 0, 1 };
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int count = 0;
                for (int k = 0; k < 8; k++) {
                    int x = i + xDir[k];
                    int y = j + yDir[k];
                    if (isValid(board, x, y)) {
                        count++;
                    }
                }
                int val = board[i][j];
                if (val == 0 && count == 3) {
                    board[i][j] = -1;
                } else if (val == 1 && (count != 2 && count != 3)) {
                    board[i][j] = 2;
                }
            }
        }
    }
}
