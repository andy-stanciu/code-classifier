class Solution {

    public void gameOfLife(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        int[] xDir = { 1, 1, 0, -1, -1, -1, 0, 1 };
        int[] yDir = { 0, -1, -1, -1, 0, 1, 1, 1 };
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int count = 0;
                for (int k = 0; k < 8; k++) {
                    int nextI = i + xDir[k];
                    int nextJ = j + yDir[k];
                    if (nextI >= 0 && nextI < n && nextJ >= 0 && nextJ < m) {
                        if (board[nextI][nextJ] == -1 || board[nextI][nextJ] == 1) {
                            count++;
                        }
                    }
                }
                if (board[i][j] == 1) {
                    // considered to be dead
                    if (count < 2 || count > 3)
                        board[i][j] = -1;
                } else {
                    // considered to be alive
                    if (count == 3)
                        board[i][j] = 2;
                }
            }
        }
        // updating the board wherever -1 or 2 come
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == -1)
                    board[i][j] = 0;
                else if (board[i][j] == 2)
                    board[i][j] = 1;
            }
        }
    }
}
