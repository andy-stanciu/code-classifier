class Solution {

    public void gameOfLife(int[][] board) {
        int r = board.length;
        int c = board[0].length;
        int[] prevRowNewState = new int[c];
        for (int i = 0; i < r; i++) {
            int[] newState = new int[c];
            for (int j = 0; j < c; j++) {
                int liveNeighbors = 0;
                for (int in = Math.max(0, i - 1); in <= Math.min(r - 1, i + 1); in++) {
                    for (int jn = Math.max(0, j - 1); jn <= Math.min(c - 1, j + 1); jn++) {
                        if (i == in && j == jn) {
                            continue;
                        }
                        liveNeighbors += board[in][jn];
                        if (liveNeighbors > 3) {
                            break;
                        }
                    }
                }
                if (board[i][j] == 1) {
                    if (liveNeighbors < 2 || liveNeighbors > 3) {
                        newState[j] = 0;
                    } else {
                        newState[j] = 1;
                    }
                } else if (liveNeighbors == 3) {
                    newState[j] = 1;
                } else {
                    newState[j] = 0;
                }
                if (i != 0 && j != 0) {
                    board[i - 1][j - 1] = prevRowNewState[j - 1];
                }
            }
            if (i != 0) {
                board[i - 1][c - 1] = prevRowNewState[c - 1];
            }
            prevRowNewState = newState;
        }
        for (int j = 0; j < c; j++) {
            board[r - 1][j] = prevRowNewState[j];
        }
    }
}
