class Solution {

    public int check(int i, int j, int[][] board, int row, int col) {
        int count = 0;
        if (i != 0) {
            if (j != 0 && board[i - 1][j - 1] == 1)
                count++;
            if (board[i - 1][j] == 1)
                count++;
            if (j != col - 1 && board[i - 1][j + 1] == 1)
                count++;
        }
        if (j != 0 && board[i][j - 1] == 1)
            count++;
        if (j != col - 1 && board[i][j + 1] == 1)
            count++;
        if (i != row - 1) {
            if (j != 0 && board[i + 1][j - 1] == 1)
                count++;
            if (board[i + 1][j] == 1)
                count++;
            if (j != col - 1 && board[i + 1][j + 1] == 1)
                count++;
        }
        return count;
    }

    public void gameOfLife(int[][] board) {
        int row, col;
        row = board.length;
        col = board[0].length;
        int[][] cboard = new int[row][col];
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                cboard[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if (board[i][j] == 1) {
                    int count = check(i, j, cboard, row, col);
                    if (count == 2 || count == 3)
                        board[i][j] = 1;
                    else if (count < 2)
                        board[i][j] = 0;
                    else if (count > 3)
                        board[i][j] = 0;
                } else {
                    int count = check(i, j, cboard, row, col);
                    if (count == 3)
                        board[i][j] = 1;
                }
            }
        }
    }
}
