class Solution {

    //get neighbors lifes
    private int getLifes(int[][] new_board, int m, int n) {
        int lifes = 0;
        for (int i = m - 1; i < m + 2; i++) {
            for (int j = n - 1; j < n + 2; j++) {
                lifes += new_board[i][j];
            }
        }
        lifes -= new_board[m][n];
        return lifes;
    }

    public void gameOfLife(int[][] board) {
        int m = board.length, n = board[0].length;
        int[][] new_board = new int[m + 2][n + 2];
        //wrap with 0
        for (int i = 1; i < m + 1; i++) {
            for (int j = 1; j < n + 1; j++) {
                new_board[i][j] = board[i - 1][j - 1];
            }
        }
        // update cells
        for (int i = 1; i < m + 1; i++) {
            for (int j = 1; j < n + 1; j++) {
                int lives = getLifes(new_board, i, j);
                if (lives < 2 || lives > 3)
                    board[i - 1][j - 1] = 0;
                else if (lives == 3)
                    board[i - 1][j - 1] = 1;
            }
        }
    }
}
