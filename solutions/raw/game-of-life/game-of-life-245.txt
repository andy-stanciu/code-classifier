class Solution {

    public void gameOfLife(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int[][] nextState = new int[m][n];
        int[] neighbors = { 0, 1, -1 };
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int liveNeighbors = 0;
                for (int x : neighbors) {
                    for (int y : neighbors) {
                        if (!(x == 0 && y == 0)) {
                            int row = i + x;
                            int col = j + y;
                            if ((row >= 0 && row < m) && (col >= 0 && col < n) && (board[row][col] == 1 || board[row][col] == -1)) {
                                liveNeighbors++;
                            }
                        }
                    }
                }
                if ((board[i][j] == 1) && (liveNeighbors < 2 || liveNeighbors > 3)) {
                    nextState[i][j] = -1;
                }
                if (board[i][j] == 0 && liveNeighbors == 3) {
                    nextState[i][j] = 1;
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (nextState[i][j] == -1) {
                    board[i][j] = 0;
                } else if (nextState[i][j] == 1) {
                    board[i][j] = 1;
                }
            }
        }
    }
}
