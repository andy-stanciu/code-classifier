class Solution {

    public void gameOfLife(int[][] board) {
        int[][] newBoard = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int liveNeighbourCount = getLiveNeighbourCount(board, i, j);
                if (liveNeighbourCount == 3 || (board[i][j] == 1 && liveNeighbourCount == 2)) {
                    newBoard[i][j] = 1;
                }
            }
        }
        // Override original with copy
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = newBoard[i][j];
            }
        }
    }

    public int getLiveNeighbourCount(int[][] board, int x, int y) {
        int liveCount = 0;
        for (int i = -1; i <= 1; i++) {
            for (int j = -1; j <= 1; j++) {
                if (i == 0 && j == 0) {
                    // Skip 0,0
                    continue;
                }
                if (x + i >= 0 && x + i < board.length && y + j >= 0 && y + j < board[0].length && board[x + i][y + j] == 1) {
                    liveCount++;
                }
                if (liveCount == 4) {
                    // Optimisation; We only need to know if >3.
                    break;
                }
            }
        }
        return liveCount;
    }
}
