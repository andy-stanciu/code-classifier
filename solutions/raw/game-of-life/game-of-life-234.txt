class Solution {

    public void gameOfLife(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int[][] boardCopy = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) boardCopy[i][j] = board[i][j];
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int live = getLive(i, j, boardCopy);
                if (boardCopy[i][j] == 1) {
                    if (live < 2)
                        board[i][j] = 0;
                    if (live > 3)
                        board[i][j] = 0;
                } else {
                    if (live == 3)
                        board[i][j] = 1;
                }
            }
        }
    }

    public static int getLive(int i, int j, int[][] board) {
        int live = 0;
        int m = board.length;
        int n = board[0].length;
        int[][] offsets = { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, -1 }, { 1, 0 }, { 1, 1 } };
        for (int[] offset : offsets) {
            int row = i + offset[0];
            int col = j + offset[1];
            if ((row >= 0 && row < m) && (col >= 0 && col < n) && (board[row][col] == 1))
                live++;
        }
        return live;
    }
}
