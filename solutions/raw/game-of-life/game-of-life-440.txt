class Solution {

    public void gameOfLife(int[][] board) {
        int[][] tempBoard = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int sum = 0;
                sum += checkNeighbor(board, i + 1, j);
                sum += checkNeighbor(board, i - 1, j);
                sum += checkNeighbor(board, i, j + 1);
                sum += checkNeighbor(board, i, j - 1);
                sum += checkNeighbor(board, i + 1, j + 1);
                sum += checkNeighbor(board, i - 1, j - 1);
                sum += checkNeighbor(board, i - 1, j + 1);
                sum += checkNeighbor(board, i + 1, j - 1);
                updateTempBoard(tempBoard, i, j, sum, board);
            }
        }
        //copy tempBoard to board
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = tempBoard[i][j];
            }
        }
    }

    public int checkNeighbor(int[][] board, int i, int j) {
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || board[i][j] == 0) {
            return 0;
        }
        return 1;
    }

    public void updateTempBoard(int[][] input, int i, int j, int sum, int[][] board) {
        if (sum < 2 && board[i][j] == 1) {
            input[i][j] = 0;
        } else if ((sum == 2 || sum == 3) && board[i][j] == 1) {
            input[i][j] = 1;
        } else if (sum > 3 && board[i][j] == 1) {
            input[i][j] = 0;
        } else if (sum == 3 && board[i][j] == 0) {
            input[i][j] = 1;
        }
    }
}
