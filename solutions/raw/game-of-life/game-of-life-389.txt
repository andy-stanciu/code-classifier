class Solution {

    public void gameOfLife(int[][] board) {
        int n = board.length, m = board[0].length;
        if (n == 1 && m == 1) {
            board[0][0] = 0;
            return;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int neigh = 0;
                // count the neighbours
                if (i != 0 && j != 0) {
                    if (board[i - 1][j - 1] == 1 || board[i - 1][j - 1] == -2)
                        neigh++;
                }
                if (i != 0) {
                    if (board[i - 1][j] == 1 || board[i - 1][j] == -2)
                        neigh++;
                }
                if (i != 0 && j != m - 1) {
                    if (board[i - 1][j + 1] == 1 || board[i - 1][j + 1] == -2)
                        neigh++;
                }
                if (j != m - 1) {
                    if (board[i][j + 1] == 1 || board[i][j + 1] == -2)
                        neigh++;
                }
                if (i != n - 1 && j != m - 1) {
                    if (board[i + 1][j + 1] == 1 || board[i + 1][j + 1] == -2)
                        neigh++;
                }
                if (i != n - 1) {
                    if (board[i + 1][j] == 1 || board[i + 1][j] == -2)
                        neigh++;
                }
                if (i != n - 1 && j != 0) {
                    if (board[i + 1][j - 1] == 1 || board[i + 1][j - 1] == -2)
                        neigh++;
                }
                if (j != 0) {
                    if (board[i][j - 1] == 1 || board[i][j - 1] == -2)
                        neigh++;
                }
                if (neigh == 1) {
                    if (board[i][j] == 1) {
                        board[i][j] = -2;
                    }
                } else if (neigh == 2 || neigh == 3) {
                    if (board[i][j] == 0 && neigh == 3) {
                        board[i][j] = 2;
                    }
                } else if (neigh > 3) {
                    if (board[i][j] == 1) {
                        board[i][j] = -2;
                    }
                } else if (neigh == 0) {
                    if (board[i][j] == 1) {
                        board[i][j] = -2;
                    }
                }
            }
        }
        // convert -2 to 0 and 2 to 1
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == -2) {
                    board[i][j] = 0;
                } else if (board[i][j] == 2) {
                    board[i][j] = 1;
                }
            }
        }
    }
}
