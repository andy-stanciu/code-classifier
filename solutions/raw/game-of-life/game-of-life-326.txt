class Solution {

    public void gameOfLife(int[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == 0) {
                    if (count(board, i, j) == 3)
                        board[i][j] = 3;
                } else if (board[i][j] == 1) {
                    int cnt = count(board, i, j);
                    if (cnt < 2)
                        board[i][j] = -1;
                    else if (cnt > 3)
                        board[i][j] = -1;
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == 3)
                    board[i][j] = 1;
                if (board[i][j] == -1)
                    board[i][j] = 0;
            }
        }
    }

    private int count(int[][] board, int i, int j) {
        int cnt = 0, n = board.length, m = board[0].length;
        if (i > 0 && (board[i - 1][j] == 1 || board[i - 1][j] == -1))
            cnt++;
        if (i < n - 1 && (board[i + 1][j] == 1 || board[i + 1][j] == -1))
            cnt++;
        if (j > 0 && (board[i][j - 1] == 1 || board[i][j - 1] == -1))
            cnt++;
        if (j < m - 1 && (board[i][j + 1] == 1 || board[i][j + 1] == -1))
            cnt++;
        if (i > 0 && j > 0 && (board[i - 1][j - 1] == 1 || board[i - 1][j - 1] == -1))
            cnt++;
        if (i < n - 1 && j < m - 1 && (board[i + 1][j + 1] == 1 || board[i + 1][j + 1] == -1))
            cnt++;
        if (i > 0 && j < m - 1 && (board[i - 1][j + 1] == 1 || board[i - 1][j + 1] == -1))
            cnt++;
        if (i < n - 1 && j > 0 && (board[i + 1][j - 1] == 1 || board[i + 1][j - 1] == -1))
            cnt++;
        return cnt;
    }
}
