class Solution {

    public void gameOfLife(int[][] board) {
        int[][] copy = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                copy[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int liveCount = getLiveCount(i, j, copy);
                if (copy[i][j] == 1 && (liveCount == 2 || liveCount == 3))
                    board[i][j] = 1;
                else if (copy[i][j] == 0 && liveCount == 3)
                    board[i][j] = 1;
                else
                    board[i][j] = 0;
            }
        }
    }

    private int getLiveCount(int i, int j, int[][] board) {
        int count = 0, rl = board.length, cl = board[0].length;
        if (i - 1 >= 0 && j - 1 >= 0 && board[i - 1][j - 1] == 1)
            count++;
        if (i - 1 >= 0 && board[i - 1][j] == 1)
            count++;
        if (i - 1 >= 0 && j + 1 < cl && board[i - 1][j + 1] == 1)
            count++;
        if (j - 1 >= 0 && board[i][j - 1] == 1)
            count++;
        if (j + 1 < cl && board[i][j + 1] == 1)
            count++;
        if (i + 1 < rl && j - 1 >= 0 && board[i + 1][j - 1] == 1)
            count++;
        if (i + 1 < rl && board[i + 1][j] == 1)
            count++;
        if (i + 1 < rl && j + 1 < cl && board[i + 1][j + 1] == 1)
            count++;
        return count;
    }
}
