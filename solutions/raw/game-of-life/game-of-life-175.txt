class Solution {

    public void gameOfLife(int[][] board) {
        int rows = board.length;
        int columns = board[0].length;
        int[][] directions = { { -1, 0 }, { -1, 1 }, { 0, 1 }, { 1, 1 }, { 1, 0 }, { 1, -1 }, { 0, -1 }, { -1, -1 } };
        for (int row = 0; row < rows; row++) {
            for (int col = 0; col < columns; col++) {
                int liveNeighbors = 0;
                for (int[] direction : directions) {
                    int neighborRow = row + direction[0];
                    int neighborCol = col + direction[1];
                    if (neighborRow >= 0 && neighborRow < rows && neighborCol >= 0 && neighborCol < columns) {
                        if (board[neighborRow][neighborCol] == 1 || board[neighborRow][neighborCol] == -1) {
                            liveNeighbors++;
                        }
                    }
                }
                if ((board[row][col] == 1) && (liveNeighbors < 2 || liveNeighbors > 3))
                    board[row][col] = -1;
                else if (board[row][col] == 0 && liveNeighbors == 3)
                    board[row][col] = 2;
            }
        }
        for (int row = 0; row < rows; row++) {
            for (int col = 0; col < columns; col++) {
                if (board[row][col] == -1)
                    board[row][col] = 0;
                else if (board[row][col] == 2)
                    board[row][col] = 1;
            }
        }
    }
}
