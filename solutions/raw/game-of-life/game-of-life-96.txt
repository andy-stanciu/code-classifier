class Solution {

    public void gameOfLife(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int[][] neighbors = { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, -1 }, { 1, 0 }, { 1, 1 } };
        int o = neighbors.length;
        int[][] ans = new int[m][n];
        int count = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] == 1) {
                    for (int k = 0; k < o; k++) {
                        int x = i + neighbors[k][0];
                        int y = j + neighbors[k][1];
                        if (x > -1 && y > -1 && x < m && y < n) {
                            if (board[x][y] == 1) {
                                count++;
                            }
                        }
                    }
                    if (count >= 2 && count <= 3) {
                        ans[i][j] = 1;
                    } else {
                        ans[i][j] = 0;
                    }
                    count = 0;
                }
                if (board[i][j] == 0) {
                    for (int k = 0; k < o; k++) {
                        int x = i + neighbors[k][0];
                        int y = j + neighbors[k][1];
                        if (x > -1 && y > -1 && x < m && y < n) {
                            if (board[x][y] == 1) {
                                count++;
                            }
                        }
                    }
                    if (count == 3) {
                        ans[i][j] = 1;
                    } else {
                        ans[i][j] = 0;
                    }
                    count = 0;
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }
}
