class Solution {

    public void gameOfLife(int[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] += countOne(board, i, j) * 10;
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int curr = board[i][j];
                if (curr % 10 == 1) {
                    if (curr / 10 == 2 || curr / 10 == 3)
                        board[i][j] = 1;
                    else
                        board[i][j] = 0;
                } else {
                    if (curr == 30)
                        board[i][j] = 1;
                    else
                        board[i][j] = 0;
                }
            }
        }
    }

    private int countOne(int[][] board, int x, int y) {
        int cnt = 0;
        int[][] dir = new int[][] { { -1, 0 }, { 0, -1 }, { 0, 1 }, { 1, 0 }, { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 } };
        for (int[] d : dir) {
            int newx = x + d[0];
            int newy = y + d[1];
            if (newx < 0 || newx >= board.length || newy < 0 || newy >= board[0].length)
                continue;
            if (board[newx][newy] % 10 == 1)
                cnt++;
        }
        return cnt;
    }
}
