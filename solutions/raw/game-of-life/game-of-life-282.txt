class Solution {

    static int[][] ans;

    public void gameOfLife(int[][] board) {
        ans = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int count = check(board, i, j);
                if (board[i][j] == 1) {
                    if (count < 2 || count > 3) {
                        ans[i][j] = 0;
                    } else {
                        ans[i][j] = 1;
                    }
                } else {
                    if (count == 3) {
                        ans[i][j] = 1;
                    } else {
                        //ans[i][j]=board[i][j];
                        ans[i][j] = 0;
                    }
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }

    private static int check(int[][] board, int i, int j) {
        // TODO Auto-generated method stub
        int count = 0;
        //east
        if (j > 0) {
            // System.out.println("east "+board[i][j-1]);
            count += board[i][j - 1];
        }
        //west
        if (j < board[0].length - 1) {
            // System.out.println("west "+board[i][j+1]);
            count += board[i][j + 1];
        }
        //north
        if (i < board.length - 1) {
            // System.out.println("north "+board[i+1][j]);
            count += board[i + 1][j];
        }
        //south
        if (i > 0) {
            // System.out.println("south "+board[i-1][j]);
            count += board[i - 1][j];
        }
        //south-east
        if (j > 0 && i > 0) {
            // System.out.println("south-east "+board[i-1][j-1]);
            count += board[i - 1][j - 1];
        }
        //south-west
        if (j < board[0].length - 1 && i > 0) {
            // System.out.println("south-west "+board[i-1][j+1]);
            count += board[i - 1][j + 1];
        }
        //north-west
        if (j < board[0].length - 1 && i < board.length - 1) {
            // System.out.println("north-west "+board[i+1][j+1]);
            count += board[i + 1][j + 1];
        }
        //north-east
        if (j > 0 && i < board.length - 1) {
            // System.out.println("north-east "+board[i+1][j-1]);
            count += board[i + 1][j - 1];
        }
        // System.out.println("--------------------------count "+count);
        return count;
    }
}
