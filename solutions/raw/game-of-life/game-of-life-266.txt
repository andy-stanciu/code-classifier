class Solution {

    public void gameOfLife(int[][] board) {
        int[][] result = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                result[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == 1) {
                    int alive = checkAlive(board, i, j, board.length - 1, board[i].length - 1);
                    if (alive < 2 || alive > 3) {
                        result[i][j] = 0;
                    }
                } else {
                    int alive = checkAlive(board, i, j, board.length - 1, board[i].length - 1);
                    if (alive == 3)
                        result[i][j] = 1;
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                board[i][j] = result[i][j];
            }
        }
    }

    public static int checkAlive(int[][] board, int i, int j, int m, int n) {
        int alive = 0;
        // Temporary variables for increments and decrements
        int incI = i + 1;
        int incJ = j + 1;
        int decI = i - 1;
        int decJ = j - 1;
        // East
        if (isValid(i, incJ, m, n, board))
            alive++;
        // East-South
        if (isValid(incI, incJ, m, n, board))
            alive++;
        // South
        if (isValid(incI, j, m, n, board))
            alive++;
        // South-West
        if (isValid(incI, decJ, m, n, board))
            alive++;
        // West
        if (isValid(i, decJ, m, n, board))
            alive++;
        // North-West
        if (isValid(decI, decJ, m, n, board))
            alive++;
        // North
        if (isValid(decI, j, m, n, board))
            alive++;
        //North-East
        if (isValid(decI, incJ, m, n, board))
            alive++;
        return alive;
    }

    public static boolean isValid(int i, int j, int m, int n, int[][] board) {
        if (i < 0 || j < 0 || i > m || j > n) {
            return false;
        }
        return board[i][j] == 1;
    }
}
