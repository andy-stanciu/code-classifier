class Solution {

    private final int[] dx = { 1, -1, 0, 0, 1, 1, -1, -1 };

    private final int[] dy = { 0, 0, 1, -1, 1, -1, 1, -1 };

    public void gameOfLife(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int liveNeigh = 0, deadNeigh = 0;
                for (int x = 0; x < 8; x++) {
                    int r = i + dy[x];
                    int c = j + dx[x];
                    if (r >= 0 && r < n && c >= 0 && c < m) {
                        if (board[r][c] == 1 || board[r][c] == 3)
                            liveNeigh++;
                        if (board[r][c] == 0 || board[r][c] == 2)
                            deadNeigh++;
                    }
                }
                if (board[i][j] == 1) {
                    if (liveNeigh < 2) {
                        //dead from live
                        board[i][j] = 3;
                    }
                    if (liveNeigh > 3) {
                        //dead from live
                        board[i][j] = 3;
                    }
                } else {
                    if (liveNeigh == 3) {
                        //live from dead
                        board[i][j] = 2;
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == 2)
                    board[i][j] = 1;
                if (board[i][j] == 3)
                    board[i][j] = 0;
            }
        }
    }
}
