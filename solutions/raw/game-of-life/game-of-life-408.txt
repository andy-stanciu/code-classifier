class Solution {

    public void gameOfLife(int[][] board) {
        for (int row = 0; row < board.length; row++) {
            for (int column = 0; column < board[row].length; column++) {
                board[row][column] += 10;
            }
        }
        for (int row = 0; row < board.length; row++) {
            for (int column = 0; column < board[row].length; column++) {
                int currentState = helper(board[row][column]);
                int nextState = nextState(board, row, column, currentState);
                board[row][column] = (board[row][column] * 10) + nextState;
            }
        }
        for (int row = 0; row < board.length; row++) {
            for (int column = 0; column < board[row].length; column++) {
                board[row][column] = board[row][column] % 10;
            }
        }
    }

    // provide the next state of every element
    public int nextState(int[][] board, int row, int column, int currentState) {
        int[][] direction = new int[][] { { 0, -1 }, { 0, 1 }, { -1, 0 }, { 1, 0 }, { -1, -1 }, { -1, 1 }, { 1, 1 }, { 1, -1 } };
        int zero = 0;
        int one = 0;
        for (int x = 0; x < direction.length; x++) {
            if (row + direction[x][0] >= 0 && row + direction[x][0] < board.length && column + direction[x][1] >= 0 && column + direction[x][1] < board[row].length) {
                int temp = helper(board[row + direction[x][0]][column + direction[x][1]]);
                if (temp == 0) {
                    zero += 1;
                } else {
                    one += 1;
                }
            }
        }
        if (currentState == 1) {
            if (one < 2 || one > 3)
                return 0;
            return 1;
        } else {
            if (one == 3)
                return 1;
            return 0;
        }
    }

    public int helper(int value) {
        int temp = -1;
        if (value < 100) {
            temp = value == 10 ? 0 : 1;
        } else {
            temp = value / 10 == 10 ? 0 : 1;
        }
        return temp;
    }
}
