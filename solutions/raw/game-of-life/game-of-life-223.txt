class Solution {

    public void gameOfLife(int[][] board) {
        List<int[]> flips = new ArrayList<>();
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int neighbors = ll(board, i, j);
                if (board[i][j] == 1 && (neighbors < 2 || neighbors > 3)) {
                    flips.add(new int[] { i, j });
                } else if (board[i][j] == 0 && neighbors == 3) {
                    flips.add(new int[] { i, j });
                }
            }
        }
        for (int[] flip : flips) {
            board[flip[0]][flip[1]] = (board[flip[0]][flip[1]] + 1) % 2;
        }
    }

    private int ll(int[][] board, int i, int j) {
        int res = 0;
        res += (i > 0) ? board[i - 1][j] : 0;
        res += (i > 0 && j > 0) ? board[i - 1][j - 1] : 0;
        res += (i > 0 && j < board[0].length - 1) ? board[i - 1][j + 1] : 0;
        res += (j > 0) ? board[i][j - 1] : 0;
        res += (j < board[0].length - 1) ? board[i][j + 1] : 0;
        res += (i < board.length - 1) ? board[i + 1][j] : 0;
        res += (i < board.length - 1 && j > 0) ? board[i + 1][j - 1] : 0;
        res += (i < board.length - 1 && j < board[0].length - 1) ? board[i + 1][j + 1] : 0;
        return res;
    }
}
