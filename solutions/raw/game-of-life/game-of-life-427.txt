class Solution {

    private static final int DEAD = 0;

    private static final int ALIVE = 1;

    private static final int[][] DIRECTIONS_MATRIX = { // UP
    // DOWN
    // RIGHT
    // LEFT
    // NE
    // NW
    // SE
    // SW
    { 0, -1 }, { 0, 1 }, { 1, 0 }, { -1, 0 }, { 1, -1 }, { -1, -1 }, { 1, 1 }, { -1, 1 } };

    public void gameOfLife(int[][] board) {
        if (board == null || board.length == 0) {
            return;
        }
        int[][] tempBoard = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int numberOfAliveNeighbors = findNumberOfAliveNeighbors(board, i, j);
                if (board[i][j] == ALIVE) {
                    handleLiveCellScenarios(tempBoard, numberOfAliveNeighbors, i, j);
                } else {
                    handleDeadCellScenarios(tempBoard, numberOfAliveNeighbors, i, j);
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = tempBoard[i][j];
            }
        }
    }

    private int findNumberOfAliveNeighbors(int[][] board, int xCoordinate, int yCoordinate) {
        int numberOfAliveNeighbors = 0;
        for (int[] direction : DIRECTIONS_MATRIX) {
            int newXCoordinate = xCoordinate + direction[0];
            int newYCoordinate = yCoordinate + direction[1];
            if (isNeighborAlive(board, newXCoordinate, newYCoordinate)) {
                numberOfAliveNeighbors++;
            }
        }
        return numberOfAliveNeighbors;
    }

    private boolean isNeighborAlive(int[][] board, int xCoordinate, int yCoordinate) {
        return xCoordinate < board.length && xCoordinate >= 0 && yCoordinate < board[0].length && yCoordinate >= 0 && board[xCoordinate][yCoordinate] == ALIVE;
    }

    private void handleLiveCellScenarios(int[][] board, int numberOfAliveNeighbors, int xCoordinate, int yCoordinate) {
        if (numberOfAliveNeighbors < 2 || numberOfAliveNeighbors > 3) {
            board[xCoordinate][yCoordinate] = DEAD;
        } else {
            board[xCoordinate][yCoordinate] = ALIVE;
        }
    }

    private void handleDeadCellScenarios(int[][] board, int numberOfAliveNeighbors, int xCoordinate, int yCoordinate) {
        if (numberOfAliveNeighbors == 3) {
            board[xCoordinate][yCoordinate] = ALIVE;
        }
    }
}
