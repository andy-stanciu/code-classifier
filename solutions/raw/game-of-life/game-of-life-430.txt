class Solution {

    public void gameOfLife(int[][] board) {
        int R = board.length;
        int C = board[0].length;
        int[][] temp = new int[R][C];
        int[][] pos = { { 0, 1 }, { 0, -1 }, { 1, 0 }, { -1, 0 }, { 1, 1 }, { -1, -1 }, { -1, 1 }, { 1, -1 } };
        for (int i = 0; i < R; i++) {
            for (int j = 0; j < C; j++) {
                temp[i][j] = board[i][j];
            }
        }
        int countOfLiveNeighbour;
        for (int i = 0; i < R; i++) {
            for (int j = 0; j < C; j++) {
                countOfLiveNeighbour = 0;
                for (int[] k : pos) {
                    countOfLiveNeighbour += checkNeighbour(i + k[0], j + k[1], R, C, temp);
                }
                if (temp[i][j] == 1 && countOfLiveNeighbour < 2) {
                    board[i][j] = 0;
                } else if (temp[i][j] == 1 && countOfLiveNeighbour >= 2 && countOfLiveNeighbour <= 3) {
                    continue;
                } else if (temp[i][j] == 1 && countOfLiveNeighbour > 3) {
                    board[i][j] = 0;
                } else if (temp[i][j] == 0 && countOfLiveNeighbour == 3) {
                    board[i][j] = 1;
                }
            }
        }
    }

    public int checkNeighbour(int i, int j, int R, int C, int[][] temp) {
        if (i < 0 || j < 0 || i >= R || j >= C || temp[i][j] == 0)
            return 0;
        else
            return 1;
    }
}
