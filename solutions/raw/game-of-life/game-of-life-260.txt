class Solution {

    public void gameOfLife(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        boolean[][] changed = new boolean[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int count = 0;
                if (i > 0 && ((board[i - 1][j] == 1 && !changed[i - 1][j]) || (board[i - 1][j] == 0 && changed[i - 1][j]))) {
                    count++;
                }
                if (j > 0 && ((board[i][j - 1] == 1 && !changed[i][j - 1]) || (board[i][j - 1] == 0 && changed[i][j - 1]))) {
                    count++;
                }
                if (i > 0 && j > 0 && ((board[i - 1][j - 1] == 1 && !changed[i - 1][j - 1]) || (board[i - 1][j - 1] == 0 && changed[i - 1][j - 1]))) {
                    count++;
                }
                if (i < m - 1 && board[i + 1][j] == 1) {
                    count++;
                }
                if (j < n - 1 && board[i][j + 1] == 1) {
                    count++;
                }
                if (i < m - 1 && j < n - 1 && board[i + 1][j + 1] == 1) {
                    count++;
                }
                if (i < m - 1 && j > 0 && board[i + 1][j - 1] == 1) {
                    count++;
                }
                if (i > 0 && j < n - 1 && ((board[i - 1][j + 1] == 1 && !changed[i - 1][j + 1]) || (board[i - 1][j + 1] == 0 && changed[i - 1][j + 1]))) {
                    count++;
                }
                if (board[i][j] == 1 && (count < 2 || count > 3)) {
                    changed[i][j] = true;
                    board[i][j] = 0;
                } else if (board[i][j] == 0 && count == 3) {
                    changed[i][j] = true;
                    board[i][j] = 1;
                }
            }
        }
    }
}
