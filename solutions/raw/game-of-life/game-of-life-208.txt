class Solution {

    public void gameOfLife(int[][] board) {
        int rows = board.length;
        int cols = board[0].length;
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                int neighbours = countNeightbours(board, i, j);
                if (neighbours > 0)
                    board[i][j] = board[i][j] == 0 ? neighbours * -1 : neighbours;
            }
        }
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (board[i][j] == 2 || board[i][j] == 3 || board[i][j] == -3)
                    board[i][j] = 1;
                else
                    board[i][j] = 0;
            }
        }
    }

    private int getValue(int[][] board, int i, int j) {
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length)
            return 0;
        if (board[i][j] > 0)
            return 1;
        return 0;
    }

    private int countNeightbours(int[][] board, int i, int j) {
        return getValue(board, i - 1, j - 1) + getValue(board, i - 1, j) + getValue(board, i - 1, j + 1) + getValue(board, i, j - 1) + getValue(board, i, j + 1) + getValue(board, i + 1, j - 1) + getValue(board, i + 1, j) + getValue(board, i + 1, j + 1);
    }
}
