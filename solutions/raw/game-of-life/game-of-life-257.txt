class Solution {

    public void gameOfLife(int[][] arr) {
        int m = arr.length;
        int n = arr[0].length;
        int count = 0;
        int[][] result = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                count = 0;
                if (isValid(i - 1, j, m, n)) {
                    if (arr[i - 1][j] == 1)
                        count++;
                }
                if (isValid(i + 1, j, m, n)) {
                    if (arr[i + 1][j] == 1)
                        count++;
                }
                if (isValid(i - 1, j - 1, m, n)) {
                    if (arr[i - 1][j - 1] == 1)
                        count++;
                }
                if (isValid(i - 1, j + 1, m, n)) {
                    if (arr[i - 1][j + 1] == 1)
                        count++;
                }
                if (isValid(i + 1, j + 1, m, n)) {
                    if (arr[i + 1][j + 1] == 1)
                        count++;
                }
                if (isValid(i + 1, j - 1, m, n)) {
                    if (arr[i + 1][j - 1] == 1)
                        count++;
                }
                if (isValid(i, j - 1, m, n)) {
                    if (arr[i][j - 1] == 1)
                        count++;
                }
                if (isValid(i, j + 1, m, n)) {
                    if (arr[i][j + 1] == 1)
                        count++;
                }
                result[i][j] = count;
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (arr[i][j] == 1) {
                    if (result[i][j] > 3 || result[i][j] < 2)
                        arr[i][j] = 0;
                } else {
                    if (result[i][j] == 3)
                        arr[i][j] = 1;
                }
                System.out.print(result[i][j] + " ");
            }
        }
    }

    public boolean isValid(int i, int j, int m, int n) {
        if ((i < m) && (j < n) && (i > -1) && (j > -1))
            return true;
        return false;
    }
}
