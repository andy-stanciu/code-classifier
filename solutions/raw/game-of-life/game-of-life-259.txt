class Solution {

    public void gameOfLife(int[][] mat) {
        int m = mat.length;
        int n = mat[0].length;
        int[][] ans = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int count = getCountCell(mat, i, j);
                if (mat[i][j] == 1) {
                    if (count < 2)
                        ans[i][j] = 0;
                    else if (count == 2 || count == 3)
                        ans[i][j] = 1;
                    else
                        ans[i][j] = 0;
                } else {
                    if (count == 3)
                        ans[i][j] = 1;
                    else
                        ans[i][j] = 0;
                }
            }
        }
        copyMatrix(mat, ans);
    }

    public int getCountCell(int[][] mat, int row, int col) {
        int m = mat.length;
        int n = mat[0].length;
        int ans = 0;
        for (int i = row - 1; i < row + 2; i++) {
            for (int j = col - 1; j < col + 2; j++) {
                if (!(i == row && j == col) && (i >= 0 && i < m && j >= 0 && j < n)) {
                    ans += mat[i][j];
                }
            }
        }
        return ans;
    }

    public void copyMatrix(int[][] mat, int[][] ans) {
        int m = mat.length;
        int n = mat[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                mat[i][j] = ans[i][j];
            }
        }
    }
}
