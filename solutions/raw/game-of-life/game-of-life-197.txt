class Solution {

    public void gameOfLife(int[][] board) {
        int row = board.length;
        int col = board[0].length;
        int[][] dp = new int[row][col];
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                int surr = 0;
                if (i - 1 >= 0 && board[i - 1][j] == 1) {
                    surr++;
                }
                if (i - 1 >= 0 && j + 1 <= col - 1 && board[i - 1][j + 1] == 1) {
                    surr++;
                }
                if (i - 1 >= 0 && j - 1 >= 0 && board[i - 1][j - 1] == 1) {
                    surr++;
                }
                if (j - 1 >= 0 && board[i][j - 1] == 1) {
                    surr++;
                }
                if (j + 1 <= col - 1 && board[i][j + 1] == 1) {
                    surr++;
                }
                if (i + 1 <= row - 1 && board[i + 1][j] == 1) {
                    surr++;
                }
                if (i + 1 <= row - 1 && j - 1 >= 0 && board[i + 1][j - 1] == 1) {
                    surr++;
                }
                if (i + 1 <= row - 1 && j + 1 < col && board[i + 1][j + 1] == 1) {
                    surr++;
                }
                if (board[i][j] == 1 && surr < 2) {
                    dp[i][j] = 0;
                }
                if (board[i][j] == 1 && surr == 2 || surr == 3) {
                    dp[i][j] = 1;
                }
                if (board[i][j] == 1 && surr > 3) {
                    dp[i][j] = 0;
                }
                if (board[i][j] == 0 && surr == 3) {
                    dp[i][j] = 1;
                }
            }
        }
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                board[i][j] = dp[i][j];
            }
        }
    }
}
