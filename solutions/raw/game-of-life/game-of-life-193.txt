class Solution {

    public void gameOfLife(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        int[][] board2 = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                board2[i][j] = board[i][j];
            }
        }
        int[][] dirs = new int[][] { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, 1 }, { 1, 1 }, { 1, 0 }, { 1, -1 }, { 0, -1 } };
        for (int row = 0; row < n; row++) {
            for (int col = 0; col < m; col++) {
                int val = board[row][col];
                int liveNeighbourCount = 0;
                for (int count = 0; count < 8; count++) {
                    int rowDash = row + dirs[count][0];
                    int colDash = col + dirs[count][1];
                    if (rowDash >= 0 && rowDash < n && colDash >= 0 && colDash < m && board[rowDash][colDash] == 1) {
                        liveNeighbourCount++;
                    }
                }
                if (val == 0) {
                    if (liveNeighbourCount == 3) {
                        board2[row][col] = 1;
                    }
                } else {
                    if (liveNeighbourCount < 2) {
                        board2[row][col] = 0;
                    } else if (liveNeighbourCount > 3) {
                        board2[row][col] = 0;
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                board[i][j] = board2[i][j];
            }
        }
    }
}
