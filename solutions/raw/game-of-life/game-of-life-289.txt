class Solution {

    int n;

    int m;

    public void gameOfLife(int[][] board) {
        n = board.length;
        m = board[0].length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int c = count(board, i, j);
                if ((board[i][j]) % 2 == 0) {
                    if (c == 3)
                        board[i][j] = 2;
                } else {
                    if (c < 2)
                        board[i][j] = 3;
                    else if (c > 3)
                        board[i][j] = 3;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == 3)
                    board[i][j] = 0;
                else if (board[i][j] == 2)
                    board[i][j] = 1;
            }
        }
    }

    int count(int[][] board, int i, int j) {
        int c = 0;
        int[] di = { -1, 1, 0, 0, -1, 1, -1, 1 };
        int[] dj = { 0, 0, -1, 1, -1, -1, 1, 1 };
        for (int k = 0; k < 8; k++) {
            int newi = i + di[k];
            int newj = j + dj[k];
            if (isAllowed(newi, newj) && (board[newi][newj]) % 2 == 1)
                c++;
        }
        return c;
    }

    boolean isAllowed(int i, int j) {
        return i >= 0 && i < n && j >= 0 && j < m;
    }
}
