class Solution {

    public void gameOfLife(int[][] board) {
        boolean[][] flag = new boolean[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == 1) {
                    flag[i][j] = true;
                } else {
                    flag[i][j] = false;
                }
            }
        }
        checkAndReplace(board, flag);
    }

    static void checkAndReplace(int[][] board, boolean[][] flag) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (isValid(i, j, flag)) {
                    board[i][j] = 1;
                } else
                    board[i][j] = 0;
            }
        }
    }

    static boolean isValid(int i, int j, boolean[][] flag) {
        int count1 = 0;
        if (i - 1 >= 0 && j >= 0 && i - 1 < flag.length && j < flag[0].length && flag[i - 1][j]) {
            count1 += 1;
        }
        if (i >= 0 && j + 1 >= 0 && i < flag.length && j + 1 < flag[0].length && flag[i][j + 1]) {
            count1 += 1;
        }
        if (i + 1 >= 0 && j >= 0 && i + 1 < flag.length && j < flag[0].length && flag[i + 1][j]) {
            count1 += 1;
        }
        if (i >= 0 && j - 1 >= 0 && i < flag.length && j - 1 < flag[0].length && flag[i][j - 1]) {
            count1 += 1;
        }
        if (i - 1 >= 0 && j - 1 >= 0 && i - 1 < flag.length && j - 1 < flag[0].length && flag[i - 1][j - 1]) {
            count1 += 1;
        }
        if (i - 1 >= 0 && j + 1 >= 0 && i - 1 < flag.length && j + 1 < flag[0].length && flag[i - 1][j + 1]) {
            count1 += 1;
        }
        if (i + 1 >= 0 && j - 1 >= 0 && i + 1 < flag.length && j - 1 < flag[0].length && flag[i + 1][j - 1]) {
            count1 += 1;
        }
        if (i + 1 >= 0 && j + 1 >= 0 && i + 1 < flag.length && j + 1 < flag[0].length && flag[i + 1][j + 1]) {
            count1 += 1;
        }
        if (flag[i][j] && (count1 == 3 || count1 == 2))
            return true;
        if (!flag[i][j] && count1 == 3)
            return true;
        return false;
    }
}
