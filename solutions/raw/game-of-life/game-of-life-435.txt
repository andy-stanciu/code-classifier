class Solution {

    public int check(int i, int j, int[][] board) {
        int[] d = { 0, 1, 1, 0, -1, -1, 1, -1, 0 };
        int nz = 0, no = 0;
        for (int k = 0; k < d.length - 1; k++) {
            int row = i + d[k];
            int col = j + d[k + 1];
            if (row < board.length && row >= 0 && col < board[0].length && col >= 0) {
                if (board[row][col] == 0)
                    nz++;
                else
                    no++;
            }
        }
        if (board[i][j] == 1 && no < 2)
            return 0;
        else if (board[i][j] == 1 && no == 2 || no == 3)
            return 1;
        else if (board[i][j] == 1 && no > 3)
            return 0;
        else if (board[i][j] == 0 && no == 3)
            return 1;
        return 0;
    }

    public void gameOfLife(int[][] board) {
        int[][] ans = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                ans[i][j] = check(i, j, board);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }
}
