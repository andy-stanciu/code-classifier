class Solution {

    public String convert(String s, int numRows) {
        // Edge case: no zigzag needed for one row
        if (numRows == 1)
            return s;
        List<StringBuilder> rows = new ArrayList<>();
        for (int i = 0; i < Math.min(numRows, s.length()); i++) {
            // Create rows
            rows.add(new StringBuilder());
        }
        int currRow = 0;
        boolean goingDown = false;
        // Build the zigzag pattern
        for (char c : s.toCharArray()) {
            // Add character to the current row
            rows.get(currRow).append(c);
            if (currRow == 0 || currRow == numRows - 1) {
                // Reverse direction when top or bottom row is reached
                goingDown = !goingDown;
            }
            // Move to the next row
            currRow += goingDown ? 1 : -1;
        }
        // Combine all rows into the final string
        StringBuilder result = new StringBuilder();
        for (StringBuilder row : rows) {
            result.append(row);
        }
        return result.toString();
    }
}
