class Solution {

    public String convert(String s, int numRows) {
        // Edge case: If only 1 row, return the string as is
        if (numRows == 1) {
            return s;
        }
        // Create an array of StringBuilder to store each row\'s characters
        StringBuilder[] rows = new StringBuilder[numRows];
        for (int i = 0; i < numRows; i++) {
            rows[i] = new StringBuilder();
        }
        // Current row index
        int i = 0;
        // Direction: 1 means down, -1 means up
        int d = 1;
        // Traverse the input string
        for (char c : s.toCharArray()) {
            // Append character to the current row
            rows[i].append(c);
            if (i == 0) {
                // Change direction to down
                d = 1;
            } else if (i == numRows - 1) {
                // Change direction to up
                d = -1;
            }
            // Move to the next row based on the direction
            i += d;
        }
        // Concatenate all rows into the final result
        StringBuilder result = new StringBuilder();
        for (StringBuilder row : rows) {
            result.append(row);
        }
        return result.toString();
    }
}
