class Solution {

    public String convert(String s, int numRows) {
        // Base case
        // If there is only one row then
        if (numRows == 1) {
            return s;
        }
        // For Time complexity we use StringBuilder
        StringBuilder sb = new StringBuilder();
        // Now Moving Toward Question
        // Now we iterate along rows
        for (int i = 0; i < numRows; i++) {
            int row = i;
            // For moving downward
            int south = 2 * (numRows - 1 - i);
            // For moving upward
            int north = 2 * i;
            // For checking direction
            boolean gosouth = true;
            while (row < s.length()) {
                sb.append(s.charAt(row));
                // For first row we only move south so,
                if (i == 0) {
                    row += south;
                } else // For Last row we only move towards north
                if (i == numRows - 1) {
                    row += north;
                } else // And foe middle rows we move north and south both
                {
                    if (gosouth) {
                        row += south;
                    } else
                        row += north;
                }
                gosouth = !gosouth;
            }
        }
        return sb.toString();
    }
}
