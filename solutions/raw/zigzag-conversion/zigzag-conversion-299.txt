class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1) {
            return s;
        }
        char[] ans = new char[s.length()];
        int index = 0;
        int topInc = 2 * (numRows - 1);
        for (int i = 0; i < numRows; i++) {
            if (i == 0 || i == numRows - 1) {
                int in = i;
                while (in < s.length() && index < s.length()) {
                    ans[index++] = s.charAt(in);
                    in += topInc;
                }
            } else {
                int inc = topInc - 2 * (i);
                int diagIn = i + inc;
                int in = i;
                while ((in < s.length() || diagIn < s.length()) && index < s.length()) {
                    if (in < s.length())
                        ans[index++] = s.charAt(in);
                    if (diagIn < s.length())
                        ans[index++] = s.charAt(diagIn);
                    in += topInc;
                    diagIn += topInc;
                }
            }
        }
        return new String(ans);
    }
}
