class Solution {

    public String convert(String s, int n) {
        if (n == 1)
            return s;
        if (s.length() < n) {
            return s;
        }
        LinkedList<LinkedList<Character>> temp = new LinkedList<LinkedList<Character>>();
        int k = 0;
        int l = 0;
        for (int i = 0; i < n; i++) {
            LinkedList<Character> t = new LinkedList<>();
            t.add(s.charAt(i));
            temp.add(t);
            k++;
            l++;
        }
        boolean dir = false;
        int m = temp.size() - 1;
        while (k < s.length()) {
            if (dir == false && m - 1 >= 0) {
                m--;
                temp.get(m).add(s.charAt(k));
                if (m - 1 < 0)
                    dir = true;
            } else if (dir == true && m + 1 < temp.size()) {
                m++;
                temp.get(m).add(s.charAt(k));
                if (m + 1 >= n)
                    dir = false;
            }
            k++;
        }
        StringBuilder res = new StringBuilder();
        for (int i = 0; i < temp.size(); i++) {
            for (int j = 0; j < temp.get(i).size(); j++) {
                res.append(temp.get(i).get(j));
            }
        }
        return res.toString();
    }
}
