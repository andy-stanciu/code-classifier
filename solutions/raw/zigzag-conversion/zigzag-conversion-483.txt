class Solution {

    public String convert(String s, int numRows) {
        int n = s.length();
        StringBuffer[] arr = new StringBuffer[numRows];
        for (int i = 0; i < numRows; i++) arr[i] = new StringBuffer();
        int i = 0;
        while (i < n) {
            /// verticaly downword
            for (int ind = 0; ind < numRows && i < n; ind++) {
                arr[ind].append(s.charAt(i++));
            }
            /// bent upword
            for (int ind = numRows - 2; ind > 0 && i < n; ind--) {
                arr[ind].append(s.charAt(i++));
            }
        }
        StringBuffer ans = new StringBuffer();
        for (StringBuffer el : arr) {
            ans.append(el);
        }
        return ans.toString();
    }
}
// class Solution {
//     public String convert(String s, int numRows) {
//         char [][]ans=new char[numRows][s.length()];
//         int cur=0;
//         int row=0;
//         int col=0;
//         while(cur<s.length())
//         {
//             while(row<numRows && cur<s.length())
//             {
//                 ans[row++][col]=s.charAt(cur++);
//             }
//             row=Math.max(0,row-2);
//             while(row>0 && cur<s.length())
//             {
//                 ans[row--][++col]=s.charAt(cur++);
//             }
//             col++;
//         }
//         String str="";
//         for(int i=0;i<numRows;i++)
//         {
//             for(int j=0;j<s.length();j++)
//             {
//                 if(ans[i][j]!=0 )
//                  str+=ans[i][j];
//             }
//         }
//         return str;
//     }
// }
