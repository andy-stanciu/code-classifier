class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1 || numRows > s.length())
            return s;
        int l = s.length();
        StringBuilder mid = new StringBuilder("");
        for (int i = 1; i < numRows - 1; i++) {
            mid.append(s.charAt(i));
            int index = i;
            int flip = 0;
            while (index < l) {
                index += (flip % 2 == 0) ? 2 * (numRows - 1) - 2 * i : 2 * i;
                if (index < s.length())
                    mid.append(s.charAt(index));
                flip += 1;
            }
        }
        int i = 0;
        StringBuilder edge = new StringBuilder("");
        for (int k = 0; k < 2; k++) {
            edge.append(s.charAt(i));
            while (i < l) {
                i += 2 * (numRows - 1);
                if (i < l)
                    edge.append(s.charAt(i));
                else
                    break;
            }
            if (k == 0) {
                edge.append(mid);
                i = numRows - 1;
            }
        }
        return edge.toString();
    }
}
