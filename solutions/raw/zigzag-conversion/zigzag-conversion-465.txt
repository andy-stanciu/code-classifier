class Solution {

    public String convert(String s, int numRows) {
        int i, j, n = s.length();
        if (numRows == 1)
            return s;
        StringBuilder str = new StringBuilder();
        if (numRows == 2) {
            for (i = 0; i < n; i += 2) {
                str.append(String.valueOf(s.charAt(i)));
            }
            for (i = 1; i < n; i += 2) {
                str.append(String.valueOf(s.charAt(i)));
            }
            return str.toString();
        }
        List<List<Character>> ans = new ArrayList<>();
        for (i = 0; i < numRows; i++) {
            ans.add(new ArrayList<>());
        }
        i = 0;
        while (i < n) {
            for (j = 0; j < numRows; j++) {
                if (i >= n)
                    break;
                ans.get(j).add(s.charAt(i));
                i++;
            }
            for (j = numRows - 2; j >= 1; j--) {
                if (i >= n)
                    break;
                ans.get(j).add(s.charAt(i));
                i++;
            }
        }
        for (i = 0; i < numRows; i++) {
            List<Character> list = ans.get(i);
            for (j = 0; j < list.size(); j++) {
                str.append(String.valueOf(list.get(j)));
            }
        }
        return str.toString();
    }
}
