class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1 || s.length() <= numRows) {
            return s;
        }
        int cols = (int) Math.ceil((double) s.length() / 2);
        String[][] arr = new String[numRows][cols];
        int k = 0;
        int l = 0;
        int i = 0;
        while (k < s.length()) {
            arr[i][l] = String.valueOf(s.charAt(k));
            k++;
            if (i == numRows - 1) {
                // move to the next column
                l++;
                // move to the previous row
                i--;
                // Move diagonally upward until reaching the first row
                while (i > 0 && k < s.length()) {
                    arr[i][l] = String.valueOf(s.charAt(k));
                    i--;
                    l++;
                    k++;
                }
            } else {
                // Move to the next row
                i++;
            }
        }
        String str = "";
        for (int m = 0; m < numRows; m++) {
            for (int j = 0; j < cols; j++) {
                if (arr[m][j] != null) {
                    str += arr[m][j];
                }
            }
        }
        return str;
    }
}
