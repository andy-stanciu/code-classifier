class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1)
            return s;
        List<List<String>> listOfListStr = new ArrayList<>();
        for (int i = 0; i < numRows; i++) {
            List<String> lst = new ArrayList<>();
            listOfListStr.add(lst);
        }
        int n = s.length();
        int pointerIdx = numRows - 1;
        for (int i = 0; i < n; ) {
            if (pointerIdx == numRows - 1) {
                for (int j = 0; j < numRows; j++) {
                    if (i + j + 1 <= n)
                        listOfListStr.get(j).add(s.substring(i + j, i + j + 1));
                    else
                        break;
                }
                i += numRows;
                pointerIdx -= 1;
            } else {
                listOfListStr.get(pointerIdx).add(s.substring(i, i + 1));
                i += 1;
                pointerIdx -= 1;
            }
            if (pointerIdx == 0)
                pointerIdx = numRows - 1;
        }
        StringBuilder zigzag = new StringBuilder();
        for (List<String> lst : listOfListStr) {
            for (String s1 : lst) {
                zigzag.append(s1);
            }
        }
        return zigzag.toString();
    }
}
