class Solution {

    public String convert(String s, int numRows) {
        // Skip String that don\'t need processing at all
        if (numRows == 1 || numRows >= s.length()) {
            return s;
        }
        char[] result = new char[s.length()];
        // track current index in result
        int a = 0;
        // index difference of char in the same row per zigzag pillars
        int k = (numRows * 2) - 2;
        for (int i = 0; i < numRows; i++) {
            //nth char of the current row
            int j = 0;
            //difference between diagonal char and next char on pillar (same row)
            int l = 2 * i;
            //index of character to take from string
            int character = 0;
            do {
                if (j != 0 && l != 0 && l != k) {
                    //if j is not zero and l!=k, there\'s a char in the diagonal
                    character = i + (j * k) - l;
                    if (character < s.length()) {
                        result[a++] = s.charAt(character);
                    }
                }
                character = i + (j * k);
                if (character < s.length()) {
                    result[a++] = s.charAt(character);
                }
                j++;
            } while (//loop while character does not exceed string lenth
            character < s.length());
        }
        return new String(result);
    }
}
