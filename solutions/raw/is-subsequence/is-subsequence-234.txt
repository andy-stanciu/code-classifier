class Solution {

    int[][] dp;

    public boolean isSubsequence(String s, String t) {
        int m = s.length();
        int n = t.length();
        dp = new int[m + 1][n + 1];
        for (int[] d : dp) {
            Arrays.fill(d, -1);
        }
        Arrays.fill(dp[0], 0);
        for (int i = 0; i <= m; i++) {
            dp[i][0] = 0;
        }
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = 1 + dp[i - 1][j - 1];
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }
        return dp[m][n] == m ? true : false;
    }
}
