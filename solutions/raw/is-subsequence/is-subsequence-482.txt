class Solution {

    int lenS;

    int lenT;

    public boolean isSubsequence(String s, String t) {
        lenS = s.length();
        lenT = t.length();
        // Plain recursion; start matching from the right
        return isSubsequenceHelper(s, t, lenS - 1, lenT - 1);
    }

    boolean isSubsequenceHelper(String s, String t, int sInd, int tInd) {
        if (sInd < 0) {
            // if all chars in S have matched, sInd will be < 0; and we return true
            return true;
        }
        if (tInd < 0) {
            // if we have exhausted all chars in T, without sInd<0, then we return false;
            return false;
        }
        if (t.charAt(tInd) == s.charAt(sInd)) {
            // last chars match in both strings
            return isSubsequenceHelper(s, t, sInd - 1, tInd - 1);
        } else {
            // last char does not match, decrement from target only
            return isSubsequenceHelper(s, t, sInd, tInd - 1);
        }
    }
}
