class Solution {

    public boolean isSubsequence(String subsequence, String original) {
        // Initialize indices for both the original string and the subsequence
        int originalIndex = 0;
        int subsequenceIndex = 0;
        // Iterate through the subsequence until we reach its end
        while (subsequenceIndex < subsequence.length()) {
            // Flag to check if the current character is found in the original string
            boolean isFound = false;
            // Iterate through the original string
            while (originalIndex < original.length()) {
                // Check if the current character in the original matches the current character in the subsequence
                if (original.charAt(originalIndex) == subsequence.charAt(subsequenceIndex)) {
                    // Character is found, set the flag to true
                    isFound = true;
                    // Move to the next character in the original string
                    originalIndex++;
                    // Exit the inner loop as we found the character
                    break;
                }
                // Move to the next character in the original string
                originalIndex++;
            }
            // If the character was not found, return false
            if (!isFound) {
                return false;
            }
            // Move to the next character in the subsequence
            subsequenceIndex++;
        }
        // If all characters in the subsequence were found in order, return true
        return true;
    }
}
