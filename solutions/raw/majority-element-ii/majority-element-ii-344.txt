class Solution {

    public List<Integer> majorityElement(int[] nums) {
        if (nums == null || nums.length == 0)
            return new ArrayList<>();
        int count1 = 0, count2 = 0;
        Integer can1 = null, can2 = null;
        // First pass: find the candidates
        for (int num : nums) {
            if (can1 != null && num == can1.intValue()) {
                count1++;
            } else if (can2 != null && num == can2.intValue()) {
                count2++;
            } else if (count1 == 0) {
                can1 = num;
                count1 = 1;
            } else if (count2 == 0) {
                can2 = num;
                count2 = 1;
            } else {
                count1--;
                count2--;
            }
        }
        // Reset counts for validation
        count1 = 0;
        count2 = 0;
        // Second pass: count the occurrences of the candidates
        for (int num : nums) {
            if (num == can1) {
                count1++;
            } else if (num == can2) {
                count2++;
            }
        }
        // Collect the results
        List<Integer> result = new ArrayList<>();
        int n = nums.length;
        if (count1 > n / 3)
            result.add(can1);
        if (count2 > n / 3)
            result.add(can2);
        return result;
    }
}
