class Solution {

    public List<Integer> majorityElement(int[] nums) {
        // Step 1: Create a HashMap to store the frequency of each element in the array
        HashMap<Integer, Integer> map = new HashMap<>();
        // Step 2: Create a result list to store elements that appear more than n/3 times
        LinkedList<Integer> result = new LinkedList<>();
        // Step 3: Iterate through the array and populate the HashMap with element frequencies
        for (int i = 0; i < nums.length; i++) {
            // If the element is already in the map, increment its count, otherwise set it to 1
            map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);
        }
        // Step 4: Iterate through the keys of the HashMap to find elements that appear more than n/3 times
        for (Integer key : map.keySet()) {
            // Check if the frequency of the current element is greater than n/3
            if (map.get(key) > nums.length / 3) {
                // If so, add it to the result list
                result.add(key);
            }
        }
        // Step 5: Return the result list containing all majority elements (those appearing more than n/3 times)
        return result;
    }
}
