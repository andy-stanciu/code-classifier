class Solution {

    public List<Integer> majorityElement(int[] nums) {
        List<Integer> list = new ArrayList<>();
        //updated Moores voting for n/3
        //at max there will be onyl 2 elements
        //n=10 - n/3 = 3
        //in 10 size array if one elem appears more then 3 i.t 4 times and other also 4 times 4=4=8
        //so only 2 elemnts space is left which is < the 3 i.e at max there can be 2 elements
        int ele1 = Integer.MIN_VALUE, ele2 = Integer.MIN_VALUE;
        int cnt1 = 0, cnt2 = 0;
        for (int i = 0; i < nums.length; i++) {
            if (cnt1 == 0 && nums[i] != ele2) {
                ele1 = nums[i];
                cnt1 = 1;
            } else if (cnt2 == 0 && nums[i] != ele1) {
                ele2 = nums[i];
                cnt2 = 1;
            } else if (ele1 == nums[i])
                cnt1++;
            else if (ele2 == nums[i])
                cnt2++;
            else {
                cnt1--;
                cnt2--;
            }
        }
        //do a manual check of ele1 & ele2
        cnt1 = 0;
        cnt2 = 0;
        for (int i = 0; i < nums.length; i++) {
            if (ele1 == nums[i])
                cnt1++;
            if (ele2 == nums[i])
                cnt2++;
        }
        if (cnt1 > nums.length / 3)
            list.add(ele1);
        if (cnt2 > nums.length / 3)
            list.add(ele2);
        return list;
    }
}
