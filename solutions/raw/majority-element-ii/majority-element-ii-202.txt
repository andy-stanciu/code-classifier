class Solution {

    public List<Integer> majorityElement(int[] nums) {
        int n = nums.length;
        int count1 = 0, count2 = 0;
        Integer element1 = null;
        Integer element2 = null;
        // Step 1: Find potential candidates
        for (int i = 0; i < n; i++) {
            if (element1 != null && element1 == nums[i]) {
                count1++;
            } else if (element2 != null && element2 == nums[i]) {
                count2++;
            } else if (count1 == 0) {
                element1 = nums[i];
                count1 = 1;
            } else if (count2 == 0) {
                element2 = nums[i];
                count2 = 1;
            } else {
                count1--;
                count2--;
            }
        }
        // Step 2: Verify the candidates
        count1 = 0;
        count2 = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] == element1) {
                count1++;
            } else if (nums[i] == element2) {
                count2++;
            }
        }
        List<Integer> lst = new ArrayList<>();
        int mini = n / 3;
        if (count1 > mini)
            lst.add(element1);
        if (count2 > mini)
            lst.add(element2);
        return lst;
    }
}
