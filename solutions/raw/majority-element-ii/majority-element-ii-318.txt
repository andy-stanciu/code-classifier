class Solution {

    public List<Integer> majorityElement(int[] nums) {
        int majority1 = 0;
        int majority2 = 0;
        int count1 = 0;
        int count2 = 0;
        for (int i = 0; i < nums.length; ++i) {
            int num = nums[i];
            if (num == majority1) {
                count1++;
            } else if (num == majority2) {
                count2++;
            } else if (count1 == 0) {
                majority1 = num;
                count1 = 1;
            } else if (count2 == 0) {
                majority2 = num;
                count2 = 1;
            } else {
                count1--;
                count2--;
            }
        }
        count1 = 0;
        count2 = 0;
        for (int n : nums) {
            if (n == majority1)
                count1++;
            if (n == majority2)
                count2++;
        }
        Set<Integer> result = new HashSet<>();
        if (count1 > nums.length / 3)
            result.add(majority1);
        if (count2 > nums.length / 3)
            result.add(majority2);
        return new ArrayList<>(result);
    }
}
