class Solution {

    public List<Integer> majorityElement(int[] nums) {
        List<Integer> list = new ArrayList<>();
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            if (map.containsKey(nums[i])) {
                map.put(nums[i], map.get(nums[i]) + 1);
            } else {
                map.put(nums[i], 1);
            }
        }
        Set<Integer> keys = map.keySet();
        for (int k : keys) {
            if (map.get(k) > nums.length / 3) {
                list.add(k);
            }
        }
        return list;
        // Arrays.sort(nums);
        // int count = 1;
        // for(int i = 0;i<nums.length-1;i++){
        //     if(nums[i] == nums[i+1]){
        //         count++;
        //     }
        //     else{
        //         if(count > nums.length/3){
        //             list.add(nums[i]);
        //         }
        //         count = 1;
        //     }
        // }
        // if(count > nums.length/3){
        //     list.add(nums[nums.length-1]);
        // }
        //return list;
    }
}
