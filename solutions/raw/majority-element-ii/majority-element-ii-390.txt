class Solution {

    public List<Integer> majorityElement(int[] nums) {
        // Moore\'s voting algorithm
        int n = nums.length;
        int count1 = 0;
        int count2 = 0;
        int ele1 = Integer.MIN_VALUE;
        int ele2 = Integer.MIN_VALUE;
        for (int j : nums) {
            if (count1 == 0 && j != ele2) {
                ele1 = j;
                count1 = 1;
            } else if (count2 == 0 && j != ele1) {
                ele2 = j;
                count2 = 1;
            } else if (ele1 == j) {
                count1++;
            } else if (ele2 == j) {
                count2++;
            } else {
                count1--;
                count2--;
            }
        }
        ArrayList<Integer> list1 = new ArrayList<>();
        count1 = 0;
        count2 = 0;
        int atLeast = (int) (n / 3) + 1;
        for (int j : nums) {
            if (ele1 == j) {
                count1++;
            }
            if (ele2 == j) {
                count2++;
            }
        }
        if (count1 >= atLeast) {
            list1.add(ele1);
        }
        if (count2 >= atLeast) {
            list1.add(ele2);
        }
        //Collections.sort(list1); -> Tc -> o(2*log2) = o(1)
        return list1;
    }
}
