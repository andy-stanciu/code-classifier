class Solution {

    public List<Integer> majorityElement(int[] nums) {
        // List to store the majority elements that appear more than n/3 times.
        List<Integer> results = new ArrayList<>();
        // HashMap to store the frequency of each element in the array.
        HashMap<Integer, Integer> data = new HashMap<>();
        // Calculate the minimum count required for an element to be considered a majority element (more than n/3 times).
        int minCount = (nums.length / 3) + 1;
        // Iterate through the array to count the frequency of each element.
        for (int i = 0; i < nums.length; i++) {
            int count = 1;
            // If the element is already in the map, increment its count.
            if (data.containsKey(nums[i])) {
                count = data.get(nums[i]) + 1;
                data.put(nums[i], count);
            } else {
                // If the element is not in the map, add it with a count of 1.
                data.put(nums[i], count);
            }
            // If the count of the element reaches or exceeds the minimum count, add it to the results list if it\'s not already there.
            if (count >= minCount) {
                if (!results.contains(nums[i]))
                    results.add(nums[i]);
            }
        }
        // Return the list of majority elements.
        return results;
    }
}
