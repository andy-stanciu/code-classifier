class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        //2 pointers -- one at beginning of window and one at end of window
        //inclusive
        int left = 0;
        //inclusive
        int right = 0;
        int minLength = Integer.MAX_VALUE;
        boolean existingSolution = false;
        int curSum = 0;
        while (right < nums.length) {
            //slide window to right
            curSum += nums[right];
            while (curSum >= target) {
                existingSolution = true;
                //close window from left as much as possible
                if (((right - left) + 1) < minLength) {
                    minLength = right - left + 1;
                }
                curSum -= nums[left];
                left++;
            }
            right++;
        }
        if (!existingSolution) {
            return 0;
        }
        return minLength;
    }
}
