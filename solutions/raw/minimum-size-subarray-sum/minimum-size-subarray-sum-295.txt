class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        int minLength = Integer.MAX_VALUE;
        int left = 0;
        int right = 0;
        int currentSum = 0;
        for (; right < nums.length; ++right) {
            int current = nums[right];
            currentSum += current;
            // Keep shifting left pointer until window has sum less than target
            while (currentSum >= target && right < nums.length) {
                minLength = Math.min(minLength, right - left + 1);
                // Update the current sum as you shift
                currentSum -= nums[left++];
            }
        }
        return minLength == Integer.MAX_VALUE ? 0 : minLength;
    }
}
