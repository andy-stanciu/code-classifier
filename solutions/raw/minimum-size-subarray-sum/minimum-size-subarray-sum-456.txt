class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        //Brute froce
        /*  int len = Integer.MAX_VALUE;
        for(int i=0;i<nums.length;i++){
            int windowSum =0;
            int length=0;
            for(int j=i;j<nums.length;j++){
                windowSum+=nums[j];
                length = j-i+1;
                if(windowSum>=target){
                    len = Math.min(len, length);
                    break;
                }
            }
        }

        return (len==Integer.MAX_VALUE)?0:len;*/
        int l = 0;
        int minLength = nums.length + 1;
        int windowSum = 0;
        for (int r = 0; r < nums.length; r++) {
            windowSum += nums[r];
            while (windowSum >= target) {
                minLength = Math.min(minLength, r - l + 1);
                windowSum -= nums[l];
                l++;
            }
        }
        return (minLength == nums.length + 1) ? 0 : minLength;
    }
}
