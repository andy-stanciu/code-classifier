class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        int minimal_length = nums.length + 1;
        int L = 0, R = 0, sum = 0;
        while (R < nums.length) {
            sum += nums[R];
            // While sum meets or exceeds target, try to shrink the window from the left
            while (sum >= target) {
                minimal_length = Math.min(minimal_length, R - L + 1);
                sum -= nums[L];
                // Shrink the window
                L++;
            }
            // Increment R to expand the window
            R++;
        }
        // If minimal_length wasn\'t updated, return 0 (no valid subarray found)
        return minimal_length == nums.length + 1 ? 0 : minimal_length;
    }
}
