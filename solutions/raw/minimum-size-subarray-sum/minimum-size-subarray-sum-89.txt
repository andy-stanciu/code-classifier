class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        // minimum length of subarray
        int ans = Integer.MAX_VALUE;
        // size of the input array
        int n = nums.length;
        // left pointer
        int left = 0;
        // current sum of elements in subarray
        int sum = 0;
        for (int right = 0; right < n; right++) {
            // include current element in the sum
            sum += nums[right];
            // check if the sum exceeds or equals the target
            while (sum >= target) {
                // subtract the leftmost element from the sum
                sum -= nums[left];
                // update the minimum length
                ans = Math.min(ans, right - left + 1);
                // move the left pointer to the right
                left++;
            }
        }
        // if no valid subarray is found, return 0
        if (ans == Integer.MAX_VALUE) {
            return 0;
        }
        return ans;
    }
}
