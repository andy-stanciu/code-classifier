//Brute Force
// class Solution {
//     public int minSubArrayLen(int target, int[] nums) {
//         int ans=Integer.MAX_VALUE;
//         for(int i=0;i<nums.length;i++){
//             int currSum=0;
//             for(int j=i;j<nums.length;j++){
//                 currSum+=nums[j];
//                 if(currSum >= target){
//                     ans=Math.min(ans, j - i +1);
//                     break;
//                 }
//             }
//         }
//         return ans==Integer.MAX_VALUE ? 0 : ans;
//     }
// }
//SLiding Window
class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        int min = Integer.MAX_VALUE;
        int left = 0;
        int currSum = 0;
        for (int right = 0; right < nums.length; right++) {
            currSum += nums[right];
            while (currSum >= target) {
                min = Math.min(min, right - left + 1);
                currSum -= nums[left];
                left++;
            }
        }
        return min == Integer.MAX_VALUE ? 0 : min;
    }
}
