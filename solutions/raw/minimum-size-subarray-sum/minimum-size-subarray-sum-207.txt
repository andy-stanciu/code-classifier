class Solution {

    int[] prefixSum;

    public int minSubArrayLen(int target, int[] nums) {
        prefixSum = new int[nums.length + 2];
        prefixSum[0] = 0;
        for (int i = 0; i < nums.length; i++) {
            prefixSum[i + 1] = prefixSum[i] + nums[i];
        }
        int fastP = 0;
        int slowP = 0;
        int minLen = Integer.MAX_VALUE;
        for (fastP = 0; fastP <= nums.length; fastP++) {
            while (prefixSum[fastP] - prefixSum[slowP] >= target) {
                minLen = Math.min(fastP - slowP, minLen);
                slowP++;
            }
        }
        if (minLen == Integer.MAX_VALUE) {
            return 0;
        }
        return minLen;
    }
}
