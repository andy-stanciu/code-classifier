class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        int minWindowSize = Integer.MAX_VALUE;
        int currentWindowSum = 0;
        int windowStart = 0;
        for (int windowEnd = 0; windowEnd < nums.length; windowEnd++) {
            currentWindowSum += nums[windowEnd];
            while (currentWindowSum >= target) {
                //key method
                minWindowSize = Math.min(minWindowSize, windowEnd - windowStart + 1);
                //shrink the left and move to the right
                currentWindowSum -= nums[windowStart];
                windowStart++;
            }
        }
        //if minWindowSize remains unchanged, then you return 0
        return (minWindowSize == Integer.MAX_VALUE) ? 0 : minWindowSize;
    }
}
