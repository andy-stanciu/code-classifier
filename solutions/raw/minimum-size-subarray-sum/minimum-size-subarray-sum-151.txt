class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        int minLength = Integer.MAX_VALUE;
        // Left pointer of the window
        int left = 0;
        // Current sum of the elements in the window
        int sum = 0;
        // Right pointer of the window
        for (int right = 0; right < nums.length; right++) {
            // Add the current element to the window
            sum = sum + nums[right];
            // Shrink the window as long as the sum is greater than or equal to the target
            while (sum >= target) {
                minLength = Math.min(minLength, right - left + 1);
                // Remove the leftmost element from the window
                sum = sum - nums[left];
                // Move the left pointer to the right
                left++;
            }
        }
        return minLength == Integer.MAX_VALUE ? 0 : minLength;
    }
}
