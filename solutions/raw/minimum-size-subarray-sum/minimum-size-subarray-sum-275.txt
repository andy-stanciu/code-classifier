class Solution {

    public int minSubArrayLen(int target, int[] nums) {
        int minimumLength = Integer.MAX_VALUE;
        int windowSum = nums[0];
        if (windowSum >= target) {
            return 1;
        }
        int lastI = 0;
        int lastJ = 0;
        int i = 0;
        int j = 1;
        while (i != nums.length && j != nums.length) {
            if (i != lastI) {
                windowSum -= nums[lastI];
                lastI = i;
            } else if (j != lastJ) {
                windowSum += nums[j];
                lastJ = j;
            }
            if (windowSum >= target) {
                if ((j - i) + 1 < minimumLength) {
                    minimumLength = (j - i) + 1;
                }
                i++;
            } else {
                if (j + 1 == nums.length) {
                    i++;
                } else {
                    j++;
                }
            }
        }
        if (minimumLength == Integer.MAX_VALUE) {
            return 0;
        } else {
            return minimumLength;
        }
    }
}
