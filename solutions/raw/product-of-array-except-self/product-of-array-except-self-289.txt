class Solution {

    public static int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int product = 1;
        int[] answer = new int[n];
        if (containszero(nums)) {
            int countZeros = 0;
            int productWithoutZeros = 1;
            for (int i = 0; i < n; i++) {
                if (nums[i] != 0) {
                    productWithoutZeros *= nums[i];
                } else {
                    countZeros++;
                }
            }
            if (countZeros > 1) {
                Arrays.fill(answer, 0);
            } else {
                for (int i = 0; i < n; i++) {
                    if (nums[i] == 0) {
                        answer[i] = productWithoutZeros;
                    }
                }
            }
        } else {
            for (int i = 0; i < n; i++) {
                product *= nums[i];
            }
            for (int i = 0; i < n; i++) {
                answer[i] = product / nums[i];
            }
        }
        return answer;
    }

    public static boolean containszero(int[] nums) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                return true;
            }
        }
        return false;
    }
}
