class Solution {

    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] left = new int[n];
        //Just a Base Case, it will not affect output even if we don\'t write it \u2B07
        if (n < 1) {
            return left;
        }
        //Store commulatitive multiplication from left to right ie. left = [1, 2, 6, 24]
        int product = 1;
        for (int i = 0; i < n; i++) {
            product *= nums[i];
            left[i] = product;
        }
        //Store Right to left mutiplication in "product" , so , Space wiil be O(1)
        product = 1;
        for (int i = n - 1; i > 0; i--) {
            left[i] = left[i - 1] * product;
            product *= nums[i];
        }
        left[0] = product;
        return left;
    }
}
