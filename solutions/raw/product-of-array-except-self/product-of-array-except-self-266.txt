class Solution {

    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] pre = new int[n + 1];
        int[] suff = new int[n + 1];
        pre[0] = 1;
        suff[n] = 1;
        int count = 0;
        int mul = 1;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                count++;
            } else {
                mul = mul * nums[i];
            }
        }
        System.out.println(count);
        if (count == 0) {
            for (int i = 1; i < pre.length; i++) {
                pre[i] = pre[i - 1] * nums[i - 1];
                //System.out.println(pre[i]);
            }
            for (int i = suff.length - 2; i >= 0; i--) {
                suff[i] = suff[i + 1] * nums[i];
                System.out.print(suff[i]);
            }
            for (int i = 0; i < nums.length; i++) {
                nums[i] = pre[i] * suff[i + 1];
            }
        } else if (count == 1) {
            for (int i = 0; i < nums.length; i++) {
                if (nums[i] != 0) {
                    nums[i] = 0;
                } else {
                    nums[i] = mul;
                }
            }
        } else {
            for (int i = 0; i < nums.length; i++) {
                nums[i] = 0;
            }
        }
        return nums;
    }
}
