class Solution {

    public int[] productExceptSelf(int[] nums) {
        int zeroCount = 0;
        int n = nums.length;
        int[] res = new int[n];
        // Get the number of zero in the array
        for (int a : nums) {
            if (a == 0) {
                zeroCount++;
            }
        }
        // If the number of zero is more than 1 then the output array will only have 0
        if (zeroCount > 1) {
            return res;
        }
        int maxProduct = 1;
        // Calculate the product of all elements of the array except the single zero
        for (int a : nums) {
            if (a != 0) {
                maxProduct *= a;
            }
        }
        for (int i = 0; i < n; i++) {
            // If there is no zero then the product of all element divided by the number will give the prouct except the number
            if (zeroCount == 0) {
                res[i] = maxProduct / nums[i];
            } else // If there is zero then the zero element will have the maxProduct as it\'s value since maxProduct is product of all elements except that one zero
            if (nums[i] == 0) {
                res[i] = maxProduct;
            } else // If there is zero in the array all the remaining element will have zero as it\'s value
            {
                res[i] = 0;
            }
        }
        return res;
    }
}
