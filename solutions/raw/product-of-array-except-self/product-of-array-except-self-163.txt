class Solution {

    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] arr = new int[n];
        arr[0] = 1;
        for (int i = 1; i < n; i++) {
            arr[i] = arr[i - 1] * nums[i - 1];
        }
        int rightResult = nums[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            arr[i] *= rightResult;
            rightResult *= nums[i];
        }
        return arr;
        // int[] ls=new int[n];
        // int[] rs=new int[n];
        // ls[0]=1;
        // rs[n-1]=1;
        // for(int i=1;i<n;i++){
        //     ls[i]=ls[i-1]*nums[i-1];
        // }
        // for(int i=n-2;i>=0;i--){
        //     rs[i]=rs[i+1]*nums[i+1];
        // }
        // for(int i=0;i<n;i++){
        //     arr[i]=ls[i]*rs[i];
        // }
        // return arr;
        // int mul=1;
        // int mul2=1;
        // int zerocnt=0;
        // for(int i=0;i<nums.length;i++){
        //     mul*=nums[i];
        //     if(nums[i] != 0){
        //         mul2*=nums[i];
        //     }else{
        //         zerocnt++;
        //     }
        // }
        // if(zerocnt > 1){
        //     return arr;
        // }
        // for(int i=0;i<nums.length;i++){
        //     if(nums[i] != 0){
        //     arr[i]=mul/nums[i];
        //     }else{
        //         arr[i]=mul2;
        //     }
        // }
        // return arr;
        // int c=0;
        // for(int i=0;i<nums.length;i++){
        //      int mul=1;
        //      for(int j=0;j<nums.length;j++){
        //     if(i == j){
        //         continue;
        //     }else{
        //         mul*=nums[j];
        //     }
        //     }
        //     arr[i]=mul;
        // }
        // return arr;
    }
}
