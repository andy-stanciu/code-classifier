class Solution {

    public int[] productExceptSelf(int[] nums) {
        int l = nums.length;
        int[] pre = new int[l];
        int[] post = new int[l];
        int[] ans = new int[l];
        int temp = 1;
        for (int i = 0; i < l; i++) {
            temp *= nums[i];
            pre[i] = temp;
        }
        temp = 1;
        for (int i = l - 1; i >= 0; i--) {
            temp *= nums[i];
            post[i] = temp;
        }
        ans[0] = post[1];
        ans[l - 1] = pre[l - 2];
        for (int i = 1; i < l - 1; i++) {
            ans[i] = pre[i - 1] * post[i + 1];
        }
        return ans;
    }
}
// class Solution {
//     public int[] productExceptSelf(int[] nums) {
//         int left[]=new int[nums.length];
//         int right[]=new int[nums.length];
//         left[0]=1;
//         for(int i=1;i<nums.length;i++){
//             left[i]=left[i-1]*nums[i-1];
//         }
//         right[nums.length-1]=1;
//         for(int i=nums.length-2;i>-1;i--){
//             right[i]=right[i+1]*nums[i+1];
//         }
//         int ans[]=new int[nums.length];
//         for(int i=0;i<nums.length;i++){
//             ans[i]=left[i]*right[i];
//         }
//         return ans;
//     }
// }
