class Solution {

    public int[] productExceptSelf(int[] nums) {
        int[] res = new int[nums.length];
        //intialise for getting prefix product
        res[0] = 1;
        //calculate prefix product
        for (int i = 1; i < nums.length; i++) {
            //multiply earlier prefix product to previous element of nums
            // to prevent including current element into product
            res[i] = res[i - 1] * nums[i - 1];
        }
        //initialise for getting suffix product
        int right = 1;
        //calculate suffix product by traversing in reverse order
        for (int i = nums.length - 1; i >= 0; i--) {
            res[i] *= right;
            right *= nums[i];
        }
        return res;
    }
}
