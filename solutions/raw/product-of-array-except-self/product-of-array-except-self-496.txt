class Solution {

    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] left = new int[n];
        int[] right = new int[n];
        int[] ans = new int[n];
        // Initialize the left array
        // No element to the left of the first element
        left[0] = 1;
        for (int i = 1; i < n; i++) {
            // Product of all elements to the left of nums[i]
            left[i] = left[i - 1] * nums[i - 1];
        }
        // Initialize the right array
        // No element to the right of the last element
        right[n - 1] = 1;
        for (int i = n - 2; i >= 0; i--) {
            // Product of all elements to the right of nums[i]
            right[i] = right[i + 1] * nums[i + 1];
        }
        // Calculate the result array
        for (int i = 0; i < n; i++) {
            // Multiply left and right product for each index
            ans[i] = left[i] * right[i];
        }
        return ans;
    }
}
