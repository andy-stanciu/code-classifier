class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> twoDList = new ArrayList<>();
        List<Integer> oneDList = new ArrayList<>();
        check(candidates, target, 0, twoDList, oneDList);
        return twoDList;
    }

    private static void check(int[] candidates, int target, int idx, List<List<Integer>> twoDList, List<Integer> oneDList) {
        // TODO Auto-generated method stub
        if (target == 0) {
            twoDList.add(new ArrayList(oneDList));
            return;
        }
        for (int i = idx; i < candidates.length; i++) {
            if (i > idx && candidates[i] == candidates[i - 1]) {
                continue;
            }
            if (target >= candidates[i]) {
                oneDList.add(candidates[i]);
                check(candidates, target - candidates[i], i + 1, twoDList, oneDList);
                oneDList.remove(oneDList.size() - 1);
            }
        }
    }
}
