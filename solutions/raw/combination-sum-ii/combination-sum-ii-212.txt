class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(candidates);
        findCombination(0, target, candidates, res, new ArrayList<>());
        return res;
    }

    void findCombination(int idx, int target, int[] arr, List<List<Integer>> res, List<Integer> ds) {
        if (target == 0) {
            res.add(new ArrayList<>(ds));
            return;
        }
        for (int i = idx; i < arr.length; i++) {
            if (i > idx && arr[i] == arr[i - 1])
                continue;
            else if (arr[i] > target)
                break;
            ds.add(arr[i]);
            findCombination(i + 1, target - arr[i], arr, res, ds);
            ds.remove(ds.size() - 1);
        }
    }
}
