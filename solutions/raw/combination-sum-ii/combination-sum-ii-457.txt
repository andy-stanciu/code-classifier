class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        // Sort the candidates array to handle duplicates
        Arrays.sort(candidates);
        List<List<Integer>> result = new ArrayList<>();
        uniqueCombi(result, candidates, target, new ArrayList<>(), 0);
        return result;
    }

    public void uniqueCombi(List<List<Integer>> result, int[] candidates, int target, ArrayList<Integer> list, int index) {
        if (target == 0) {
            result.add(new ArrayList<>(list));
            return;
        }
        for (int i = index; i < candidates.length; i++) {
            // Skip duplicates
            if (i > index && candidates[i] == candidates[i - 1]) {
                continue;
            }
            if (target < candidates[i]) {
                break;
            }
            list.add(candidates[i]);
            uniqueCombi(result, candidates, target - candidates[i], list, i + 1);
            list.remove(list.size() - 1);
        }
    }
}
