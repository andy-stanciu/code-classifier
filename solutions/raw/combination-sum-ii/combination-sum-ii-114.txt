class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        int n = candidates.length, index = 0;
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        func(index, candidates, n, list, ans, target);
        return ans;
    }

    public List<List<Integer>> func(int index, int[] candidates, int n, List<Integer> list, List<List<Integer>> ans, int target) {
        if (target == 0) {
            ans.add(new ArrayList<>(list));
            return ans;
        }
        for (int i = index; i < n; i++) {
            if (i != index && i > 0 && candidates[i] == candidates[i - 1]) {
                continue;
            }
            if (candidates[i] > target) {
                break;
            }
            list.add(candidates[i]);
            func(i + 1, candidates, n, list, ans, target - candidates[i]);
            list.remove(list.size() - 1);
        }
        return ans;
    }
}
