class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> comb = new ArrayList<List<Integer>>();
        List<Integer> list = new ArrayList<Integer>();
        getcombinationSum2(0, candidates, list, comb, target);
        return comb;
    }

    void getcombinationSum2(int index, int[] nums, List<Integer> list, List<List<Integer>> comb, int target) {
        if (target == 0) {
            comb.add(new ArrayList<>(list));
            return;
        }
        if (target < 0) {
            return;
        }
        for (int i = index; i < nums.length; i++) {
            if (i > index && nums[i] == nums[i - 1])
                continue;
            list.add(nums[i]);
            getcombinationSum2(i + 1, nums, list, comb, target - nums[i]);
            list.remove(list.size() - 1);
        }
    }
}
