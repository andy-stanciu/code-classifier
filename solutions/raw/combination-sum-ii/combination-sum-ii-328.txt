class Solution {

    List<List<Integer>> ans;

    public void solve(int[] candidates, int target, int index, List<Integer> temp) {
        if (target == 0) {
            ans.add(new ArrayList<>(temp));
        }
        for (int i = index; i < candidates.length; i++) {
            if (i > index && candidates[i - 1] == candidates[i]) {
                continue;
            }
            if (candidates[i] > target) {
                break;
            }
            temp.add(candidates[i]);
            solve(candidates, target - candidates[i], i + 1, temp);
            temp.remove(temp.size() - 1);
        }
    }

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        ans = new ArrayList<>();
        Arrays.sort(candidates);
        List<Integer> temp = new ArrayList<>();
        solve(candidates, target, 0, temp);
        return ans;
    }
}
