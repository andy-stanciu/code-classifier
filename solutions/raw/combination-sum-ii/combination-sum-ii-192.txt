class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        System.out.println(Arrays.toString(candidates));
        helper(candidates, target, 0, 0, new ArrayList<>());
        return ans;
    }

    private void helper(int[] candidates, int target, int i, int sum, List<Integer> list) {
        if (sum == target) {
            ans.add(new ArrayList<>(list));
            return;
        }
        int pre = -1;
        for (int k = i; k < candidates.length; k++) {
            if (sum + candidates[k] > target)
                break;
            if (candidates[k] == pre)
                continue;
            list.add(candidates[k]);
            helper(candidates, target, k + 1, sum + candidates[k], list);
            list.remove(list.size() - 1);
            pre = candidates[k];
        }
    }
}
