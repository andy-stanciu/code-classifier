class Solution {

    public List<List<Integer>> combinationSum2(int[] nums, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(nums);
        comb(ans, new ArrayList<>(), nums, 0, target);
        return ans;
    }

    private void comb(List<List<Integer>> ans, List<Integer> subans, int[] nums, int s, int t) {
        if (t < 0) {
            return;
        } else if (t == 0) {
            ans.add(new ArrayList<>(subans));
        } else {
            for (int i = s; i < nums.length; i++) {
                if (i > s && nums[i] == nums[i - 1])
                    continue;
                subans.add(nums[i]);
                comb(ans, subans, nums, i + 1, t - nums[i]);
                subans.remove(subans.size() - 1);
            }
        }
    }
}
