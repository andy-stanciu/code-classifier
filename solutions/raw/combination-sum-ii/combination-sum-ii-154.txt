class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        helper(candidates, 0, target, 0, new ArrayList<>());
        return res;
    }

    void helper(int[] candidates, int st, int target, int sum, List<Integer> temp) {
        if (sum == target) {
            res.add(new ArrayList<>(temp));
            return;
        }
        if (sum > target)
            return;
        for (int i = st; i < candidates.length; i++) {
            if (i > st && candidates[i - 1] == candidates[i])
                continue;
            temp.add(candidates[i]);
            helper(candidates, i + 1, target, sum + candidates[i], temp);
            temp.remove(temp.size() - 1);
        }
    }
}
