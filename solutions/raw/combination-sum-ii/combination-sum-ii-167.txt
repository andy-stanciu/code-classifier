class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(candidates);
        solve(candidates, target, 0, new ArrayList<>(), res, 0);
        return res;
    }

    public void solve(int[] candidates, int target, int ind, List<Integer> temp, List<List<Integer>> res, int sum) {
        if (ind > candidates.length || sum > target) {
            return;
        }
        if (sum == target) {
            res.add(new ArrayList<>(temp));
            return;
        }
        for (int i = ind; i < candidates.length; i++) {
            if (i > ind && candidates[i] == candidates[i - 1]) {
                continue;
            }
            temp.add(candidates[i]);
            solve(candidates, target, i + 1, temp, res, sum + candidates[i]);
            temp.remove(temp.size() - 1);
        }
        return;
    }
}
