class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> l = new ArrayList<>();
        Arrays.sort(candidates);
        findcombination(0, candidates, l, list, target);
        return list;
    }

    void findcombination(int index, int[] arr, List<Integer> l, List<List<Integer>> list, int target) {
        if (target == 0) {
            list.add(new ArrayList<>(l));
            return;
        }
        for (int i = index; i < arr.length; i++) {
            if (i > index && arr[i] == arr[i - 1])
                continue;
            if (arr[i] > target)
                break;
            l.add(arr[i]);
            findcombination(i + 1, arr, l, list, target - arr[i]);
            l.remove(l.size() - 1);
        }
    }
}
