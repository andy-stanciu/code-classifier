class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> answer = new ArrayList<>();
        Arrays.sort(candidates);
        getCombinations(0, target, candidates, new ArrayList<>(), answer);
        return answer;
    }

    public static void getCombinations(int index, int target, int[] candidates, List<Integer> list, List<List<Integer>> answer) {
        if (target == 0) {
            answer.add(new ArrayList<>(list));
            return;
        }
        for (int i = index; i < candidates.length; i++) {
            if (i > index && candidates[i] == candidates[i - 1])
                continue;
            if (candidates[i] > target)
                break;
            list.add(candidates[i]);
            getCombinations(i + 1, target - candidates[i], candidates, list, answer);
            list.remove(list.size() - 1);
        }
    }
}
