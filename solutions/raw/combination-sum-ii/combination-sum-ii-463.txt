class Solution {

    List<List<Integer>> list = new ArrayList<>();

    List<Integer> l = new ArrayList<>();

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        return sum(candidates, target, 0);
    }

    public List<List<Integer>> sum(int[] candidates, int target, int start) {
        if (target == 0) {
            list.add(new ArrayList<>(l));
            return list;
        }
        if (target < 0) {
            return list;
        }
        for (int i = start; i < candidates.length; i++) {
            if (i > start && candidates[i] == candidates[i - 1])
                continue;
            l.add(candidates[i]);
            sum(candidates, target - candidates[i], i + 1);
            l.remove(l.size() - 1);
        }
        return list;
    }
}
