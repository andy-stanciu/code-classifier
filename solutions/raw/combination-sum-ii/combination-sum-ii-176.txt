class Solution {

    public void find(int[] a, ArrayList<Integer> a1, List<List<Integer>> ans, int target, int idx) {
        if (target <= 0 || idx > a.length) {
            if (target == 0) {
                ans.add(new ArrayList<>(a1));
            }
            return;
        }
        for (int i = idx; i < a.length; i++) {
            if ((i == idx || a[i - 1] != a[i]) && a[i] <= target) {
                a1.add(a[i]);
                find(a, a1, ans, target - a[i], i + 1);
                a1.remove(a1.size() - 1);
            }
        }
    }

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        find(candidates, new ArrayList<Integer>(), ans, target, 0);
        return ans;
    }
}
