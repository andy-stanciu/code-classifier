class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        getSum(ans, new ArrayList<>(), candidates, target, 0);
        return ans;
    }

    public void getSum(List<List<Integer>> ans, ArrayList<Integer> temp, int[] arr, int target, int index) {
        if (target == 0) {
            ans.add(new ArrayList(temp));
            return;
        }
        if (target < 0) {
            return;
        }
        for (int i = index; i < arr.length; i++) {
            if (i > index && arr[i - 1] == arr[i]) {
                continue;
            }
            temp.add(arr[i]);
            getSum(ans, temp, arr, target - arr[i], i + 1);
            temp.remove(temp.size() - 1);
        }
    }
}
