class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(candidates);
        answer(result, new ArrayList<>(), candidates, target, 0);
        return result;
    }

    private void answer(List<List<Integer>> result, List<Integer> tempList, int[] candidates, int remain, int start) {
        int n = candidates.length;
        if (remain == 0) {
            result.add(new ArrayList<>(tempList));
        } else if (remain > 0) {
            for (int i = start; i < n; i++) {
                if (i > start && candidates[i] == candidates[i - 1]) {
                    continue;
                }
                tempList.add(candidates[i]);
                answer(result, tempList, candidates, remain - candidates[i], i + 1);
                tempList.remove(tempList.size() - 1);
            }
        }
    }
}
