class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> ans = new ArrayList<>();
        fun(0, candidates, target, ans, new ArrayList<>());
        return (ans);
    }

    public void fun(int i, int[] A, int target, List<List<Integer>> ans, List<Integer> list) {
        if (target == 0) {
            ans.add(new ArrayList<>(list));
            return;
        }
        for (int j = i; j < A.length; j++) {
            if (j > i && A[j] == A[j - 1])
                continue;
            if (A[j] > target) {
                return;
            }
            list.add(A[j]);
            fun(j + 1, A, target - A[j], ans, list);
            list.remove(list.size() - 1);
        }
    }
}
