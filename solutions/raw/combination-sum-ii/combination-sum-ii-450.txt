class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Vector<Integer> ds = new Vector<>();
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(candidates);
        combination2Solution(0, candidates, ds, candidates.length, target, result);
        return result;
    }

    public void combination2Solution(int idx, int[] arr, Vector<Integer> ds, int n, int target, List<List<Integer>> result) {
        if (target == 0) {
            result.add(new ArrayList<>(ds));
            return;
        }
        for (int i = idx; i < arr.length; i++) {
            if (i > idx && arr[i] == arr[i - 1])
                continue;
            if (arr[i] > target)
                break;
            ds.add(arr[i]);
            combination2Solution(i + 1, arr, ds, n, target - arr[i], result);
            ds.remove(ds.size() - 1);
        }
    }
}
