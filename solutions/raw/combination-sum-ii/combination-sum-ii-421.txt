class Solution {

    public List<List<Integer>> combinationSum2(int[] nums, int tar) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        Arrays.sort(nums);
        FindTheComb2(list, temp, nums, 0, tar);
        return list;
    }

    public static void FindTheComb2(List<List<Integer>> list, List<Integer> temp, int[] nums, int i, int sum) {
        if (sum == 0) {
            list.add(new ArrayList<>(temp));
            return;
        }
        for (int j = i; j < nums.length; j++) {
            if (j > i && nums[j] == nums[j - 1])
                continue;
            if (nums[j] > sum)
                break;
            temp.add(nums[j]);
            FindTheComb2(list, temp, nums, j + 1, sum - nums[j]);
            temp.remove(temp.size() - 1);
        }
        // FindTheComb2(list, temp, nums, i+1, sum);
    }
}
