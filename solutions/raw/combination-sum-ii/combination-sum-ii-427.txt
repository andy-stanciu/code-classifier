class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        findAns(candidates, target, new ArrayList<Integer>(), 0);
        return result;
    }

    public void findAns(int[] arr, int target, List<Integer> temp, int start) {
        if (target == 0) {
            result.add(new ArrayList<>(temp));
        } else if (target > 0) {
            for (int i = start; i < arr.length; i++) {
                if (i > start && arr[i] == arr[i - 1])
                    continue;
                temp.add(arr[i]);
                findAns(arr, target - arr[i], temp, i + 1);
                temp.remove(temp.size() - 1);
            }
        }
    }
}
