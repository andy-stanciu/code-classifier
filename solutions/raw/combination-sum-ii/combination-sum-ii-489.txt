class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> list = new ArrayList<>();
        Arrays.sort(candidates);
        List<Integer> l1 = new ArrayList<>();
        combination(candidates, 0, target, l1, list);
        return list;
    }

    public void combination(int[] arr, int idx, int target, List<Integer> l1, List<List<Integer>> list) {
        if (target == 0) {
            list.add(new ArrayList<>(l1));
            return;
        }
        for (int i = idx; i < arr.length; i++) {
            if (i > idx && arr[i] == arr[i - 1]) {
                continue;
            }
            if (arr[i] > target) {
                return;
            }
            l1.add(arr[i]);
            combination(arr, i + 1, target - arr[i], l1, list);
            l1.remove(l1.size() - 1);
        }
    }
}
