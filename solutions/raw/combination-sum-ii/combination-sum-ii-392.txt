class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> l1 = new ArrayList<>();
        print(candidates, target, list, l1, 0);
        return l1;
    }

    public static void print(int[] candidates, int target, List<Integer> list, List<List<Integer>> l1, int index) {
        if (target == 0) {
            l1.add(new ArrayList<Integer>(list));
            return;
        }
        for (int i = index; i < candidates.length; i++) {
            if (target >= candidates[i]) {
                if (i != index && candidates[i] == candidates[i - 1])
                    continue;
                list.add(candidates[i]);
                print(candidates, target - candidates[i], list, l1, i + 1);
                list.remove(list.size() - 1);
            }
        }
    }
}
