class Solution {

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> ans = new ArrayList<>();
        Arrays.sort(candidates);
        check(res, ans, target, candidates, 0);
        return res;
    }

    public void check(List<List<Integer>> res, List<Integer> ans, int remain, int[] arr, int start) {
        if (remain < 0)
            return;
        else if (remain == 0)
            res.add(new ArrayList<>(ans));
        else {
            for (int i = start; i < arr.length; i++) {
                if (i > start && arr[i] == arr[i - 1])
                    continue;
                ans.add(arr[i]);
                check(res, ans, remain - arr[i], arr, i + 1);
                ans.remove(ans.size() - 1);
            }
        }
    }
}
