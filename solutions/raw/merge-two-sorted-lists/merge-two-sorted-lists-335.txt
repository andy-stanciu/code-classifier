/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode head1, ListNode head2) {
        // Dummy node for easy merging
        ListNode dummy = new ListNode(0);
        ListNode temp = dummy;
        while (head1 != null && head2 != null) {
            if (head1.val <= head2.val) {
                // Point to head1
                temp.next = head1;
                // Move head1 forward
                head1 = head1.next;
            } else {
                // Point to head2
                temp.next = head2;
                // Move head2 forward
                head2 = head2.next;
            }
            // Move the merged list forward
            temp = temp.next;
        }
        // Attach any remaining nodes
        if (head1 != null) {
            temp.next = head1;
        } else {
            temp.next = head2;
        }
        return dummy.next;
    }
}
