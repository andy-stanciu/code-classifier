/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        // These are base cases;
        if (list1 == null && list2 == null) {
            return list1;
        }
        if (list1 == null) {
            return list2;
        }
        if (list2 == null) {
            return list1;
        }
        // This is the recursive part
        if (list1.val > list2.val) {
            ListNode head = new ListNode(list2.val);
            head.next = mergeTwoLists(list1, list2.next);
            return head;
        } else {
            ListNode head = new ListNode(list1.val);
            head.next = mergeTwoLists(list1.next, list2);
            return head;
        }
    }
}
