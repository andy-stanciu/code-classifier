/**
 * Definition for singly-linked list.
 * public class ListNod {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode l3 = new ListNode(-1);
        ListNode head = l3;
        while (list1 != null && list2 != null) {
            // compare two lists and insert small one in l3 ,if equal insert l1 element
            //and move the to next note in l3 and the list whose emelemt is inserted in l3
            if (list1.val <= list2.val) {
                l3.next = (list1);
                l3 = l3.next;
                list1 = list1.next;
            } else if (list2.val < list1.val) {
                l3.next = (list2);
                l3 = l3.next;
                list2 = list2.next;
            }
        }
        // if any elements left in list1 insert them
        while (list1 != null) {
            l3.next = (list1);
            l3 = l3.next;
            list1 = list1.next;
        }
        // if any elements left in list2 insert them
        while (list2 != null) {
            l3.next = (list2);
            l3 = l3.next;
            list2 = list2.next;
        }
        return head.next;
    }
}
