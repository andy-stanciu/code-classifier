/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode temp1 = list1, temp2 = list2, head = null, tail = null;
        if (temp1 == null) {
            return temp2;
        }
        if (temp2 == null) {
            return temp1;
        }
        if (temp1.val < temp2.val) {
            head = list1;
            tail = list1;
            temp1 = temp1.next;
        } else {
            head = list2;
            tail = list2;
            temp2 = temp2.next;
        }
        while (temp1 != null && temp2 != null) {
            if (temp1.val < temp2.val) {
                tail.next = temp1;
                temp1 = temp1.next;
            } else {
                tail.next = temp2;
                temp2 = temp2.next;
            }
            tail = tail.next;
        }
        if (temp1 == null) {
            tail.next = temp2;
        } else {
            tail.next = temp1;
        }
        return head;
    }
}
