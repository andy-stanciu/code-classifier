/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode p1, ListNode p2) {
        ListNode head = new ListNode(0, null);
        ListNode tail = head;
        if (p1 == null)
            return p2;
        if (p2 == null)
            return p1;
        while (p1 != null && p2 != null) {
            if (p1.val <= p2.val) {
                tail.next = p1;
                p1 = p1.next;
            } else if (p2.val <= p1.val) {
                tail.next = p2;
                p2 = p2.next;
            }
            tail = tail.next;
        }
        if (p1 == null)
            tail.next = p2;
        if (p2 == null)
            tail.next = p1;
        return head.next;
    }
}
