/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if (list1 == null)
            return list2;
        if (list2 == null)
            return list1;
        ListNode temp = new ListNode();
        ListNode dummy = temp;
        while ((list1 != null) && (list2 != null)) {
            if (list1.val <= list2.val) {
                ListNode var = new ListNode(list1.val);
                list1 = list1.next;
                temp.next = var;
            } else {
                ListNode var = new ListNode(list2.val);
                list2 = list2.next;
                temp.next = var;
            }
            temp = temp.next;
            if (list1 == null) {
                temp.next = list2;
            }
            if (list2 == null) {
                temp.next = list1;
            }
        }
        return dummy.next;
    }
}
