/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode h1, ListNode h2) {
        if (h1 == null) {
            return h2;
        }
        if (h2 == null) {
            return h1;
        }
        ListNode curr = null;
        ListNode head = null;
        if (h1.val < h2.val) {
            head = h1;
            curr = head;
            h1 = h1.next;
        } else {
            head = h2;
            curr = head;
            h2 = h2.next;
        }
        while (h1 != null && h2 != null) {
            if (h1.val < h2.val) {
                curr.next = h1;
                curr = h1;
                h1 = h1.next;
            } else {
                curr.next = h2;
                curr = h2;
                h2 = h2.next;
            }
        }
        while (h1 != null) {
            curr.next = h1;
            curr = h1;
            h1 = h1.next;
        }
        while (h2 != null) {
            curr.next = h2;
            curr = h2;
            h2 = h2.next;
        }
        return head;
    }
}
