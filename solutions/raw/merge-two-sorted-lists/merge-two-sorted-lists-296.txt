/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode rootNode = null;
        if (list1 == null) {
            return list2;
        } else if (list2 == null) {
            return list1;
        }
        while (list1 != null && list2 != null) {
            if (list1.val <= list2.val) {
                if (rootNode == null)
                    rootNode = list1;
                for (; list1.next != null && list1.next.val <= list2.val; list1 = list1.next) ;
                ListNode nextTemp = list1.next;
                list1.next = list2;
                list1 = nextTemp;
            } else {
                if (rootNode == null)
                    rootNode = list2;
                for (; list2.next != null && list2.next.val <= list1.val; list2 = list2.next) ;
                ListNode nextTemp = list2.next;
                list2.next = list1;
                list2 = nextTemp;
            }
        }
        return rootNode;
    }
}
