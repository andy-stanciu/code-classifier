class Solution {

    public ListNode merge(ListNode l1, ListNode l2) {
        ListNode nlist = new ListNode();
        ListNode cur1 = l1, cur2 = l2, curr = nlist;
        while (cur1 != null && cur2 != null) {
            //System.out.println("here");
            ListNode nnode = new ListNode();
            if (cur1.val < cur2.val) {
                nnode.val = cur1.val;
                //move cur1
                cur1 = cur1.next;
                curr.next = nnode;
                curr = nnode;
            } else if (cur1.val > cur2.val) {
                nnode.val = cur2.val;
                //move cur2
                cur2 = cur2.next;
                curr.next = nnode;
                curr = nnode;
            } else {
                // we can move any one so move cur1
                nnode.val = cur1.val;
                //move cur1
                cur1 = cur1.next;
                curr.next = nnode;
                curr = nnode;
            }
        }
        //Now fill up the remainder lists
        //extra space removal
        nlist = nlist.next;
        if (cur1 != null)
            curr.next = cur1;
        if (cur2 != null)
            curr.next = cur2;
        return nlist;
    }

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if (list1 == null && list2 == null)
            return null;
        else if (list1 == null && list2 != null)
            return list2;
        else if (list2 == null && list1 != null)
            return list1;
        ListNode nlist = merge(list1, list2);
        return nlist;
    }
}
