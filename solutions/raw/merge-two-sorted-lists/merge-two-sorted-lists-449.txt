/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode newList = new ListNode();
        ListNode head = newList;
        while (list1 != null && list2 != null) {
            if (list1.val <= list2.val) {
                ListNode temp = new ListNode();
                temp.val = list1.val;
                newList.next = temp;
                list1 = list1.next;
            } else {
                ListNode temp = new ListNode();
                temp.val = list2.val;
                newList.next = temp;
                list2 = list2.next;
            }
            newList = newList.next;
        }
        while (list1 != null) {
            ListNode temp = new ListNode();
            temp.val = list1.val;
            newList.next = temp;
            list1 = list1.next;
            newList = newList.next;
        }
        while (list2 != null) {
            ListNode temp = new ListNode();
            temp.val = list2.val;
            newList.next = temp;
            list2 = list2.next;
            newList = newList.next;
        }
        return head.next;
    }
}
