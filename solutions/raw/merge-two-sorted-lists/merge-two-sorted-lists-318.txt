/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode dummy = new ListNode();
        ListNode current = dummy;
        while (list1 != null && list2 != null) {
            // \u0415\u0441\u043B\u0438 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0432 list1 \u043C\u0435\u043D\u044C\u0448\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044E \u0432 list2
            if (list1.val <= list2.val) {
                // \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0438\u0437 list1 \u0432 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442
                current.next = list1;
                // \u041F\u0435\u0440\u0435\u0445\u043E\u0434\u0438\u043C \u043A \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u043C\u0443 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0443 list1
                list1 = list1.next;
            } else {
                // \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0438\u0437 list2 \u0432 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442
                current.next = list2;
                // \u041F\u0435\u0440\u0435\u0445\u043E\u0434\u0438\u043C \u043A \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u043C\u0443 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0443 list2
                list2 = list2.next;
            }
            // \u041F\u0435\u0440\u0435\u0445\u043E\u0434\u0438\u043C \u043A \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u0439 \u043D\u043E\u0434\u0435 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0438\u0440\u0443\u044E\u0449\u0435\u0433\u043E \u0441\u043F\u0438\u0441\u043A\u0430
            current = current.next;
        }
        // \u0415\u0441\u043B\u0438 \u043E\u0434\u0438\u043D \u0438\u0437 \u0441\u043F\u0438\u0441\u043A\u043E\u0432 \u043F\u0443\u0441\u0442, \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u043E\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044F \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B \u0434\u0440\u0443\u0433\u043E\u0433\u043E \u0441\u043F\u0438\u0441\u043A\u0430
        if (list1 != null) {
            current.next = list1;
        } else {
            current.next = list2;
        }
        // \u0412\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043C \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u043F\u043E\u0441\u043B\u0435 \u0444\u0438\u043A\u0442\u0438\u0432\u043D\u043E\u0433\u043E \u043D\u0430\u0447\u0430\u043B\u0430
        return dummy.next;
    }
}
