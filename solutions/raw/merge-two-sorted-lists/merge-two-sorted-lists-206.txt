class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        // Create a dummy node which will point to the head of the new list.
        ListNode dummy = new ListNode(-1);
        // Create a tail node which will point to the last node in the sorted list during sorting
        ListNode tail = dummy;
        // Repeat while one of the pointer {list1 or list2} reaches the end
        while (list1 != null && list2 != null) {
            // if {list1.val} < {list2.val}, next sorted element will be {list1}
            if (list1.val < list2.val) {
                tail.next = list1;
                list1 = list1.next;
            } else // else {list2.val} <= {list1.val}, next sorted element will be {list2}
            {
                tail.next = list2;
                list2 = list2.next;
            }
            // Move the {tail} pointer to the newly merged node.
            tail = tail.next;
        }
        // If {list1} is not traversed completely, append the remaining
        // nodes of {list1} to the tail node.
        if (list1 != null) {
            tail.next = list1;
        }
        // If {list2} is not traversed completely, append the remaining
        // nodes of {list2} to the tail node.
        if (list2 != null) {
            tail.next = list2;
        }
        // Return {dummy.next} which is the head of the merged list
        return dummy.next;
    }
}
