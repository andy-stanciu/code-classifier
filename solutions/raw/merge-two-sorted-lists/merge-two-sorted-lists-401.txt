/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if (list1 == null)
            return list2;
        if (list2 == null)
            return list1;
        // dummy node for create the new list
        ListNode result = new ListNode(0);
        ListNode tempR = result;
        // until one of the two list is null
        while (list1 != null && list2 != null) {
            if (list1.val <= list2.val) {
                tempR.next = new ListNode(list1.val);
                list1 = list1.next;
            } else {
                tempR.next = new ListNode(list2.val);
                list2 = list2.next;
            }
            tempR = tempR.next;
        }
        // add the rest of element of the not null list
        if (list1 != null) {
            tempR.next = list1;
        } else if (list2 != null) {
            tempR.next = list2;
        }
        // return the result whithout dummy node
        return result.next;
    }
}
