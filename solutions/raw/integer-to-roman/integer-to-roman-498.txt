class Solution {

    public String intToRoman(int num) {
        Map<Integer, String> myMap = new HashMap<>();
        myMap.put(1, "I");
        myMap.put(4, "IV");
        myMap.put(5, "V");
        myMap.put(9, "IX");
        myMap.put(10, "X");
        myMap.put(40, "XL");
        myMap.put(50, "L");
        myMap.put(90, "XC");
        myMap.put(100, "C");
        myMap.put(400, "CD");
        myMap.put(500, "D");
        myMap.put(900, "CM");
        myMap.put(1000, "M");
        int[] base = { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };
        int[] cofficient = new int[base.length];
        Arrays.fill(cofficient, 0);
        int idx = 0;
        String resu = "";
        while (num != 0 && idx < base.length) {
            cofficient[idx] = num / base[idx];
            num = num - base[idx] * cofficient[idx];
            idx += 1;
        }
        for (int ii = 0; ii < base.length; ii++) {
            for (int kk = 0; kk < cofficient[ii]; kk++) resu = resu + myMap.get(base[ii]);
        }
        return resu;
    }
}
