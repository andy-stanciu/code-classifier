class Solution {

    public String intToRoman(int num) {
        StringBuilder sb = new StringBuilder();
        String s = num + "";
        int j = s.length() - 1;
        for (int i = 0; i < s.length(); i++) {
            int ch = Integer.parseInt(s.charAt(i) + "");
            double temp = Math.pow(10, j--) * (ch);
            if (1000 <= temp) {
                for (int k = 0; k < ch; k++) {
                    sb.append("M");
                }
            } else if (100 <= temp) {
                if (temp == 400) {
                    sb.append("CD");
                } else if (temp == 900) {
                    sb.append("CM");
                } else if (temp <= 300) {
                    for (int k = 0; k < ch; k++) {
                        sb.append("C");
                    }
                } else {
                    sb.append("D");
                    for (int k = 0; k < ch - 5; k++) {
                        sb.append("C");
                    }
                }
            } else if (10 <= temp) {
                if (temp == 90) {
                    sb.append("XC");
                } else if (temp == 40) {
                    sb.append("XL");
                } else if (temp <= 30) {
                    for (int k = 0; k < ch; k++) {
                        sb.append("X");
                    }
                } else {
                    sb.append("L");
                    for (int k = 0; k < ch - 5; k++) {
                        sb.append("X");
                    }
                }
            } else {
                if (temp == 4) {
                    sb.append("IV");
                } else if (temp == 9) {
                    sb.append("IX");
                } else if (temp <= 3) {
                    for (int k = 0; k < ch; k++) {
                        sb.append("I");
                    }
                } else {
                    sb.append("V");
                    for (int k = 0; k < ch - 5; k++) {
                        sb.append("I");
                    }
                }
            }
        }
        return sb.toString();
    }
}
