class Solution {

    public String intToRoman(int num) {
        Map<Double, String> map = Map.of(1d, "I", 5d, "V", 10d, "X", 50d, "L", 100d, "C", 500d, "D", 1000d, "M");
        StringBuilder sb = new StringBuilder();
        int i = 0;
        while (num > 0) {
            int remainder = num % 10;
            if (remainder == 5) {
                sb.insert(0, map.get(5 * Math.pow(10, i)));
            } else if (remainder == 0) {
            } else if (remainder == 1) {
                sb.insert(0, map.get(1 * Math.pow(10, i)));
            } else if (remainder == 4) {
                sb.insert(0, map.get(1 * Math.pow(10, i)) + map.get(5 * Math.pow(10, i)));
            } else if (remainder == 9) {
                sb.insert(0, map.get(1 * Math.pow(10, i)) + map.get(1 * Math.pow(10, i + 1)));
            } else if (remainder > 5 && remainder < 9) {
                sb.insert(0, map.get(5 * Math.pow(10, i)) + map.get(1 * Math.pow(10, i)).repeat(remainder - 5));
            } else {
                sb.insert(0, map.get(1 * Math.pow(10, i)) + map.get(1 * Math.pow(10, i)).repeat(remainder - 1));
            }
            i++;
            num /= 10;
        }
        return sb.toString();
    }
}
