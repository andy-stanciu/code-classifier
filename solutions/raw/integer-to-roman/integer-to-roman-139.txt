class Solution {

    public String intToRoman(int num) {
        StringBuilder builder = new StringBuilder();
        while (num - 1000 >= 0) {
            builder.append("M");
            num = num - 1000;
        }
        if (num - 900 >= 0) {
            builder.append("CM");
            num = num - 900;
        } else if (num - 500 >= 0) {
            builder.append("D");
            num = num - 500;
        } else if (num - 400 >= 0) {
            builder.append("CD");
            num = num - 400;
        }
        while (num - 100 >= 0) {
            builder.append("C");
            num = num - 100;
        }
        if (num - 90 >= 0) {
            builder.append("XC");
            num = num - 90;
        } else if (num - 50 >= 0) {
            builder.append("L");
            num = num - 50;
        } else if (num - 40 >= 0) {
            builder.append("XL");
            num = num - 40;
        }
        while (num - 10 >= 0) {
            builder.append("X");
            num = num - 10;
        }
        if (num - 9 == 0) {
            builder.append("IX");
            num -= 9;
        } else if (num - 5 >= 0) {
            builder.append("V");
            num = num - 5;
        } else if (num - 4 == 0) {
            builder.append("IV");
            num -= 4;
        }
        while (num - 1 >= 0) {
            builder.append("I");
            num = num - 1;
        }
        return builder.toString();
    }
}
