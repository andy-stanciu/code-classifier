class Solution {

    /*
    Make a list of regular mappings and a list of exceptions
    Three approaches for the list of exceptions:
     - XXXX -> XL
     - 40 -> XL
     - integrate exceptions into the single mapping
    */
    public static TreeMap<Integer, String> mapping = new TreeMap<>(Comparator.reverseOrder());

    static {
        mapping.put(1, "I");
        mapping.put(4, "IV");
        mapping.put(5, "V");
        mapping.put(9, "IX");
        mapping.put(10, "X");
        mapping.put(40, "XL");
        mapping.put(50, "L");
        mapping.put(90, "XC");
        mapping.put(100, "C");
        mapping.put(400, "CD");
        mapping.put(500, "D");
        mapping.put(900, "CM");
        mapping.put(1000, "M");
    }

    public String intToRoman(int num) {
        StringBuilder sb = new StringBuilder();
        for (Integer base : mapping.keySet()) {
            int mult = num / base;
            for (int i = 0; i < mult; i++) {
                sb.append(mapping.get(base));
            }
            num -= mult * base;
        }
        return sb.toString();
    }
}
