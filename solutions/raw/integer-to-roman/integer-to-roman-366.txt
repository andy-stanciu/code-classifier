class Solution {

    public String intToRoman(int num) {
        StringBuilder roman = new StringBuilder();
        // We only have 23 cases to account for in this solution. So we can easily use arrays to store it without worrying about space complexity.
        String[] ones = { "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX" };
        String[] tens = { "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC" };
        String[] hundreds = { "", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM" };
        String[] thousands = { "", "M", "MM", "MMM" };
        roman.append(thousands[num / 1000]);
        roman.append(hundreds[(num % 1000) / 100]);
        roman.append(tens[(num % 100) / 10]);
        roman.append(ones[num % 10]);
        return roman.toString();
    }
}
