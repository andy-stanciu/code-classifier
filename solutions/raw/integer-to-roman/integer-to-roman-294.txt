class Solution {

    public String intToRoman(int num) {
        Map<Integer, String> symMap = new HashMap<>();
        symMap.put(1000, "M");
        symMap.put(900, "CM");
        symMap.put(500, "D");
        symMap.put(400, "CD");
        symMap.put(100, "C");
        symMap.put(90, "XC");
        symMap.put(50, "L");
        symMap.put(40, "XL");
        symMap.put(10, "X");
        symMap.put(9, "IX");
        symMap.put(5, "V");
        symMap.put(4, "IV");
        symMap.put(1, "I");
        List<Integer> val = new ArrayList<>();
        for (int i : symMap.keySet()) {
            val.add(i);
        }
        Collections.sort(val);
        int len = val.size();
        StringBuilder res = new StringBuilder("");
        while (num > 0) {
            for (int i = len - 1; i >= 0; i--) {
                if (num >= val.get(i)) {
                    int quot = num / val.get(i);
                    for (int j = 0; j < quot; j++) res.append(symMap.get(val.get(i)));
                    num = num % val.get(i);
                    break;
                }
            }
        }
        return res.toString();
    }
}
