class Solution {

    public String intToRoman(int num) {
        if (//Invalid Integer cannot be converted to Roman
        num < 1 || num > 3999)
            return "";
        StringBuilder str = new StringBuilder();
        String[] roman = { //all possible combinations of direct Romans
        "M", //all possible combinations of direct Romans
        "CM", //all possible combinations of direct Romans
        "D", //all possible combinations of direct Romans
        "CD", //all possible combinations of direct Romans
        "C", //all possible combinations of direct Romans
        "XC", //all possible combinations of direct Romans
        "L", //all possible combinations of direct Romans
        "XL", //all possible combinations of direct Romans
        "X", //all possible combinations of direct Romans
        "IX", //all possible combinations of direct Romans
        "V", //all possible combinations of direct Romans
        "IV", "I" };
        //above Roman corresponding Integer values
        int[] values = { 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 };
        int i = 0;
        while (//valid input
        num > 0) {
            while (//if integer input is less than equal to the roman array above
            num >= values[i]) {
                //subtracting the values of the existing value from the input
                num -= values[i];
                //appending the existing value to the StringBuilder
                str.append(roman[i]);
            }
            i++;
        }
        //converting the stringbuilder to string anbd return
        return str.toString();
    }
}
