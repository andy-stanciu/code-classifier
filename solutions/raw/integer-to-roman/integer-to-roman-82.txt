class Solution {

    private final Map<Integer, String> decToRoman = new LinkedHashMap<>();

    public Solution() {
        decToRoman.put(1000, "M");
        decToRoman.put(900, "CM");
        decToRoman.put(500, "D");
        decToRoman.put(400, "CD");
        decToRoman.put(100, "C");
        decToRoman.put(90, "XC");
        decToRoman.put(50, "L");
        decToRoman.put(40, "XL");
        decToRoman.put(10, "X");
        decToRoman.put(9, "IX");
        decToRoman.put(5, "V");
        decToRoman.put(4, "IV");
        decToRoman.put(1, "I");
    }

    public String intToRoman(int num) {
        StringBuilder sb = new StringBuilder();
        int number = num;
        for (Map.Entry<Integer, String> entry : decToRoman.entrySet()) {
            int value = number / entry.getKey();
            if (value > 0)
                sb.append(entry.getValue().repeat(value));
            number = number % entry.getKey();
        }
        return sb.toString();
    }
}
