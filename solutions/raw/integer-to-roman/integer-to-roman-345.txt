class Solution {

    public String returnChar(String min, String mid, String maj, int n) {
        StringBuilder sb = new StringBuilder();
        if (n <= 3) {
            for (int i = 1; i <= n; i++) {
                sb.append(min);
            }
        } else if (n == 4) {
            sb.append(min);
            sb.append(mid);
        } else if (n == 5) {
            sb.append(mid);
        } else if (n <= 8) {
            sb.append(mid);
            for (int i = 1; i <= n - 5; i++) {
                sb.append(min);
            }
        } else if (n == 9) {
            sb.append(min);
            sb.append(maj);
        }
        return sb.toString();
    }

    public String intToRoman(int num) {
        int len = Integer.toString(num).length() - 1;
        StringBuilder sb = new StringBuilder();
        while (len >= 0) {
            int d = ((int) Math.pow(10, len));
            int n = num / d;
            if (len == 3)
                sb.append(returnChar("M", "M", "M", n));
            else if (len == 2)
                sb.append(returnChar("C", "D", "M", n));
            else if (len == 1)
                sb.append(returnChar("X", "L", "C", n));
            else
                sb.append(returnChar("I", "V", "X", n));
            len--;
            num %= d;
        }
        return sb.toString();
    }
}
