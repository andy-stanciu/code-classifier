/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null) {
            return head;
        }
        ListNode ans = head;
        ListNode semi = head.next;
        ListNode evenHead = head;
        ListNode oddHead = head.next;
        ListNode traverse = oddHead.next;
        int index = 0;
        while (traverse != null) {
            if (index % 2 == 0) {
                evenHead.next = traverse;
                evenHead = traverse;
            } else {
                oddHead.next = traverse;
                oddHead = traverse;
            }
            traverse = traverse.next;
            index++;
        }
        oddHead.next = null;
        evenHead.next = semi;
        return ans;
    }
}
