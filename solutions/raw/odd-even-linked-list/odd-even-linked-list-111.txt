class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode oddNode = new ListNode(-1);
        ListNode evenNode = new ListNode(-1);
        ListNode oddTail = oddNode;
        ListNode evenTail = evenNode;
        int count = 0;
        while (head != null) {
            count++;
            if (count % 2 == 0) {
                evenTail.next = head;
                evenTail = evenTail.next;
            } else {
                oddTail.next = head;
                oddTail = oddTail.next;
            }
            head = head.next;
        }
        evenTail.next = null;
        oddTail.next = evenNode.next;
        return oddNode.next;
    }
}
