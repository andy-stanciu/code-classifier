/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        int count = 0;
        ListNode tempNode = head;
        ListNode oddNode = null, evenNode = null, firstOddNode = null, firstEvenNode = null;
        if (head == null)
            return head;
        while (tempNode != null) {
            count++;
            if (count % 2 != 0) {
                if (count == 1) {
                    firstOddNode = tempNode;
                    oddNode = tempNode;
                } else {
                    oddNode.next = tempNode;
                    oddNode = tempNode;
                }
            } else if (count % 2 == 0) {
                if (count == 2) {
                    firstEvenNode = tempNode;
                    evenNode = tempNode;
                } else {
                    evenNode.next = tempNode;
                    evenNode = tempNode;
                }
            }
            tempNode = tempNode.next;
        }
        if (count == 1)
            return head;
        oddNode.next = firstEvenNode;
        evenNode.next = null;
        return firstOddNode;
    }
}
