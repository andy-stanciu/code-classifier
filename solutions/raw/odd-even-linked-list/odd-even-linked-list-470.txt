/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        // Dummy head for odd indices
        ListNode oddHead = new ListNode(-1);
        // Dummy head for even indices
        ListNode evenHead = new ListNode(-1);
        ListNode oddList = oddHead;
        ListNode evenList = evenHead;
        ListNode current = head;
        int index = 1;
        while (current != null) {
            if (index % 2 == 1) {
                oddList.next = current;
                oddList = oddList.next;
            } else {
                evenList.next = current;
                evenList = evenList.next;
            }
            current = current.next;
            index++;
        }
        oddList.next = null;
        evenList.next = null;
        oddList.next = evenHead.next;
        return oddHead.next;
    }
}
