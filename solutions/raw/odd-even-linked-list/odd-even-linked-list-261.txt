/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null) {
            return null;
        }
        ListNode odd = head;
        ListNode even = head.next;
        // Save the head of the even list
        ListNode evenHead = even;
        while (even != null && even.next != null) {
            // Connect the odd nodes
            odd.next = even.next;
            // Move odd pointer forward
            odd = odd.next;
            // Connect the even nodes
            even.next = odd.next;
            // Move even pointer forward
            even = even.next;
        }
        // Attach the even list after the odd list
        odd.next = evenHead;
        return head;
    }
}
