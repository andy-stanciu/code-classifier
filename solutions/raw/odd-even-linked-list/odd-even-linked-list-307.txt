/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null)
            return head;
        ListNode prevOddNode = head, firstEvenNode = head.next, lastOddNode = head;
        ListNode next, prevEvenNode = null;
        while (prevOddNode != null && prevOddNode.next != null) {
            next = prevOddNode.next;
            prevOddNode.next = next.next;
            prevOddNode = prevOddNode.next;
            if (prevOddNode != null)
                lastOddNode = prevOddNode;
            if (prevEvenNode != null)
                prevEvenNode.next = next;
            prevEvenNode = next;
        }
        lastOddNode.next = firstEvenNode;
        if (prevEvenNode != null)
            prevEvenNode.next = null;
        return head;
    }
}
