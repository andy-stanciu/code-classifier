/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        ListNode tail = head;
        while (tail != null && tail.next != null) {
            tail = tail.next;
        }
        ListNode temp = head;
        int count = 1;
        ListNode prev = null;
        int listsize = SizeofList(head);
        while (temp != null && count <= listsize) {
            if (count % 2 == 0) {
                tail.next = temp;
                prev.next = temp.next;
                temp.next = null;
                tail = temp;
                temp = prev.next;
            } else {
                prev = temp;
                temp = temp.next;
            }
            count++;
        }
        return head;
    }

    public static int SizeofList(ListNode head) {
        ListNode temp = head;
        int size = 0;
        while (temp != null) {
            size++;
            temp = temp.next;
        }
        return size;
    }
}
