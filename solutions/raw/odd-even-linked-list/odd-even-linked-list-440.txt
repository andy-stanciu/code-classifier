/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        ListNode odd = null;
        ListNode oddEnd = null;
        ListNode even = null;
        ListNode evenEnd = null;
        int counter = 1;
        if (head == null || head.next == null) {
            return head;
        }
        while (head != null) {
            if (counter % 2 == 0) {
                if (even == null) {
                    even = head;
                    evenEnd = head;
                } else {
                    evenEnd.next = head;
                    evenEnd = head;
                }
            } else {
                if (odd == null) {
                    odd = head;
                    oddEnd = head;
                } else {
                    oddEnd.next = head;
                    oddEnd = head;
                }
            }
            counter += 1;
            head = head.next;
        }
        oddEnd.next = even;
        evenEnd.next = null;
        return odd;
    }
}
