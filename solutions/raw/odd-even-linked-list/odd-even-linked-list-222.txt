/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode odd = new ListNode(0);
        ListNode odd1 = odd;
        ListNode even = new ListNode(0);
        ListNode even1 = even;
        while (head != null) {
            ListNode newNode = new ListNode(head.val);
            odd1.next = newNode;
            odd1 = newNode;
            head = head.next;
            if (head != null) {
                ListNode newNode1 = new ListNode(head.val);
                even1.next = newNode1;
                even1 = newNode1;
                head = head.next;
            }
        }
        ListNode res = new ListNode(0);
        ListNode temp = res;
        odd = odd.next;
        while (odd != null) {
            ListNode newNode = new ListNode(odd.val);
            temp.next = newNode;
            temp = newNode;
            odd = odd.next;
        }
        even = even.next;
        while (even != null) {
            ListNode newNode = new ListNode(even.val);
            temp.next = newNode;
            temp = newNode;
            even = even.next;
        }
        return res.next;
    }
}
