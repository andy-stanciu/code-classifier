/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode oddHead = head;
        ListNode evenHead = head.next;
        ListNode prevptr = oddHead;
        ListNode currptr = evenHead;
        ListNode nextptr = currptr.next;
        while (nextptr != null) {
            prevptr.next = nextptr;
            currptr.next = nextptr.next;
            if (nextptr.next != null)
                nextptr = (nextptr.next).next;
            else
                nextptr = null;
            if (prevptr.next != null)
                prevptr = prevptr.next;
            if (currptr.next != null)
                currptr = currptr.next;
        }
        prevptr.next = evenHead;
        return oddHead;
    }
}
