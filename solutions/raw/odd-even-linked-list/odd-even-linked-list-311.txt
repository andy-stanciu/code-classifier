/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null) {
            return head;
        }
        ListNode firstpoint = head;
        ListNode secondheader = head.next;
        ListNode secondpoint = head.next;
        ListNode thirdpoint = head.next.next;
        int n = 0;
        while (thirdpoint != null) {
            firstpoint.next = thirdpoint;
            firstpoint = secondpoint;
            secondpoint = thirdpoint;
            thirdpoint = thirdpoint.next;
            n++;
        }
        if (n % 2 != 0) {
            firstpoint.next = null;
            secondpoint.next = secondheader;
        } else {
            firstpoint.next = secondheader;
        }
        return head;
    }
}
