/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode temp1 = head;
        int length = 0;
        while (temp1 != null) {
            length++;
            temp1 = temp1.next;
        }
        ListNode h1 = new ListNode();
        ListNode h2 = new ListNode();
        temp1 = h1;
        ListNode temp2 = h2;
        ListNode dummy = h2;
        for (int i = 0; i < length; i++) {
            if (i % 2 == 0) {
                temp1.next = head;
                head = head.next;
                temp1 = temp1.next;
            } else {
                temp2.next = head;
                head = head.next;
                temp2 = temp2.next;
            }
        }
        temp2.next = null;
        temp1.next = h2.next;
        return h1.next;
    }
}
