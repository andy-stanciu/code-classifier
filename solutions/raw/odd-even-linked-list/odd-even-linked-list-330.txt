/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode eHead = head.next;
        // pre--pre pointer of odd p;ep--even pointer
        ListNode pre = null, p = head, ep = eHead;
        while (p != null && ep != null) {
            pre = p;
            p.next = ep.next;
            p = p.next;
            if (p == null)
                break;
            ep.next = p.next;
            ep = ep.next;
        }
        (p != null ? p : pre).next = eHead;
        if (ep != null)
            ep.next = null;
        return head;
    }
}
