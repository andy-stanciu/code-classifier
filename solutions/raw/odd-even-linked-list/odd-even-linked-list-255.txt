/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode oddhead = new ListNode(-1);
        ListNode evenhead = new ListNode(-1);
        ListNode oddtail = oddhead;
        ListNode eventail = evenhead;
        ListNode curr = head;
        int index = 1;
        while (curr != null) {
            if (index % 2 != 0) {
                oddtail.next = curr;
                oddtail = curr;
            } else {
                eventail.next = curr;
                eventail = curr;
            }
            curr = curr.next;
            index++;
        }
        eventail.next = null;
        oddtail.next = evenhead.next;
        ListNode newhead = oddhead.next;
        return newhead;
    }
}
