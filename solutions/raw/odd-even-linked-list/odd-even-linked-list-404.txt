/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode odd = head, even = head.next, oddCur = head, evenCur = head.next;
        ListNode cur = head.next.next;
        int c = 1;
        while (cur != null) {
            if (c % 2 == 0) {
                evenCur = cur;
                cur = cur.next;
            } else {
                ListNode temp = cur.next;
                evenCur.next = temp;
                oddCur.next = cur;
                cur.next = even;
                oddCur = cur;
                cur = temp;
            }
            c++;
        }
        return odd;
    }
}
