/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null) {
            return null;
        }
        if (head.next == null || head.next.next == null) {
            return head;
        }
        int index = 1;
        // ListNode curr = head;
        ListNode odd = head;
        ListNode even = head.next;
        ListNode pe = even;
        while (even != null && even.next != null) {
            if (index % 2 != 0) {
                odd.next = odd.next.next;
                odd = even.next;
            } else {
                even.next = even.next.next;
                even = odd.next;
            }
            index++;
        }
        odd.next = pe;
        return head;
    }
}
