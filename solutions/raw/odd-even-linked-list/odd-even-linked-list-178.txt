/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null) {
            return null;
        }
        ListNode p1 = null;
        ListNode p2 = null;
        ListNode curr = head;
        int counter = 0;
        ListNode head1 = null;
        while (curr != null) {
            if (counter == 0) {
                p1 = curr;
                curr = curr.next;
                p1.next = null;
                counter++;
            } else if (counter == 1) {
                p2 = curr;
                curr = curr.next;
                p2.next = null;
                head1 = p2;
                counter++;
            } else {
                if (counter % 2 == 0) {
                    p1.next = curr;
                    curr = curr.next;
                    p1 = p1.next;
                    p1.next = null;
                    counter++;
                } else {
                    p2.next = curr;
                    curr = curr.next;
                    p2 = p2.next;
                    p2.next = null;
                    counter++;
                }
            }
        }
        p1.next = head1;
        return head;
    }
}
