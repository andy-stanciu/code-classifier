/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        ListNode even = new ListNode(0);
        ListNode odd = new ListNode(0);
        ListNode ev = even;
        ListNode od = odd;
        int size = 1;
        while (head != null) {
            if (size % 2 != 0) {
                od.next = head;
                od = head;
                head = head.next;
                size++;
            } else {
                ev.next = head;
                ev = head;
                head = head.next;
                size++;
            }
        }
        odd = odd.next;
        even = even.next;
        // to prevent cyclic list
        ev.next = null;
        //linkning odd to even
        od.next = even;
        return odd;
    }
}
