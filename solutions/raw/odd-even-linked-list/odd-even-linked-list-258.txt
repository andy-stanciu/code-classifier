/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null) {
            return head;
        }
        ListNode oddNew = new ListNode();
        ListNode odd = oddNew;
        ListNode evenNew = new ListNode();
        ListNode even = evenNew;
        int i = 1;
        while (head != null) {
            ListNode next = head.next;
            if (i % 2 == 1) {
                odd.next = head;
                odd = odd.next;
                odd.next = null;
            } else {
                even.next = head;
                even = even.next;
                even.next = null;
            }
            head = next;
            i++;
        }
        odd.next = evenNew.next;
        return oddNew.next;
    }
}
