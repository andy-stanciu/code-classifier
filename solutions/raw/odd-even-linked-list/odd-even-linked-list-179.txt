/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        // Odd and even pointers
        ListNode odd = head;
        ListNode even = head.next;
        // Keep track of the head of even list
        ListNode evenHead = even;
        // Iterate over the list to rearrange nodes
        while (even != null && even.next != null) {
            // Link odd nodes
            odd.next = even.next;
            // Move odd pointer
            odd = odd.next;
            // Link even nodes
            even.next = odd.next;
            // Move even pointer
            even = even.next;
        }
        // Append even list to the end of the odd list
        odd.next = evenHead;
        return head;
    }
}
