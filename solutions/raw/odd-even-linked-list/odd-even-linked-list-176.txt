/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        int i = 1;
        ListNode oddStart = new ListNode(-1);
        ListNode evenStart = new ListNode(-1);
        ListNode oddPointer = oddStart;
        ListNode evenPointer = evenStart;
        ListNode current = head;
        while (current != null) {
            if (i % 2 == 1) {
                oddPointer.next = current;
                oddPointer = oddPointer.next;
                if (oddPointer.next == null) {
                    evenPointer.next = null;
                }
            } else {
                evenPointer.next = current;
                evenPointer = oddPointer.next;
                if (evenPointer.next == null) {
                    oddPointer.next = null;
                }
            }
            i++;
            current = current.next;
        }
        oddPointer.next = evenStart.next;
        return oddStart.next;
    }
}
