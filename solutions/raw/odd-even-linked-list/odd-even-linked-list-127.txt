/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode odd = head, even = head.next, evenHead = even;
        while (even != null && even.next != null) {
            // setting next as alternate elements
            odd.next = odd.next.next;
            even.next = even.next.next;
            // updating current even and odd...as we have already pointed odd and even as next.next....next is alternate element
            odd = odd.next;
            even = even.next;
        }
        // connecting odd end with even head
        odd.next = evenHead;
        return head;
    }
}
