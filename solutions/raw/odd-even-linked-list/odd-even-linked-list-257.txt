/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode arg) {
        if (arg == null) {
            return arg;
        }
        if (arg.next == null || arg.next.next == null) {
            return arg;
        }
        ListNode nextOdd = null;
        ListNode nextEven = null;
        ListNode odd = arg;
        ListNode even = arg.next;
        ListNode firstEven = arg.next;
        ListNode lastOdd = odd;
        while (odd != null && even != null) {
            nextOdd = (odd == null || odd.next == null) ? null : odd.next.next;
            if (nextOdd != null) {
                lastOdd = nextOdd;
            }
            nextEven = (even == null || even.next == null) ? null : even.next.next;
            if (odd != null) {
                odd.next = nextOdd;
            }
            if (even != null) {
                even.next = nextEven;
            }
            odd = nextOdd;
            even = nextEven;
        }
        lastOdd.next = firstEven;
        return arg;
    }
}
