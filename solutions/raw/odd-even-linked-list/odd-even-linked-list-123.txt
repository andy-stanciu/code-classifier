/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        ListNode oddList = new ListNode();
        ListNode evenList = new ListNode();
        ListNode curr = head, evenCurr = evenList, oddCurr = oddList;
        int flag = 1;
        while (curr != null) {
            if (flag == 0) {
                evenCurr.next = curr;
                evenCurr = evenCurr.next;
                curr = curr.next;
                evenCurr.next = null;
                flag = 1;
            } else {
                oddCurr.next = curr;
                oddCurr = oddCurr.next;
                curr = curr.next;
                oddCurr.next = null;
                flag = 0;
            }
        }
        if (oddList.next == null)
            return evenList.next;
        else if (evenList.next == null)
            return oddList.next;
        oddList = oddList.next;
        oddCurr.next = evenList.next;
        return oddList;
    }
}
