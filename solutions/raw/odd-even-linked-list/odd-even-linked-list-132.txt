/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null)
            return head;
        ListNode slow = head;
        ListNode fast = head.next;
        ListNode fasthead = head.next;
        while (slow.next != null && fast.next != null) {
            // keep odd indices
            slow.next = slow.next.next;
            slow = slow.next;
            //keep even indices
            fast.next = fast.next.next;
            fast = fast.next;
        }
        // connect last node of od indices linkedlist with first node of even indices linkedlist
        slow.next = fasthead;
        return head;
    }
}
