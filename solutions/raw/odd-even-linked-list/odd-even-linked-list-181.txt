/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode odd = head;
        ListNode even = head.next;
        ListNode res = null;
        ListNode tail = null;
        while (odd != null) {
            ListNode newnode = new ListNode(odd.val);
            if (res == null) {
                res = newnode;
                tail = newnode;
            } else {
                tail.next = newnode;
                tail = newnode;
            }
            if (odd.next == null) {
                break;
            }
            odd = odd.next.next;
        }
        while (even != null) {
            ListNode newnode = new ListNode(even.val);
            tail.next = newnode;
            tail = newnode;
            if (even.next == null) {
                break;
            }
            even = even.next.next;
        }
        return res;
    }
}
