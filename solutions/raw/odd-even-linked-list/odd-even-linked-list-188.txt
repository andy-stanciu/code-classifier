class Solution {

    public ListNode oddEvenList(ListNode head) {
        // for list of 0,1,or2 length, the original list is the same
        if (head == null || head.next == null || head.next.next == null) {
            return head;
        }
        ListNode odd = head;
        ListNode oddTail = head;
        ListNode even = head.next;
        ListNode evenTail = head.next;
        int i = 3;
        ListNode curr = head.next.next;
        while (curr != null) {
            if (i % 2 == 0) {
                evenTail.next = curr;
                evenTail = curr;
            } else {
                oddTail.next = curr;
                oddTail = curr;
            }
            i++;
            curr = curr.next;
        }
        // remove circular loop
        evenTail.next = null;
        oddTail.next = even;
        return odd;
    }
}
