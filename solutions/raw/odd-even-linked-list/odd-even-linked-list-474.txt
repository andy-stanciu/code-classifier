/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null)
            return head;
        ListNode oddHead = null, oddTail = null;
        ListNode evenHead = null, evenTail = null;
        ListNode current = head;
        int currentIndex = 1;
        while (current != null) {
            ListNode nodeToBeAdded = current;
            current = current.next;
            nodeToBeAdded.next = null;
            if (currentIndex % 2 == 0) {
                if (evenHead == null) {
                    evenHead = nodeToBeAdded;
                    evenTail = nodeToBeAdded;
                } else {
                    evenTail.next = nodeToBeAdded;
                    evenTail = evenTail.next;
                }
            } else {
                if (oddHead == null) {
                    oddHead = nodeToBeAdded;
                    oddTail = nodeToBeAdded;
                } else {
                    oddTail.next = nodeToBeAdded;
                    oddTail = oddTail.next;
                }
            }
            currentIndex++;
        }
        oddTail.next = evenHead;
        return head;
    }
}
