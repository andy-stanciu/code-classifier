/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        ListNode ans = new ListNode();
        ListNode headAns = ans;
        if (head == null)
            return null;
        if (head.next == null)
            return head;
        ListNode head1 = head;
        ListNode head2 = head.next;
        while (head1 != null) {
            ans.next = new ListNode(head1.val);
            ans = ans.next;
            if (head1.next != null && head1.next.next != null)
                head1 = head1.next.next;
            else
                break;
        }
        while (head2 != null) {
            ans.next = new ListNode(head2.val);
            ans = ans.next;
            if (head2.next != null && head2.next.next != null)
                head2 = head2.next.next;
            else
                break;
        }
        return headAns.next;
    }
}
