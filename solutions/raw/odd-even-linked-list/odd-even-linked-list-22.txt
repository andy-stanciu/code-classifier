/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode oddNode = null;
        ListNode evenNode = null;
        ListNode evenNodeHead = null;
        ListNode currNode = head;
        int index = 1;
        while (currNode != null) {
            if (index % 2 == 0) {
                if (evenNode == null) {
                    evenNodeHead = currNode;
                    evenNode = currNode;
                } else {
                    evenNode.next = currNode;
                    evenNode = evenNode.next;
                }
            } else {
                if (oddNode == null) {
                    oddNode = currNode;
                } else {
                    oddNode.next = currNode;
                    oddNode = oddNode.next;
                }
            }
            index++;
            currNode = currNode.next;
        }
        oddNode.next = evenNodeHead;
        evenNode.next = null;
        return head;
    }
}
