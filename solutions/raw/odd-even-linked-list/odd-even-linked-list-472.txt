/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null) {
            return null;
        }
        if (head.next == null) {
            return head;
        }
        ListNode odd = head;
        ListNode even = head.next;
        //for store the starting the even list
        ListNode evenStart = head.next;
        while (odd.next != null && odd.next.next != null) {
            // this condintion for odd size linkelist and even size linkedlist
            odd.next = even.next;
            odd = even.next;
            even.next = odd.next;
            even = odd.next;
        }
        // after compliting loop simple connect our odd list to the even list with evenStart node
        odd.next = evenStart;
        return head;
    }
}
