/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null)
            //if list is empty
            return head;
        ListNode t1 = head, t2 = head.next, th = t2;
        while (t2 != null && t2.next != null) {
            //connect all odd nodes
            t1.next = t1.next.next;
            //connect all even nodes
            t2.next = t2.next.next;
            //move pointer to second odd node previously connected
            t1 = t1.next;
            t2 = t2.next;
        }
        //connect even list to end of odd list
        t1.next = th;
        return head;
    }
}
