/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode odd = head;
        ListNode tempO = odd;
        ListNode even = head.next;
        ListNode tempE = even;
        while (tempO.next != null) {
            // connecting odd indices nodes
            tempO.next = tempO.next.next;
            if (tempE.next == null)
                break;
            //connecting even indices nodes
            tempE.next = tempE.next.next;
            tempO = tempO.next;
            tempE = tempE.next;
        }
        //connecting the final odd list to even list
        tempO.next = even;
        return head;
    }
}
