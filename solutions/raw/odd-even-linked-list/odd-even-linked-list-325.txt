/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null) {
            return null;
        }
        if (head.next == null) {
            return head;
        }
        ListNode odd = head;
        ListNode oddN = new ListNode(odd.val);
        // tao ra mot con tro ten la "oddP" cua ListNode "oddN"
        ListNode oddP = oddN;
        ListNode even = head.next;
        // tao ra ListNode "evenN"
        ListNode evenN = new ListNode(even.val);
        // tao ra con tro ten la "evenP" cua ListNode "evenN"
        ListNode evenP = evenN;
        // odd==null || even==null
        // 1,3,4,7,1,2,6
        while (odd.next != null && even.next != null) {
            odd = odd.next.next;
            if (odd != null) {
                oddP.next = new ListNode(odd.val);
                oddP = oddP.next;
            }
            even = even.next.next;
            if (even != null) {
                evenP.next = new ListNode(even.val);
                evenP = evenP.next;
            }
        }
        oddP.next = evenN;
        return oddN;
    }
}
