/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ArrayList<Integer> oddlist = new ArrayList<>();
        ArrayList<Integer> evenlist = new ArrayList<>();
        boolean isOdd = false;
        ListNode temp = head;
        while (temp != null) {
            if (isOdd) {
                oddlist.add(temp.val);
            } else {
                evenlist.add(temp.val);
            }
            isOdd = !isOdd;
            temp = temp.next;
        }
        temp = head;
        int i = 0;
        while (i < evenlist.size()) {
            temp.val = evenlist.get(i);
            i++;
            temp = temp.next;
        }
        i = 0;
        while (i < oddlist.size()) {
            temp.val = oddlist.get(i);
            i++;
            temp = temp.next;
        }
        return head;
    }
}
