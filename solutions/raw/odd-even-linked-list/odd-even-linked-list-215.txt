/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode odd = head;
        ListNode temp1 = odd;
        ListNode even = head.next;
        ListNode temp2 = even;
        while (even != null && even.next != null) {
            odd.next = odd.next.next;
            odd = odd.next;
            even.next = even.next.next;
            even = even.next;
        }
        odd.next = temp2;
        return temp1;
        //     ListNode odd = new ListNode(40);
        //     ListNode odd1 = odd;
        //     ListNode even = new ListNode(70);
        //     ListNode even1 = even;
        //     ListNode temp = head;
        //    while(temp !=null){
        //     if(temp.val%2!=0){
        //         odd.next = temp;
        //         odd = temp;
        //         temp = temp.next;
        //     }
        //     else {
        //         even.next = temp;
        //         even = temp;
        //         temp = temp.next;
        //     }
        //    }
        //     odd.next = even1.next;
        //     return odd1.next;
    }
}
