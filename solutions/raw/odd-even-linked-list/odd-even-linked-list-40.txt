/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null) {
            return head;
        }
        ListNode odd = null;
        ListNode currOdd = odd;
        ListNode even = null;
        ListNode currEven = even;
        ListNode temp = head;
        while (temp != null) {
            if (odd == null) {
                currOdd = temp;
                odd = currOdd;
            } else {
                currOdd.next = temp;
                currOdd = currOdd.next;
            }
            if (even == null) {
                currEven = temp.next;
                even = currEven;
            } else {
                currEven.next = temp.next;
                currEven = currEven.next;
            }
            temp = temp.next != null ? temp.next.next : null;
        }
        currOdd.next = even;
        return odd;
    }
}
