/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        //creating 2 dummy lists
        //one for storing odd nodes and other for even nodes
        ListNode oddDummy = new ListNode(-1), oddTail = oddDummy;
        ListNode evenDummy = new ListNode(-1), evenTail = evenDummy;
        ListNode temp = head;
        int index = 1;
        while (temp != null) {
            if (index % 2 != 0) {
                oddTail.next = temp;
                oddTail = oddTail.next;
            } else {
                evenTail.next = temp;
                evenTail = evenTail.next;
            }
            index++;
            temp = temp.next;
        }
        evenTail.next = null;
        oddTail.next = evenDummy.next;
        return oddDummy.next;
    }
}
