/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode odd, even;
        odd = new ListNode(head.val);
        even = new ListNode(head.next.val);
        ListNode t_odd = odd;
        ListNode t_even = even;
        head = head.next.next;
        while (head != null && head.next != null) {
            t_odd.next = new ListNode(head.val);
            t_even.next = new ListNode(head.next.val);
            t_even = t_even.next;
            t_odd = t_odd.next;
            head = head.next.next;
        }
        if (head != null) {
            t_odd.next = new ListNode(head.val);
            t_odd = t_odd.next;
        }
        t_odd.next = even;
        return odd;
    }
}
