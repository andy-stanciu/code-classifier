/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        //edge case
        if (head == null || head.next == null) {
            return head;
        }
        ListNode odd = new ListNode();
        ListNode oddPtr = odd;
        ListNode even = new ListNode();
        ListNode evenPtr = even;
        int index = 1;
        while (head != null) {
            if (index % 2 == 0) {
                evenPtr.next = head;
                evenPtr = evenPtr.next;
            } else {
                oddPtr.next = head;
                oddPtr = oddPtr.next;
            }
            head = head.next;
            index++;
        }
        evenPtr.next = null;
        oddPtr.next = even.next;
        return odd.next;
    }
}
