/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null) {
            return null;
        }
        ListNode odd = head;
        ListNode even = head.next;
        ListNode evenhead = even;
        while (odd != null && odd.next != null && odd.next.next != null && even != null) {
            ListNode frontodd = odd.next.next;
            odd.next = frontodd;
            odd = frontodd;
            ListNode fronteven = even.next.next;
            even.next = fronteven;
            even = fronteven;
        }
        odd.next = evenhead;
        if (even != null) {
            even.next = null;
        }
        return head;
    }
}
