/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        ListNode odd = null;
        ListNode even = null;
        ListNode ptr1 = head;
        ListNode ptr2 = head;
        if (head == null || head.next == null)
            return head;
        while (head != null && head.next != null) {
            if (odd == null && even == null) {
                odd = head;
                even = head.next;
                ptr1 = odd;
                ptr2 = head.next;
            } else {
                ptr1.next = head;
                ptr1 = ptr1.next;
                ptr2.next = head.next;
                ptr2 = ptr2.next;
            }
            head = head.next.next;
        }
        ptr2.next = null;
        if (head != null) {
            ptr1.next = head;
            ptr1 = ptr1.next;
            ptr1.next = null;
        }
        head = odd;
        ptr1.next = even;
        return head;
    }
}
