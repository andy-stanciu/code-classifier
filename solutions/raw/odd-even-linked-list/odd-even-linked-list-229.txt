/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode oddHead = new ListNode(-1);
        ListNode oddTail = oddHead;
        ListNode evenHead = new ListNode(-1);
        ListNode evenTail = evenHead;
        ListNode curr = head;
        ListNode temp;
        boolean flag = true;
        while (curr != null) {
            temp = curr;
            curr = curr.next;
            temp.next = null;
            if (flag == true) {
                oddTail.next = temp;
                oddTail = temp;
                flag = false;
            } else {
                evenTail.next = temp;
                evenTail = temp;
                flag = true;
            }
        }
        oddTail.next = evenHead.next;
        return oddHead.next;
    }
}
