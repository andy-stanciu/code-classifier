/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null)
            return head;
        ListNode even = head.next, odd = head, mover = head.next.next, tempO = odd, tempE = even;
        int count = 3;
        while (mover != null) {
            if (count % 2 == 1) {
                tempO.next = mover;
                tempO = tempO.next;
                mover = mover.next;
                count++;
            } else {
                tempE.next = mover;
                tempE = tempE.next;
                mover = mover.next;
                count++;
            }
        }
        tempE.next = null;
        tempO.next = even;
        return odd;
    }
}
