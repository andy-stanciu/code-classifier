class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null)
            return head;
        ListNode copy1 = head.next.next;
        ListNode copy2 = head.next;
        ListNode odd = new ListNode(head.val);
        ListNode o = odd;
        while (copy1 != null) {
            odd.next = new ListNode(copy1.val);
            odd = odd.next;
            copy1 = copy1.next;
            if (copy1 != null)
                copy1 = copy1.next;
        }
        ListNode even = new ListNode(0);
        ListNode e = even;
        while (copy2 != null) {
            even.next = new ListNode(copy2.val);
            even = even.next;
            copy2 = copy2.next;
            if (copy2 != null)
                copy2 = copy2.next;
        }
        odd.next = e.next;
        return o;
    }
}
