/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null)
            return head;
        ListNode evenHead = head.next;
        ListNode even = head.next;
        ListNode odd = head;
        ListNode evenNext = even.next.next;
        ListNode oddNext = odd.next.next;
        while (oddNext != null || evenNext != null) {
            odd.next = oddNext;
            odd = odd.next;
            odd.next = evenHead;
            even.next = evenNext;
            if (evenNext == null)
                return head;
            even = even.next;
            oddNext = even.next;
            if (oddNext == null)
                return head;
            evenNext = oddNext.next;
        }
        return head;
    }
}
