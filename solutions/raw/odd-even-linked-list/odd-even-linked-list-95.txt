class Solution {

    public ListNode oddEvenList(ListNode head) {
        ArrayList<Integer> odd = new ArrayList<>();
        ArrayList<Integer> even = new ArrayList<>();
        ListNode ptr = head;
        int a = 1;
        while (ptr != null) {
            if (a % 2 == 0)
                even.add(ptr.val);
            else
                odd.add(ptr.val);
            ptr = ptr.next;
            a++;
        }
        System.out.println(odd);
        System.out.println(even);
        ListNode res = new ListNode();
        ptr = res;
        if (!odd.isEmpty()) {
            ptr.next = new ListNode(odd.get(0));
            ptr = ptr.next;
            System.out.println(odd.get(0));
            for (int i = 1; i < odd.size(); i++) {
                ptr.next = new ListNode(odd.get(i));
                ptr = ptr.next;
            }
        }
        if (!even.isEmpty()) {
            ptr.next = new ListNode(even.get(0));
            ptr = ptr.next;
            for (int i = 1; i < even.size(); i++) {
                ptr.next = new ListNode(even.get(i));
                ptr = ptr.next;
            }
        }
        return res.next;
    }
}
