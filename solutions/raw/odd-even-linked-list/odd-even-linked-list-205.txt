/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public static ListNode odd_even(ListNode head) {
        ListNode cur = head;
        ListNode t1 = new ListNode(-1);
        ListNode odd = t1;
        ListNode t2 = new ListNode(-1);
        ListNode even = t2;
        int cnt = 1;
        while (cur != null) {
            int num = cur.val;
            if (cnt % 2 != 0) {
                odd.next = cur;
                odd = cur;
            } else {
                even.next = cur;
                even = cur;
            }
            cnt++;
            cur = cur.next;
        }
        even.next = null;
        if (t1.next == null) {
            return t2.next;
        } else {
            odd.next = t2.next;
            return t1.next;
        }
    }

    public ListNode oddEvenList(ListNode head) {
        ListNode cur = odd_even(head);
        return cur;
    }
}
