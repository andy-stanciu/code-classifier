/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        ListNode temp = head;
        int size = 0;
        while (temp != null) {
            size++;
            temp = temp.next;
        }
        temp = head;
        ArrayList<Integer> odd = new ArrayList<>();
        ArrayList<Integer> even = new ArrayList<>();
        for (int i = 1; i < size + 1; i++) {
            if (i % 2 != 0) {
                odd.add(temp.val);
            } else {
                even.add(temp.val);
            }
            temp = temp.next;
        }
        temp = head;
        for (int i = 0; i < odd.size(); i++) {
            temp.val = odd.get(i);
            temp = temp.next;
        }
        for (int i = 0; i < even.size(); i++) {
            temp.val = even.get(i);
            temp = temp.next;
        }
        return head;
    }
}
