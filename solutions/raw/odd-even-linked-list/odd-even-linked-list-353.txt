/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null) {
            return head;
        }
        ListNode start = head;
        ListNode end = head;
        while (end.next != null) {
            end = end.next;
        }
        ListNode tempEnd = end;
        while (start != null && start != end) {
            ListNode next = start.next;
            if (next != null) {
                // connext odd with odd
                start.next = next.next;
                // connect even to even
                tempEnd.next = next;
                next.next = null;
                // move end to end
                tempEnd = tempEnd.next;
                start = start.next;
                if (end == tempEnd) {
                    break;
                }
            } else {
                start.next = next;
            }
        }
        return head;
    }
}
