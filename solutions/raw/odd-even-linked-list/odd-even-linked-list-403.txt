/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    static ListNode ans;

    public static ListNode oddEvenList(ListNode head) {
        if (head == null) {
            return null;
        }
        ans = null;
        ListNode first = head;
        ListNode second = head.next;
        while (first != null) {
            addLast(first.val);
            first = (first.next != null) ? first.next.next : null;
        }
        // Traverse the even nodes next
        while (second != null) {
            addLast(second.val);
            second = (second.next != null) ? second.next.next : null;
        }
        return ans;
    }

    public static void addLast(int val) {
        ListNode newNode = new ListNode(val);
        if (ans == null) {
            ans = newNode;
            return;
        }
        ListNode temp = ans;
        while (temp.next != null) {
            temp = temp.next;
        }
        temp.next = newNode;
        newNode.next = null;
    }
}
