class Solution {

    public int maxProfit(int[] prices) {
        int[][] dp = new int[prices.length][2];
        for (int[] ar : dp) {
            Arrays.fill(ar, -1);
        }
        return f(0, 1, prices, 0, dp);
    }

    public static int f(int i, int buy, int[] prices, int profit, int[][] dp) {
        if (i == prices.length)
            return 0;
        if (dp[i][buy] != -1)
            return dp[i][buy];
        if (buy == 1) {
            profit = Math.max(-prices[i] + f(i + 1, 0, prices, profit, dp), f(i + 1, 1, prices, profit, dp));
        } else {
            profit = Math.max(prices[i] + f(i + 1, 1, prices, profit, dp), f(i + 1, 0, prices, profit, dp));
        }
        return dp[i][buy] = profit;
    }
}
