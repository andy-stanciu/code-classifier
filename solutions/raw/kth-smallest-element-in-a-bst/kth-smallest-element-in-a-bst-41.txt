/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        // Store all the values of the nodes in this list in ascending order.
        List<Integer> ascList = new ArrayList<Integer>();
        // pass the list as reference.
        helper(root, ascList);
        // k-1 th element of the list is the kth smallest element.
        return ascList.get(k - 1);
    }

    private void helper(TreeNode root, List<Integer> ascList) {
        //Traversing the tree inorder to obtain the values in ascending order and adding them to the list.
        if (root != null) {
            helper(root.left, ascList);
            ascList.add(root.val);
            helper(root.right, ascList);
        }
    }
}
