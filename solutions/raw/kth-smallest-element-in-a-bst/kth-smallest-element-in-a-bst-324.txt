/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        return rank(root, k);
    }

    public int rank(TreeNode root, int k) {
        //System.out.println(root.val+" current ranking to be found is "+k);
        int leftTree = 0;
        if (root.left != null)
            leftTree = size(root.left);
        if (k == leftTree + 1)
            return root.val;
        if (k <= leftTree)
            return rank(root.left, k);
        return rank(root.right, k - leftTree - 1);
    }

    public int size(TreeNode x) {
        return x == null ? 0 : size(x.left) + 1 + size(x.right);
    }
}
