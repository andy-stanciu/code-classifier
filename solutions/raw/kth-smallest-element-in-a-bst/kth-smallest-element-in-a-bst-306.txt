/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallestHelper(TreeNode root, int[] k) {
        if (root == null) {
            return -1;
        }
        int ans = 0;
        ;
        int leftAns = kthSmallestHelper(root.left, k);
        if (leftAns != -1) {
            return leftAns;
        }
        k[0]--;
        if (k[0] == 0) {
            return root.val;
        }
        int rightAns = kthSmallestHelper(root.right, k);
        return rightAns;
    }

    public int kthSmallest(TreeNode root, int k) {
        if (root == null) {
            return -1;
        }
        int[] arr = { k };
        return kthSmallestHelper(root, arr);
    }
}
