/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        List<Integer> lst = new ArrayList<>();
        return kthSmallestRec(root, lst, k);
    }

    public int kthSmallestRec(TreeNode root, List<Integer> arr, int k) {
        if (root == null) {
            return -1;
        }
        int left = kthSmallestRec(root.left, arr, k);
        if (left != -1) {
            return left;
        }
        arr.add(root.val);
        if (arr.size() == k) {
            return root.val;
        }
        return kthSmallestRec(root.right, arr, k);
    }
}
