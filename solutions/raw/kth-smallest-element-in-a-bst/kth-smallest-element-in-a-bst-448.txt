/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        return traversal(root, k).get(k - 1);
    }

    private List<Integer> traversal(TreeNode node, int k) {
        if (node == null) {
            return new ArrayList<Integer>();
        }
        List<Integer> left = traversal(node.left, k);
        left.add(node.val);
        if (left.size() >= k) {
            return left;
        }
        left.addAll(traversal(node.right, k));
        return left;
    }
}
