/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int res = -1;

    public int kthSmallest(TreeNode root, int k) {
        if (null == root.left && null == root.right)
            return root.val;
        inorder(root, k, 0);
        return res;
    }

    int inorder(TreeNode root, int k, int parcel) {
        if (root == null)
            return parcel;
        // left
        parcel = inorder(root.left, k, parcel);
        // root
        parcel = parcel + 1;
        if (parcel == k) {
            res = root.val;
        }
        // right
        parcel = inorder(root.right, k, parcel);
        return parcel;
    }
}
