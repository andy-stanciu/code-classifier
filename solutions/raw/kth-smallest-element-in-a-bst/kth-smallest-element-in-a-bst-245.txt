/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    static int kthSmallest(TreeNode root, int k) {
        List<Integer> elements = new ArrayList<>();
        inOrderTraversal(root, elements);
        if (k - 1 < elements.size()) {
            return elements.get(k - 1);
        } else {
            // If k is out of bounds
            return -1;
        }
    }

    static void inOrderTraversal(TreeNode root, List<Integer> elements) {
        if (root == null) {
            return;
        }
        inOrderTraversal(root.left, elements);
        elements.add(root.val);
        inOrderTraversal(root.right, elements);
    }
}
