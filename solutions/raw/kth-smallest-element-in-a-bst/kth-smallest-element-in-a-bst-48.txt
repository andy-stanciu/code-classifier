/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int kSmallest = Integer.MAX_VALUE;

    private int globalK;

    public int kthSmallest(TreeNode root, int k) {
        this.globalK = k;
        traverse(root);
        return kSmallest;
    }

    private void traverse(TreeNode node) {
        if (node == null)
            return;
        traverse(node.left);
        if (globalK == 1) {
            kSmallest = node.val;
        }
        globalK--;
        traverse(node.right);
    }
}
