/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        TreeNode ans = new TreeNode(0);
        inorderTraversal(root, k, ans);
        return ans.left.val;
    }

    private void inorderTraversal(TreeNode root, int k, TreeNode ans) {
        if (root == null) {
            return;
        }
        inorderTraversal(root.left, k, ans);
        ans.val++;
        if (ans.val == k) {
            ans.left = root;
            return;
        }
        inorderTraversal(root.right, k, ans);
    }
}
