class Solution {

    class IntgerWrapper {

        int value;

        IntgerWrapper(int value) {
            this.value = value;
        }
    }

    public int kthSmallest(TreeNode root, int k) {
        IntgerWrapper toReturn = new IntgerWrapper(0);
        IntgerWrapper iter = new IntgerWrapper(0);
        kthSmallest(root, k, iter, toReturn);
        return toReturn.value;
    }

    public boolean kthSmallest(TreeNode root, int k, IntgerWrapper curr, IntgerWrapper value) {
        if (root == null)
            return false;
        if (kthSmallest(root.left, k, curr, value))
            return true;
        curr.value++;
        if (curr.value == k) {
            value.value = root.val;
            return true;
        }
        if (kthSmallest(root.right, k, curr, value))
            return true;
        return false;
    }
}
