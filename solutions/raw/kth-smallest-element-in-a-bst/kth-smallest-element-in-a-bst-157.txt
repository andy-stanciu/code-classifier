/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static void solve(TreeNode root, int k, int[] ans) {
        if (root == null)
            return;
        solve(root.left, k, ans);
        // Increment count and check if the current node is the kth smallest.
        // result[0] acts as the counter
        ans[0]++;
        if (ans[0] == k) {
            ans[1] = root.val;
            return;
        }
        solve(root.right, k, ans);
    }

    public int kthSmallest(TreeNode root, int k) {
        int[] ans = new int[2];
        solve(root, k, ans);
        return ans[1];
    }
}
