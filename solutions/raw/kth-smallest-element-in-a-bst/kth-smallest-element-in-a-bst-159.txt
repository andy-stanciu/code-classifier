/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void traversal(TreeNode root, List<Integer> mix) {
        if (root == null) {
            return;
        }
        traversal(root.left, mix);
        mix.add(root.val);
        traversal(root.right, mix);
    }

    public int kthSmallest(TreeNode root, int k) {
        List<Integer> mix = new ArrayList<Integer>();
        traversal(root, mix);
        int[] ans = new int[mix.size()];
        for (int i = 0; i < mix.size(); i++) {
            ans[i] = mix.get(i);
        }
        Arrays.sort(ans);
        return ans[k - 1];
    }
}
