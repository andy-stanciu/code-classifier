class Solution {

    public int kthSmallest(TreeNode root, int k) {
        /**
         * Intution: as inorder traversal of BST gives sorted array,
         *         with each traversal, we can increase i, and when i reaches k,
         *         we can just retun the value of that node
         */
        int[] ans = { 0, 0 };
        inorderT(root, k, ans);
        return ans[1];
    }

    private void inorderT(TreeNode root, int k, int[] ans) {
        if (root == null)
            return;
        inorderT(root.left, k, ans);
        if (k == ++ans[0]) {
            ans[1] = root.val;
            return;
        }
        inorderT(root.right, k, ans);
    }
}
