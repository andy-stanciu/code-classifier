/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int small = 0;

    int k;

    public int kthSmallest(TreeNode root, int k) {
        this.k = k;
        if (traverse(root, 1) >= k)
            return small;
        else
            return -1;
    }

    int traverse(TreeNode node, int index) {
        if (node == null) {
            return index;
        }
        if (index > k)
            return index;
        index = traverse(node.left, index);
        if (index == k) {
            small = node.val;
            return index + 1;
        }
        return traverse(node.right, index + 1);
    }
}
