/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        int[] ansArray = new int[2];
        inOrder(root, ansArray, k);
        ansArray[0] = 1;
        return ansArray[1];
    }

    public static void inOrder(TreeNode root, int[] ansArray, int k) {
        if (root == null) {
            return;
        }
        inOrder(root.left, ansArray, k);
        ansArray[0] += 1;
        if (ansArray[0] == k) {
            ansArray[1] = root.val;
        }
        inOrder(root.right, ansArray, k);
    }
}
