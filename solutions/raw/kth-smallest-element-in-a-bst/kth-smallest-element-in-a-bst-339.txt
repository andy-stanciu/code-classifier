/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        return smallerThan(root, k);
    }

    private Integer smallerThan(TreeNode node, int k) {
        int leftValue = 0, rightValue = 0;
        if (node.left != null) {
            leftValue = smallerThan(node.left, k);
            if (leftValue >= 0) {
                return leftValue;
            }
            k = k + leftValue;
        }
        if (k == 1) {
            return node.val;
        }
        if (node.right != null) {
            rightValue = smallerThan(node.right, k - 1);
            if (rightValue >= 0) {
                return rightValue;
            }
        }
        return leftValue + rightValue - 1;
    }
}
