/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        //inorder traversal is sorted so add it pq
        ArrayList<Integer> list = new ArrayList<>();
        int val = 0;
        getInorder(root, list);
        //PriorityQueue<Integer> pq=new PriorityQueue<>();
        for (int i = 0; i < k; i++) {
            val = list.get(i);
        }
        return val;
    }

    public static void getInorder(TreeNode root, ArrayList<Integer> list) {
        if (root == null) {
            return;
        }
        getInorder(root.left, list);
        list.add(root.val);
        // pq.add(root.val);
        getInorder(root.right, list);
        //return list;
    }
}
