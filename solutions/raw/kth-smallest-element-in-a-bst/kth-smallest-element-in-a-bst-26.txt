//traversing R-N-L
class Solution {

    public int kthLargest(TreeNode root, int k) {
        Stack<TreeNode> stack = new Stack<>();
        TreeNode current = root;
        while (current != null || !stack.isEmpty()) {
            while (current != null) {
                stack.push(current);
                // Traverse right subtree
                current = current.right;
            }
            current = stack.pop();
            k--;
            if (k == 0) {
                return current.val;
            }
            // Traverse left subtree
            current = current.left;
        }
        // If k is out of bounds
        return root.val;
    }
}
