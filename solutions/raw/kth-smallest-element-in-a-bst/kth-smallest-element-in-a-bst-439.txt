/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int ans = -1;

    int count = 0;

    public int kthSmallest(TreeNode root, int k) {
        //using morris inorder
        if (root == null) {
            return -1;
        }
        TreeNode cur = root;
        while (cur != null) {
            if (cur.left == null) {
                count++;
                if (count == k) {
                    ans = cur.val;
                    break;
                }
                cur = cur.right;
            } else {
                TreeNode temp = cur.left;
                while (temp.right != null && temp.right != cur) {
                    temp = temp.right;
                }
                if (temp.right == null) {
                    temp.right = cur;
                    cur = cur.left;
                } else {
                    temp.right = null;
                    count++;
                    if (count == k) {
                        ans = cur.val;
                        break;
                    }
                    cur = cur.right;
                }
            }
        }
        return ans;
    }
}
