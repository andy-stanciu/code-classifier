class Solution {

    // Counter for visited nodes
    public int idx = 0;

    // Variable to store the kth smallest element
    public int ans = 0;

    // Helper method to perform in-order traversal
    public void solve(TreeNode root, int k) {
        if (root == null) {
            // Base case: if the node is null, return
            return;
        }
        // Traverse the left subtree
        solve(root.left, k);
        // Increment the counter when visiting the current node
        idx++;
        // If the current node is the kth smallest, store its value
        if (idx == k)
            ans = root.val;
        // Traverse the right subtree
        solve(root.right, k);
    }

    // Main method to find the kth smallest element
    public int kthSmallest(TreeNode root, int k) {
        // Start in-order traversal
        solve(root, k);
        // Return the kth smallest element
        return ans;
    }
}
