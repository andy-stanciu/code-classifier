/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int kCount = 0;

    int ans = -1;

    public int kthSmallest(TreeNode root, int k) {
        //Go in order until you hit k
        if (root == null || kCount > k) {
            return ans;
        }
        kthSmallest(root.left, k);
        //Process root
        kCount++;
        if (k == kCount) {
            ans = root.val;
            return root.val;
        }
        kthSmallest(root.right, k);
        return ans;
    }
}
