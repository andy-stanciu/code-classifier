/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        int[] val = new int[] { k };
        return preWithK(root, val);
    }

    public int preWithK(TreeNode root, int[] val) {
        int l = -1, r = -1;
        if (root.left != null) {
            l = preWithK(root.left, val);
        }
        val[0]--;
        if (val[0] == 0)
            return root.val;
        if (root.right != null) {
            r = preWithK(root.right, val);
        }
        if (l != -1)
            return l;
        if (r != -1)
            return r;
        return -1;
    }
}
