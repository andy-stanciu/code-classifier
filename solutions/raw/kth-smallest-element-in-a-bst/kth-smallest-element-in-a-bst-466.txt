/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        return dfs(root, k, new int[1]);
    }

    private int dfs(TreeNode root, int k, int[] count) {
        if (root == null)
            return -1;
        int result = dfs(root.left, k, count);
        if (result != -1) {
            return result;
        }
        count[0]++;
        if (k == count[0]) {
            return root.val;
        }
        return dfs(root.right, k, count);
    }
}
