/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int kthSmallest(TreeNode root, int k) {
        Queue<Integer> queue = new PriorityQueue();
        populateNodes(root, queue);
        int res = -1;
        while (k-- > 0) {
            res = queue.poll();
        }
        return res;
    }

    private void populateNodes(TreeNode root, Queue<Integer> queue) {
        if (root == null)
            return;
        queue.add(root.val);
        populateNodes(root.left, queue);
        populateNodes(root.right, queue);
    }
}
