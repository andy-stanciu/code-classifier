/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    PriorityQueue<Integer> result = new PriorityQueue<>();

    public int kthSmallest(TreeNode root, int k) {
        dfs(root);
        int z = 1;
        while (z++ < k) {
            result.poll();
        }
        return result.peek();
    }

    void dfs(TreeNode root) {
        if (root == null)
            return;
        result.add(root.val);
        dfs(root.left);
        dfs(root.right);
    }
}
