class Solution {

    public String longestPalindrome(String s) {
        int start = 0;
        int end = 0;
        int sLen = s.length();
        for (int i = 0; i < sLen; ++i) {
            int len1 = expandAroundCenter(s, i, i);
            int len2 = expandAroundCenter(s, i, i + 1);
            int curMax = Math.max(len1, len2);
            if (curMax > (end - start)) {
                start = i - (curMax - 1) / 2;
                end = i + curMax / 2;
            }
        }
        return s.substring(start, end + 1);
    }

    private int expandAroundCenter(String s, int start, int end) {
        int left = start;
        int right = end;
        //int len = s.length();
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--;
            right++;
        }
        return (right - left - 1);
    }
}
