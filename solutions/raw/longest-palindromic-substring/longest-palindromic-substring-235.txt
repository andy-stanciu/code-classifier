class Solution {

    String res = "";

    int resLen = 0;

    public String longestPalindrome(String s) {
        if (s == null) {
            return "";
        }
        for (int i = 0; i < s.length(); i++) {
            // for odd subStrings
            countPaliSubString(s, i, i);
            // for even subStrings
            countPaliSubString(s, i, i + 1);
        }
        return res;
    }

    private void countPaliSubString(String s, int i, int j) {
        int l = i;
        int r = j;
        // we r picking an element of string and then going left and right directions from
        // that particular element and we r doing for each element.
        while (l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)) {
            if (r - l + 1 > resLen) {
                res = s.substring(l, r + 1);
                resLen = r - l + 1;
            }
            l--;
            r++;
        }
    }
}
