class Solution {

    public String longestPalindrome(String s) {
        return findPalindrome(s, s.length());
    }

    private String findPalindrome(String s, int slidingWindowLength) {
        for (int i = 0; i <= s.length() - slidingWindowLength; i++) {
            String substring = s.substring(i, i + slidingWindowLength);
            if (isPalindrome(substring)) {
                return substring;
            }
        }
        slidingWindowLength--;
        return findPalindrome(s, slidingWindowLength);
    }

    private boolean isPalindrome(String s) {
        var left = 0;
        var right = s.length() - 1;
        while (left < right) {
            if (!Objects.equals(s.charAt(left), s.charAt(right))) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}
