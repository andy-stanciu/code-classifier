class Solution {

    public String longestPalindrome(String s) {
        int len = s.length();
        int max = 0;
        int[][] dp = new int[len][len];
        int i = 0, j = 0;
        String ans = null;
        for (int diff = 0; diff < len; diff++) {
            for (i = 0, j = i + diff; j < len; i++, j++) {
                if (i == j) {
                    dp[i][j] = 1;
                } else if (diff == 1) {
                    if (s.charAt(i) == s.charAt(j)) {
                        dp[i][j] = 2;
                    } else {
                        dp[i][j] = 0;
                    }
                } else {
                    if (s.charAt(i) == s.charAt(j) && dp[i + 1][j - 1] > 0) {
                        dp[i][j] = 2 + dp[i + 1][j - 1];
                    }
                }
                if (dp[i][j] > 0) {
                    if (j - i + 1 > max) {
                        max = j - i + 1;
                        ans = s.substring(i, max + i);
                    }
                }
            }
        }
        return ans;
    }
}
