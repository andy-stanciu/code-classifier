class Solution {

    public String longestPalindrome(String A) {
        int max = 1;
        int max_left = 0;
        int max_right = 0;
        for (int i = 0; i < A.length(); i++) {
            int left = i;
            int right = i;
            while (left >= 0 && right < A.length()) {
                if (A.charAt(left) == A.charAt(right)) {
                    left--;
                    right++;
                } else
                    break;
            }
            if (max < right - left - 1) {
                max = right - left - 1;
                max_left = left;
                max_right = right;
            }
        }
        for (int i = 0; i < A.length(); i++) {
            int left = i, right = i + 1;
            while (left >= 0 && right < A.length()) {
                if (A.charAt(left) == A.charAt(right)) {
                    left--;
                    right++;
                } else
                    break;
            }
            if (max < right - left - 1) {
                max = right - left - 1;
                max_left = left;
                max_right = right;
            }
        }
        if (max == 1)
            return A.substring(0, 1);
        return A.substring(max_left + 1, max_right);
    }
}
