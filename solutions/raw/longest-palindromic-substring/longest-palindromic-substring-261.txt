class Solution {

    public String longestPalindrome(String s) {
        int n = s.length();
        String maxLength = s.substring(0, 1);
        if (n <= 1) {
            return s;
        }
        for (int i = 0; i < n - 1; i++) {
            String odd = Palindrome(s, i, i);
            String even = Palindrome(s, i, i + 1);
            if (odd.length() > maxLength.length()) {
                maxLength = odd;
            }
            if (even.length() > maxLength.length()) {
                maxLength = even;
            }
        }
        return maxLength;
    }

    private String Palindrome(String s, int left, int right) {
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--;
            right++;
        }
        return s.substring(left + 1, right);
    }
}
