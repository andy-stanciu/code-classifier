class Solution {

    public String longestPalindrome(String s) {
        if (s.length() == 1) {
            return s;
        }
        int max_len = 1;
        String s1 = s.substring(0, 1);
        for (int i = 0; i < s.length(); i++) {
            int p1 = i - 1;
            int p2 = i + 1;
            while ((p1 >= 0 && p2 < s.length()) && s.charAt(p1) == s.charAt(p2)) {
                p1--;
                p2++;
            }
            if (p2 - p1 - 1 > max_len) {
                max_len = p2 - p1 - 1;
                s1 = s.substring(p1 + 1, p2);
            }
            p1 = i;
            p2 = i + 1;
            while ((p1 >= 0 && p2 < s.length()) && (s.charAt(p1) == s.charAt(p2))) {
                p1--;
                p2++;
            }
            if (p2 - p1 - 1 > max_len) {
                max_len = p2 - p1 - 1;
                s1 = s.substring(p1 + 1, p2);
            }
        }
        return s1;
    }
}
