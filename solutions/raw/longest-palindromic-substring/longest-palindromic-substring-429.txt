class Solution {

    public String longestPalindrome(String s) {
        if (s.length() == 1) {
            return s;
        }
        char[] chars = s.toCharArray();
        int max = 0;
        String result = s.substring(0, 1);
        for (int i = 0, length = chars.length; i < length; i++) {
            for (int j = i + 1; j < length; j++) {
                if (isPolindromic(chars, i, j)) {
                    int polindromeLength = j - i;
                    if (polindromeLength > max) {
                        max = polindromeLength;
                        result = s.substring(i, j + 1);
                    }
                }
            }
        }
        return result;
    }

    private boolean isPolindromic(final char[] chars, final int from, final int to) {
        for (int i = 0, length = to - from; i < length; i++) {
            char c1 = chars[i + from];
            char c2 = chars[to - i];
            if (c1 != c2) {
                return false;
            }
        }
        return true;
    }
}
