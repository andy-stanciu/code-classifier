class Solution {

    static int count = 1;

    static int max = 1;

    static String str = "";

    public static String longestPalindrome(String s) {
        count = 1;
        max = 1;
        str = "";
        if (!s.isEmpty() && s.length() != 1) {
            for (int i = 1; i <= s.length() / 2; i++) {
                for (int j = 1; i + j < s.length() && j <= i; j++) {
                    if (s.charAt(i - j) == s.charAt(i + j)) {
                        count += 2;
                        if (count > max) {
                            str = s.substring(i - j, i + j + 1);
                        }
                        ;
                        if (count > max)
                            max = count;
                        ;
                    } else {
                        if (count > max)
                            max = count;
                        ;
                        count = 1;
                        break;
                    }
                }
                count = 1;
            }
            int half = s.length() / 2;
            if (s.length() % 2 == 1) {
                half += 1;
            }
            for (int i = s.length() - 2; i >= half; i--) {
                for (int j = 1; j <= s.length() - i - 1; j++) {
                    if (s.charAt(i - j) == s.charAt(i + j)) {
                        count += 2;
                        if (count > max) {
                            str = s.substring(i - j, i + j + 1);
                        }
                        ;
                        if (count > max)
                            max = count;
                        ;
                    } else {
                        if (count > max)
                            max = count;
                        ;
                        count = 1;
                        break;
                    }
                }
                count = 1;
            }
            for (int i = 0; i < s.length() - 1; i++) {
                if (s.charAt(i) == s.charAt(i + 1)) {
                    count = 2;
                    if (count > max) {
                        str = s.substring(i, i + 2);
                    }
                    for (int j = 1; j < i || j + i < s.length(); j++) {
                        if (i - j < 0 || i + 1 + j > s.length() - 1) {
                            break;
                        } else {
                            if (s.charAt(i - j) == s.charAt(i + 1 + j)) {
                                count += 2;
                                if (count > max) {
                                    str = s.substring(i - j, i + j + 2);
                                    max = count;
                                    ;
                                }
                            } else {
                                if (count > max)
                                    max = count;
                                ;
                                count = 1;
                                break;
                            }
                        }
                    }
                }
            }
        }
        if (str.isEmpty()) {
            str = String.valueOf(s.charAt(0));
        }
        return str;
    }
}
