class Solution {

    public String longestPalindrome(String s) {
        int maxLength = 0;
        String resultString = s.charAt(0) + "";
        for (int i = 0; i < s.length(); i++) {
            for (int j = s.length() - 1; j > i; j--) {
                if (s.charAt(i) == s.charAt(j)) {
                    String mot = s.substring(i, j + 1);
                    if (verifPalindrome(mot)) {
                        if (maxLength < mot.length()) {
                            maxLength = mot.length();
                            resultString = mot;
                        }
                    }
                }
            }
        }
        return resultString;
    }

    public boolean verifPalindrome(String s) {
        boolean result = true;
        for (int i = 0; i <= (s.length()) / 2; i++) {
            if (s.charAt(i) != s.charAt(s.length() - 1 - i))
                result = false;
        }
        return result;
    }
}
