class Solution {

    int start = 0;

    int end = 0;

    public String longestPalindrome(String s) {
        char[] ch = s.toCharArray();
        int len = ch.length;
        for (int i = 0; i < len; i++) {
            int left = i;
            int right = i;
            // odd take 1 num and check
            getPalindromicLength(ch, i, i);
            // even take 2 num and check
            getPalindromicLength(ch, i, i + 1);
            if (start == 0 && end == len - 1)
                break;
        }
        return s.substring(start, end + 1);
    }

    public void getPalindromicLength(char[] ch, int left, int right) {
        while (left >= 0 && right < ch.length && ch[left] == ch[right]) {
            left--;
            right++;
        }
        if ((end - start) < ((right - 1) - (left + 1))) {
            start = left + 1;
            end = right - 1;
        }
        return;
    }
}
