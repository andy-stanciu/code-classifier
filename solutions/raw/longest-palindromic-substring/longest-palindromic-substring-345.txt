class Solution {

    public int maxLength = 0;

    public int start = 0;

    public String longestPalindrome(String s) {
        if (s == null || s.length() < 1)
            return "";
        for (int i = 0; i < s.length(); i++) {
            // Odd length palindromes
            expandAroundCenter(s, i, i);
            // Even length palindromes
            expandAroundCenter(s, i, i + 1);
        }
        return s.substring(start, start + maxLength);
    }

    private void expandAroundCenter(String s, int left, int right) {
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--;
            right++;
        }
        // After the loop ends, left and right are one step beyond the palindrome boundaries
        int length = right - left - 1;
        if (length > maxLength) {
            start = left + 1;
            maxLength = length;
        }
    }
}
