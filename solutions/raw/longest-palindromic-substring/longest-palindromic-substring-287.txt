class Solution {

    public String longestPalindrome(String s) {
        int n = s.length();
        int[][] dp = new int[n][n];
        int start = 0, end = 0, res = 0;
        for (int i = n - 1; i >= 0; i--) {
            for (int j = i; j < n; j++) {
                if (i == j) {
                    dp[i][j] = 1;
                    continue;
                }
                if (s.charAt(i) == s.charAt(j)) {
                    if (j - i == 1) {
                        dp[i][j] = 2;
                    } else {
                        if (dp[i + 1][j - 1] == 0) {
                            dp[i][j] = 0;
                        } else {
                            dp[i][j] = 2 + dp[i + 1][j - 1];
                        }
                    }
                } else {
                    dp[i][j] = 0;
                }
                if (dp[i][j] > res) {
                    start = i;
                    end = j;
                    res = dp[i][j];
                }
            }
        }
        return s.substring(start, end + 1);
    }
}
