class Solution {

    public String longestPalindrome(String s) {
        int n = s.length();
        int start = 0;
        int end = 0;
        int maxlen = 0;
        boolean[][] dp = new boolean[n][n];
        for (int i = 0; i < n; i++) {
            for (int st = 0, e = i; e < n; st++, e++) {
                if (st == e) {
                    dp[st][e] = true;
                } else if (st + 1 == e) {
                    dp[st][e] = s.charAt(st) == s.charAt(e);
                } else {
                    dp[st][e] = s.charAt(st) == s.charAt(e) && dp[st + 1][e - 1];
                }
                if (dp[st][e] == true && e - st + 1 > maxlen) {
                    maxlen = e - st + 1;
                    start = st;
                    end = e;
                }
            }
        }
        return s.substring(start, end + 1);
    }
}
