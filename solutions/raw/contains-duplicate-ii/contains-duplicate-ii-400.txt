class Solution {

    public boolean containsNearbyDuplicate(int[] nums, int k) {
        // using hashset
        HashSet<Integer> window = new HashSet<>();
        int left = 0;
        for (int right = 0; right < nums.length; right++) {
            if (window.size() > k) {
                window.remove(nums[left]);
                left++;
            }
            if (window.contains(nums[right])) {
                return true;
            }
            window.add(nums[right]);
        }
        return false;
        // HashMap<Integer , Integer> mp = new HashMap<>();
        // for(int i = 0; i < nums.length; i++){
        //     int num = nums[i];
        //     if(mp.containsKey(num)){
        //         if(Math.abs(i - mp.get(num)) <= k){
        //             return true;
        //         }else{
        //             mp.put(num , i);
        //         }
        //     }else{
        //         mp.put(num , i);
        //     }
        // }
        // return false;
    }
}
