class Solution {

    public boolean containsNearbyDuplicate(int[] nums, int k) {
        int i, j, new_val, old_val = 0, c = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        for (i = 0; i < nums.length; i++) {
            //if map doesnot contain key then add key and value
            if (!map.containsKey(nums[i])) {
                map.put(nums[i], i);
            } else {
                //if map does contain key
                //get the old value from map
                old_val = map.get(nums[i]);
                //calculate the differnce between old value and new value of the key
                c = i - old_val;
                //store the new value of the key
                new_val = i;
                //check the condition(qs)
                if (c <= k) {
                    return true;
                } else //update the new value of the key
                {
                    map.put(nums[i], new_val);
                }
            }
        }
        return false;
    }
}
