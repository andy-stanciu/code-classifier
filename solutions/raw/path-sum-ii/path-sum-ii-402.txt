/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static void path(TreeNode root, int sum, List<Integer> al, List<List<Integer>> res, int target) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            al.add(root.val);
            sum = sum + root.val;
            if (sum == target) {
                res.add(new ArrayList<>(al));
            }
            al.remove(al.size() - 1);
            return;
        }
        sum += root.val;
        al.add(root.val);
        path(root.left, sum, al, res, target);
        path(root.right, sum, al, res, target);
        al.remove(al.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> al = new ArrayList<>();
        path(root, 0, al, ans, targetSum);
        return ans;
    }
}
