/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    List<List<Integer>> res = new LinkedList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root != null)
            go(root, targetSum, new LinkedList<>());
        return res;
    }

    void go(TreeNode node, int targetSum, List<Integer> l) {
        if (node == null)
            return;
        List<Integer> list = new LinkedList<>(l);
        list.add(node.val);
        // System.out.println(node.val + "|" + targetSum + "|" + list);
        if (node.left == null && node.right == null && targetSum == node.val)
            res.add(list);
        if (node.left != null)
            go(node.left, targetSum - node.val, list);
        if (node.right != null)
            go(node.right, targetSum - node.val, list);
    }
}
