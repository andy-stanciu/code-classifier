/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        ans = new ArrayList<>();
        go(root, targetSum, 0, new ArrayList<>());
        return ans;
    }

    List<List<Integer>> ans;

    void go(TreeNode node, int t, int sum, List<Integer> a) {
        if (node == null)
            return;
        a.add(node.val);
        go(node.left, t, sum + node.val, a);
        go(node.right, t, sum + node.val, a);
        if (node.left == null && node.right == null && sum + node.val == t) {
            ans.add(new ArrayList<>(a));
        }
        a.remove(a.size() - 1);
    }
}
