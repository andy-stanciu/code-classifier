/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new LinkedList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> path = new LinkedList<>();
        if (root == null)
            return ans;
        helper(root, targetSum, path);
        return ans;
    }

    public void helper(TreeNode node, int target, List<Integer> path) {
        if (node == null)
            return;
        path.add(node.val);
        if (node.left == null && node.right == null && node.val == target) {
            ans.add(new LinkedList<>(path));
        }
        if (node.left != null) {
            helper(node.left, target - node.val, path);
        }
        if (node.right != null) {
            helper(node.right, target - node.val, path);
        }
        path.remove(path.size() - 1);
    }
}
