/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> l = new ArrayList<>();
        helper(root, targetSum, l);
        return ans;
    }

    public void helper(TreeNode node, int sum, List<Integer> l) {
        if (node == null) {
            return;
        }
        l.add(node.val);
        if (node.left == null && node.right == null && node.val == sum) {
            ans.add(new ArrayList<>(l));
        }
        this.helper(node.left, sum - node.val, l);
        this.helper(node.right, sum - node.val, l);
        l.remove(l.size() - 1);
    }
}
