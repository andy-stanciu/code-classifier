/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        pathSum(root, targetSum, new ArrayList<>(), result);
        return result;
    }

    public void pathSum(TreeNode node, int t, List<Integer> lst, List<List<Integer>> result) {
        if (node == null)
            return;
        t -= node.val;
        lst.add(node.val);
        if (node.left == null & node.right == null && t == 0) {
            result.add(new ArrayList<Integer>(lst));
        }
        pathSum(node.left, t, lst, result);
        pathSum(node.right, t, lst, result);
        lst.remove(lst.size() - 1);
    }
}
