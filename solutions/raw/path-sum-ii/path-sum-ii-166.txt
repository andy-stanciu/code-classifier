/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> output = new ArrayList<>();
        pathSum(output, root, targetSum, new ArrayList<>(), 0);
        return output;
    }

    public void pathSum(List<List<Integer>> output, TreeNode root, int targetSum, List<Integer> temp, int sum) {
        if (root == null)
            return;
        temp.add(root.val);
        sum += root.val;
        if (root.left == null && root.right == null && sum == targetSum)
            output.add(new ArrayList<>(temp));
        pathSum(output, root.left, targetSum, temp, sum);
        pathSum(output, root.right, targetSum, temp, sum);
        temp.remove(temp.size() - 1);
    }
}
