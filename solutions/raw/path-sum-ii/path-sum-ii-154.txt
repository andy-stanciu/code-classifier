/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> paths = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        Paths(root, targetSum, 0, new ArrayList<>());
        return paths;
    }

    void Paths(TreeNode root, int targetSum, int sum, ArrayList<Integer> sums) {
        if (root == null) {
            return;
        }
        sum += root.val;
        sums.add(root.val);
        if (root.left == null && root.right == null) {
            if (sum == targetSum) {
                paths.add(new ArrayList<>(sums));
            }
        } else {
            Paths(root.left, targetSum, sum, sums);
            Paths(root.right, targetSum, sum, sums);
        }
        sums.remove(sums.size() - 1);
    }
}
