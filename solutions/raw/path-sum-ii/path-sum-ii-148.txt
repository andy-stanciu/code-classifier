/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Integer> path;

    List<List<Integer>> ans;

    public void DFS(TreeNode root, int targetSum, int totalSum) {
        if (root == null)
            return;
        path.add(root.val);
        totalSum += root.val;
        if (totalSum == targetSum && root.left == null && root.right == null)
            ans.add(new ArrayList<>(path));
        DFS(root.left, targetSum, totalSum);
        DFS(root.right, targetSum, totalSum);
        path.remove(path.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        path = new ArrayList<Integer>();
        ans = new ArrayList<>();
        DFS(root, targetSum, 0);
        return ans;
    }
}
