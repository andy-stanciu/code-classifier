/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> currPath = new ArrayList<Integer>();
        List<List<Integer>> ansr = new ArrayList<>();
        findPath(root, targetSum, currPath, ansr);
        return ansr;
    }

    public void findPath(TreeNode root, int ts, List<Integer> currPath, List<List<Integer>> ansr) {
        if (root == null)
            return;
        currPath.add(root.val);
        if (root.val == ts && root.left == null && root.right == null) {
            ansr.add(new ArrayList<Integer>(currPath));
        } else {
            findPath(root.left, ts - root.val, currPath, ansr);
            findPath(root.right, ts - root.val, currPath, ansr);
        }
        currPath.remove(currPath.size() - 1);
    }
}
