/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> l = new ArrayList<>();
        f(root, ans, l, targetSum);
        return ans;
    }

    public static void f(TreeNode root, List<List<Integer>> ans, List<Integer> l, int tsum) {
        if (root == null)
            return;
        l.add(root.val);
        tsum -= root.val;
        if (root.left == null && root.right == null) {
            if (tsum == 0) {
                ans.add(new ArrayList<>(l));
            }
        }
        f(root.left, ans, l, tsum);
        f(root.right, ans, l, tsum);
        l.remove(l.size() - 1);
    }
}
