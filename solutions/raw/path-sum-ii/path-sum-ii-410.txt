/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int target;

    List<List<Integer>> ans;

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        this.target = targetSum;
        ans = new LinkedList();
        backtrack(new LinkedList(), root, 0);
        return ans;
    }

    void backtrack(List<Integer> list, TreeNode root, int sum) {
        if (root == null)
            return;
        list.add(root.val);
        if (root.left == null && root.right == null && sum + root.val == target) {
            ans.add(new LinkedList(list));
            list.remove(list.size() - 1);
            return;
        }
        backtrack(list, root.left, sum + root.val);
        backtrack(list, root.right, sum + root.val);
        list.remove(list.size() - 1);
    }
}
