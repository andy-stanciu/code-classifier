/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void solve(TreeNode root, int sum, int target, List<Integer> arr, List<List<Integer>> ans) {
        if (root == null)
            return;
        arr.add(root.val);
        if (root.left == null && root.right == null && sum + root.val == target) {
            ans.add(new ArrayList<>(arr));
        }
        solve(root.left, sum + root.val, target, arr, ans);
        solve(root.right, sum + root.val, target, arr, ans);
        arr.remove(arr.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        solve(root, 0, targetSum, new ArrayList<>(), result);
        return result;
    }
}
