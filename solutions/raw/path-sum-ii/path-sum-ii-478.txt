class Solution {

    static List<List<Integer>> finalResult;

    public void helper(TreeNode root, String path, int sum, int target) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            sum += root.val;
            if (sum == target) {
                path += root.val;
                String[] pathToArray = path.split(" ");
                List<Integer> tempList = new ArrayList<>();
                for (int i = 0; i < pathToArray.length; i++) {
                    tempList.add(Integer.valueOf(pathToArray[i]));
                }
                finalResult.add(tempList);
            }
        }
        helper(root.left, path + root.val + " ", sum + root.val, target);
        helper(root.right, path + root.val + " ", sum + root.val, target);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        finalResult = new ArrayList<>();
        helper(root, "", 0, targetSum);
        return finalResult;
    }
}
// Please vote if you like the s
