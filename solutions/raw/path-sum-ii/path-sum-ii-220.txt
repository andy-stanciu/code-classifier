/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> lt = new ArrayList<>();
        int sum = 0;
        if (root != null) {
            sum = root.val;
            lt.add(root.val);
            paths(root, targetSum, sum, ans, lt);
        }
        return ans;
    }

    public void paths(TreeNode root, int target, int sum, List<List<Integer>> ans, List<Integer> lt) {
        if (sum == target && root.left == null && root.right == null) {
            ans.add(new ArrayList<>(lt));
            return;
        }
        if (root.left != null) {
            sum += root.left.val;
            lt.add(root.left.val);
            paths(root.left, target, sum, ans, lt);
            sum -= root.left.val;
            lt.remove(lt.size() - 1);
        }
        if (root.right != null) {
            sum += root.right.val;
            lt.add(root.right.val);
            paths(root.right, target, sum, ans, lt);
            sum -= root.right.val;
            lt.remove(lt.size() - 1);
        }
    }
}
