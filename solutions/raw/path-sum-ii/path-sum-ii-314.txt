/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private List<List<Integer>> list = new ArrayList<List<Integer>>();

    //make an arrayList of type List
    public void summ(TreeNode root, int sum, Stack<Integer> s) {
        // if first
        s.push(root.val);
        if (root.left == null && root.right == null)
            if (sum == root.val)
                list.add(new ArrayList<Integer>(s));
        if (root.left != null)
            summ(root.left, sum - root.val, s);
        if (root.right != null)
            summ(root.right, sum - root.val, s);
        s.pop();
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return list;
        Stack<Integer> s = new Stack<Integer>();
        summ(root, targetSum, s);
        return list;
    }
}
