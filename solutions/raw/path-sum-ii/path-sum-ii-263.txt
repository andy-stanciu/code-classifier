/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        recur(root, ans, targetSum, 0, temp);
        return ans;
    }

    public void recur(TreeNode root, List<List<Integer>> ans, int targetSum, int sum, List<Integer> temp) {
        if (root == null)
            return;
        sum += root.val;
        temp.add(root.val);
        if (sum == targetSum && root.left == null && root.right == null) {
            List<Integer> list = new ArrayList<>();
            list.addAll(temp);
            ans.add(list);
        }
        recur(root.left, ans, targetSum, sum, temp);
        recur(root.right, ans, targetSum, sum, temp);
        temp.remove(temp.size() - 1);
    }
}
