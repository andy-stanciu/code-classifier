/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private List<List<Integer>> res;

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        this.res = new ArrayList<>();
        DFS(root, targetSum, new ArrayList<>());
        return res;
    }

    public void DFS(TreeNode node, int targetSum, List<Integer> list) {
        if (node == null)
            return;
        list.add(node.val);
        if (node.left == null && node.right == null && targetSum == node.val) {
            res.add(new ArrayList(list));
        }
        DFS(node.left, targetSum - node.val, list);
        DFS(node.right, targetSum - node.val, list);
        list.remove(list.size() - 1);
    }
}
