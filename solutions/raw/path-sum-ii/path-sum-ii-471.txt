class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new LinkedList<>();
        LinkedList<Integer> path = new LinkedList<>();
        traverse(root, path, res, targetSum);
        return res;
    }

    public void traverse(TreeNode root, LinkedList<Integer> path, List<List<Integer>> res, int remain) {
        if (root == null)
            return;
        remain -= root.val;
        path.add(root.val);
        if (root.left == null && root.right == null) {
            if (remain == 0) {
                res.add(new LinkedList<Integer>(path));
            }
        }
        traverse(root.left, path, res, remain);
        traverse(root.right, path, res, remain);
        path.removeLast();
    }
}
