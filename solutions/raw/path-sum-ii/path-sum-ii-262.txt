/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ar2 = new ArrayList<>();
        if (root == null)
            return ar2;
        List<Integer> ar = new ArrayList<>();
        List<List<Integer>> ar1 = new ArrayList<>();
        solve(root, targetSum, ar, ar1, 0);
        return ar1;
    }

    public void solve(TreeNode root, int target, List<Integer> ar, List<List<Integer>> ar1, int sum) {
        if (root == null)
            return;
        ar.add(root.val);
        sum += root.val;
        if (root.left == null && root.right == null && sum == target) {
            ar1.add(new ArrayList<>(ar));
        }
        solve(root.left, target, ar, ar1, sum);
        solve(root.right, target, ar, ar1, sum);
        ar.remove(ar.size() - 1);
    }
}
