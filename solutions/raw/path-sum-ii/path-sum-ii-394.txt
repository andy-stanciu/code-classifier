class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> l = new ArrayList<>();
        solve(root, targetSum, 0, ans, l);
        return ans;
    }

    private void solve(TreeNode root, int k, int sum, List<List<Integer>> ans, List<Integer> l) {
        if (root == null)
            return;
        sum += root.val;
        l.add(root.val);
        if (root.left == null && root.right == null && sum == k) {
            ans.add(new ArrayList<>(l));
            return;
        }
        solve(root.left, k, sum, ans, l);
        solve(root.right, k, sum, ans, l);
        l.remove(l.size() - 1);
    }
}
