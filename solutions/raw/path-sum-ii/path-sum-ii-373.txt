/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root != null) {
            dfs(root, targetSum, 0, new ArrayList<>());
        }
        return res;
    }

    public void dfs(TreeNode root, int targetsum, int currsum, ArrayList<Integer> ans) {
        currsum += root.val;
        ans.add(root.val);
        if (root.left == null && root.right == null && currsum == targetsum) {
            res.add(ans);
        }
        if (root.left != null) {
            dfs(root.left, targetsum, currsum, new ArrayList<>(ans));
        }
        if (root.right != null) {
            dfs(root.right, targetsum, currsum, new ArrayList<>(ans));
        }
    }
}
