/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans;

    public void dfs(TreeNode root, int target, List<Integer> t, int sum) {
        if (root == null)
            return;
        sum += root.val;
        t.add(root.val);
        if (root.left == null && root.right == null && sum == target) {
            List<Integer> temp = new ArrayList<Integer>(t);
            ans.add(temp);
        }
        dfs(root.left, target, t, sum);
        dfs(root.right, target, t, sum);
        t.remove(t.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        ans = new ArrayList<>();
        List<Integer> t = new ArrayList<>();
        dfs(root, targetSum, t, 0);
        return ans;
    }
}
