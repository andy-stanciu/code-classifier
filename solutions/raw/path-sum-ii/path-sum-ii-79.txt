/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private void checkpathSum(TreeNode root, List<List<Integer>> ans, List<Integer> list, int targetSum, int sum) {
        if (root == null) {
            return;
        }
        sum = sum + root.val;
        list.add(root.val);
        if (root.left == null && root.right == null && sum == targetSum) {
            ArrayList<Integer> l = new ArrayList<>(list);
            ans.add(l);
        }
        checkpathSum(root.left, ans, list, targetSum, sum);
        checkpathSum(root.right, ans, list, targetSum, sum);
        list.remove(list.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        checkpathSum(root, ans, list, targetSum, 0);
        return ans;
    }
}
