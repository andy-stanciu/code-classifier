class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new LinkedList<>();
        List<Integer> temp = new LinkedList<>();
        dfs(root, targetSum, temp, res);
        return res;
    }

    private void dfs(TreeNode root, int sum, List<Integer> temp, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        temp.add(root.val);
        int next = sum - root.val;
        if (root.left == null && root.right == null) {
            if (next == 0) {
                res.add(new ArrayList<>(temp));
            }
        } else {
            dfs(root.left, next, temp, res);
            dfs(root.right, next, temp, res);
        }
        temp.remove(temp.size() - 1);
    }
}
