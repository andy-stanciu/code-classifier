class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        dfs(root, targetSum, new ArrayList<>(), res);
        return res;
    }

    public void dfs(TreeNode root, int target, List<Integer> path, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        path.add(root.val);
        if (root.right == null && root.left == null) {
            if (target - root.val == 0) {
                res.add(new ArrayList<>(path));
            }
            path.remove(path.size() - 1);
            return;
        }
        dfs(root.left, target - root.val, path, res);
        dfs(root.right, target - root.val, path, res);
        path.remove(path.size() - 1);
    }
}
