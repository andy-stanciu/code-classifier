/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        pathSum(root, 0, targetSum, new ArrayList<>());
        return res;
    }

    private void pathSum(TreeNode node, int sum, int targetSum, List<Integer> path) {
        if (node == null) {
            return;
        }
        path.add(node.val);
        sum += node.val;
        if (node.left == null && node.right == null) {
            if (sum == targetSum) {
                res.add(new ArrayList<>(path));
            }
            path.remove(path.size() - 1);
            return;
        }
        pathSum(node.left, sum, targetSum, path);
        pathSum(node.right, sum, targetSum, path);
        path.remove(path.size() - 1);
    }
}
