/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        List<Integer> tmp = new ArrayList<>();
        pathSome(root, result, tmp, 0, targetSum);
        return result;
    }

    public static void pathSome(TreeNode root, List<List<Integer>> result, List<Integer> tmp, int sum, int targetSum) {
        if (root == null) {
            return;
        }
        tmp.add(root.val);
        if (root.left == null && root.right == null && root.val + sum == targetSum) {
            result.add(new ArrayList<>(tmp));
        }
        pathSome(root.left, result, tmp, sum + root.val, targetSum);
        pathSome(root.right, result, tmp, sum + root.val, targetSum);
        tmp.remove(tmp.size() - 1);
        return;
    }
}
