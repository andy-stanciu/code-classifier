class Solution {

    List<List<Integer>> ans;

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        ans = new ArrayList();
        solve(root, targetSum, new ArrayList());
        return ans;
    }

    public void solve(TreeNode root, int sum, List<Integer> temp) {
        if (root == null)
            return;
        if (root.left == null && root.right == null && root.val == sum) {
            temp.add(root.val);
            ans.add(new ArrayList(temp));
            temp.remove(temp.size() - 1);
        }
        temp.add(root.val);
        solve(root.left, sum - root.val, temp);
        solve(root.right, sum - root.val, temp);
        temp.remove(temp.size() - 1);
    }
}
