/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> list = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        findPathSum(root, targetSum, new LinkedList());
        return list;
    }

    public void findPathSum(TreeNode root, int targetSum, LinkedList<Integer> current) {
        if (root == null)
            return;
        if (root.left == null && root.right == null && root.val == targetSum) {
            current.add(root.val);
            list.add(current);
            return;
        }
        current.add(root.val);
        findPathSum(root.left, targetSum - root.val, new LinkedList(current));
        findPathSum(root.right, targetSum - root.val, new LinkedList(current));
    }
}
