/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> list = new ArrayList<List<Integer>>();

    int[] path = new int[5000];

    private void helper(TreeNode root, int index, int targetSum) {
        if (root == null)
            return;
        path[index] = root.val;
        if (root.left == null && root.right == null && root.val == targetSum) {
            List<Integer> l = new ArrayList<>();
            for (int i = 0; i <= index; i++) {
                l.add(path[i]);
            }
            list.add(l);
            return;
        }
        helper(root.left, index + 1, targetSum - root.val);
        helper(root.right, index + 1, targetSum - root.val);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        helper(root, 0, targetSum);
        return list;
    }
}
