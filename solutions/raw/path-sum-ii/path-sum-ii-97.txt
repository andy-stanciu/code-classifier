class Solution {

    List<List<Integer>> paths = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return Collections.emptyList();
        List<Integer> list = new ArrayList<>();
        findList(root, 0, targetSum, list);
        return paths;
    }

    private void findList(TreeNode root, int currSum, int targetSum, List<Integer> list) {
        if (root == null)
            return;
        list.add(root.val);
        currSum += root.val;
        if (currSum == targetSum && root.left == null && root.right == null) {
            paths.add(new ArrayList<>(list));
        }
        findList(root.left, currSum, targetSum, list);
        findList(root.right, currSum, targetSum, list);
        list.remove(list.size() - 1);
    }
}
