/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> res = new ArrayList<>();

    void BTK(TreeNode root, int targetSum, List<Integer> curr) {
        if (targetSum == 0 && root.left == null && root.right == null)
            res.add(new ArrayList<>(curr));
        else {
            //curr.add(root.val);
            if (root.left != null) {
                curr.add(root.left.val);
                BTK(root.left, targetSum - root.left.val, curr);
                curr.remove(curr.size() - 1);
            }
            if (root.right != null) {
                curr.add(root.right.val);
                BTK(root.right, targetSum - root.right.val, curr);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return res;
        List<Integer> curr = new ArrayList<>();
        curr.add(root.val);
        BTK(root, targetSum - root.val, curr);
        return res;
    }
}
