/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> curr = new ArrayList<>();
        recursion(root, res, curr, targetSum);
        return res;
    }

    public void recursion(TreeNode root, List<List<Integer>> res, List<Integer> curr, int target) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            if (target - root.val == 0) {
                curr.add(root.val);
                res.add(new ArrayList<>(curr));
                curr.remove(curr.size() - 1);
            }
            return;
        }
        curr.add(root.val);
        recursion(root.left, res, curr, target - root.val);
        recursion(root.right, res, curr, target - root.val);
        curr.remove(curr.size() - 1);
    }
}
