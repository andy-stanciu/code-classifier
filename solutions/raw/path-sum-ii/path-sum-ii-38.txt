/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        helper(root, targetSum, 0, ans, new ArrayList<Integer>());
        return ans;
    }

    public boolean helper(TreeNode root, int targetSum, int sum, List<List<Integer>> ans, List<Integer> help) {
        if (root == null)
            return false;
        if (root.left == null && root.right == null && targetSum == sum + root.val) {
            help.add(root.val);
            ans.add(new ArrayList<Integer>(help));
            help.remove(help.size() - 1);
            return true;
        }
        sum += root.val;
        help.add(root.val);
        boolean left = helper(root.left, targetSum, sum, ans, help);
        boolean right = helper(root.right, targetSum, sum, ans, help);
        help.remove(help.size() - 1);
        return (left || right);
    }
}
