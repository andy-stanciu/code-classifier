/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        List<Integer> temp = new ArrayList<>();
        sum(root, temp, result, 0, targetSum);
        return result;
    }

    private void sum(TreeNode root, List<Integer> temp, List<List<Integer>> result, int sum, int targetSum) {
        temp.add(root.val);
        sum = sum + root.val;
        if (sum == targetSum && root.left == null && root.right == null) {
            result.add(new ArrayList<>(temp));
        }
        if (root.left != null) {
            sum(root.left, temp, result, sum, targetSum);
        }
        if (root.right != null) {
            sum(root.right, temp, result, sum, targetSum);
        }
        temp.remove(temp.size() - 1);
    }
}
