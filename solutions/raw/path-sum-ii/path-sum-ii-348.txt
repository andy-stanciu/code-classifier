/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> finalList = new ArrayList<>();

    List<Integer> ans = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return finalList;
        int sum = 0;
        dfs(root, targetSum, sum);
        return finalList;
    }

    private void dfs(TreeNode root, int targetSum, int sum) {
        if (root == null) {
            return;
        }
        ans.add(root.val);
        sum += root.val;
        if (sum == targetSum && root.left == null && root.right == null) {
            finalList.add(new ArrayList<>(ans));
        }
        dfs(root.left, targetSum, sum);
        dfs(root.right, targetSum, sum);
        ans.remove(ans.size() - 1);
    }
}
