/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        solve(root, targetSum, 0, result, list);
        return result;
    }

    public static void solve(TreeNode root, int targetSum, int sum, List<List<Integer>> result, List<Integer> list) {
        if (root == null)
            return;
        list.add(root.val);
        sum += root.val;
        if (root.left == null && root.right == null) {
            if (sum == targetSum) {
                result.add(new ArrayList<>(list));
            }
        }
        solve(root.left, targetSum, sum, result, list);
        solve(root.right, targetSum, sum, result, list);
        list.remove(list.size() - 1);
    }
}
