/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> listOfLists = new ArrayList<>();
        pathSumII(root, targetSum, list, listOfLists);
        return listOfLists;
    }

    public void pathSumII(TreeNode root, int targetSum, List<Integer> list, List<List<Integer>> listOfLists) {
        if (root == null)
            return;
        targetSum -= root.val;
        list.add(root.val);
        if (root.left == null && root.right == null && targetSum == 0) {
            listOfLists.add(list);
            return;
        }
        pathSumII(root.left, targetSum, new ArrayList<>(list), listOfLists);
        pathSumII(root.right, targetSum, new ArrayList<>(list), listOfLists);
    }
}
