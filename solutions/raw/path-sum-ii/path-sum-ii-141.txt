/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    static List<List<Integer>> ans;

    public static void solve(TreeNode root, int targetSum, List<Integer> temp, int sum) {
        if (root == null) {
            return;
        }
        sum = sum + root.val;
        temp.add(root.val);
        solve(root.left, targetSum, temp, sum);
        solve(root.right, targetSum, temp, sum);
        if (root.left == null && root.right == null) {
            if (sum == targetSum) {
                ans.add(new ArrayList<>(temp));
            }
        }
        sum = sum - root.val;
        temp.remove(temp.size() - 1);
        return;
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        ans = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        int sum = 0;
        solve(root, targetSum, temp, sum);
        return ans;
    }
}
