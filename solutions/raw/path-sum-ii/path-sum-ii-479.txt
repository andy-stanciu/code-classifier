class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        paths(root, 0, list, path, targetSum);
        return list;
    }

    public void paths(TreeNode root, int sum, List<List<Integer>> list, List<Integer> path, int targetSum) {
        if (root == null) {
            return;
        }
        path.add(root.val);
        if (root.left == null && root.right == null) {
            if (sum + root.val == targetSum) {
                list.add(new ArrayList<>(path));
            }
            path.remove(path.size() - 1);
            return;
        }
        paths(root.left, sum + root.val, list, path, targetSum);
        paths(root.right, sum + root.val, list, path, targetSum);
        path.remove(path.size() - 1);
    }
}
