/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    List<Integer> lst = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return new ArrayList<>();
        }
        helper(root, targetSum);
        return ans;
    }

    public void helper(TreeNode root, int targetSum) {
        if (root == null) {
            return;
        }
        lst.add(root.val);
        if (root.val == targetSum && root.left == null && root.right == null) {
            ans.add(new ArrayList<>(lst));
        }
        helper(root.left, targetSum - root.val);
        helper(root.right, targetSum - root.val);
        lst.remove(lst.size() - 1);
    }
}
