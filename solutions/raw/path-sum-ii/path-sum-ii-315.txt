/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        traverse(root, targetSum, 0, new ArrayList<>());
        return result;
    }

    private void traverse(TreeNode root, int target, int lastSum, List<Integer> tempList) {
        if (root == null) {
            return;
        }
        if (lastSum + root.val == target && root.left == null && root.right == null) {
            tempList.add(root.val);
            result.add(new ArrayList<>(tempList));
            return;
        }
        tempList.add(root.val);
        List<Integer> list = new ArrayList<>(tempList);
        traverse(root.left, target, lastSum + root.val, tempList);
        traverse(root.right, target, lastSum + root.val, list);
    }
}
