/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        dfs(new ArrayList<>(), targetSum, root);
        return res;
    }

    private void dfs(List<Integer> subList, int sum, TreeNode cur) {
        if (cur == null) {
            return;
        }
        sum -= cur.val;
        subList.add(cur.val);
        if (cur.left == null && cur.right == null && sum == 0) {
            res.add(new ArrayList<>(subList));
        }
        dfs(subList, sum, cur.left);
        dfs(subList, sum, cur.right);
        sum += cur.val;
        subList.remove(subList.size() - 1);
    }
}
