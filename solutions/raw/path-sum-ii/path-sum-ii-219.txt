/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int target) {
        List<List<Integer>> result = new ArrayList<>();
        FindTargetPath(root, target, new ArrayList<Integer>(), result);
        return result;
    }

    private void FindTargetPath(TreeNode root, int target, List<Integer> pathsum, List<List<Integer>> result) {
        if (root == null) {
            return;
        }
        pathsum.add(root.val);
        if (root.left == null && root.right == null && target == root.val) {
            result.add(new ArrayList<>(pathsum));
        }
        FindTargetPath(root.left, target - root.val, (pathsum), result);
        FindTargetPath(root.right, target - root.val, (pathsum), result);
        pathsum.remove(pathsum.size() - 1);
    }
}
