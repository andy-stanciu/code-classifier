class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> returnList = new ArrayList<>();
        List<Integer> innerList = new ArrayList<>();
        helper(root, innerList, returnList, 0, targetSum);
        return returnList;
    }

    public void helper(TreeNode root, List<Integer> innerList, List<List<Integer>> returnList, int sum, int targetSum) {
        if (root != null) {
            sum += root.val;
            innerList.add(root.val);
            if (root.left == null && root.right == null) {
                if (sum == targetSum) {
                    returnList.add(new ArrayList<>(innerList));
                }
            }
            helper(root.left, innerList, returnList, sum, targetSum);
            helper(root.right, innerList, returnList, sum, targetSum);
            innerList.remove(innerList.size() - 1);
        }
    }
}
