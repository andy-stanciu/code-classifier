/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> l = new ArrayList<>();
        func(root, targetSum, 0, l);
        return ans;
    }

    public void func(TreeNode root, int t, int sum, List<Integer> l) {
        if (root == null) {
            return;
        }
        l.add(root.val);
        sum += root.val;
        if (sum == t && root.right == null && root.left == null) {
            ans.add(new ArrayList<>(l));
        }
        func(root.right, t, sum, l);
        func(root.left, t, sum, l);
        l.remove(l.size() - 1);
    }
}
