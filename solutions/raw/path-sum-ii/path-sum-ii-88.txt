/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void solve(TreeNode root, int target, int currsum, List<List<Integer>> res, List<Integer> arr) {
        if (root == null) {
            return;
        }
        currsum += root.val;
        arr.add(root.val);
        if (root.left == null && root.right == null) {
            if (currsum == target) {
                res.add(new ArrayList<>(arr));
            }
        } else {
            solve(root.left, target, currsum, res, arr);
            solve(root.right, target, currsum, res, arr);
        }
        arr.remove(arr.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        if (root == null) {
            return res;
        }
        solve(root, targetSum, 0, res, new ArrayList<>());
        return res;
    }
}
