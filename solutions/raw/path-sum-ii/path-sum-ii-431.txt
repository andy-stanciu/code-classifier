/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return new ArrayList<>();
        List<List<Integer>> result = new ArrayList<>();
        return helper(root, targetSum, new ArrayList<>(), result);
    }

    public static List<List<Integer>> helper(TreeNode root, int targetSum, ArrayList<Integer> path, List<List<Integer>> result) {
        if (root == null)
            return new ArrayList<>();
        targetSum -= root.val;
        path.add(root.val);
        if (targetSum == 0 && root.left == null && root.right == null) {
            result.add(path);
            return result;
        }
        helper(root.left, targetSum, new ArrayList<>(path), result);
        helper(root.right, targetSum, new ArrayList<>(path), result);
        return result;
    }
}
