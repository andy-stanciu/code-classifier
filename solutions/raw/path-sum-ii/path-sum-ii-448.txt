/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        helper(result, new ArrayList<Integer>(), root, targetSum);
        return result;
    }

    private void helper(List<List<Integer>> result, List<Integer> curr, TreeNode node, int targetSum) {
        if (node.left == null && node.right == null) {
            if (targetSum == node.val) {
                curr.add(node.val);
                result.add(new ArrayList<>(curr));
                curr.remove(curr.size() - 1);
            }
            return;
        }
        if (node.left != null) {
            curr.add(node.val);
            helper(result, curr, node.left, targetSum - node.val);
            curr.remove(curr.size() - 1);
        }
        if (node.right != null) {
            curr.add(node.val);
            helper(result, curr, node.right, targetSum - node.val);
            curr.remove(curr.size() - 1);
        }
    }
}
