/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    List<Integer> ll = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        hasPath(root, targetSum);
        return ans;
    }

    public void hasPath(TreeNode root, int targetSum) {
        if (root == null)
            return;
        ll.add(root.val);
        if (root.left == null && root.right == null) {
            if (targetSum - root.val == 0) {
                ans.add(new ArrayList<>(ll));
            }
        }
        hasPath(root.left, targetSum - root.val);
        hasPath(root.right, targetSum - root.val);
        ll.remove(ll.size() - 1);
    }
}
