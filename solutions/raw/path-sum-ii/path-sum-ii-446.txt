/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> paths = new ArrayList<>();
        List<Integer> currpath = new ArrayList<>();
        helper(paths, currpath, root, targetSum);
        return paths;
    }

    private void helper(List<List<Integer>> paths, List<Integer> currpath, TreeNode root, int targetSum) {
        if (root == null)
            return;
        currpath.add(root.val);
        if (root.left == null && root.right == null) {
            if (root.val == targetSum) {
                paths.add(new ArrayList<>(currpath));
            }
        } else {
            helper(paths, currpath, root.left, targetSum - root.val);
            helper(paths, currpath, root.right, targetSum - root.val);
        }
        currpath.remove(currpath.size() - 1);
    }
}
