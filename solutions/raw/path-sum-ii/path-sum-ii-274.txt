class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> list = new ArrayList<>();
        pathSum(root, targetSum, 0, new ArrayList<>(), list);
        return list;
    }

    private void pathSum(TreeNode root, int targetSum, int total, List<Integer> current, List<List<Integer>> list) {
        if (root == null)
            return;
        if (root.val + total == targetSum && root.left == null && root.right == null) {
            current.add(root.val);
            list.add(current);
            return;
        }
        current.add(root.val);
        pathSum(root.left, targetSum, total + root.val, new ArrayList<>(current), list);
        pathSum(root.right, targetSum, total + root.val, new ArrayList<>(current), list);
    }
}
