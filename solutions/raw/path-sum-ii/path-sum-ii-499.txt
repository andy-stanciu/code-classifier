class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> allSums = new ArrayList<>();
        pathSum(root, 0, targetSum, new ArrayList<>(), allSums);
        return allSums;
    }

    public void pathSum(TreeNode root, int branchSum, int targetSum, List<Integer> branch, List<List<Integer>> paths) {
        if (root == null) {
            return;
        }
        int sum = branchSum + root.val;
        if (root.left == null && root.right == null) {
            if (sum == targetSum) {
                List<Integer> newPath = new ArrayList<>(branch);
                newPath.add(root.val);
                paths.add(newPath);
            }
            return;
        }
        branch.add(root.val);
        pathSum(root.left, sum, targetSum, branch, paths);
        pathSum(root.right, sum, targetSum, branch, paths);
        branch.remove(branch.size() - 1);
    }
}
