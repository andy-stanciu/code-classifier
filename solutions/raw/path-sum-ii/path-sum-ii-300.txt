/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> mc = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        helper(root, mc, temp, 0, targetSum);
        return mc;
    }

    public void helper(TreeNode root, List<List<Integer>> mc, List<Integer> temp, int sum, int target) {
        if (root == null) {
            return;
        }
        sum = sum + root.val;
        temp.add(root.val);
        //it identifys the leaf node
        if (root.left == null && root.right == null && sum == target) {
            mc.add(new ArrayList<>(temp));
        }
        helper(root.left, mc, temp, sum, target);
        helper(root.right, mc, temp, sum, target);
        sum = sum - temp.remove(temp.size() - 1);
    }
}
