class Solution {

    private List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return result;
        List<Integer> tmp = new ArrayList<>();
        isHas(tmp, root, targetSum, 0);
        return result;
    }

    public List<Integer> removeLast(List<Integer> tmp) {
        int indexOfLastElement = tmp.size() - 1;
        tmp.remove(indexOfLastElement);
        return tmp;
    }

    public void isHas(List<Integer> tmp, TreeNode root, int target, int sum) {
        tmp.add(root.val);
        if (root.left == null && root.right == null) {
            if (target == root.val + sum) {
                result.add(new ArrayList(tmp));
            } else {
                tmp = removeLast(tmp);
                return;
            }
        }
        if (root.left != null)
            isHas(tmp, root.left, target, sum + root.val);
        if (root.right != null)
            isHas(tmp, root.right, target, sum + root.val);
        tmp = removeLast(tmp);
    }
}
