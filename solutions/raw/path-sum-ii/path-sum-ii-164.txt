/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> MainList = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        return pathSum(root, targetSum, list);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum, List<Integer> list) {
        if (root == null)
            return new ArrayList<>();
        targetSum -= root.val;
        list.add(root.val);
        if (root.left == null && root.right == null) {
            if (targetSum == 0)
                MainList.add(new ArrayList<>(list));
        }
        pathSum(root.left, targetSum, new ArrayList<>(list));
        pathSum(root.right, targetSum, new ArrayList<>(list));
        list.remove(list.size() - 1);
        return MainList;
    }
}
