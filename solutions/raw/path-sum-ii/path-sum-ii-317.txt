/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> r = new ArrayList<>();
        if (root == null) {
            return r;
        }
        ArrayList<Integer> ans = new ArrayList<>();
        check(root, targetSum, 0, ans, r);
        return r;
    }

    public static void check(TreeNode n, int sum, int tmp, ArrayList<Integer> ans, List<List<Integer>> fans) {
        if (n == null) {
            return;
        }
        int val = n.val;
        ans.add(n.val);
        tmp = tmp + val;
        if (tmp == sum && n.left == null && n.right == null) {
            fans.add(new ArrayList<Integer>(ans));
        }
        check(n.left, sum, tmp, ans, fans);
        check(n.right, sum, tmp, ans, fans);
        ans.remove(ans.size() - 1);
        tmp = tmp - val;
    }
}
