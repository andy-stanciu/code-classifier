/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        pathSumHelper(res, new ArrayList<>(), root, targetSum);
        return res;
    }

    public void pathSumHelper(List<List<Integer>> res, List<Integer> temp, TreeNode root, int targetSum) {
        if (root == null) {
            temp.add(null);
            return;
        }
        if (root.left == null && root.right == null) {
            if (targetSum == root.val) {
                temp.add(root.val);
                res.add(new ArrayList<>(temp));
            } else {
                temp.add(null);
            }
            return;
        }
        temp.add(root.val);
        pathSumHelper(res, temp, root.left, targetSum - root.val);
        temp.remove(temp.size() - 1);
        pathSumHelper(res, temp, root.right, targetSum - root.val);
        temp.remove(temp.size() - 1);
    }
}
