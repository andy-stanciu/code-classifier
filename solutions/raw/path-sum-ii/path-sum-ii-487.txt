class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        helper(root, targetSum, new ArrayList<>(), res);
        return res;
    }

    private void helper(TreeNode node, int targetSum, List<Integer> path, List<List<Integer>> res) {
        if (node == null)
            return;
        if (node.val == targetSum && node.left == null && node.right == null) {
            path.add(node.val);
            res.add(new ArrayList<>(path));
            path.remove(path.size() - 1);
            return;
        }
        path.add(node.val);
        helper(node.left, targetSum - node.val, path, res);
        helper(node.right, targetSum - node.val, path, res);
        path.remove(path.size() - 1);
    }
}
