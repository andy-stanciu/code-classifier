class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> path = new ArrayList<>();
        solve(root, path, targetSum);
        return ans;
    }

    void solve(TreeNode root, List<Integer> path, int targetSum) {
        if (root == null)
            return;
        path.add(root.val);
        if (root.left == null && root.right == null && targetSum - root.val == 0) {
            List<Integer> list = new ArrayList(path);
            ans.add(list);
        }
        solve(root.left, path, targetSum - root.val);
        solve(root.right, path, targetSum - root.val);
        path.remove(path.size() - 1);
    }
}
