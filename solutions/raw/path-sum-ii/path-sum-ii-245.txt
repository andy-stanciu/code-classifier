class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> list = new ArrayList<>();
        helper(root, 0, targetSum, new ArrayList<Integer>(), list);
        return list;
    }

    private void helper(TreeNode root, int sum, int target, List<Integer> curr, List<List<Integer>> list) {
        if (root == null)
            return;
        sum += root.val;
        curr.add(root.val);
        if (sum == target && root.left == root.right) {
            list.add(new ArrayList<>(curr));
            // Backtracking
            curr.remove(curr.size() - 1);
            return;
        }
        helper(root.left, sum, target, curr, list);
        helper(root.right, sum, target, curr, list);
        // Backtracking
        curr.remove(curr.size() - 1);
    }
}
