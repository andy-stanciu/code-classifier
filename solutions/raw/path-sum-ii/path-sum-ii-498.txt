class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return result;
        allPaths(root, targetSum, new ArrayList<>());
        return result;
    }

    private void allPaths(TreeNode root, int sum, List<Integer> list) {
        if (root == null)
            return;
        list.add(root.val);
        if (root.left == null && root.right == null && sum == root.val)
            result.add(new ArrayList<>(list));
        else {
            allPaths(root.left, sum - root.val, list);
            allPaths(root.right, sum - root.val, list);
        }
        list.remove(list.size() - 1);
    }
}
