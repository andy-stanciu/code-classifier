class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return (new ArrayList<>());
        List<List<Integer>> ans = new ArrayList<>();
        LinkedList<Integer> path = new LinkedList<>();
        int sum = 0;
        helper(ans, path, targetSum, root, sum);
        return ans;
    }

    public void helper(List<List<Integer>> ans, LinkedList<Integer> path, int s, TreeNode n, int sum) {
        path.add(n.val);
        sum += n.val;
        if (n.left == null && n.right == null) {
            if (sum == s) {
                ans.add(new ArrayList(path));
            }
        }
        if (n.left != null) {
            helper(ans, path, s, n.left, sum);
        }
        if (n.right != null)
            helper(ans, path, s, n.right, sum);
        path.removeLast();
    }
}
