/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> acc = new ArrayList<Integer>();
        helper(root, acc, res, targetSum);
        return res;
    }

    void helper(TreeNode node, List<Integer> acc, List<List<Integer>> res, int targetSum) {
        if (node == null)
            return;
        targetSum -= node.val;
        acc.add(node.val);
        if (node.left == node.right) {
            if (targetSum == 0)
                res.add(new ArrayList<Integer>(acc));
            acc.remove(acc.size() - 1);
            return;
        }
        helper(node.left, acc, res, targetSum);
        helper(node.right, acc, res, targetSum);
        acc.remove(acc.size() - 1);
    }
}
