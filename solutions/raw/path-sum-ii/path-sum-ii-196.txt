class Solution {

    List<List<Integer>> l = new ArrayList<>();

    List<Integer> t = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        sol(0, root, targetSum);
        return l;
    }

    public void sol(int sum, TreeNode root, int target) {
        if (root == null)
            return;
        sum += root.val;
        t.add(root.val);
        if (root.left == null && root.right == null && sum == target) {
            l.add(new ArrayList<>(t));
            // Backtrack
            t.remove(t.size() - 1);
            return;
        }
        sol(sum, root.left, target);
        sol(sum, root.right, target);
        // Backtrack: remove the last element from the list
        t.remove(t.size() - 1);
    }
}
