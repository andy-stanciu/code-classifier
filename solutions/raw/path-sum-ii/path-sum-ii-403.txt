/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        findPathSum(root, targetSum, 0, ans, new ArrayList<Integer>());
        return ans;
    }

    public void findPathSum(TreeNode root, int target, int cur, List<List<Integer>> ans, List<Integer> ds) {
        if (root == null)
            return;
        cur = cur + root.val;
        ds.add(root.val);
        if (target == cur && root.left == null && root.right == null)
            ans.add(new ArrayList<>(ds));
        findPathSum(root.left, target, cur, ans, ds);
        findPathSum(root.right, target, cur, ans, ds);
        ds.remove(ds.size() - 1);
    }
}
