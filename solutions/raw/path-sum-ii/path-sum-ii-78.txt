/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> cur = new ArrayList<>();
        find(root, 0, targetSum, cur, res);
        return res;
    }

    void find(TreeNode root, int sum, int t, List<Integer> cur, List<List<Integer>> res) {
        if (root == null)
            return;
        sum += root.val;
        cur.add(root.val);
        if (sum == t && root.left == null && root.right == null)
            res.add(new ArrayList<>(cur));
        find(root.left, sum, t, cur, res);
        find(root.right, sum, t, cur, res);
        cur.remove(cur.size() - 1);
    }
}
