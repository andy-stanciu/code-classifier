/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void rec(TreeNode root, int targetSum, List<List<Integer>> list, List<Integer> innerList) {
        if (root == null)
            return;
        List<Integer> newInnerList = new ArrayList<>(innerList);
        newInnerList.add(root.val);
        targetSum -= root.val;
        if (root.left == null && root.right == null && targetSum == 0)
            list.add(newInnerList);
        else {
            rec(root.left, targetSum, list, newInnerList);
            rec(root.right, targetSum, list, newInnerList);
        }
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> innerList = new ArrayList<>();
        rec(root, targetSum, list, innerList);
        return list;
    }
}
