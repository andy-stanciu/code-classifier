/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ll = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> path = new ArrayList<>();
        traversal(root, targetSum, 0, path);
        return ll;
    }

    public void traversal(TreeNode root, int targetsum, int sum, List<Integer> path) {
        if (root != null)
            sum = sum + root.val;
        else
            return;
        path.add(root.val);
        if (root.left == null && root.right == null) {
            if (sum == targetsum) {
                ll.add(path);
            }
            return;
        }
        if (root.left != null) {
            traversal(root.left, targetsum, sum, new ArrayList<>(path));
        }
        if (root.right != null) {
            traversal(root.right, targetsum, sum, new ArrayList<>(path));
        }
        return;
    }
}
