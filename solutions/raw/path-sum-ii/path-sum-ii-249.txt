public class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        pathSums(root, new ArrayList<>(), targetSum, 0);
        return ans;
    }

    void pathSums(TreeNode root, List<Integer> currentPath, int targetSum, int currentSum) {
        if (root == null) {
            return;
        }
        currentPath.add(root.val);
        currentSum += root.val;
        if (root.left == null && root.right == null && currentSum == targetSum) {
            ans.add(new ArrayList<>(currentPath));
        }
        pathSums(root.left, currentPath, targetSum, currentSum);
        pathSums(root.right, currentPath, targetSum, currentSum);
        currentPath.remove(currentPath.size() - 1);
    }
}
