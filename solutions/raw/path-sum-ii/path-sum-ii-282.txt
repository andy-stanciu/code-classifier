/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> al = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        ans(root, new ArrayList<>(), targetSum);
        return al;
    }

    public void ans(TreeNode root, List<Integer> li, int targetSum) {
        if (root == null) {
            return;
        }
        li.add(root.val);
        if (root.left == null && root.right == null) {
            int sum = 0;
            for (int c : li) {
                sum += c;
            }
            if (sum == targetSum) {
                al.add(new ArrayList<>(li));
            }
        }
        ans(root.left, li, targetSum);
        ans(root.right, li, targetSum);
        li.remove(li.size() - 1);
    }
}
