class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        solve(root, targetSum, 0, res, new ArrayList<Integer>());
        return res;
    }

    public void solve(TreeNode root, int sum, int curr_sum, List<List<Integer>> res, ArrayList<Integer> temp) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null && curr_sum + root.val == sum) {
            temp.add(root.val);
            res.add(temp);
            return;
        }
        temp.add(root.val);
        solve(root.left, sum, curr_sum + root.val, res, new ArrayList<Integer>(temp));
        solve(root.right, sum, curr_sum + root.val, res, new ArrayList<Integer>(temp));
    }
}
