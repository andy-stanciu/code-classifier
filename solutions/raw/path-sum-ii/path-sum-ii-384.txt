/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public void in(TreeNode root, List<Integer> arr, int sum, int target) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            sum = sum + root.val;
            if (sum == target) {
                arr.add(root.val);
                List<Integer> as = new ArrayList<>();
                as.addAll(arr);
                ans.add(as);
                arr.remove(arr.size() - 1);
                sum = sum - root.val;
                return;
            }
        }
        sum = sum + root.val;
        arr.add(root.val);
        in(root.left, arr, sum, target);
        in(root.right, arr, sum, target);
        sum = sum - root.val;
        arr.remove(arr.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> arr = new ArrayList<>();
        in(root, arr, 0, targetSum);
        return ans;
    }
}
