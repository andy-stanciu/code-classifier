/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> subResult = new ArrayList<>();
        Integer value;
        createPathSums(root, result, subResult, 0, targetSum);
        return result;
    }

    private void createPathSums(TreeNode node, List<List<Integer>> result, List<Integer> subResult, Integer value, int targetSum) {
        if (node == null)
            return;
        if (node.left == null && node.right == null) {
            value += node.val;
            if (value == targetSum) {
                subResult.add(node.val);
                result.add(subResult);
            }
        } else {
            value += node.val;
            subResult.add(node.val);
            createPathSums(node.left, result, new ArrayList<>(subResult), value, targetSum);
            createPathSums(node.right, result, new ArrayList<>(subResult), value, targetSum);
        }
    }
}
