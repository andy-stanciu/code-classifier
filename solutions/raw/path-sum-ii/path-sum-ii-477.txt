class Solution {

    List<List<Integer>> res = new ArrayList();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        backtrack(root, targetSum, new ArrayList<>(), 0);
        return res;
    }

    public void backtrack(TreeNode root, int s, ArrayList<Integer> al, int sum) {
        if (root == null)
            return;
        sum += root.val;
        al.add(root.val);
        if (sum == s && root.left == null && root.right == null) {
            res.add(new ArrayList<>(al));
        }
        backtrack(root.left, s, al, sum);
        backtrack(root.right, s, al, sum);
        al.remove(al.size() - 1);
    }
}
