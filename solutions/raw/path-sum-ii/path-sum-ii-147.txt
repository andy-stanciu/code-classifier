/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> al = new ArrayList<>();
        checkpath(root, targetSum, al);
        return ans;
    }

    public void checkpath(TreeNode root, int val, List<Integer> pathlist) {
        if (root == null) {
            return;
        }
        pathlist.add(root.val);
        if (root.left == null && root.right == null && root.val == val) {
            ans.add(new ArrayList<>(pathlist));
        }
        checkpath(root.left, val - root.val, pathlist);
        checkpath(root.right, val - root.val, pathlist);
        pathlist.remove(pathlist.size() - 1);
    }
}
