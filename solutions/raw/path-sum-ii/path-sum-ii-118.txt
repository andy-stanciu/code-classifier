class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        traversal(root, targetSum, result, new ArrayList<>());
        return result;
    }

    private void traversal(TreeNode root, int targetSum, List<List<Integer>> result, List<Integer> path) {
        if (root == null)
            return;
        targetSum -= root.val;
        path.add(root.val);
        if (root.left == null && root.right == null) {
            if (targetSum == 0) {
                result.add(new ArrayList<>(path));
            }
        } else {
            traversal(root.left, targetSum, result, path);
            traversal(root.right, targetSum, result, path);
        }
        path.remove(path.size() - 1);
    }
}
