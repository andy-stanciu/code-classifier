/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    List<Integer> a = new ArrayList<>();

    public void dfs(TreeNode root, int sum, int target) {
        if (root == null) {
            System.out.println(a);
            return;
        }
        // System.out.println(sum);
        System.out.println(root.val + sum + " " + root.val);
        a.add(root.val);
        if (sum + root.val == target) {
            if (root.left == null && root.right == null) {
                ans.add(new ArrayList<>(a));
            } else {
                dfs(root.left, sum + root.val, target);
                dfs(root.right, sum + root.val, target);
            }
            // return;
        } else {
            dfs(root.left, sum + root.val, target);
            dfs(root.right, sum + root.val, target);
        }
        a.remove(a.size() - 1);
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        dfs(root, 0, targetSum);
        return ans;
    }
}
