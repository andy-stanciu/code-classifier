/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> pathList = new ArrayList<>();

    int i = 0;

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        int ans = 0;
        List<Integer> sum = new ArrayList<>();
        checkSum(root, targetSum, ans, sum);
        return pathList;
    }

    public void checkSum(TreeNode root, int target, int ans, List<Integer> sum) {
        if (root == null)
            return;
        sum.add(root.val);
        if (root.left == null && root.right == null) {
            ans += root.val;
            if (ans == target) {
                pathList.add(new ArrayList<>(sum));
            }
        }
        checkSum(root.left, target, ans + root.val, sum);
        checkSum(root.right, target, ans + root.val, sum);
        sum.remove(sum.size() - 1);
    }
}
