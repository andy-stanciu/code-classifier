/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> answer = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> sl = new ArrayList<>();
        if (root == null)
            return answer;
        helper(root, 0, targetSum, sl);
        return answer;
    }

    public void helper(TreeNode root, int sum, int ts, List<Integer> sl) {
        if (root.left == null && root.right == null) {
            if (sum + root.val == ts) {
                sl.add(root.val);
                answer.add(new ArrayList<>(sl));
                sl.remove(sl.size() - 1);
            }
            return;
        }
        sl.add(root.val);
        sum += root.val;
        if (root.left != null)
            helper(root.left, sum, ts, sl);
        if (root.right != null)
            helper(root.right, sum, ts, sl);
        sl.remove(sl.size() - 1);
        sum -= root.val;
    }
}
