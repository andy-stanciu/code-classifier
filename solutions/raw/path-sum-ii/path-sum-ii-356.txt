class Solution {

    public static List<List<Integer>> res;

    public List<List<Integer>> pathSum(TreeNode root, int target) {
        res = new ArrayList<>();
        if (root == null) {
            return res;
        }
        List<Integer> child = new ArrayList<>();
        child.add(root.val);
        helper(root, target, root.val, child);
        return res;
    }

    public static void helper(TreeNode root, int target, int sum, List<Integer> child) {
        if (root == null) {
            return;
        }
        if (sum == target && root.left == null && root.right == null) {
            res.add(new ArrayList<>(child));
        }
        if (root.left != null) {
            child.add(root.left.val);
            helper(root.left, target, sum + root.left.val, child);
            child.remove(child.size() - 1);
        }
        if (root.right != null) {
            child.add(root.right.val);
            helper(root.right, target, sum + root.right.val, child);
            child.remove(child.size() - 1);
        }
    }
}
