/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        if (root == null)
            return new ArrayList<>();
        if (root.val == targetSum && root.left == null && root.right == null) {
            List<List<Integer>> res = new ArrayList<>();
            List<Integer> main = new ArrayList<>();
            main.add(root.val);
            res.add(main);
            return res;
        }
        List<List<Integer>> res = pathSum(root.left, targetSum - root.val);
        res.addAll(pathSum(root.right, targetSum - root.val));
        for (int i = 0; i < res.size(); i++) {
            List<Integer> temp = res.get(i);
            temp.add(0, root.val);
        }
        return res;
    }
}
