/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        pathSum(root, targetSum, result, new ArrayList<>(), 0);
        return result;
    }

    public void pathSum(TreeNode root, int targetSum, List<List<Integer>> result, List<Integer> current, int currentSum) {
        if (root == null) {
            return;
        }
        current.add(root.val);
        if (root.left == null && root.right == null) {
            // leaf node
            if (currentSum + root.val == targetSum) {
                // add to result
                result.add(new ArrayList<>(current));
            }
        }
        pathSum(root.left, targetSum, result, current, currentSum + root.val);
        pathSum(root.right, targetSum, result, current, currentSum + root.val);
        current.remove(current.size() - 1);
    }
}
