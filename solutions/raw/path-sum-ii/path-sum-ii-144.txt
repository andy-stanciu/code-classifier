/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        bt(root, targetSum, new ArrayList<Integer>(), ans);
        return ans;
    }

    public void bt(TreeNode root, int sumLeft, List<Integer> currPath, List<List<Integer>> ans) {
        if (root == null) {
            return;
        }
        currPath.add(root.val);
        if (root.left == null && root.right == null && root.val == sumLeft) {
            ans.add(new ArrayList<>(currPath));
        } else {
            bt(root.left, sumLeft - root.val, currPath, ans);
            bt(root.right, sumLeft - root.val, currPath, ans);
        }
        currPath.remove(currPath.size() - 1);
    }
}
