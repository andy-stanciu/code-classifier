/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        calc(root, targetSum, new ArrayList<>());
        return result;
    }

    void calc(TreeNode node, int sum, List<Integer> temp) {
        if (node == null)
            return;
        temp.add(node.val);
        if (node.val == sum && node.left == null && node.right == null) {
            result.add(new ArrayList<>(temp));
        }
        calc(node.left, sum - node.val, temp);
        calc(node.right, sum - node.val, temp);
        temp.remove(temp.size() - 1);
    }
}
