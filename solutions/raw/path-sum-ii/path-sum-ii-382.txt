/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> list = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int target) {
        List<Integer> nums = new ArrayList<>();
        helper(root, target, 0, nums);
        return list;
    }

    public void helper(TreeNode root, int target, int sum, List<Integer> nums) {
        if (root == null)
            return;
        sum += root.val;
        nums.add(root.val);
        if (root.left == null && root.right == null && target == sum) {
            list.add(new ArrayList<>(nums));
        }
        helper(root.left, target, sum, nums);
        helper(root.right, target, sum, nums);
        nums.remove(nums.size() - 1);
    }
}
