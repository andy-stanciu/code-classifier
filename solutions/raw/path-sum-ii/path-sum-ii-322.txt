/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        route(root, list, path, targetSum, 0);
        return list;
    }

    void route(TreeNode root, List<List<Integer>> list, List<Integer> path, int target, int currentSum) {
        if (root == null) {
            return;
        }
        currentSum += root.val;
        path.add(root.val);
        if (root.left == null && root.right == null && currentSum == target) {
            list.add(new ArrayList<>(path));
        } else {
            route(root.left, list, path, target, currentSum);
            route(root.right, list, path, target, currentSum);
        }
        path.remove(path.size() - 1);
    }
}
