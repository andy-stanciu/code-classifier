/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList();
        List<Integer> l = new ArrayList<>();
        t(root, targetSum, 0, l, res);
        return res;
    }

    void t(TreeNode root, int ts, int s, List<Integer> l, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        s += root.val;
        l.add(root.val);
        if (root.left == null && root.right == null && s == ts) {
            res.add(new ArrayList<>(l));
        }
        t(root.left, ts, s, l, res);
        t(root.right, ts, s, l, res);
        l.remove(l.size() - 1);
    }
}
