/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> list = new ArrayList<>();

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        ArrayList<Integer> res = new ArrayList<>();
        helper(root, targetSum, res);
        return list;
    }

    void helper(TreeNode node, int sum, List<Integer> res) {
        if (node == null) {
            return;
        }
        res.add(node.val);
        if (node.right == null && node.left == null && sum == node.val) {
            list.add(new ArrayList(res));
        }
        helper(node.left, sum - node.val, res);
        helper(node.right, sum - node.val, res);
        res.remove(res.size() - 1);
    }
}
