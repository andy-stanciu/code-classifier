class Solution {

    public TreeNode deleteNode(TreeNode root, int key) {
        if (root == null)
            return null;
        if (root.val > key)
            root.left = deleteNode(root.left, key);
        else if (root.val < key)
            root.right = deleteNode(root.right, key);
        else {
            // root.val == key
            if (// with one or no child ode
            root.left == null)
                // with one or no child ode
                return root.right;
            else if (//with one or no child node
            root.right == null)
                //with one or no child node
                return root.left;
            else {
                int min = getMin(root.right);
                root.val = min;
                // to delete the replacement
                root.right = deleteNode(root.right, min);
            }
        }
        return root;
    }

    public int getMin(TreeNode root) {
        int min = root.val;
        while (root != null) {
            min = root.val;
            root = root.left;
        }
        return min;
    }
}
