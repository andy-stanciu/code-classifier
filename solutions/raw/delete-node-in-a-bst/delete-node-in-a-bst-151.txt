/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private TreeNode addNode(TreeNode node, TreeNode root) {
        if (node == null) {
            return root;
        }
        if (root == null) {
            return node;
        } else {
            if (node.val < root.val) {
                root.left = addNode(node, root.left);
            } else {
                root.right = addNode(node, root.right);
            }
            return root;
        }
    }

    public TreeNode deleteNode(TreeNode root, int key) {
        if (root == null) {
            return null;
        } else {
            if (key == root.val) {
                root = addNode(root.left, root.right);
            } else if (key < root.val) {
                root.left = deleteNode(root.left, key);
            } else {
                root.right = deleteNode(root.right, key);
            }
            return root;
        }
    }
}
