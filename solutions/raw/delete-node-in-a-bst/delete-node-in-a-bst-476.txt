class Solution {

    public TreeNode deleteNode(TreeNode root, int key) {
        if (root == null)
            return null;
        return searchNode(root, key);
    }

    public TreeNode searchNode(TreeNode root, int key) {
        if (root == null)
            return null;
        if (key < root.val)
            root.left = searchNode(root.left, key);
        else if (key > root.val)
            root.right = searchNode(root.right, key);
        else
            return deleteNodeIsRoot(root);
        return root;
    }

    public TreeNode deleteNodeIsRoot(TreeNode root) {
        if (root.left == null) {
            return root.right;
        } else if (root.right == null) {
            return root.left;
        } else {
            TreeNode temp = findMin(root.right);
            root.val = temp.val;
            root.right = deleteNode(root.right, root.val);
        }
        return root;
    }

    private TreeNode findMin(TreeNode node) {
        while (node.left != null) {
            node = node.left;
        }
        return node;
    }
}
