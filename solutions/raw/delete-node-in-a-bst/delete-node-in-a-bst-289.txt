class Solution {

    public static TreeNode findInorderSuccessor(TreeNode root) {
        while (root != null && root.left != null) {
            root = root.left;
        }
        return root;
    }

    public TreeNode deleteNode(TreeNode root, int key) {
        // Base case: if the root is null, return null
        if (root == null)
            return null;
        // searching for the key
        if (root.val < key) {
            root.right = deleteNode(root.right, key);
        } else if (root.val > key) {
            root.left = deleteNode(root.left, key);
        } else {
            // Case 1 - Leaf Node
            if (root.left == null && root.right == null)
                return null;
            else // Case 2 - Single Child
            if (root.left == null)
                return root.right;
            else if (root.right == null)
                return root.left;
            else // Case 3 - Both Children
            {
                TreeNode succ = findInorderSuccessor(root.right);
                root.val = succ.val;
                root.right = deleteNode(root.right, succ.val);
            }
        }
        return root;
    }
}
