class Solution {

    public TreeNode deleteNode(TreeNode root, int key) {
        if (root == null) {
            return null;
        }
        if (root.val > key) {
            root.left = deleteNode(root.left, key);
        } else if (root.val < key) {
            root.right = deleteNode(root.right, key);
        } else {
            if (root.val == key) {
                if (root.left == null && root.right == null) {
                    return null;
                }
                if (root.left == null) {
                    return root.right;
                } else if (root.right == null) {
                    return root.left;
                }
                TreeNode intraversal = inorder(root.right);
                root.val = intraversal.val;
                root.right = deleteNode(root.right, intraversal.val);
            }
        }
        return root;
    }

    public TreeNode inorder(TreeNode root) {
        while (root.left != null) {
            root = root.left;
        }
        return root;
    }
}
