/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode deleteNode(TreeNode root, int key) {
        TreeNode temp = root;
        if (temp == null) {
            return null;
        }
        if (key < temp.val) {
            temp.left = deleteNode(temp.left, key);
        } else if (key > temp.val) {
            temp.right = deleteNode(temp.right, key);
        } else {
            if (temp.left == null && temp.right == null) {
                return null;
            } else if (temp.left == null) {
                temp = temp.right;
            } else if (temp.right == null) {
                temp = temp.left;
            } else {
                int stmin = minValue(temp.right);
                temp.val = stmin;
                temp.right = deleteNode(temp.right, stmin);
            }
        }
        return temp;
    }

    public int minValue(TreeNode temp) {
        while (temp.left != null) {
            temp = temp.left;
        }
        return temp.val;
    }
}
