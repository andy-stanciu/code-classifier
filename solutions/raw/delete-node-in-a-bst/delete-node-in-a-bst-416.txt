/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode deleteNode(TreeNode root, int key) {
        TreeNode temp;
        if (root == null)
            return null;
        else if (key < root.val)
            root.left = deleteNode(root.left, key);
        else if (key > root.val)
            root.right = deleteNode(root.right, key);
        else if (root.left != null && root.right != null) {
            temp = Findmin(root.right);
            root.val = temp.val;
            root.right = deleteNode(root.right, temp.val);
        } else {
            temp = root;
            if (root.left == null)
                root = root.right;
            else if (root.right == null)
                root = root.left;
        }
        return root;
    }

    public TreeNode Findmin(TreeNode t) {
        if (t == null)
            return null;
        else if (t.left == null)
            return t;
        else
            return Findmin(t.left);
    }
}
