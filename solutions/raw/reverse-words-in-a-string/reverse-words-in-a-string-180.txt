class Solution {

    public String reverseWords(String s) {
        StringBuilder sb = new StringBuilder();
        // \uC5F0\uC18D\uB41C \uACF5\uBC31\uC744 \uD558\uB098\uC758 \uAD6C\uBD84\uC790\uB85C \uCC98\uB9AC
        String[] splited = s.trim().split("\\\\s+");
        // \uBC30\uC5F4\uC744 \uB4A4\uC5D0\uC11C\uBD80\uD130 \uC21C\uC11C\uB300\uB85C append
        for (int i = splited.length - 1; i >= 0; i--) {
            sb.append(splited[i]);
            // \uB9C8\uC9C0\uB9C9 \uB2E8\uC5B4\uAC00 \uC544\uB2CC \uACBD\uC6B0\uB9CC \uACF5\uBC31 \uCD94\uAC00
            if (i > 0) {
                sb.append(" ");
            }
        }
        return sb.toString();
    }
}
