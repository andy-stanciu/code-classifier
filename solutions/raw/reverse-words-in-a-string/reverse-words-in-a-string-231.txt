class Solution {

    public String reverseWords(String s) {
        //method 1
        //    StringBuilder result = new StringBuilder();
        //     ArrayList<String> filtered_word = new ArrayList<String>(List.of(s.split(" +")));
        //     for(int i = filtered_word.size() - 1; i >= 0 ; i--)
        //     {
        //         String word = filtered_word.get(i).trim();
        //         if(!word.isEmpty())
        //         {
        //             result.append(filtered_word.get(i)).append(" ");
        //         }
        //     }
        //     if(!result.isEmpty()) {
        //         result.deleteCharAt(result.length() -1);
        //     }
        //     System.gc();
        //     return result.toString() ;
        // method2
        //        String[] words = s.split(" ");
        //
        //        StringBuilder sb = new StringBuilder();
        //        for(int i = words.length -1 ; i >= 0 ; i--){
        //            if(!words[i].isEmpty()){
        //                sb.append(words[i] + " ");
        //            }
        //
        //        }
        //        return sb.toString().trim();
        //method3
        StringBuilder result = new StringBuilder();
        ArrayList<String> filtered_word = new ArrayList<String>(List.of(s.split(" ")));
        for (int i = filtered_word.size() - 1; i >= 0; i--) {
            if (!filtered_word.get(i).isEmpty()) {
                result.append(filtered_word.get(i)).append(" ");
            }
        }
        System.gc();
        return result.toString().trim();
    }
}
