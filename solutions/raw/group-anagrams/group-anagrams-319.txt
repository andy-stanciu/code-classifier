class Solution {

    public List<List<String>> groupAnagrams(String[] strs) {
        if (strs == null || strs.length == 0)
            return new ArrayList<>();
        Map<String, List<String>> map = new HashMap<>();
        for (String str : strs) {
            // Sort the string and use it as a key
            char[] charArray = str.toCharArray();
            Arrays.sort(charArray);
            String sortedStr = new String(charArray);
            // Add the original string to the correct anagram group
            if (!map.containsKey(sortedStr)) {
                map.put(sortedStr, new ArrayList<>());
            }
            map.get(sortedStr).add(str);
        }
        return new ArrayList<>(map.values());
    }
}
// Brute
//// class Solution {
//     public List<List<String>> groupAnagrams(String[] strs) {
//         HashSet<String> grouped = new HashSet<>();
//         List<List<String>> list = new ArrayList<>();
//         for (int i = 0; i < strs.length; i++) {
//             if (grouped.contains(strs[i])) {
//                 continue;
//             }
//             // First make a map for the curr word
//             HashMap<Character, Integer> map1 = new HashMap<>();
//             for (char ch : strs[i].toCharArray()) {
//                 map1.put(ch, map1.getOrDefault(ch, 0) + 1);
//             }
//             List<String> group = new ArrayList<>();
//             group.add(strs[i]);
//             // Finding groups of it
//             for (int j = i + 1; j < strs.length; j++) {
//                 HashMap<Character, Integer> map2 = new HashMap<>();
//                 for (char ch : strs[j].toCharArray()) {
//                     map2.put(ch, map2.getOrDefault(ch, 0) + 1);
//                 }
//                 // Compare map1 and map2
//                 if (map1.equals(map2)) {
//                     group.add(strs[j]);
//                     grouped.add(strs[j]);
//                 }
//             }
//             grouped.add(strs[i]);
//             list.add(group);
//         }
//         return list;
//     }
// }
