class Solution {

    public List<List<String>> groupAnagrams(String[] strs) {
        Map<String, List<String>> groups = new HashMap<>();
        for (String s : strs) {
            int[] map = new int[26];
            for (int i = 0; i < s.length(); ++i) {
                int c = (int) s.charAt(i) - 97;
                map[c]++;
            }
            StringBuilder keyBuilder = new StringBuilder();
            for (int i = 0; i < 26; ++i) {
                if (map[i] != 0) {
                    String c = String.valueOf((char) (i + 97));
                    keyBuilder.append(String.valueOf(map[i]));
                    keyBuilder.append(c);
                }
            }
            String key = keyBuilder.toString();
            // System.out.println(key);
            if (!groups.containsKey(key)) {
                groups.put(key, new ArrayList<>());
            }
            List<String> list = groups.get(key);
            list.add(s);
            groups.put(key, list);
        }
        List<List<String>> result = new ArrayList<>();
        for (String k : groups.keySet()) {
            result.add(groups.get(k));
        }
        return result;
    }
}
