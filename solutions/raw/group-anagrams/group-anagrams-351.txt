class Solution {

    public List<List<String>> groupAnagrams(String[] strs) {
        if (strs == null || strs.length == 0) {
            return new ArrayList<>();
        }
        // A map to store the grouped anagrams
        Map<String, List<String>> anagramMap = new HashMap<>();
        for (String s : strs) {
            // Convert the string to a character array, sort it, and then convert it back to a string
            char[] charArray = s.toCharArray();
            Arrays.sort(charArray);
            String sortedString = new String(charArray);
            // If the sorted string is already a key, add the original string to the list
            if (!anagramMap.containsKey(sortedString)) {
                anagramMap.put(sortedString, new ArrayList<>());
            }
            anagramMap.get(sortedString).add(s);
        }
        // Collect all the lists of anagrams
        return new ArrayList<>(anagramMap.values());
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        String[] strs1 = { "eat", "tea", "tan", "ate", "nat", "bat" };
        String[] strs2 = { "" };
        String[] strs3 = { "a" };
        // Output: [["bat"], ["nat", "tan"], ["ate", "eat", "tea"]]
        System.out.println(sol.groupAnagrams(strs1));
        // Output: [[""]]
        System.out.println(sol.groupAnagrams(strs2));
        // Output: [["a"]]
        System.out.println(sol.groupAnagrams(strs3));
    }
}
