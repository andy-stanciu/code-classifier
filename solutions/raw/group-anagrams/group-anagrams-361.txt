class Solution {

    public List<List<String>> groupAnagrams(String[] strs) {
        // sub-problems
        // finding the anagram
        // -- using a hashmap, keep a key of the sorted word
        // -- if the sorted word is in the hashmap, add the word to the key value (a list)
        // storing similar anagrams into an list
        // -- create a new list and store every list item into that list
        HashMap<String, List<String>> mmap = new HashMap<>();
        for (String x : strs) {
            // sorting the word
            // break it into a char array
            char[] xArr = x.toCharArray();
            // sort the array
            Arrays.sort(xArr);
            // combine the array
            String n = new String(xArr);
            if (mmap.containsKey(n)) {
                mmap.get(n).add(x);
            } else {
                List<String> aa = new ArrayList<>();
                aa.add(x);
                mmap.put(n, aa);
            }
        }
        List<List<String>> jj = new ArrayList<>();
        for (List<String> val : mmap.values()) {
            jj.add(val);
        }
        return jj;
    }
}
