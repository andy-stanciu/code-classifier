class Solution {

    public List<List<String>> groupAnagrams(String[] strs) {
        List<Integer> list = new ArrayList<>();
        List<List<String>> ans = new ArrayList<>();
        String[] arr = new String[strs.length];
        HashMap<String, ArrayList<Integer>> map = new HashMap<>();
        int n = arr.length;
        for (int i = 0; i < n; i++) {
            char[] temp = strs[i].toCharArray();
            Arrays.sort(temp);
            String s = new String(temp);
            arr[i] = s;
        }
        for (int i = 0; i < n; i++) {
            String key = arr[i];
            if (map.containsKey(key)) {
                map.get(key).add(i);
            } else {
                ArrayList<Integer> indexList = new ArrayList<>();
                indexList.add(i);
                map.put(key, indexList);
            }
        }
        for (Map.Entry<String, ArrayList<Integer>> entry : map.entrySet()) {
            ArrayList<Integer> temp = entry.getValue();
            int m = temp.size();
            List<String> subList = new ArrayList<>();
            for (int i = 0; i < m; i++) {
                subList.add(strs[temp.get(i)]);
            }
            ans.add(subList);
        }
        return ans;
    }
}
