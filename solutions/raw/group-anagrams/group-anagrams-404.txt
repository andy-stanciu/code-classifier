class Solution {

    public List<List<String>> groupAnagrams(String[] strs) {
        // Create a HashMap to store anagrams where the key is the sorted string of
        // characters and the value is a list of original strings
        Map<String, List<String>> map = new HashMap<>();
        // Loop through each string in the input array
        for (int i = 0; i < strs.length; i++) {
            // Get the current word from the array
            String currentWord = strs[i];
            // Convert the current word to a character array
            char[] chars = currentWord.toCharArray();
            // Sort the characters in the word alphabetically
            Arrays.sort(chars);
            // Convert the sorted character array back to a string
            String sortedWord = new String(chars);
            // Check if the sorted word is already a key in the map
            if (!map.containsKey(sortedWord)) {
                // If not, create a new key-value pair with an empty ArrayList as the value
                map.put(sortedWord, new ArrayList<>());
            }
            // Add the current word to the list of anagrams for the sorted word
            map.get(sortedWord).add(currentWord);
        }
        // Return a new ArrayList containing all the lists of anagrams (map values)
        return new ArrayList<>(map.values());
    }
}
