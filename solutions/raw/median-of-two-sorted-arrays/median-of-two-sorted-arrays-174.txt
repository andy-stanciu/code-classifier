class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n = nums1.length, m = nums2.length;
        int[] nums = new int[n + m];
        int k, i = 0, j = 0;
        // Merge two sorted arrays into a single sorted array
        for (k = 0; i < n && j < m; k++) {
            if (nums1[i] < nums2[j]) {
                nums[k] = nums1[i];
                i++;
            } else {
                nums[k] = nums2[j];
                j++;
            }
        }
        // If there are remaining elements in nums1, copy them to nums
        while (i < n) {
            nums[k] = nums1[i];
            i++;
            k++;
        }
        // If there are remaining elements in nums2, copy them to nums
        while (j < m) {
            nums[k] = nums2[j];
            j++;
            k++;
        }
        // Calculate the median
        if ((n + m) % 2 == 1) {
            // If length is odd, return the middle element
            return (double) nums[(n + m) / 2];
        } else {
            // If length is even, return the average of the two middle elements
            return (double) (nums[(n + m) / 2] + nums[(n + m - 1) / 2]) / 2.0;
        }
    }
}
