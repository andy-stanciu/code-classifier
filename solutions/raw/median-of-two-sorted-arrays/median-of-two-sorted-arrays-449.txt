class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        //   int[] nums1 = {};
        //   int[] nums2 = { 1 };
        int i = 0, j = 0, k = 0;
        int[] sum = new int[nums1.length + nums2.length];
        // System.out.println("nums1.length:"+nums1.length);
        // System.out.println("nums2.length:"+nums2.length);
        while (k < sum.length) {
            if (i < nums1.length && j < nums2.length) {
                if (nums1[i] <= nums2[j] && nums1 != null) {
                    //  System.out.println("nums1[i]<nums2[j]");
                    sum[k] = nums1[i];
                    i++;
                } else {
                    sum[k] = nums2[j];
                    j++;
                }
            } else if (j < nums2.length) {
                sum[k] = nums2[j];
                j++;
            } else if (i < nums1.length) {
                sum[k] = nums1[i];
                i++;
            } else if (nums1.length == 0 && nums2.length != 0) {
                System.out.println("nums1 == null:");
                sum[k] = nums2[j];
                j++;
            } else if (nums1.length != 0 && nums2.length == 0) {
                sum[k] = nums1[i];
                i++;
            }
            k++;
        }
        System.out.println("sum.length:" + sum.length);
        System.out.println("sum[k]" + sum[sum.length - 1]);
        if (sum.length % 2 == 0) {
            // System.out.println("% 2 ==0");
            System.out.println("/2-1:" + sum[sum.length / 2 - 1]);
            System.out.println("/2:" + sum[sum.length / 2]);
            return new Double((double) (sum[sum.length / 2 - 1] + sum[sum.length / 2]) / 2);
        } else {
            System.out.println("% 2 !0");
            return sum[(sum.length - 1) / 2];
        }
    }
}
