class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n1 = nums1.length, n2 = nums2.length;
        if (n2 < n1) {
            //if nums2 is smaller in length then we compute according to nums2 instead of nums1
            return findMedianSortedArrays(nums2, nums1);
        }
        int low = 0;
        int high = n1;
        //double ans=-1;
        while (low <= high) {
            int midX = low + (high - low) / 2;
            //partion of 2nd Arrays acc to formula partion1+partion2=(len of 1+len of 2+1)
            int midY = (n1 + n2 + 1) / 2 - midX;
            //if there are elem in the left half consider -INFINITY
            int maxLeftX = (midX == 0) ? Integer.MIN_VALUE : nums1[midX - 1];
            //if there are no elem in right partion of 1st array consider +INFINITY
            int minRightX = (midX == n1) ? Integer.MAX_VALUE : nums1[midX];
            int maxLeftY = (midY == 0) ? Integer.MIN_VALUE : nums2[midY - 1];
            int minRightY = (midY == n2) ? Integer.MAX_VALUE : nums2[midY];
            //ideal condition when all elem in the left half of both arrays are lesser then right half of both arrays
            if (maxLeftX <= minRightY && maxLeftY <= minRightX) {
                if ((n1 + n2) % 2 == 1) {
                    // len is off return the max of middle elem
                    return (double) Math.max(maxLeftX, maxLeftY);
                } else {
                    // if len is even formula = avg(max(maxLeftX,maxLeftY),min(minRightX,minRightY))
                    return (double) ((Math.max(maxLeftX, maxLeftY) + Math.min(minRightX, minRightY)) / 2.0);
                    //divide by 2.0 instead nof 2 so as not to truncate the answer
                }
            } else if (maxLeftX > minRightY) {
                //we are too far rigth in 1st move towards left
                high = midX - 1;
            } else
                //move towards right
                low = midX + 1;
        }
        throw new IllegalArgumentException("Input arrays are not sorted.");
    }
}
