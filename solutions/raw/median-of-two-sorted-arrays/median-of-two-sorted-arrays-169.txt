class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int i = 0, j = 0, k = 0;
        int n1 = nums1.length, n2 = nums2.length;
        int[] ans = new int[n1 + n2];
        //merging both arrays
        while (i < n1 && j < n2) {
            if (nums1[i] <= nums2[j]) {
                ans[k++] = nums1[i];
                i++;
            } else {
                ans[k++] = nums2[j];
                j++;
            }
        }
        //if 1st array elements remaining
        while (i < n1) {
            ans[k++] = nums1[i];
            i++;
        }
        //if 2nd array elements remaining
        while (j < n2) {
            ans[k++] = nums2[j];
            j++;
        }
        int n = ans.length;
        double res = 0;
        if (n % 2 == 0) {
            //if resultant array has even elements
            res = (ans[n / 2] + ans[n / 2 - 1]);
            res = res / 2;
        } else {
            //if resultant array has odd elements
            res = ans[n / 2];
        }
        return res;
    }
}
