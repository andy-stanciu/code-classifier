class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m = nums1.length;
        int m1 = nums2.length;
        int i = 0;
        int j = 0;
        int n = m + m1;
        int idx2 = n / 2;
        int idx1 = idx2 - 1;
        int count = 0;
        int idx1ele = -1;
        int idx2ele = -1;
        while (i < m && j < m1) {
            if (nums1[i] < nums2[j]) {
                if (count == idx1) {
                    idx1ele = nums1[i];
                }
                if (count == idx2) {
                    idx2ele = nums1[i];
                }
                i++;
                count++;
            } else {
                if (count == idx1) {
                    idx1ele = nums2[j];
                }
                if (count == idx2) {
                    idx2ele = nums2[j];
                }
                count++;
                j++;
            }
        }
        while (i < m) {
            if (count == idx1) {
                idx1ele = nums1[i];
            }
            if (count == idx2) {
                idx2ele = nums1[i];
            }
            i++;
            count++;
        }
        while (j < m1) {
            if (count == idx1) {
                idx1ele = nums2[j];
            }
            if (count == idx2) {
                idx2ele = nums2[j];
            }
            count++;
            j++;
        }
        if (n % 2 == 1) {
            return idx2ele;
        }
        return (double) ((double) (idx1ele + idx2ele)) / 2;
    }
}
