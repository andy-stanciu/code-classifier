class Solution {

    public static double medianInt(int[] nums) {
        int left = 0;
        int length = nums.length;
        int right = length - 1;
        int mid = (left + right) / 2;
        if (nums.length % 2 == 0) {
            double result = (double) (nums[mid] + nums[mid + 1]) / 2;
            return result;
        } else {
            double result2 = nums[mid];
            return result2;
        }
    }

    public static double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int lengthOfIntArray1 = nums1.length;
        int lengthOfIntArray2 = nums2.length;
        int[] finalArray = new int[lengthOfIntArray1 + lengthOfIntArray2];
        int index = 0;
        for (int i = 0; i < lengthOfIntArray1; i++) {
            finalArray[i] = nums1[i];
            index++;
        }
        for (int i = 0; i < lengthOfIntArray2; i++) {
            finalArray[index] = nums2[i];
            index++;
        }
        Arrays.sort(finalArray);
        double result = medianInt(finalArray);
        return result;
    }
}
