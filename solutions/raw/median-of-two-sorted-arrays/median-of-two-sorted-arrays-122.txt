class Solution {

    public double findMedianSortedArrays(int[] a, int[] b) {
        int len = a.length + b.length;
        // Iterator for nums1 array
        int aIndex = 0;
        // Iterator for nums2 array
        int bIndex = 0;
        // for even case
        int previous = 0;
        // for odd and even case
        int current = 0;
        // merged sorted array Index
        int resultIndex = 0;
        while (resultIndex++ <= (len / 2)) {
            // LOOP UP TO (M + N) / 2
            // assign current value to previous
            previous = current;
            if (aIndex >= a.length) {
                // if aIndex >= a length then only use b;
                // update current value and increment bIndex;
                current = b[bIndex++];
                continue;
            }
            if (bIndex >= b.length) {
                // similar as above,for bIndex
                current = a[aIndex++];
                continue;
            }
            if (a[aIndex] < b[bIndex]) {
                // marge method;
                current = a[aIndex++];
            } else {
                current = b[bIndex++];
            }
        }
        if (len % 2 == 0) {
            // if len is even
            return (double) (previous + current) / 2;
        } else {
            // if len is odd
            return (double) current;
        }
    }
}
