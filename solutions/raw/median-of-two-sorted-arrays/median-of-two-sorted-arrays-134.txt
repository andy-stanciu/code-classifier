class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int[] res = mergetwosortedArray(nums1, nums2);
        int mid = (nums1.length + nums2.length) / 2;
        if (res.length == 1)
            return res[0];
        //odd case
        if (res.length % 2 == 1) {
            return res[mid];
        } else
            //even case
            return ((res[mid - 1] + res[mid]) / 2.0);
    }

    public static int[] mergetwosortedArray(int[] arr1, int[] arr2) {
        // TODO Auto-generated method stub
        int n = arr1.length;
        int m = arr2.length;
        int[] ans = new int[n + m];
        int i = 0, j = 0, k = 0;
        while (i < n && j < m) {
            if (arr1[i] < arr2[j]) {
                ans[k] = arr1[i];
                i++;
                k++;
            } else {
                ans[k] = arr2[j];
                j++;
                k++;
            }
        }
        while (i < n) {
            ans[k] = arr1[i];
            i++;
            k++;
        }
        while (j < m) {
            ans[k] = arr2[j];
            j++;
            k++;
        }
        return ans;
    }
}
