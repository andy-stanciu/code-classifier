class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        double[] ary3 = marg(nums1, nums2);
        int n = ary3.length / 2;
        double median;
        if (ary3.length % 2 == 0) {
            median = (ary3[n] + ary3[n - 1]) / 2;
        } else {
            median = ary3[n];
        }
        return median;
    }

    public double[] marg(int[] ary1, int[] ary2) {
        double[] ary3 = new double[ary1.length + ary2.length];
        int i = 0, j = 0, k = 0;
        while (i < ary1.length && j < ary2.length) {
            if (ary1[i] <= ary2[j]) {
                ary3[k] = ary1[i];
                k++;
                i++;
            } else if (ary1[i] > ary2[j]) {
                ary3[k] = ary2[j];
                j++;
                k++;
            }
        }
        for (; i < ary1.length; i++) {
            ary3[k++] = ary1[i];
        }
        for (; j < ary2.length; j++) {
            ary3[k++] = ary2[j];
        }
        return ary3;
    }
}
