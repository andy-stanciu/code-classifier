class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int[] combined = conquer(nums1, nums2);
        if (combined.length % 2 != 0) {
            return (double) combined[combined.length / 2];
        } else {
            return (combined[combined.length / 2] + combined[(combined.length / 2) - 1]) / 2.0;
        }
    }

    private int[] conquer(int[] arr1, int[] arr2) {
        int[] combined = new int[arr1.length + arr2.length];
        int main = 0;
        int a1 = 0;
        int a2 = 0;
        while (a1 < arr1.length && a2 < arr2.length) {
            if (arr1[a1] >= arr2[a2]) {
                combined[main++] = arr2[a2++];
            } else
                combined[main++] = arr1[a1++];
        }
        while (a1 < arr1.length) {
            combined[main++] = arr1[a1++];
        }
        while (a2 < arr2.length) {
            combined[main++] = arr2[a2++];
        }
        return combined;
    }
}
