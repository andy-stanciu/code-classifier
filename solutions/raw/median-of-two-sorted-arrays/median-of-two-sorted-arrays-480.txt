class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        //Approach 1 -->without BS //Compromising on SPACE it tooks O(m+n) :-(   );
        int i = 0, j = 0;
        int[] ans = new int[nums1.length + nums2.length];
        int k = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] > nums2[j]) {
                ans[k++] = nums2[j];
                j++;
            } else {
                ans[k++] = nums1[i];
                i++;
            }
        }
        while (i < nums1.length) {
            ans[k++] = nums1[i];
            i++;
        }
        while (j < nums2.length) {
            ans[k++] = nums2[j];
            j++;
        }
        int sum = ans.length;
        int mid = ans.length / 2;
        if (sum == 1)
            return ans[0];
        //  System.out.println(ans[mid]+" "+ans[mid-1]);
        double anst = (float) (ans[mid - 1] + ans[mid]) / 2;
        if (sum % 2 != 0)
            return ans[mid];
        else
            return anst;
    }
}
