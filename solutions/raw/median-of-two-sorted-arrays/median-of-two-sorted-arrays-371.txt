class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int i = 0;
        int j = 0;
        int[] mergedArray = new int[nums1.length + nums2.length];
        int k = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] <= nums2[j]) {
                mergedArray[k] = nums1[i];
                i++;
            } else if (nums2[j] <= nums1[i]) {
                mergedArray[k] = nums2[j];
                j++;
            }
            k++;
        }
        while (i < nums1.length) {
            mergedArray[k] = nums1[i];
            i++;
            k++;
        }
        while (j < nums2.length) {
            mergedArray[k] = nums2[j];
            j++;
            k++;
        }
        double median;
        if (mergedArray.length % 2 == 1) {
            median = (double) mergedArray[mergedArray.length / 2];
        } else {
            median = (double) (mergedArray[mergedArray.length / 2] + mergedArray[(mergedArray.length / 2) - 1]) / 2;
        }
        return median;
    }
}
