class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < nums1.length; i++) {
            list.add(nums1[i]);
        }
        for (int i = 0; i < nums2.length; i++) {
            list.add(nums2[i]);
        }
        Collections.sort(list);
        if (//even
        list.size() % 2 == 0) {
            return (((double) (list.get((list.size() - 1) / 2)) + (list.get(list.size() / 2))) / 2);
        } else {
            //odd
            return list.get(list.size() / 2);
        }
    }
}
//Description :
//return ( ( (double)(list.get((list.size()-1)/2))+(list.get(list.size()/2)) )/2 );
//double n = list.get((list.size()-1)/2);
//double n1 = list.get(list.size()/2);
//double median = ( n+n1 )/2;
//return median;
// return list.get(list.size()/2);
//double median = list.get(list.size()/2);
//return median;
