class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for (int i : nums1) {
            pq.add(i);
        }
        for (int j : nums2) {
            pq.add(j);
        }
        int count = 1;
        boolean odd = false;
        int len = nums1.length + nums2.length;
        if (len % 2 != 0)
            odd = true;
        if (pq.size() == 1)
            return pq.poll();
        while (!pq.isEmpty()) {
            if (count == len / 2 && odd) {
                pq.poll();
                return pq.poll();
            } else if (count == len / 2 && !odd) {
                int a = pq.poll();
                int b = pq.poll();
                double x = (double) (a + b) / 2;
                return x;
            } else {
                pq.poll();
            }
            count++;
        }
        return 0.0;
    }
}
