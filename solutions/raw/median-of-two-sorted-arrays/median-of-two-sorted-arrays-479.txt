class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        if (nums1.length > nums2.length) {
            return findMedianSortedArrays(nums2, nums1);
        }
        var num1Length = nums1.length;
        var num2Length = nums2.length;
        var low = 0;
        var high = num1Length;
        while (low <= high) {
            // \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u0430 \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430
            var midOfNum1 = (low + high) / 2;
            // \u0432\u043D\u0430\u0447\u0430\u043B\u0435 \u0438\u0449\u0435\u043C \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u0443 \u043E\u0431\u0435\u0434\u0438\u043D\u043D\u0435\u043D\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u043F\u043E\u043B\u0443\u0447\u0430\u0435\u0442\u0441\u044F \u0443 \u043D\u0430\u0441 \u043E\u0441\u0442\u0430\u043D\u0435\u0442\u0441\u044F \u0434\u0432\u0435 \u043F\u043E\u043B\u043E\u0432\u0438\u043D\u044B, \u043F\u0440\u0430\u0432\u0430\u044F \u0447\u0430\u0441\u0442\u044C \u0432 \u0438\u0434\u0435\u0430\u043B\u0435 \u043F\u0435\u0440\u0432\u0430\u044F \u0447\u0430\u0442\u044C \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u043B\u0435\u0432\u0430\u044F \u0447\u0430\u0442\u044C \u0432 \u0438\u0434\u0435\u043B\u0435 \u0432\u0442\u043E\u0440\u0430\u044F \u0447\u0430\u0442\u044C \u043C\u0430\u0441\u0441\u0438\u0432\u0430
            // \u0434\u0430\u043B\u044C\u0448\u0435 \u043C\u044B \u0432\u044B\u0447\u0438\u0442\u0430\u0435\u043C \u043F\u043E\u0437\u0438\u0446\u0438\u044E \u043A\u043E\u0442\u043E\u0440\u0430\u044F \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u043E\u0439 \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430 midOfNum1, \u0432 \u0438\u0434\u0435\u0430\u043B\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0442\u0430\u043A\u0436\u0435 \u0442\u043E\u0447\u043A\u043E\u0439 \u0440\u0430\u0437\u0431\u0438\u0435\u043D\u0438\u044F \u0434\u043B\u044F \u043C\u0430\u0441\u0441\u0438\u0432\u0430 2
            // \u0438 \u044D\u0442\u0430 \u043A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u043C\u0430\u043A\u0441\u0438\u0430\u043C\u043B\u044C\u043D\u043E\u0439 \u0442\u043E\u0447\u043A\u043E\u0439 \u0434\u043B\u044F \u043F\u0435\u0440\u0432\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 \u043C\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u0432\u0430 \u0438 \u043C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0439 \u0442\u043E\u0447\u043A\u043E\u0439 \u0434\u043B\u044F \u0432\u0442\u043E\u0440\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 +-1
            var midOfNum2 = (num1Length + num2Length + 1) / 2 - midOfNum1;
            // \u043E\u043F\u0435\u0440\u0434\u0435\u043B\u044F\u0435\u043C \u043F\u043E\u0437\u0438\u0446\u0438\u0438 1 \u043C\u0430\u0441\u0441\u0438\u0432\u0430
            // \u0435\u0441\u043B\u0438 0 \u0442\u043E \u043F\u0443\u0441\u0442\u0430\u044F \u043B\u0435\u0432\u0430\u044F \u0447\u0430\u0442\u0441\u0442\u044C \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u0438\u043D\u0430\u0447\u0435 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u043E\u0442 \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u044B, \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u0438 \u0430 \u043E\u0434\u043D\u0438 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u043C\u0435\u043D\u044C\u0448\u0435 \u0442\u0430\u043A \u043A\u0430\u043A \u0441\u043B\u0435\u0434 \u043C\u0430\u0441\u0441\u0438\u0432 \u044D\u0442\u043E \u043F\u0435\u0440\u0432\u044B\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0432\u0442\u043E\u0440\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 \u043C\u0430\u0441\u0441\u0438\u0432\u0430
            var maxLeftPartOfNum1 = (midOfNum1 == 0) ? Integer.MIN_VALUE : nums1[midOfNum1 - 1];
            // \u0435\u0441\u043B\u0438 \u0440\u0430\u0432\u0435\u043D \u0441\u0435\u0435\u0434\u0438\u043D\u0435 \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u0442\u043E \u043F\u043E\u043D\u044F\u0442\u043D\u043E \u0447\u0442\u043E \u043F\u0440\u0430\u0432\u0430\u044F \u0447\u0430\u0441\u0442\u044C \u044D\u0442\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430 \u043F\u0443\u0441\u0442\u0430\u044F, \u0438 \u043C\u044B \u0431\u0435\u0440\u0435\u043C \u0431\u043E\u043B\u044C\u0448\u0435\u0435 \u0441\u0430\u043C\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435, \u0434\u043B\u044F \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u044F \u0447\u0442\u043E \u043D\u0430\u0448\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u044F \u043D\u0430 \u0440\u0430\u0437\u0431\u0438\u0435\u043D\u0438\u0435 \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u0432 \u0441\u043E\u0432\u043F\u0430\u0434\u0430\u044E\u0442.
            var minRightPartOfNum1 = (midOfNum1 == num1Length) ? Integer.MAX_VALUE : nums1[midOfNum1];
            // \u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0435\u043C \u043F\u043E\u0437\u0438\u0446\u0438\u0438 2 \u043C\u0430\u0441\u0441\u0438\u0432\u0430
            // \u0435\u0441\u043B\u0438 0 \u0442\u043E \u043F\u0443\u0441\u0442\u0430\u044F \u043B\u0435\u0432\u0430\u044F \u0447\u0430\u0442\u0441\u0442\u044C 2 \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u0438\u043D\u0430\u0447\u0435 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u043E\u0442 \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u044B, 2 \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u0438 \u0430 \u043E\u0434\u043D\u0438 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u043C\u0435\u043D\u044C\u0448\u0435 \u0442\u0430\u043A \u043A\u0430\u043A \u0441\u043B\u0435\u0434 \u043C\u0430\u0441\u0441\u0438\u0432 \u044D\u0442\u043E \u043F\u0435\u0440\u0432\u044B\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0432\u0442\u043E\u0440\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 \u043C\u0430\u0441\u0441\u0438\u0432\u0430
            var maxLeftPartOfNum2 = (midOfNum2 == 0) ? Integer.MIN_VALUE : nums2[midOfNum2 - 1];
            // \u0435\u0441\u043B\u0438 \u0440\u0430\u0432\u0435\u043D \u0441\u0435\u0435\u0434\u0438\u043D\u0435 2 \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u0442\u043E \u043F\u043E\u043D\u044F\u0442\u043D\u043E \u0447\u0442\u043E \u043F\u0440\u0430\u0432\u0430\u044F \u0447\u0430\u0441\u0442\u044C \u044D\u0442\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430 \u043F\u0443\u0441\u0442\u0430\u044F, \u0438 \u043C\u044B \u0431\u0435\u0440\u0435\u043C \u0431\u043E\u043B\u044C\u0448\u0435\u0435 \u0441\u0430\u043C\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435, \u0434\u043B\u044F \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u044F \u0447\u0442\u043E \u043D\u0430\u0448\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u044F \u043D\u0430 \u0440\u0430\u0437\u0431\u0438\u0435\u043D\u0438\u0435 \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u0432 \u0441\u043E\u0432\u043F\u0430\u0434\u0430\u044E\u0442.
            var minRightPartOfNum2 = (midOfNum2 == num2Length) ? Integer.MAX_VALUE : nums2[midOfNum2];
            // \u043F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C \u0433\u0438\u0431\u043A\u043E\u0435 \u0440\u0430\u0437\u0431\u0438\u0435\u043D\u0438\u0435 \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u0432 \u043D\u0430 \u043F\u0440\u0430\u0432\u043B\u0435\u044C\u043D\u043E\u0441\u0442\u044C
            // \u043C\u044B \u0434\u0432\u0438\u0433\u0430\u0435\u043C \u0443\u043A\u0430\u0437\u0430\u0442\u0435\u043B\u0438 \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u0432\u043E \u0442\u0430\u043A, \u0447\u0442\u043E\u0431\u044B \u043B\u0435\u0432\u0430\u044F \u0447\u0430\u0441\u0430\u0442\u044C \u043F\u0440\u0430\u0432\u043E\u0433\u043E  \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u044B\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442, \u0431\u044B\u043B \u043C\u0435\u043D\u044C\u0448\u0435 \u0447\u0435\u043C \u043C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u044B\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u043F\u0440\u0430\u0432\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u0442\u043E\u0440\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430 \u0418 \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0430\u044F \u0447\u0438\u0441\u043B\u043E \u043B\u0435\u0432\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 2 \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u043C\u0435\u043D\u044C\u0448\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E \u043C\u0430\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0439 \u043F\u0440\u0430\u0432\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 \u043F\u0435\u0440\u0432\u043E\u0433\u043E
            // \u043F\u043E\u0442\u043E\u043C\u0443 \u0447\u0442\u043E var maxLeftPartOfNum2 = midOfNum2 == 0 ? Integer.MIN_VALUE : nums2[midOfNum2 - 1]; \u0432\u044B\u0447\u0438\u0442\u0430\u0435\u043C 1)
            // \u043C\u044B \u0434\u0432\u0438\u0433\u0430\u0435\u043C \u043F\u043E\u043A\u0430\u0437\u0430\u0442\u0435\u043B\u0438 \u044D\u0442\u0438\u043C\u0445 \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u0432 \u043A \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443 \u0447\u0442\u043E\u0431\u044B \u043E\u0431\u0435\u0441\u043F\u0435\u0447\u0438\u0442\u044C \u043F\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043D\u0438\u0435, \u043F\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043D\u0438\u0435 \u0438 \u0431\u0443\u0434\u0435\u0442 \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u043E\u0439, \u043A\u043E\u0442\u043E\u0440\u0443\u044E \u043C\u044B \u0438\u0449\u0435\u043C (\u0443\u0441\u043B\u0432\u043D\u043E \u043F\u0440\u0430\u0432\u0430\u044F \u0447\u0430\u0442\u044C \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u0438 \u043B\u0435\u0432\u0430\u044F \u0447\u0430\u0441\u0442\u044C \u0432\u0442\u043E\u0440\u043E\u0433\u043E \u044D\u0442\u043E \u0438 \u0435\u0441\u0442\u044C \u0438\u0441\u043A\u043C\u043E\u0435 \u043F\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043D\u0438\u0435)
            if (maxLeftPartOfNum1 <= minRightPartOfNum2 && maxLeftPartOfNum2 <= minRightPartOfNum1) {
                // \u0435\u0441\u043B\u0438 \u043D\u0435\u0447\u0435\u0442\u043D\u043E\u0435 \u0442\u043E \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u0430
                if ((num1Length + num2Length) % 2 == 1) {
                    // \u0435\u0440\u0435\u0434\u0438\u043D\u044B \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u0432 \u0434\u0432\u0443\u0437 \u0432 \u0438\u0442\u043E\u0433\u0435 \u0431\u0443\u0434\u0435\u0442 \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u043E\u0439 \u043E\u0431\u044A\u0435\u0434\u0438\u043D\u0435\u043D\u043D\u043E\u0433\u043E
                    return Math.max(maxLeftPartOfNum1, maxLeftPartOfNum2);
                } else {
                    // \u043C\u0435\u0436\u0434\u0443 \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u044B\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u043C \u0438\u0437 \u043B\u0435\u0432\u043E\u0439 \u0447\u0430\u0441\u0442\u0438 \u0438 \u043C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u044B\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u043C \u0438\u0437 \u043F\u0440\u0430\u0432\u043E\u0439 \u0447\u0430\u0441\u0442\u0438
                    return (double) (Math.max(maxLeftPartOfNum1, maxLeftPartOfNum2) + Math.min(minRightPartOfNum1, minRightPartOfNum2)) / 2;
                }
            } else if (maxLeftPartOfNum1 > minRightPartOfNum2) {
                // \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u043E\u0442 \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430, \u0441\u0434\u0432\u0438\u0433\u0430\u0435\u043C \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u0443 \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430  \u0432\u043B\u0435\u0432\u043E, \u0431\u0435\u0440\u0435\u043C \u043C\u0435\u043D\u044C\u0448\u0435 \u044D\u043B\u0435\u043C\u0435\u043D\u0442, \u0447\u0442\u043E\u0431\u044E \u0441\u0434\u0432\u0438\u043D\u0443\u0442\u044C \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u0443 \u0432\u0442\u043E\u0440\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430 \u0432\u0440\u043F\u0440\u0430\u0432\u043E \u0438 \u044D\u043B\u043C\u0435\u043D\u0442 \u0441\u0442\u0430\u043B \u0431\u043E\u043B\u044C\u0448\u0435
                high = midOfNum1 - 1;
            } else {
                // maxLeftPartOfNum2 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0432\u0435\u043B\u0438\u043A, \u043F\u043E\u044D\u0442\u043E\u043C\u0443 \u0441\u0434\u0432\u0438\u0433\u0430\u0435\u043C \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u0443 \u043F\u0435\u0440\u0432\u043E\u0433\u043E \u0432\u0440\u043F\u0430\u0432\u043E, \u0447\u0442\u043E \u0441\u0434\u0432\u0438\u043D\u0443\u0442\u044C \u0441\u0435\u0440\u0435\u0434\u0438\u043D\u0443 \u0432\u0442\u043E\u0440\u043E\u0433\u043E \u043C\u0430\u0441\u0441\u0438\u0432\u0430 \u043B\u0435\u0432\u0435\u0435, \u0438 \u044D\u043B\u043C\u0435\u043D\u0435\u0442 \u0441\u0442\u0430\u043B \u043C\u0435\u043D\u044C\u0448\u0435
                low = midOfNum1 + 1;
            }
        }
        throw new IllegalArgumentException("\u041C\u0430\u0441\u0441\u0438\u0432 \u043D\u0435 \u043E\u0442\u0441\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D");
    }
}
