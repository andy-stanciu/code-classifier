class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len = nums1.length + nums2.length;
        int p1 = 0, p2 = 0, p3 = 0;
        if (len % 2 != 0) {
            int[] store = new int[len / 2 + 1];
            while (p3 < len / 2 + 1) {
                int v1 = (p1 < nums1.length) ? nums1[p1] : Integer.MAX_VALUE;
                int v2 = (p2 < nums2.length) ? nums2[p2] : Integer.MAX_VALUE;
                if (v1 < v2) {
                    store[p3] = v1;
                    p1++;
                } else {
                    store[p3] = v2;
                    p2++;
                }
                p3++;
            }
            return store[len / 2];
        } else {
            int[] store = new int[len / 2 + 1];
            while (p3 < len / 2 + 1) {
                int v1 = (p1 < nums1.length) ? nums1[p1] : Integer.MAX_VALUE;
                int v2 = (p2 < nums2.length) ? nums2[p2] : Integer.MAX_VALUE;
                if (v1 < v2) {
                    store[p3] = v1;
                    p1++;
                } else {
                    store[p3] = v2;
                    p2++;
                }
                p3++;
            }
            return ((double) (store[len / 2] + store[len / 2 - 1])) / 2;
        }
    }
}
