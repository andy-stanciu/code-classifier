class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int fistlength = nums1.length;
        int secondLength = nums2.length;
        int totalsize = (fistlength + secondLength);
        int[] target = new int[totalsize];
        int k = 0;
        for (int i = 0; i < fistlength; i++) {
            target[k] = nums1[i];
            k++;
        }
        for (int i = 0; i < secondLength; i++) {
            target[k] = nums2[i];
            k++;
        }
        for (int i = 0; i < totalsize; i++) {
            for (int j = i + 1; j < totalsize; j++) {
                if (target[i] > target[j]) {
                    int temp = target[i];
                    target[i] = target[j];
                    target[j] = temp;
                }
            }
        }
        int mid = totalsize % 2;
        double mean = 0;
        double testDouble = 0;
        if (mid == 0) {
            testDouble = (double) (target[(totalsize / 2) - 1] + target[(totalsize / 2)]);
            mean = testDouble / 2;
        } else {
            mean = (double) (target[((totalsize / 2))]);
        }
        return mean;
    }
}
