class Solution {

    public static double findMedianSortedArrays(int[] nums1, int[] nums2) {
        ArrayList<Integer> list = mergeTwo(nums1, nums2);
        double start = 0;
        double end = list.size() - 1;
        double mid = start + (end - start) / 2;
        if (end % 2 == 0) {
            return list.get((int) mid);
        } else {
            double first = list.get((int) mid);
            double second = list.get((int) mid + 1);
            double ans1 = (first + second) / 2;
            return ans1;
        }
    }

    static ArrayList<Integer> mergeTwo(int[] nums1, int[] nums2) {
        ArrayList<Integer> list = new ArrayList<>();
        int i = 0;
        int j = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] > nums2[j]) {
                list.add(nums2[j]);
                j++;
            } else {
                list.add(nums1[i]);
                i++;
            }
        }
        while (i < nums1.length) {
            list.add(nums1[i]);
            i++;
        }
        while (j < nums2.length) {
            list.add(nums2[j]);
            j++;
        }
        return list;
    }
}
