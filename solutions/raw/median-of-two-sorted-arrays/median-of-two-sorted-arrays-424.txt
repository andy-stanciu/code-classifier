class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n = nums1.length;
        int m = nums2.length;
        int[] merged_array = new int[n + m];
        int i = 0, j = 0, k = 0;
        // Merge the two sorted arrays
        while (i < n && j < m) {
            if (nums1[i] < nums2[j]) {
                merged_array[k++] = nums1[i++];
            } else {
                merged_array[k++] = nums2[j++];
            }
        }
        // Copy remaining elements of nums1 (if any)
        while (i < n) {
            merged_array[k++] = nums1[i++];
        }
        // Copy remaining elements of nums2 (if any)
        while (j < m) {
            merged_array[k++] = nums2[j++];
        }
        // Find the median
        int total = merged_array.length;
        if (total % 2 == 1) {
            return (double) merged_array[total / 2];
        } else {
            int middle1 = merged_array[total / 2 - 1];
            int middle2 = merged_array[total / 2];
            return ((double) middle1 + (double) middle2) / 2.0;
        }
    }
}
