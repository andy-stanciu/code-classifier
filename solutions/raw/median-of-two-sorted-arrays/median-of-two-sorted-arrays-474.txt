class Solution {

    // TC: O(m+n)
    // SC: O(m+n)
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int left = 0;
        int right = 0;
        int[] sorted = new int[nums1.length + nums2.length];
        int i = 0;
        while (right < nums2.length && left < nums1.length) {
            if (nums1[left] < nums2[right]) {
                sorted[i++] = nums1[left++];
            } else {
                sorted[i++] = nums2[right++];
            }
        }
        while (right < nums2.length) {
            sorted[i++] = nums2[right++];
        }
        while (left < nums1.length) {
            sorted[i++] = nums1[left++];
        }
        int n = sorted.length;
        if (n % 2 == 0) {
            long sum = (long) (sorted[(n - 1) / 2] + sorted[((n - 1) / 2) + 1]);
            return (double) sum / 2.0;
        } else {
            return (double) sorted[n / 2];
        }
    }
}
