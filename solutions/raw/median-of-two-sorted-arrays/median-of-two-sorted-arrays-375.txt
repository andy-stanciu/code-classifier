class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int[] nums3 = new int[nums1.length + nums2.length];
        int i = 0;
        int j = 0;
        int k = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] <= nums2[j]) {
                nums3[k] = nums1[i];
                k++;
                i++;
            } else {
                nums3[k] = nums2[j];
                k++;
                j++;
            }
        }
        if (i == nums1.length) {
            while (j < nums2.length) {
                nums3[k] = nums2[j];
                k++;
                j++;
            }
        }
        if (j == nums2.length) {
            while (i < nums1.length) {
                nums3[k] = nums1[i];
                k++;
                i++;
            }
        }
        int n = nums3.length;
        int sum = 0;
        if (n % 2 != 0) {
            for (int l = n / 2; l <= n / 2; l++) {
                sum += nums3[l];
                return (double) sum;
            }
        } else {
            for (int l = n / 2 - 1; l <= n / 2; l++) {
                sum += nums3[l];
            }
            return (double) sum / 2;
        }
        return (double) 0;
    }
}
