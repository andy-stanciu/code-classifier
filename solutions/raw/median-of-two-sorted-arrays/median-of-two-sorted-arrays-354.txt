class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m = nums1.length;
        int n = nums2.length;
        int[] a = new int[n + m];
        int i = 0;
        int j = 0;
        int k = 0;
        while (i < m && j < n) {
            if (nums1[i] < nums2[j]) {
                a[k++] = nums1[i];
                i++;
            } else if (nums1[i] > nums2[j]) {
                a[k++] = nums2[j];
                j++;
            } else {
                a[k++] = nums1[i];
                a[k++] = nums2[j];
                i++;
                j++;
            }
        }
        while (i < m && !(j < n)) {
            a[k++] = nums1[i];
            i++;
        }
        while (!(i < m) && (j < n)) {
            a[k++] = nums2[j];
            j++;
        }
        int g = a.length + 1;
        if ((m + n) % 2 == 0) {
            double kk = a[((m + n) / 2) - 1];
            int l = a[((m + n) / 2)];
            double d = (kk + l) / 2;
            return d;
        }
        return (double) a[(g / 2) - 1];
    }
}
