class Solution {

    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int[] arr = new int[nums1.length + nums2.length];
        int d = 0, n1 = 0, n2 = 0;
        while (n1 != nums1.length && n2 != nums2.length) {
            if (nums1[n1] < nums2[n2]) {
                arr[d] = nums1[n1];
                d++;
                n1++;
            } else if (nums1[n1] > nums2[n2]) {
                arr[d] = nums2[n2];
                d++;
                n2++;
            } else {
                arr[d] = nums1[n1];
                d++;
                arr[d] = nums1[n1];
                n1++;
                n2++;
                d++;
            }
        }
        while (n1 != nums1.length) {
            arr[d] = nums1[n1];
            d++;
            n1++;
        }
        while (n2 != nums2.length) {
            arr[d] = nums2[n2];
            d++;
            n2++;
        }
        int c = arr.length;
        if (c % 2 == 0) {
            float sum = arr[c / 2] + arr[c / 2 - 1];
            return sum / 2;
        } else
            return arr[c / 2];
    }
}
