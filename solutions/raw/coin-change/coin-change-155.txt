class Solution {

    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int[][] dp = new int[n][amount + 1];
        for (int i = 0; i < amount + 1; i++) {
            if (i % coins[0] == 0) {
                dp[0][i] = i / coins[0];
            } else {
                dp[0][i] = (int) 1e9;
            }
        }
        for (int ind = 1; ind < n; ind++) {
            for (int am = 0; am < amount + 1; am++) {
                int notTake = 0 + dp[ind - 1][am];
                int take = (int) 1e9;
                if (am >= coins[ind])
                    take = 1 + dp[ind][am - coins[ind]];
                dp[ind][am] = Math.min(take, notTake);
            }
        }
        int result = dp[n - 1][amount];
        return result == (int) 1e9 ? -1 : result;
    }
}
