class Solution {

    public int coinChange(int[] coins, int amount, int[] counter) {
        if (amount < 0)
            return -1;
        if (amount == 0)
            return 0;
        if (counter[amount - 1] != Integer.MAX_VALUE)
            return counter[amount - 1];
        int minimum = Integer.MAX_VALUE;
        for (int coin : coins) {
            int result = coinChange(coins, amount - coin, counter);
            if (result >= 0 && result < minimum) {
                minimum = result + 1;
            }
        }
        if (minimum != Integer.MAX_VALUE) {
            counter[amount - 1] = minimum;
        } else
            counter[amount - 1] = -1;
        return counter[amount - 1];
    }

    public int coinChange(int[] coins, int total) {
        if (total < 1)
            return 0;
        int[] l = new int[total];
        Arrays.fill(l, Integer.MAX_VALUE);
        return coinChange(coins, total, l);
    }
}
