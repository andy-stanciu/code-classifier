class Solution {

    Map<Integer, Integer> memo = new HashMap<>();

    public int coinChange(int[] coins, int amount) {
        for (int k = 0; k < coins.length; k++) {
            memo.put(coins[k], 1);
        }
        memo.put(0, 0);
        for (int i = 1; i <= amount; i++) {
            for (int k = 0; k < coins.length; k++) {
                int change = coins[k];
                int key = i - change;
                if (key >= 0 && memo.containsKey(key)) {
                    int val = memo.get(key);
                    //memo.forEach((ky, value) -> System.out.println(ky + " -> " + value));
                    // Check if the key exists and if the existing value is less than val + 1
                    if (!memo.containsKey(i) || memo.get(i) > val + 1) {
                        memo.put(i, val + 1);
                    }
                    //memo.compute(i, (ky, v) -> (v == null || v > val+1) ? val+1 : v);
                }
            }
        }
        return memo.containsKey(amount) ? memo.get(amount) : -1;
    }
}
