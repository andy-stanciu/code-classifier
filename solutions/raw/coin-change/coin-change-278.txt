class Solution {

    //Using tabulation:bottom-up approach
    public int coinChange(int[] coins, int amount) {
        //Using DP- Tabulation
        int[] dp = new int[amount + 1];
        Arrays.fill(dp, amount + 1);
        //Base case
        // O coin needed to amout amout 0;
        dp[0] = 0;
        for (int a = 1; a < amount + 1; a++) {
            for (int c : coins) {
                if (a - c >= 0) {
                    //min of(coins for amout a, coin choosen + coins for remaining a-c)
                    dp[a] = Math.min(dp[a], 1 + dp[a - c]);
                }
            }
        }
        return dp[amount] != amount + 1 ? dp[amount] : -1;
    }
}
