class Solution {

    int[][] dp;

    int solve(int[] coins, int amount, int i) {
        if (amount == 0)
            return 0;
        if (i >= coins.length)
            return Integer.MAX_VALUE;
        if (dp[amount][i] != -1)
            return dp[amount][i];
        int take, skip;
        take = skip = Integer.MAX_VALUE;
        if (coins[i] <= amount) {
            int res = solve(coins, amount - coins[i], i);
            if (res != Integer.MAX_VALUE)
                take = 1 + res;
        }
        skip = solve(coins, amount, i + 1);
        return dp[amount][i] = Math.min(skip, take);
    }

    public int coinChange(int[] coins, int amount) {
        if (amount == 0)
            return 0;
        dp = new int[amount + 1][coins.length];
        for (int[] a : dp) Arrays.fill(a, -1);
        int ans = solve(coins, amount, 0);
        return ans == Integer.MAX_VALUE ? -1 : ans;
    }
}
