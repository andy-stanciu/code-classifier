class Solution {

    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int[][] dp = new int[n + 1][amount + 1];
        for (int i = 1; i < dp[0].length; i++) {
            dp[0][i] = -1;
        }
        for (int i = 1; i < dp.length; i++) {
            for (int j = 1; j < dp[0].length; j++) {
                if (coins[i - 1] <= j) {
                    int one = dp[i][j - coins[i - 1]];
                    one = one == -1 ? -1 : one + 1;
                    int two = dp[i - 1][j];
                    if (one == -1 && two == -1) {
                        dp[i][j] = -1;
                    } else if (one == -1) {
                        dp[i][j] = two;
                    } else if (two == -1) {
                        dp[i][j] = one;
                    } else {
                        dp[i][j] = Math.min(one, two);
                    }
                } else {
                    dp[i][j] = dp[i - 1][j] == -1 ? -1 : dp[i - 1][j];
                }
            }
        }
        return dp[n][amount];
    }
}
