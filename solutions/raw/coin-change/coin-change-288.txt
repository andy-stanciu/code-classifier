class Solution {

    public int coinChange(int[] coins, int amount) {
        int[] coinChangeDP = new int[amount + 1];
        Arrays.fill(coinChangeDP, Integer.MAX_VALUE);
        coinChangeDP[0] = 0;
        for (int i = 1; i < coinChangeDP.length; i++) {
            for (int j = 0; j < coins.length; j++) {
                if (coins[j] <= i && coinChangeDP[i - coins[j]] != Integer.MAX_VALUE) {
                    coinChangeDP[i] = Math.min(coinChangeDP[i], 1 + coinChangeDP[i - coins[j]]);
                }
            }
        }
        if (coinChangeDP[amount] == Integer.MAX_VALUE)
            return -1;
        return coinChangeDP[amount];
    }
}
