class Solution {

    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int result = helper(coins, n, amount);
        if (result == Integer.MAX_VALUE - 1)
            return -1;
        else
            return result;
    }

    private long helper(int[] coins, int n, int amount) {
        if (amount == 0) {
            return 0;
        }
        if (n == 0) {
            return Integer.MAX_VALUE;
        }
        if (amount >= coins[n - 1]) {
            int take = 1 + helper(coins, n, amount - coins[n - 1]);
            int dont = helper(coins, n - 1, amount);
            return Math.min(take, dont);
        } else {
            int dont = helper(coins, n - 1, amount);
            return dont;
        }
    }
}
