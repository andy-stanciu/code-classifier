class Solution {

    public int coinChange(int[] coins, int amount) {
        // Create a dp array to store the minimum number of coins for each amount
        int[] dp = new int[amount + 1];
        // Initialize dp array with a large number, except dp[0] which is 0
        // a large value bigger than amount
        Arrays.fill(dp, amount + 1);
        // 0 coins are needed to make amount 0
        dp[0] = 0;
        // Loop through all amounts from 1 to the target amount
        for (int i = 1; i <= amount; i++) {
            // Check each coin
            for (int coin : coins) {
                if (i >= coin) {
                    // Only update if the current amount is at least the coin value
                    dp[i] = Math.min(dp[i], dp[i - coin] + 1);
                }
            }
        }
        // If dp[amount] is still larger than amount, return -1 (no solution found)
        return dp[amount] > amount ? -1 : dp[amount];
    }
}
