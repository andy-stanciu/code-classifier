class Solution {

    // opt(k) = min{opt(k - coins[i] + 1) where i < n, coins[i] <= k}
    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount + 1];
        // use 0 coins for 0 amount;
        dp[0] = 0;
        for (int k = 1; k < amount + 1; k++) {
            int min = 100000;
            for (int cur : coins) {
                if (cur <= k) {
                    if (dp[k - cur] == -1) {
                        continue;
                    }
                    if (min > 1 + dp[k - cur]) {
                        min = 1 + dp[k - cur];
                    }
                }
            }
            if (min == 100000) {
                min = -1;
            }
            dp[k] = min;
        }
        return dp[amount];
    }
}
