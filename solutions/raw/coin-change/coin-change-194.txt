class Solution {

    public int coinChange(int[] coins, int amount) {
        int[][] dp = new int[coins.length + 1][amount + 1];
        for (int j = 1; j < amount + 1; j++) {
            dp[0][j] = Integer.MAX_VALUE - 1;
        }
        // Intialised with INT_MAX-1 so we can avoid overflow
        for (int i = 1; i < coins.length + 1; i++) {
            for (int j = 1; j < amount + 1; j++) {
                if (coins[i - 1] <= j) {
                    dp[i][j] = Math.min(1 + dp[i][j - coins[i - 1]], dp[i - 1][j]);
                } else
                    dp[i][j] = dp[i - 1][j];
            }
        }
        int ans = dp[coins.length][amount];
        return ans == Integer.MAX_VALUE - 1 ? -1 : ans;
    }
}
