class Solution {

    public int solve(int i, int[] a, int s, int[][] dp) {
        if (i == 0) {
            if (s % a[i] == 0)
                return s / a[0];
            return Integer.MAX_VALUE;
        }
        if (dp[i][s] != -1)
            return dp[i][s];
        int not = solve(i - 1, a, s, dp);
        int take = 10000007;
        if (s >= a[i]) {
            take = 1 + solve(i, a, s - a[i], dp);
        }
        return dp[i][s] = Math.min(take, not);
    }

    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int[][] dp = new int[n][amount + 1];
        for (int i = 0; i < n; i++) {
            Arrays.fill(dp[i], -1);
        }
        int a = solve(n - 1, coins, amount, dp);
        return (a >= 10000007) ? -1 : a;
    }
}
