class Solution {

    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount + 1];
        int res = helper(coins, amount, dp);
        return (res == Integer.MAX_VALUE) ? -1 : res;
    }

    public int helper(int[] coins, int amount, int[] dp) {
        if (amount == 0) {
            return 0;
        } else if (dp[amount] != 0) {
            return dp[amount];
        } else {
            int res = Integer.MAX_VALUE;
            for (int i = 0; i < coins.length; i++) {
                if (amount - coins[i] >= 0)
                    res = Math.min(helper(coins, amount - coins[i], dp), res);
            }
            dp[amount] = (res == Integer.MAX_VALUE) ? Integer.MAX_VALUE : res + 1;
            return dp[amount];
        }
    }
}
