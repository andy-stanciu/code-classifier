class Solution {

    List<Integer> selected;

    int min = Integer.MAX_VALUE;

    public int coinChange(int[] coins, int amount) {
        selected = new ArrayList<>();
        backtrack(coins, amount, 0);
        return min != Integer.MAX_VALUE ? min : -1;
    }

    private void backtrack(int[] coins, int amount, int curAmount) {
        if (curAmount == amount) {
            min = Math.min(min, selected.size());
            return;
        } else if (selected.size() >= min) {
            return;
        }
        for (int i = coins.length - 1; i >= 0; i--) {
            if (curAmount + coins[i] > amount) {
                continue;
            }
            selected.add(coins[i]);
            backtrack(coins, amount, curAmount + coins[i]);
            selected.remove(selected.size() - 1);
        }
    }
}
