class Solution {

    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount + 1];
        Arrays.fill(dp, -1);
        int ans = change(coins, amount, 0, dp);
        return ans == Integer.MAX_VALUE ? -1 : ans;
    }

    public int change(int[] coins, int amount, int used, int[] dp) {
        if (amount == 0)
            return 0;
        int ans = Integer.MAX_VALUE;
        for (int i = 0; i < coins.length; i++) {
            int temp = 0;
            if (amount - coins[i] >= 0) {
                if (dp[amount - coins[i]] != -1)
                    temp = dp[amount - coins[i]];
                else
                    temp = change(coins, amount - coins[i], used + 1, dp);
                if (temp != Integer.MAX_VALUE)
                    ans = Math.min(ans, temp + 1);
            }
        }
        return dp[amount] = ans;
    }
}
