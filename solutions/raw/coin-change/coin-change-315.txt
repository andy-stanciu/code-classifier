class Solution {

    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int[] previous = new int[amount + 1];
        for (int i = 0; i < n; i++) {
            int[] current = new int[amount + 1];
            for (int k = 1; k <= amount; k++) {
                int use = (int) 1e9, notUse = (int) 1e9;
                if (coins[i] <= k)
                    use = 1 + current[k - coins[i]];
                if (i > 0)
                    notUse = previous[k];
                current[k] = Math.min(use, notUse);
            }
            previous = current;
        }
        return previous[amount] >= (int) 1e9 ? -1 : previous[amount];
    }
}
