class Solution {

    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int[][] dp = new int[n][amount + 1];
        for (int i = 0; i < n; i++) {
            dp[i][0] = 0;
        }
        for (int i = 0; i <= amount; i++) {
            if (i % coins[0] == 0)
                dp[0][i] = i / coins[0];
            else
                dp[0][i] = (int) Math.pow(10, 9);
        }
        for (int i = 1; i < n; i++) {
            for (int j = 1; j <= amount; j++) {
                int take = (int) Math.pow(10, 9);
                if (j >= coins[i]) {
                    take = 1 + dp[i][j - coins[i]];
                }
                int nottake = dp[i - 1][j];
                dp[i][j] = Math.min(take, nottake);
            }
        }
        if (dp[n - 1][amount] == (int) Math.pow(10, 9))
            return -1;
        return dp[n - 1][amount];
    }
}
