class Solution {

    public int[] countBits(int n) {
        // size is n+1 because 0 is to be added in front of every array.
        // Ex: when n = 2 the answer would be [0, 1, 1]
        int[] ans = new int[n + 1];
        // we will start from 1 and go till n
        // at each \'i\' we use DP, to find the value of \'i/2\' or \'i >> 1\'
        // Example
        // if n = 5
        // ans[0] = 0;
        // i = 1 (0001); ans[1] = ans[0] + 1; {1}
        // i = 2 (0010); ans[2] = ans[1] + 0; {1}
        // i = 3 (0011); ans[3] = ans[1] + 1; {2}
        // i = 4 (0100); ans[4] = ans[2] + 0; {1}
        // i = 5 (0101); ans[5] = ans[2] + 1; {2}
        for (int i = 1; i <= n; i++) {
            ans[i] = ans[i >> 1] + (i & 1);
        }
        return ans;
    }
}
