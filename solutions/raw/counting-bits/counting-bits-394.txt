class Solution {

    public int[] countBits(int n) {
        // l is the last integer which is a power of 2
        int l = 1;
        int[] ans = new int[n + 1];
        for (int i = 0; i < n + 1; i++) {
            if (i == 0) {
                ans[i] = 0;
            } else if (i == 1) {
                ans[i] = 1;
            } else {
                // if i is a power of 2, then number of 1s it has is one, also make it the last number that is a power of 2
                if (i == l * 2) {
                    ans[i] = 1;
                    l = i;
                } else //if i is not a power of 2, then number of 1s it has is (number of 1s in last power of 2 ,i.e, 1) + (number of 1s in the number i-l)
                {
                    ans[i] = 1 + ans[i - l];
                }
            }
        }
        return ans;
    }
}
