//1 solution
class Solution {

    public int[] countBits(int n) {
        int[] ans = new int[n + 1];
        int i = 0;
        while (i != n + 1) {
            ans[i] = countSetBit(i);
            i++;
        }
        return ans;
    }

    public static int countSetBit(int i) {
        int count = 0;
        while (i != 0) {
            count++;
            i &= (i - 1);
            // i-=(i&-i);
        }
        return count;
    }
}
//2
// class Solution {
//     public int[] countBits(int n) {
//       int [] ans=new int[n+1];
//       if(n == 0) return ans;
//       ans[1]=1;
//       for(int i=2; i< n+1;i++){
//           if( i % 2 == 0){
//               ans[i]=ans[i/2];
//           }
//           else{
//               ans[i]=ans[i/2]+1;
//           }
//       }
//       return ans;
//     }
// }
// class Solution {
//     public int[] countBits(int n) {
//         int [] ans=new int[n+1];
//         int i=0;
//         while(i != n+1){
//             int temp=i;
//             int count=0;
//             while(temp != 0){
//                 count++;
//                 temp&=(temp-1);
//             }
//             ans[i++]=count;
//         }
//         return ans;
//     }
// }
