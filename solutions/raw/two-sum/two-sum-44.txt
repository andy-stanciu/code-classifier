class Solution {

    public int[] twoSum(int[] nums, int target) {
        // Create a HashMap to store the numbers and their indices
        Map<Integer, Integer> map = new HashMap<>();
        // Populate the HashMap with numbers and their corresponding indices
        for (int i = 0; i < nums.length; i++) {
            map.put(nums[i], i);
        }
        // Array to hold the result indices
        int[] result = new int[2];
        // Iterate through the array to find the two indices
        for (int i = 0; i < nums.length; i++) {
            // Calculate the difference needed to reach the target
            int diff = target - nums[i];
            // Check if the difference exists in the map and is not the same index
            if (map.containsKey(diff) && map.get(diff) != i) {
                // Store the first index
                result[0] = i;
                // Store the second index
                result[1] = map.get(diff);
                // Exit the loop once the pair is found
                break;
            }
        }
        // Return the indices of the two numbers
        return result;
    }
}
