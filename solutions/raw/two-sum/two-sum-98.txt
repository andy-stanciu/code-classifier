class Solution {

    public int[] twoSum(int[] nums, int target) {
        // Create a HashMap
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            // Get the complement using the target value
            int complement = target - nums[i];
            // Search the hashmap for complement, if found, we got our pair
            if (map.containsKey(complement)) {
                int[] ans = { map.get(complement), i };
                return ans;
            }
            // Put the element in hashmap for subsequent searches.
            map.put(nums[i], i);
        }
        return null;
    }
}
// -----------------------------------------------------
// class Solution {
//     public int[] twoSum(int[] nums, int target) {
//         for (int i = 0; i < nums.length; i++) {
//             for (int j = i + 1; j < nums.length; j++) {
//                 if (nums[i] + nums[j] == target) {
//                     int[] ans = {i, j};
//                     return ans;
//                 }
//             }
//         }
//         return null; // Return null if no solution is found
//     }
// }
