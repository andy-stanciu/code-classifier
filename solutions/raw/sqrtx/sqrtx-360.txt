class Solution {

    public int mySqrt(int x) {
        int start = 0;
        int end = x;
        while (start <= end) {
            long mid = start + (end - start) / 2;
            if (mid * mid == x) {
                //here mid * mid can give integer overflow so to avoid that we need to handle it somehow :
                return (int) mid;
            } else if (mid * mid < x) {
                start = (int) mid + 1;
            } else {
                end = (int) mid - 1;
            }
        }
        //cause its given that we need to return the round down to nearest integer
        return end;
    }
}
