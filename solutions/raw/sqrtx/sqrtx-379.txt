class Solution {

    public int mySqrt(int x) {
        //Brute Force, Not working for large values feasibe for x<=10^6, more than that becomes impractical to iterate.
        // if(x==0) return 0;
        // long ans=1;
        // for(int i=1;i<=x;i++){
        //     if(i*i<=x) ans=i;
        //     else break;
        // }
        // return (int)ans;
        //Optimal approach:
        // while(low<=high){
        //     int mid=(low+high)/2;
        //     if(mid*mid==x) return mid;
        //     else if(mid*mid<x){
        //         ans=mid;
        //         low=mid+1;
        //     }
        //     else{
        //         high=mid-1;
        //     }
        // }
        // return (int)ans;
        if (x == 0)
            return 0;
        long low = 1, high = x;
        long ans = 0;
        while (low <= high) {
            long mid = (low + high) / 2;
            if (mid * mid == x)
                return (int) mid;
            else if (mid * mid < x) {
                ans = mid;
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return (int) ans;
    }
}
