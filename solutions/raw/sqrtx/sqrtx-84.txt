class Solution {

    public int mySqrt(int x) {
        // Initialise beg and end values as 1 and x / 2 respectively...
        int beg = 1, end = x / 2, mid;
        // Initialize variable res to store the result
        int res = 0;
        long tmp;
        // If the number is less than 2, return itself...
        if (x <= 1)
            return x;
        while (beg <= end) {
            // Find middle of this range...
            mid = (beg + (end - beg) / 2);
            // mid * mid can be large, so use long...
            tmp = (long) mid * (long) mid;
            // If square of mid is equal to x...
            // return it as it is the square root...
            if (tmp == x)
                return mid;
            // If square of mid is less than x...
            // jump to the end half by setting beg = mid + 1...
            if (tmp < x) {
                res = mid;
                beg = mid + 1;
            } else
                // Otherwise, jump to the beg half by setting end = mid \u2013 1...
                // And save this value in res...
                end = mid - 1;
        }
        // Print the result...
        return res;
    }
}
