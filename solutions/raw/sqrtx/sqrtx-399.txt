class Solution {

    public int mySqrt(int x) {
        // If x is zero, the square root is zero
        if (x == 0)
            return 0;
        // If x is zero, the square root is zero
        if (x == 1)
            return 1;
        // Initialize start and end for binary search range
        int start = 0;
        int end = x;
        // Variable to store the potential result
        int res = -1;
        // Binary search loop
        while (start <= end) {
            // Calculate mid-point to avoid overflow
            int mid = start + (end - start) / 2;
            // If mid is exactly the square root of x, return mid
            if (mid == (x / mid)) {
                return mid;
            } else // If mid squared is greater than x, search in the lower half
            if (mid > (x / mid)) {
                res = mid;
                end = mid - 1;
            } else // If mid squared is less than x, search in the upper half
            {
                start = mid + 1;
            }
        }
        // If no exact square root is found, return the largest integer less than the square root
        return res - 1;
    }
}
