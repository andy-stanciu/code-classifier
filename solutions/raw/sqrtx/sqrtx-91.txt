class Solution {

    public int mySqrt(int x) {
        /*
        * We will be using binary search approach in this solution
        * For example, if we have to find the square root of number 38
        * the sqrt of number 38 will be lying somewhere between 0-38 only
        * and this is in sorted form so we simply keep applying the binary search
        * and keep storing the closest possible if acurate result is not available
        * for that number
        */
        if (x == 1) {
            return 1;
        }
        int low = 0, high = x - 1, ans = 0;
        while (low <= high) {
            long mid = low + (high - low) / 2;
            if (mid * mid == x) {
                return (int) mid;
            } else if (mid * mid < x) {
                ans = (int) mid;
                low = (int) mid + 1;
            } else {
                high = (int) mid - 1;
            }
        }
        return ans;
    }
}
