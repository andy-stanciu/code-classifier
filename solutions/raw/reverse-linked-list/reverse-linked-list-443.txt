/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode insertFirst(ListNode head, int data) {
        if (head == null) {
            ListNode node = new ListNode(data);
            return node;
        }
        ListNode node = new ListNode(data, head);
        head = node;
        return head;
    }

    public ListNode reverseList(ListNode head) {
        if (head == null) {
            return null;
        }
        ListNode n = head;
        ListNode newHead = null;
        while (n != null) {
            newHead = insertFirst(newHead, n.val);
            n = n.next;
        }
        return newHead;
    }
}
