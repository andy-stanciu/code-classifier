/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
public class Solution {

    /**
     * Reverses a linked list.
     *
     * @param head the head of the linked list
     * @return the head of the reversed linked list
     */
    public ListNode reverseList(ListNode head) {
        ListNode anterior = null;
        ListNode actual = head;
        ListNode temporal = null;
        while (actual != null) {
            temporal = actual.next;
            actual.next = anterior;
            anterior = actual;
            actual = temporal;
        }
        return anterior;
    }
}
