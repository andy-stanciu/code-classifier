/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        if (head == null)
            return head;
        ListNode dummyHead = new ListNode(0, head);
        // ListNode last = reverse(dummyHead.next, dummyHead);
        // last.next = null;
        ListNode newHead = loop(dummyHead.next);
        return newHead;
    }

    ListNode loop(ListNode head) {
        ListNode prev = null;
        while (head != null) {
            ListNode temp = head.next;
            head.next = prev;
            prev = head;
            head = temp;
        }
        return prev;
    }

    ListNode reverse(ListNode head, ListNode dummy) {
        if (head.next == null) {
            dummy.next = head;
            return head;
        }
        ListNode node = reverse(head.next, dummy);
        node.next = head;
        return head;
    }
}
