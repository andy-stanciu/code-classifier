/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        // create a variable with the value of head to iterate with
        ListNode curr = head;
        // previous set to null.
        ListNode prev = null;
        while (curr != null) {
            // store the reference to the next node so that it isnt lost when we set the curr.next to prev.
            ListNode next = curr.next;
            // point the reference of the next node to the previous node basically reversing it.
            curr.next = prev;
            // move the prev to the curr so we can reverse the list iteratively
            prev = curr;
            // move the curr to the next so we can reverse the list iteratively
            curr = next;
        }
        return prev;
    }
}
