/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
public class Solution {

    public ListNode reverseList(ListNode head) {
        // Start with an empty reversed list
        ListNode reversedList = null;
        while (head != null) {
            // Create a new node with the current head\'s value
            ListNode newNode = new ListNode(head.val);
            // Point the new node to the current reversed list
            newNode.next = reversedList;
            // Move the reversedList pointer to the new node (now the head of reversed list)
            reversedList = newNode;
            // Move to the next node in the original list
            head = head.next;
        }
        return reversedList;
    }
}
