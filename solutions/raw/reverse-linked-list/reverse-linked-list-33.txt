class Solution {

    public ListNode reverseList(ListNode head) {
        ListNode curr = head;
        ListNode last = null;
        while (curr != null) {
            // Store the next node temporarily
            ListNode temp = curr.next;
            // Reverse the current node\'s pointer
            curr.next = last;
            // Move last pointer forward
            last = curr;
            // Move curr pointer forward
            curr = temp;
        }
        // Return the new head of the reversed list
        return last;
    }
}
