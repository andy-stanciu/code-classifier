/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    // Corrected to static
    public static ListNode newhead = null;

    public ListNode reverseList(ListNode head) {
        ListNode tem = head;
        newhead = null;
        while (tem != null) {
            // Create a new node with the same value
            ListNode send = new ListNode(tem.val);
            insert(send);
            tem = tem.next;
        }
        return newhead;
    }

    public static void insert(ListNode newnode) {
        if (newhead == null) {
            // Initialize newhead if it\'s null
            newhead = newnode;
        } else {
            // Insert newnode at the beginning
            newnode.next = newhead;
            // Update newhead to point to newnode
            newhead = newnode;
        }
    }
}
