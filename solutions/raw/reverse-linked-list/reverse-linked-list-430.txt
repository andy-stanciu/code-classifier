/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    ListNode init = null;

    public void reverseLinkedList(ListNode node, ListNode prev, ListNode next) {
        if (node == null) {
            return;
        }
        if (node.next == null) {
            init = node;
        }
        node.next = prev;
        if (next != null) {
            reverseLinkedList(next, node, next.next);
        }
        return;
    }

    public ListNode reverseList(ListNode head) {
        if ((head == null) || (head.next == null)) {
            return head;
        }
        ListNode next = head.next;
        ListNode curr = head;
        ListNode prev = null;
        reverseLinkedList(curr, prev, next);
        return init;
    }
}
