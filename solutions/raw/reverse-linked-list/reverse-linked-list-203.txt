/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        ListNode curr = head;
        // for creating new node each time.
        ListNode temp = null;
        // for storing new linked list.
        ListNode temp2 = null;
        while (curr != null) {
            temp = new ListNode(curr.val);
            //next of new node points to the temp2 which is null for 1st traversal
            temp.next = temp2;
            // storing temp in temp2 and making it the present node.
            temp2 = temp;
            curr = curr.next;
        }
        return temp2;
    }
}
