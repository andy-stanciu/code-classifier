/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        ArrayList<Integer> list = new ArrayList<>();
        while (head != null) {
            list.add(head.val);
            head = head.next;
        }
        ListNode tail = convert(list);
        return tail;
    }

    public static ListNode convert(ArrayList<Integer> list) {
        if (list.isEmpty())
            return null;
        int n = list.size();
        ListNode tail = new ListNode(list.get(n - 1));
        ListNode mover = tail;
        for (int i = 1; i < n; i++) {
            ListNode temp = new ListNode(list.get(n - 1 - i));
            mover.next = temp;
            mover = temp;
        }
        return tail;
    }
}
