/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        ListNode temp = null;
        if (head == null || head.next == null) {
            return head;
        }
        if (head.next.next == null) {
            temp = head.next;
            head.next.next = head;
            head.next = null;
            return temp;
        }
        ListNode prev = head;
        ListNode current = head.next;
        ListNode next = head.next.next;
        prev.next = null;
        while (current != null) {
            current.next = prev;
            if (next != null) {
                temp = next.next;
                next.next = current;
            } else if (next == null) {
                head = current;
                return head;
            }
            prev = next;
            current = temp;
            if (current == null) {
                head = prev;
                return head;
            }
            if (current != null) {
                next = current.next;
            }
        }
        return head;
    }
}
