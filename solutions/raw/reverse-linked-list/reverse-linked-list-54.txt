/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        // for pointing current , previous and next node.
        ListNode current = head, nextpointer, prev = null;
        if (// if head is null then return head.
        head == null || head.next == null)
            return head;
        while (current != null) {
            // make next node as current\'s next.
            nextpointer = current.next;
            // make current\'s next node as previous.
            current.next = prev;
            // make current as previous.
            prev = current;
            // make nextpointer as current.
            current = nextpointer;
        }
        return prev;
    }
}
