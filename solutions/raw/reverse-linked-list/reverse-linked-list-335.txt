/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        if (head == null)
            return null;
        ListNode[] reverse = reverse(head);
        reverse[0].next = null;
        return reverse[1];
    }

    public ListNode[] reverse(ListNode head) {
        if (head.next == null)
            return new ListNode[] { head, head };
        ListNode[] reverse = reverse(head.next);
        reverse[0].next = head;
        return new ListNode[] { head, reverse[1] };
    }
}
