/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> l = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while (!q.isEmpty()) {
            long sum = 0;
            long count = 0;
            Queue<TreeNode> a = new LinkedList<>();
            while (!q.isEmpty()) {
                TreeNode p = q.remove();
                sum += p.val;
                count++;
                if (p.left != null) {
                    a.add(p.left);
                }
                if (p.right != null) {
                    a.add(p.right);
                }
            }
            double ss = sum;
            double cc = count;
            double d = ss / cc;
            l.add(d);
            q = a;
        }
        return l;
    }
}
