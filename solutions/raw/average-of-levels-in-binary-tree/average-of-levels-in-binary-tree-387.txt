/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> l = new LinkedList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        if (root == null) {
            return l;
        }
        // l.add((double)root.val);
        while (!q.isEmpty()) {
            long sum = 0;
            int n = q.size();
            for (int i = 0; i < n; i++) {
                TreeNode tmp = q.poll();
                sum += tmp.val;
                if (tmp.left != null) {
                    q.offer(tmp.left);
                }
                if (tmp.right != null) {
                    q.offer(tmp.right);
                }
            }
            l.add((double) sum / n);
        }
        return l;
    }
}
