/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Double> result = new ArrayList<>();

    Queue<TreeNode> curr = new LinkedList<>();

    public List<Double> averageOfLevels(TreeNode root) {
        if (root == null)
            return result;
        curr.add(root);
        addingavg();
        return result;
    }

    public void addingavg() {
        if (curr.isEmpty()) {
            return;
        }
        double temp = 0;
        int size = curr.size();
        for (int i = 0; i < size; i++) {
            TreeNode node = curr.poll();
            temp += (double) node.val;
            if (node.left != null) {
                curr.add(node.left);
            }
            if (node.right != null) {
                curr.add(node.right);
            }
        }
        if (size != 0) {
            result.add(temp / (double) size);
        } else {
            result.add(0.00000);
        }
        addingavg();
    }
}
