/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> valInteger = new ArrayList<>();

    public List<Double> averageOfLevels(TreeNode root) {
        averageValueMaxSum(root, 0);
        List<Double> valSum = new ArrayList<>();
        for (List<Integer> xVal : valInteger) {
            long sumValue = 0;
            for (int x : xVal) {
                sumValue += x;
            }
            if (xVal.size() != 0)
                valSum.add((double) sumValue / xVal.size());
        }
        return valSum;
    }

    public void averageValueMaxSum(TreeNode root, int level) {
        if (root == null) {
            return;
        } else {
            if (level <= valInteger.size()) {
                valInteger.add(new ArrayList<>());
            }
            valInteger.get(level).add(root.val);
            averageValueMaxSum(root.left, level + 1);
            averageValueMaxSum(root.right, level + 1);
        }
    }
}
