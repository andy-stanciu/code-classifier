class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        if (root == null) {
            return List.of();
        }
        List<Double> out = new LinkedList<>();
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int n = queue.size();
            double sum = 0;
            for (int i = 0; i < n; i++) {
                TreeNode tempNode = queue.poll();
                sum += tempNode.val;
                if (tempNode.left != null) {
                    queue.add(tempNode.left);
                }
                if (tempNode.right != null) {
                    queue.add(tempNode.right);
                }
            }
            // double v=sum/(double)n;
            out.add((sum / n));
        }
        return out;
    }
}
