/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        ArrayList<Double> ans = new ArrayList<>();
        if (root == null)
            return ans;
        Queue<TreeNode> qt = new LinkedList<>();
        qt.add(root);
        double sum = 0.0;
        while (!qt.isEmpty()) {
            int levelsize = qt.size();
            sum = 0.0;
            for (int i = 0; i < levelsize; i++) {
                TreeNode temp = qt.remove();
                if (temp.left != null)
                    qt.add(temp.left);
                if (temp.right != null)
                    qt.add(temp.right);
                sum += temp.val;
            }
            double avg = sum / levelsize;
            ans.add(avg);
        }
        return ans;
    }
}
