/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> answer = new ArrayList<>();
        if (root == null) {
            return answer;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int levelsize = queue.size();
            double sum = 0;
            for (int i = 0; i < levelsize; i++) {
                TreeNode val = queue.remove();
                sum = sum + val.val;
                if (val.right != null) {
                    queue.add(val.right);
                }
                if (val.left != null) {
                    queue.add(val.left);
                }
            }
            double average = (sum / levelsize);
            answer.add(average);
        }
        return answer;
    }
}
