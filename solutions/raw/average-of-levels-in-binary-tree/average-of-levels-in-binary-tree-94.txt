/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> b = new LinkedList<>();
        List<Double> t = new ArrayList<Double>();
        if (root == null) {
            return t;
        }
        b.add(root);
        while (!b.isEmpty()) {
            int size = b.size();
            double av = 0;
            for (int i = 0; i < size; ++i) {
                TreeNode c = b.poll();
                if (c.left != null) {
                    b.add(c.left);
                }
                if (c.right != null) {
                    b.add(c.right);
                }
                av += c.val;
                System.out.println(av);
            }
            t.add(av / size);
        }
        return t;
    }
}
