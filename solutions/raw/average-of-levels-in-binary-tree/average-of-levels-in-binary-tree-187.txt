class Solution {

    List<Double> averages = new ArrayList<>();

    List<Integer> counts = new ArrayList<>();

    public List<Double> averageOfLevels(TreeNode root) {
        calculateAverages(root, 0);
        for (int i = 0; i < averages.size(); i++) {
            averages.set(i, averages.get(i) / counts.get(i));
        }
        return averages;
    }

    private void calculateAverages(TreeNode node, int level) {
        if (node == null)
            return;
        if (level < averages.size()) {
            averages.set(level, averages.get(level) + node.val);
            counts.set(level, counts.get(level) + 1);
        } else {
            averages.add((double) node.val);
            counts.add(1);
        }
        calculateAverages(node.left, level + 1);
        calculateAverages(node.right, level + 1);
    }
}
