/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<Double> result = new LinkedList<>();
        TreeNode temp = null;
        double count = 0;
        double sum = 0;
        q.add(root);
        q.add(null);
        while (!q.isEmpty()) {
            temp = q.remove();
            if (temp != null) {
                if (temp.left != null)
                    q.add(temp.left);
                if (temp.right != null)
                    q.add(temp.right);
                count++;
                sum += temp.val;
            } else {
                result.add(sum / count);
                sum = 0;
                count = 0;
                if (!q.isEmpty())
                    q.add(null);
            }
        }
        return result;
    }
}
