/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    Queue<TreeNode> a = new LinkedList<>();

    public List<Double> averageOfLevels(TreeNode r) {
        List<Double> list = new ArrayList<>();
        if (r == null)
            return list;
        else {
            a.add(r);
        }
        while (!a.isEmpty()) {
            Double e = 0.0;
            int len = a.size();
            for (int i = 0; i < len; ++i) {
                TreeNode no = a.remove();
                e += no.val;
                if (no.left != null)
                    a.add(no.left);
                if (no.right != null)
                    a.add(no.right);
            }
            list.add(e / len);
        }
        return list;
    }
}
