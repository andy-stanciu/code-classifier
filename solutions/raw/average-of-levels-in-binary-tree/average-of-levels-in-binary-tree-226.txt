/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> ans = new ArrayList<>();
        double avg = 0, sum = 0;
        if (root == null)
            return ans;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        while (!queue.isEmpty()) {
            int level = queue.size();
            for (int i = 0; i < level; i++) {
                TreeNode curr_ele = queue.poll();
                sum = sum + curr_ele.val;
                if (curr_ele.left != null)
                    queue.offer(curr_ele.left);
                if (curr_ele.right != null)
                    queue.offer(curr_ele.right);
            }
            avg = sum / level;
            ans.add(avg);
            sum = 0;
        }
        return ans;
    }
}
