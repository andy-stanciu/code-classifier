/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<Double> answer = new ArrayList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int currentLvlSize = queue.size();
            int count = currentLvlSize;
            double sum = 0;
            while (currentLvlSize > 0) {
                TreeNode currNode = queue.remove();
                sum += currNode.val;
                if (currNode.left != null)
                    queue.add(currNode.left);
                if (currNode.right != null)
                    queue.add(currNode.right);
                currentLvlSize--;
            }
            answer.add(sum / count);
        }
        return answer;
    }
}
