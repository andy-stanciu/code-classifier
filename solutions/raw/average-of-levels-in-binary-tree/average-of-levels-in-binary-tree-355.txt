/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Double> list = new ArrayList();

    public List<Double> averageOfLevels(TreeNode root) {
        if (root == null) {
            return list;
        }
        List<TreeNode> arl = new ArrayList();
        arl.add(root);
        helper(arl);
        return list;
    }

    void helper(List<TreeNode> arl) {
        if (arl.size() == 0) {
            return;
        }
        List<TreeNode> l2 = new ArrayList();
        double d = 0;
        for (int i = 0; i < arl.size(); i++) {
            d += arl.get(i).val;
            if (arl.get(i).left != null) {
                l2.add(arl.get(i).left);
            }
            if (arl.get(i).right != null) {
                l2.add(arl.get(i).right);
            }
        }
        list.add(d / arl.size());
        helper(l2);
    }
}
