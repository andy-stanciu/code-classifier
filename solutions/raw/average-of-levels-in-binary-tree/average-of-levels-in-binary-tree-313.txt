/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        ArrayList<Double> ans = new ArrayList<Double>();
        Queue<TreeNode> arr = new LinkedList<TreeNode>();
        arr.add(root);
        while (arr.isEmpty() == false) {
            int size = arr.size();
            double avg = 0;
            for (int i = 0; i < size; i++) {
                TreeNode curr = arr.poll();
                avg = avg + curr.val;
                if (curr.left != null)
                    arr.add(curr.left);
                if (curr.right != null)
                    arr.add(curr.right);
            }
            ans.add(avg / size);
        }
        return ans;
    }
}
