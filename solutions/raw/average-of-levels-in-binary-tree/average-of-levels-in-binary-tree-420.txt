/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        ArrayList<Double> rb = new ArrayList<Double>();
        if (root == null)
            return rb;
        Queue<TreeNode> rb1 = new LinkedList<>();
        rb1.add(root);
        while (!rb1.isEmpty()) {
            double sum = 0;
            int n = rb1.size();
            for (int i = 0; i < n; i++) {
                TreeNode t = rb1.poll();
                sum += t.val;
                if (t.left != null)
                    rb1.add(t.left);
                if (t.right != null)
                    rb1.add(t.right);
            }
            rb.add(sum / n);
        }
        return rb;
    }
}
