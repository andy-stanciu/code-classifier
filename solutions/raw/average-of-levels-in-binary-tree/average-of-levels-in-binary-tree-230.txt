/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> avg = new ArrayList<>();
        List<List<Integer>> result = new ArrayList<>();
        helper(result, root, 0);
        for (int i = 0; i < result.size(); i++) {
            int size = result.get(i).size();
            double sum = 0;
            for (int j = 0; j < result.get(i).size(); j++) {
                sum += result.get(i).get(j);
            }
            sum /= size;
            avg.add(sum);
        }
        return avg;
    }

    public void helper(List<List<Integer>> result, TreeNode node, int level) {
        if (node == null) {
            return;
        }
        if (level >= result.size()) {
            result.add(new ArrayList<>());
        }
        result.get(level).add(node.val);
        helper(result, node.left, level + 1);
        helper(result, node.right, level + 1);
    }
}
