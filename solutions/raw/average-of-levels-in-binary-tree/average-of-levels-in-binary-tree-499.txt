class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> rs = new ArrayList<>();
        Queue<TreeNode> que = new LinkedList<>();
        que.offer(root);
        while (!que.isEmpty()) {
            List<Integer> level = new ArrayList<>();
            int len = que.size();
            while (len > 0) {
                TreeNode cur = que.poll();
                level.add(cur.val);
                len--;
                if (cur.left != null) {
                    que.offer(cur.left);
                }
                if (cur.right != null) {
                    que.offer(cur.right);
                }
            }
            double avg = calcAverage(level);
            rs.add(avg);
        }
        return rs;
    }

    private double calcAverage(List<Integer> level) {
        double sum = 0;
        for (int i = 0; i < level.size(); i++) {
            sum += level.get(i);
        }
        return sum / level.size();
    }
}
