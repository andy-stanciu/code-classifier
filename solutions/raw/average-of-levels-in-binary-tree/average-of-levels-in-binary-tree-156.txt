/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<Double> ans = new ArrayList<>();
        if (root == null)
            return ans;
        queue.add(root);
        while (!queue.isEmpty()) {
            int size = queue.size();
            double sum = 0;
            for (int i = 0; i < size; i++) {
                TreeNode polled = queue.poll();
                if (polled != null) {
                    if (polled.left != null) {
                        queue.add(polled.left);
                    }
                    if (polled.right != null) {
                        queue.add(polled.right);
                    }
                }
                sum += polled.val;
            }
            ans.add(sum / size);
        }
        return ans;
    }
}
