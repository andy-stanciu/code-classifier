/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> que = new LinkedList<>();
        ArrayList<Double> res = new ArrayList<>();
        que.add(root);
        while (!que.isEmpty()) {
            int n = que.size();
            Double sum = 0.0;
            for (int i = 0; i < n; i++) {
                TreeNode cur = que.poll();
                sum += cur.val;
                if (cur.left != null)
                    que.add(cur.left);
                if (cur.right != null)
                    que.add(cur.right);
            }
            res.add(sum / n);
        }
        return res;
    }
}
