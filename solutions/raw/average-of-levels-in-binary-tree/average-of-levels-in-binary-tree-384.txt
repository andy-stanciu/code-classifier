/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> qu = new LinkedList<>();
        List<Double> l = new ArrayList<>();
        qu.add(root);
        while (!qu.isEmpty()) {
            int no_of_nodes = qu.size();
            double nodes = no_of_nodes;
            double sum = 0;
            double avg = 0;
            while (no_of_nodes > 0) {
                TreeNode curr = qu.poll();
                if (curr.left != null)
                    qu.add(curr.left);
                if (curr.right != null)
                    qu.add(curr.right);
                sum += curr.val;
                no_of_nodes--;
            }
            avg = (sum) / nodes;
            l.add(avg);
        }
        return l;
    }
}
