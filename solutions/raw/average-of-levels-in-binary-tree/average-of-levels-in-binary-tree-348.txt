/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        Double sum = 0d;
        int siblingCount = 0;
        ArrayList<TreeNode> pred = new ArrayList<>();
        ArrayList<TreeNode> next = null;
        ArrayList<Double> avgList = new ArrayList<>();
        pred.add(root);
        while (!pred.isEmpty()) {
            sum = 0d;
            siblingCount = 0;
            next = new ArrayList<>();
            for (TreeNode node : pred) {
                sum += node.val;
                siblingCount++;
                if (node.left != null)
                    next.add(node.left);
                if (node.right != null)
                    next.add(node.right);
            }
            Double avg = sum / siblingCount;
            avgList.add(avg);
            pred = next;
        }
        return avgList;
    }
}
