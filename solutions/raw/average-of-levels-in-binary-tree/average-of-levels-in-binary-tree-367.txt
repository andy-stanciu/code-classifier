/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<Double> answer = new ArrayList<>();
        if (root == null) {
            return answer;
        }
        q.add(root);
        int size = 0;
        TreeNode curr;
        while (!q.isEmpty()) {
            size = q.size();
            Double levelTotal = 0.0;
            for (int i = 0; i < size; i++) {
                curr = q.remove();
                if (curr == null)
                    continue;
                levelTotal += curr.val;
                if (curr.left != null)
                    q.add(curr.left);
                if (curr.right != null)
                    q.add(curr.right);
            }
            answer.add(Double.valueOf(levelTotal / size));
        }
        return answer;
    }
}
