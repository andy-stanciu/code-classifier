class Solution {

    Map<Integer, List<Integer>> map = new HashMap<>();

    public void reverse(TreeNode root, int level) {
        if (root == null)
            return;
        map.putIfAbsent(level, new ArrayList<>());
        map.get(level).add(root.val);
        reverse(root.left, level + 1);
        reverse(root.right, level + 1);
    }

    private double calculateAverage(List<Integer> list) {
        return list.stream().mapToDouble(d -> d).average().orElse(0.0);
    }

    public List<Double> averageOfLevels(TreeNode root) {
        reverse(root, 1);
        List<Double> answer = new ArrayList<>();
        for (Map.Entry<Integer, List<Integer>> m : map.entrySet()) {
            answer.add(calculateAverage(m.getValue()));
        }
        return answer;
    }
}
