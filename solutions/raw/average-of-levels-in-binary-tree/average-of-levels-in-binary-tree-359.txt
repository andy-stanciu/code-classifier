/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        if (root == null) {
            return null;
        }
        List<Double> list = new ArrayList<>();
        //list.add(root.val/1.000);
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        while (!q.isEmpty()) {
            int size = q.size();
            int k = size;
            double avg = 0;
            while (size != 0) {
                TreeNode hold = q.poll();
                avg += hold.val;
                if (hold.left != null) {
                    q.offer(hold.left);
                }
                if (hold.right != null) {
                    q.offer(hold.right);
                }
                size--;
            }
            list.add(avg / k);
            avg = 0;
        }
        return list;
    }
}
