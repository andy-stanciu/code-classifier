/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> averageOfLevels(TreeNode root) {
        if (root == null) {
            return null;
        }
        Queue<TreeNode> q = new LinkedList<>();
        List<Double> list = new ArrayList<>();
        q.add(root);
        while (!q.isEmpty()) {
            int nodesAtThisLevel = q.size();
            double avg = 0.0;
            int elementsForAvg = q.size();
            while (nodesAtThisLevel > 0) {
                TreeNode node = q.poll();
                avg += node.val;
                if (node != null && node.left != null) {
                    q.add(node.left);
                }
                if (node != null && node.right != null) {
                    q.add(node.right);
                }
                if (nodesAtThisLevel == 1) {
                    avg = avg / elementsForAvg;
                }
                nodesAtThisLevel--;
            }
            list.add(avg);
        }
        return list;
    }
}
