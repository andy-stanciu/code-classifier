class Solution {

    public int maxProfit(int[] prices) {
        // Initialize the variable to keep track of the minimum buy price
        // Start with the price of the first day as the initial buy price
        int buy_price = prices[0];
        // Initialize the variable to store the maximum profit
        // Start with a profit of 0 since no transactions have been made yet
        int profit = 0;
        // Loop through the prices starting from the second day (index 1)
        for (int i = 1; i < prices.length; i++) {
            // If the current price is lower than the current buy price
            // update the buy price to the current price
            if (prices[i] < buy_price) {
                buy_price = prices[i];
            } else // Otherwise, calculate the current profit by selling at the current price
            {
                int current_profit = prices[i] - buy_price;
                // Update the maximum profit if the current profit is greater than the previous maximum profit
                profit = Math.max(profit, current_profit);
            }
        }
        // Return the maximum profit achieved
        return profit;
    }
}
