class Solution {

    public int maxProfit(int[] prices) {
        if (prices.length < 2) {
            // No profit can be made if there are fewer than 2 prices
            return 0;
        }
        int maxProfit = 0;
        // Start by assuming the first price is the minimum
        int minPrice = prices[0];
        for (int i = 1; i < prices.length; i++) {
            // Update the minimum price encountered so far
            if (prices[i] < minPrice) {
                minPrice = prices[i];
            }
            // Calculate the potential profit at the current price
            int potentialProfit = prices[i] - minPrice;
            // Update the maximum profit if the current potential profit is greater
            if (potentialProfit > maxProfit) {
                maxProfit = potentialProfit;
            }
        }
        return maxProfit;
    }
}
