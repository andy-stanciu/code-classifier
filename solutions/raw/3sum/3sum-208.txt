class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        //nlogn
        Arrays.sort(nums);
        List<List<Integer>> res = new ArrayList<>();
        if (nums[0] > 0)
            return res;
        for (int i = 0; i < nums.length && nums[i] <= 0; i++) {
            if ((i == 0 || nums[i - 1] != nums[i]))
                twoSums(nums, i, res);
        }
        return res;
    }

    void twoSums(int[] nums, int i, List<List<Integer>> res) {
        int low = i + 1, hi = nums.length - 1;
        while (low < hi) {
            int sum = nums[low] + nums[hi] + nums[i];
            if (sum < 0)
                low++;
            else if (sum > 0)
                hi--;
            else {
                res.add(Arrays.asList(nums[i], nums[low], nums[hi]));
                while (low < hi && nums[low] == nums[low + 1]) low++;
                while (low < hi && nums[hi] == nums[hi - 1]) hi--;
                low++;
                hi--;
            }
        }
    }
}
