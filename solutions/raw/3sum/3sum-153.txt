class Solution {

    public List<List<Integer>> threeSum(int[] a) {
        int n = a.length;
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(a);
        for (int i = 0; i < n - 2; i++) {
            int target = -a[i];
            int j = i + 1;
            int k = n - 1;
            while (j < k) {
                int sum = a[j] + a[k];
                if (sum < target) {
                    j++;
                } else if (sum > target) {
                    k--;
                } else {
                    List<Integer> l = new ArrayList<>();
                    l.add(a[i]);
                    l.add(a[j]);
                    l.add(a[k]);
                    ans.add(l);
                    // move j forward and
                    // k backward in such a way that
                    // they should be at the new value than the previous
                    // not the same
                    // if next value of j and prev value of k are same
                    while (j < k && a[j] == a[j + 1]) j++;
                    j++;
                    while (j < k && a[k] == a[k - 1]) k--;
                    k--;
                }
            }
            // do same for i as well
            while (i < n - 2 && a[i] == a[i + 1]) i++;
        }
        return ans;
    }
}
