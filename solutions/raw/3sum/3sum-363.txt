class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        //iterate through list, put first pointer, then second pointer and then iterate and match with every other element to get the sum zero
        Set<List<Integer>> sumSet = new HashSet<>();
        Arrays.sort(nums);
        if (nums.length < 3)
            return Collections.emptyList();
        for (int i = 0; i < nums.length - 2; i++) {
            int fp = i + 1, sp = nums.length - 1;
            while (fp < sp) {
                int sum = nums[i] + nums[fp] + nums[sp];
                if (sum == 0)
                    sumSet.add(List.of(nums[i], nums[fp++], nums[sp--]));
                else if (nums[i] + nums[fp] + nums[sp] < 0)
                    fp++;
                else if (nums[i] + nums[fp] + nums[sp] > 0)
                    sp--;
            }
        }
        return sumSet.stream().toList();
    }
}
