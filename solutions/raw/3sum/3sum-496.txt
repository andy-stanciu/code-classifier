class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        int n = nums.length;
        if (nums == null || nums.length < 3)
            return new ArrayList<>();
        // sort the array
        Arrays.sort(nums);
        HashSet<List<Integer>> ans = new HashSet<>();
        // now fix one elemnt and check sum of remaing two
        for (int i = 0; i < n - 2; i++) {
            int left = i + 1, right = n - 1;
            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];
                if (sum == 0) {
                    ans.add(Arrays.asList(nums[i], nums[left], nums[right]));
                    left++;
                    right--;
                } else if (sum < 0)
                    left++;
                else
                    right--;
            }
        }
        return new ArrayList<>(ans);
    }
}
