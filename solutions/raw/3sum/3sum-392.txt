class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        // int sum = 0;
        // int target = 0;
        // List ans;
        // int l = 0 ;
        // Set<List<Integer>> ls = new HashSet<>();
        // Arrays.sort(nums);
        // for(int i = 0; i<nums.length - 2; i++) {
        //     for (int j = i + 1; j < nums.length; j++) {
        //         for (int k = j + 1; k < nums.length ; k++) {
        //             sum = nums[i] + nums[j] + nums[k];
        //             if (sum == target) {
        //                 ans = Arrays.asList(nums[i], nums[j], nums[k]);
        //                 ls.add(ans);
        //                 l++;
        //             }
        //         }
        //     }
        // }
        // return new ArrayList(ls);
        Arrays.sort(nums);
        Set<List<Integer>> ls = new HashSet<>();
        for (int i = 0; i < nums.length - 2; i++) {
            int left = i + 1;
            int right = nums.length - 1;
            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];
                if (sum == 0) {
                    ls.add(Arrays.asList(nums[i], nums[left], nums[right]));
                    left++;
                    right--;
                } else if (sum < 0) {
                    left++;
                } else {
                    right--;
                }
            }
        }
        return new ArrayList(ls);
    }
}
