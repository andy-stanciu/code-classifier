class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> lst = new LinkedList<>();
        Arrays.sort(nums);
        //We go till -2 as we are checking for 2 more elements
        for (int i = 0; i < nums.length - 2; i++) {
            //We sorted the array so we are using this nums[i] != nums[i-1]
            if (i == 0 || (i > 0 && nums[i] != nums[i - 1])) {
                int l = i + 1, r = nums.length - 1;
                //We do this to find the remaining elements
                int sum = 0 - nums[i];
                while (l < r) {
                    if (nums[l] + nums[r] == sum) {
                        lst.add(Arrays.asList(nums[i], nums[l], nums[r]));
                        //To check if elements are distinct
                        while (l < r && nums[l] == nums[l + 1]) l += 1;
                        while (l < r && nums[r] == nums[r - 1]) r -= 1;
                        l++;
                        r--;
                    } else if (nums[l] + nums[r] > sum) {
                        r -= 1;
                    } else
                        l += 1;
                }
            }
        }
        return lst;
    }
}
