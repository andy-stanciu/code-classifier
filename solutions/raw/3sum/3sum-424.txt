class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        // sort nums
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 2; i++) {
            // skip duplicates
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            // j starts just after i
            int j = i + 1;
            // k starts at the end
            int k = nums.length - 1;
            while (j < k) {
                int sum = nums[i] + nums[j] + nums[k];
                if (sum == 0) {
                    // add the list to th result List
                    result.add(Arrays.asList(nums[i], nums[j], nums[k]));
                    // increment j
                    j++;
                    // decrement k
                    k--;
                    // skip duplicates
                    while (j < k && nums[j] == nums[j - 1]) j++;
                    // skip duplicates
                    while (j < k && nums[k] == nums[k + 1]) k--;
                } else if (sum > 0) {
                    //If sum > 0: The sum is too large, so you should decrment k to decrease the sum.
                    // Move k to the left to decrease the sum
                    k--;
                } else {
                    //If sum < 0: The sum is too small, so you should increment j to increase the sum.
                    // Move j to the right to increase the sum
                    j++;
                }
            }
        }
        return result;
    }
}
