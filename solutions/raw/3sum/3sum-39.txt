class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> outerList = new ArrayList<>();
        for (int fixedNumPtr = 0; fixedNumPtr < nums.length - 2; fixedNumPtr++) {
            if (fixedNumPtr > 0 && (nums[fixedNumPtr] == nums[fixedNumPtr - 1]))
                continue;
            int lPtr = fixedNumPtr + 1;
            int rPtr = nums.length - 1;
            while (lPtr < rPtr) {
                int numSum = nums[lPtr] + nums[rPtr] + nums[fixedNumPtr];
                if (numSum == 0)
                    outerList.add(Arrays.asList(nums[lPtr], nums[rPtr], nums[fixedNumPtr]));
                if (numSum < 0) {
                    lPtr++;
                } else {
                    do {
                        rPtr--;
                    } while (nums[rPtr + 1] == nums[rPtr] && rPtr > lPtr);
                }
            }
        }
        return outerList;
    }
}
