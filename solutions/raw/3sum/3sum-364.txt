class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();
        for (int i = 0; i < nums.length - 2; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                // Skip duplicate element for i
                continue;
            } else {
                int start = i + 1;
                int end = nums.length - 1;
                if (start == end) {
                    int sum = nums[i] + nums[start] + nums[end];
                    if (sum == 0) {
                        List<Integer> ls = new ArrayList<>();
                        ls.add(nums[i]);
                        ls.add(nums[start]);
                        ls.add(nums[end]);
                        ans.add(ls);
                        break;
                    }
                } else {
                    while (start < end) {
                        int sum = nums[i] + nums[start] + nums[end];
                        if (sum == 0) {
                            List<Integer> ls = new ArrayList<>();
                            ls.add(nums[i]);
                            ls.add(nums[start]);
                            ls.add(nums[end]);
                            ans.add(ls);
                            while (start < end && nums[end] == nums[end - 1]) {
                                end--;
                            }
                            start++;
                            end--;
                        } else if (sum < 0) {
                            start++;
                        } else {
                            end--;
                        }
                    }
                }
            }
        }
        return ans;
    }
}
