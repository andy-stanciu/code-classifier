class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> list = new ArrayList<>();
        if (nums.length < 3) {
            return list;
        }
        for (int i = 0; i < nums.length - 2; i++) {
            int k = i + 1;
            int l = nums.length - 1;
            while (k < l) {
                long sum = (long) nums[i] + nums[k] + nums[l];
                if (sum > 0) {
                    while (k < l && nums[l] == nums[l - 1]) l--;
                    l--;
                } else if (sum < 0) {
                    while (k < l && nums[k] == nums[k + 1]) k++;
                    k++;
                } else if (sum == 0) {
                    List<Integer> innerList = new ArrayList<>();
                    innerList.add(nums[i]);
                    innerList.add(nums[k]);
                    innerList.add(nums[l]);
                    list.add(innerList);
                    while (k < l && nums[k] == nums[k + 1]) k++;
                    k++;
                    while (k < l && nums[l] == nums[l - 1]) l--;
                    l--;
                }
            }
            while (nums[i] == nums[i + 1] && i < nums.length - 2) i++;
        }
        return list;
    }
}
