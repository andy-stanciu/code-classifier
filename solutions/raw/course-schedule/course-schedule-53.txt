class Solution {

    public boolean canFinish(int numCourses, int[][] prerequisites) {
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < numCourses; i++) {
            adj.add(new ArrayList<>());
        }
        for (int[] it : prerequisites) {
            adj.get(it[1]).add(it[0]);
        }
        boolean[] vis = new boolean[numCourses];
        boolean[] stck = new boolean[numCourses];
        for (int i = 0; i < numCourses; i++) {
            if (!vis[i]) {
                if (dfs(adj, i, vis, stck)) {
                    return false;
                }
            }
        }
        return true;
    }

    boolean dfs(ArrayList<ArrayList<Integer>> adj, int src, boolean[] vis, boolean[] stck) {
        vis[src] = true;
        stck[src] = true;
        for (int x : adj.get(src)) {
            // if(stck[x]) return true;
            if (!vis[x] && dfs(adj, x, vis, stck))
                return true;
            else if (stck[x])
                return true;
        }
        stck[src] = false;
        return false;
    }
}
// PLEASE UPVOTE <3 !!
