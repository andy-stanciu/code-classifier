/**
 * This class provides a solution to the problem of finding the longest consecutive sequence in an unsorted array of integers.
 * It implements an efficient algorithm with a time complexity of O(N) and a space complexity of O(N).
 */
public class Solution {

    /**
     * Finds the length of the longest consecutive sequence in the given array of integers.
     *
     * @param nums the input array of integers
     * @return the length of the longest consecutive sequence
     */
    public int longestConsecutive(int[] nums) {
        // Storing all the numbers ina hashset.
        Set<Integer> availableNumbers = new HashSet<>() {

            {
                for (int num : nums) add(num);
            }
        };
        int longestSeqSize = 0;
        for (int num : nums) {
            // No more items to process.
            if (availableNumbers.isEmpty())
                break;
            int currentNumber = num;
            if (!availableNumbers.contains(currentNumber))
                // This number and its sequence has been processed.
                continue;
            int seqSize = 1;
            while (availableNumbers.contains(--currentNumber)) {
                seqSize++;
                availableNumbers.remove(currentNumber);
            }
            currentNumber = num;
            while (availableNumbers.contains(++currentNumber)) {
                seqSize++;
                availableNumbers.remove(currentNumber);
            }
            availableNumbers.remove(num);
            if (seqSize > longestSeqSize)
                longestSeqSize = seqSize;
        }
        return longestSeqSize;
    }
}
