class Solution {

    public int longestConsecutive(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        // Sort the array
        Arrays.sort(nums);
        // Start with 1 because a single number is a valid sequence
        int maxCount = 1;
        // Start counting from the first number
        int count = 1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] == nums[i - 1]) {
                // Skip duplicates
                continue;
            } else if (nums[i] == nums[i - 1] + 1) {
                // Increment count if consecutive
                count++;
            } else {
                // Update maxCount and reset count for new sequence
                maxCount = Math.max(maxCount, count);
                count = 1;
            }
        }
        // Final check to update maxCount
        maxCount = Math.max(maxCount, count);
        return maxCount;
    }
}
