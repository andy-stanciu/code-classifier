class Solution {

    public int longestConsecutive(int[] nums) {
        // use a hashset to add all elements of nums array
        Set<Integer> set = new HashSet<>();
        for (int num : nums) {
            set.add(num);
        }
        // initailly set to 0
        int longestSubSeqCount = 0;
        for (int num : nums) {
            if (!(set.contains(num - 1))) {
                // current value of num in the subsequence
                int currentNum = num;
                // initially 0 if subsequence length is 1 then it becomes 1 after first iteration of the while loop else it increments according to the size of subsequence
                int currentSubSeqCount = 0;
                while (set.contains(currentNum)) {
                    currentNum++;
                    currentSubSeqCount++;
                }
                // Update longestSubSeqCount if the current sequence is longer
                longestSubSeqCount = Math.max(longestSubSeqCount, currentSubSeqCount);
            }
        }
        return longestSubSeqCount;
    }
}
