class Solution {

    public int longestConsecutive(int[] nums) {
        int n = nums.length;
        if (n == 0 || n == 1) {
            return n;
        }
        Integer[] numbers = new Integer[n];
        for (int i = 0; i < n; i++) {
            numbers[i] = Integer.valueOf(nums[i]);
        }
        TreeSet<Integer> set = new TreeSet<>();
        set.addAll(Arrays.asList(numbers));
        int res = 1, currMax = 1;
        int temp = set.pollLast();
        while (!set.isEmpty()) {
            int temp2 = set.pollLast();
            if ((temp - temp2) == 1) {
                currMax++;
            } else {
                currMax = 1;
            }
            res = Math.max(currMax, res);
            temp = temp2;
        }
        return res;
    }
}
