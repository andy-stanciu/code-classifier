class Solution {

    int dfs(HashMap<Integer, Integer> h, int val) {
        if (!h.containsKey(val)) {
            return 0;
        }
        if (h.get(val) != 0)
            return h.get(val);
        // storing the already calculated value.
        h.put(val, dfs(h, val - 1) + 1);
        return h.get(val);
    }

    public int longestConsecutive(int[] a) {
        HashMap<Integer, Integer> h = new HashMap<>();
        for (int e : a) {
            h.put(e, 0);
        }
        int max = 0;
        for (int e : a) {
            max = Math.max(max, dfs(h, e));
        }
        return max;
    }
}
