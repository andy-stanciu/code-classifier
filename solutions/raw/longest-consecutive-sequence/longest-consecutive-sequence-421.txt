class Solution {

    public int longestConsecutive(int[] nums) {
        //create a hashset so that we can eliminate duplicates and utilize hashset functions
        HashSet<Integer> set = new HashSet();
        int max = 0, num = 0, count = 0;
        //populating the hashset
        for (int i : nums) {
            set.add(i);
        }
        /*
        We only want to check the longest sequence from starting indexes. That is
        only start counting the length when you can ensure that this number is start 
        of a sequence
        */
        for (int val : set) {
            if (!set.contains(val - 1)) {
                //This check insures only starting of sequences are checked!
                num = val;
                count = 0;
                while (count <= set.size()) {
                    if (set.contains(num)) {
                        count++;
                        max = Math.max(count, max);
                        num++;
                    } else {
                        count = 0;
                        break;
                    }
                }
            }
        }
        return max;
    }
}
