class Solution {

    public int longestConsecutive(int[] nums) {
        if (nums.length == 0)
            return 0;
        HashMap<Integer, Boolean> map = new HashMap<>();
        for (int number : nums) {
            map.put(number, true);
        }
        int max = 1;
        int count = 1;
        for (int i = 0; i < nums.length; i++) {
            int c = 1;
            while (map.get(nums[i]) == true && map.containsKey(nums[i] + c)) {
                map.put(nums[i] + c, false);
                count++;
                c++;
            }
            c = 1;
            while (map.get(nums[i]) == true && map.containsKey(nums[i] - c)) {
                map.put(nums[i] - c, false);
                count++;
                c++;
            }
            map.put(nums[i], false);
            max = Math.max(max, count);
            count = 1;
        }
        return max;
    }
}
