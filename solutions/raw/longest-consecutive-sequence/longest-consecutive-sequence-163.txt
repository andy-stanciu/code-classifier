public class Solution {

    public int longestConsecutive(int[] nums) {
        // Return 0 if the input array is empty
        if (nums.length == 0)
            return 0;
        // Create a set to eliminate duplicates and check for presence of elements
        Set<Integer> numSet = new HashSet<>();
        for (int num : nums) {
            numSet.add(num);
        }
        // Variable to store the maximum consecutive sequence length
        int maxi = 1;
        // Iterate through the numbers in the set
        for (int num : numSet) {
            // Check if the current number is the end of a sequence
            if (!numSet.contains(num + 1) && numSet.contains(num - 1)) {
                // Start a new sequence with length 1
                int cnt = 1;
                int current = num - 1;
                // Count backward to find the length of the consecutive sequence
                while (numSet.contains(current)) {
                    cnt++;
                    current--;
                }
                // Update maximum sequence length
                maxi = Math.max(maxi, cnt);
            }
        }
        // Return the longest consecutive sequence length
        return maxi;
    }
}
