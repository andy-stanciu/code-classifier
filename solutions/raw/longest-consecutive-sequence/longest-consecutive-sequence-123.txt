class Solution {

    public int longestConsecutive(int[] nums) {
        // Create a HashSet to efficiently check for element presence
        Set<Integer> set = new HashSet<>();
        // Add all elements from nums to the HashSet
        for (int num : nums) {
            set.add(num);
        }
        // Variable to store the length of the longest consecutive sequence
        int largestStreak = 0;
        // Iterate through each element in nums
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            // Check if there is no smaller element (start of a potential consecutive sequence)
            if (!set.contains(num - 1)) {
                int currentStreak = 1;
                int nextNo = num;
                // Continue checking for consecutive elements in the sequence
                while (set.contains(nextNo + 1)) {
                    nextNo++;
                    currentStreak++;
                }
                // Update the longest consecutive sequence length
                largestStreak = Math.max(largestStreak, currentStreak);
            }
        }
        // Return the length of the longest consecutive sequence
        return largestStreak;
    }
}
