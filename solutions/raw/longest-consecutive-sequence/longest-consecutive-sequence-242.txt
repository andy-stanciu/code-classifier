class Solution {

    // Function to find the longest consecutive sequence in an array
    public int longestConsecutive(int[] nums) {
        // Edge case: If the array has only one element, return 1 as the longest consecutive sequence
        if (nums.length == 1)
            return 1;
        // Sort the array to bring consecutive elements together
        Arrays.sort(nums);
        // Variables to track the current streak and the longest streak found so far
        // \'count\' keeps track of the current consecutive sequence length
        int count = 1;
        // \'num\' stores the longest consecutive sequence found
        int num = 0;
        // Traverse the sorted array
        for (int i = 0; i < nums.length - 1; i++) {
            // If the current element and the next element are consecutive
            if (nums[i] == nums[i + 1] - 1) {
                // Increase the current sequence count
                count++;
            } else // If elements are the same (duplicate), skip incrementing count
            if (nums[i] == nums[i + 1]) {
                // Skip this duplicate element
                count = count;
            } else // If they are not consecutive, reset the count to 1
            {
                // Start a new sequence
                count = 1;
            }
            // Update the longest sequence length if the current one is longer
            if (count > num) {
                num = count;
            }
        }
        // Return the longest consecutive sequence length found
        return num;
    }
}
