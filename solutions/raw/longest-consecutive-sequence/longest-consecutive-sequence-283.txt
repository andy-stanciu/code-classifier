class Solution {

    public int longestConsecutive(int[] nums) {
        int n = nums.length;
        if (n == 0) {
            return 0;
        } else if (n == 1) {
            return 1;
        }
        // int m=nums[0];
        // ArrayList<Integer> list=new ArrayList<>();
        // for(int i=0; i<n; i++){
        //     list.add(nums[i]);
        // }
        // System.out.print(list.size());
        // for(int i=0; i<n; i++){
        //     if(nums[i]>m){
        //         m=nums[i];
        //     }
        // }
        Arrays.sort(nums);
        int count = 1;
        int max = 0;
        // for(int i=0; i<n; i++){
        //     count=0;
        //     for(int j=nums[i]; j<=m; j++){
        //         if(list.contains(j)){
        //             count++;
        //             if(max<count){
        //                 max=count;
        //             }
        //         }else{
        //             break;
        //         }
        //     }
        // }
        for (int i = 0; i < n - 1; i++) {
            if (nums[i + 1] - nums[i] == 1) {
                count++;
            } else if (nums[i + 1] - nums[i] == 0) {
                continue;
            } else {
                count = 1;
            }
            if (count > max) {
                max = count;
            }
        }
        if (count > max) {
            max = count;
        }
        return max;
    }
}
