class Solution {

    public int longestConsecutive(int[] nums) {
        if (nums.length == 0)
            return 0;
        else if (nums.length == 1)
            return 1;
        Set<Integer> sorted = new TreeSet<>();
        for (int num : nums) sorted.add(num);
        int[] sortedArray = new int[nums.length];
        int maxConLength = 1;
        int currLength = 1;
        int idx = 0;
        for (int num : sorted) {
            sortedArray[idx++] = num;
        }
        for (int i = 1; i < nums.length; i++) {
            if (sortedArray[i] == sortedArray[i - 1] + 1) {
                currLength++;
            } else {
                maxConLength = Math.max(maxConLength, currLength);
                currLength = 1;
            }
        }
        return Math.max(maxConLength, currLength);
    }
}
