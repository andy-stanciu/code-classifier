class Solution {

    public int longestConsecutive(int[] nums) {
        // optimal solution
        int n = nums.length;
        HashSet<Integer> set = new HashSet<>();
        int longest = 1;
        if (n == 0) {
            return 0;
        }
        for (int i = 0; i < n; i++) {
            //--> tc=n
            set.add(nums[i]);
        }
        for (int s : set) {
            if (!set.contains(s - 1)) {
                int cnt = 1;
                while (set.contains(s + 1)) {
                    s += 1;
                    cnt += 1;
                }
                longest = Math.max(cnt, longest);
            }
        }
        return longest;
    }
}
