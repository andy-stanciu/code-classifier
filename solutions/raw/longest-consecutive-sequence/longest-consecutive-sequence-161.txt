class Solution {

    public static int longestConsecutive(int[] values) {
        if (values.length == 0) {
            return 0;
        }
        List<Integer> list = Arrays.stream(values).boxed().collect(Collectors.toList());
        PriorityQueue<Integer> minHeap = new PriorityQueue<Integer>();
        minHeap.addAll(list);
        Integer prev = minHeap.poll();
        Integer longest = 1;
        Integer max = 1;
        while (!minHeap.isEmpty()) {
            Integer item = minHeap.poll();
            if (item.equals(prev)) {
                continue;
            }
            int delta = item - prev;
            if (delta > 1) {
                longest = 1;
            } else {
                longest = longest + 1;
                if (longest > max) {
                    max = longest;
                }
            }
            prev = item;
        }
        return max;
    }
}
