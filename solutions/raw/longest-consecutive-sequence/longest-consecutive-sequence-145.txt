public class Solution {

    public int longestConsecutive(int[] nums) {
        int longestLength = 0;
        Map<Integer, Boolean> exploredMap = new HashMap<>();
        // Initialize the map with all numbers marked as unexplored (false)
        for (int num : nums) {
            exploredMap.put(num, false);
        }
        // Iterate through each number in the array
        for (int num : nums) {
            if (exploredMap.get(num)) {
                continue;
            }
            int currentLength = 1;
            int nextNum = num + 1;
            // Check in the forward direction
            while (exploredMap.containsKey(nextNum) && !exploredMap.get(nextNum)) {
                currentLength++;
                exploredMap.put(nextNum, true);
                nextNum++;
            }
            int prevNum = num - 1;
            // Check in the reverse direction
            while (exploredMap.containsKey(prevNum) && !exploredMap.get(prevNum)) {
                currentLength++;
                exploredMap.put(prevNum, true);
                prevNum--;
            }
            longestLength = Math.max(longestLength, currentLength);
        }
        return longestLength;
    }
}
