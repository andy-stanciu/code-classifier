class Solution {

    public int longestConsecutive(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        Set<Integer> set = new TreeSet<>();
        for (int num : nums) {
            set.add(num);
        }
        Iterator it = set.iterator();
        int prev = (int) it.next();
        int count = 1;
        int maxLength = 0;
        while (it.hasNext()) {
            int current = (int) it.next();
            if (prev + 1 == current) {
                count++;
            } else {
                maxLength = Math.max(maxLength, count);
                count = 1;
            }
            prev = current;
        }
        return Math.max(maxLength, count);
    }
}
