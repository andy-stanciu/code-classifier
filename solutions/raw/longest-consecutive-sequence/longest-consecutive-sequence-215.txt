class Solution {

    public int longestConsecutive(int[] nums) {
        if (nums.length == 0) {
            return 0;
        }
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i < nums.length; i++) {
            set.add(nums[i]);
        }
        int j = 0;
        int[] arr = new int[set.size()];
        for (int i : set) {
            arr[j] = i;
            j++;
        }
        int maxCount = 1;
        int count = 1;
        int prev = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (Math.abs(arr[i] - prev) == 1) {
                count++;
            } else {
                maxCount = Math.max(maxCount, count);
                count = 1;
            }
            prev = arr[i];
        }
        maxCount = Math.max(maxCount, count);
        return maxCount;
    }
}
