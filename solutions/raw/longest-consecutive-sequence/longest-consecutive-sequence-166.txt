class Solution {

    public int longestConsecutive(int[] nums) {
        if (nums.length == 0)
            return 0;
        Set<Integer> numSet = new HashSet<>();
        for (int num : nums) {
            numSet.add(num);
        }
        int longest = 1, length = 1;
        int upper = nums[0] + 1, lower = nums[0] - 1;
        for (Integer num : nums) {
            if (!numSet.contains(upper) && !numSet.contains(lower)) {
                upper = num + 1;
                lower = num - 1;
                length = 1;
            }
            if (numSet.contains(lower)) {
                length++;
                lower--;
                longest = Math.max(length, longest);
            }
            if (numSet.contains(upper)) {
                length++;
                upper++;
                longest = Math.max(length, longest);
            }
        }
        return longest;
    }
}
