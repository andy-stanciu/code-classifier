class Solution {

    public int longestConsecutive(int[] nums) {
        Map<Integer, Integer> hm = new HashMap<Integer, Integer>();
        boolean[] v = new boolean[nums.length];
        for (int i = 0; i < nums.length; i++) {
            if (!hm.containsKey(nums[i]))
                hm.put(nums[i], i);
            else
                v[i] = true;
        }
        int mc = 0;
        for (int i = 0; i < nums.length; i++) {
            if (v[i]) {
                continue;
            }
            int tmp = nums[i];
            int tmpCnt = 0;
            while (hm.containsKey(tmp) && !v[hm.get(tmp)]) {
                tmpCnt++;
                v[hm.get(tmp)] = true;
                tmp++;
            }
            tmp = nums[i] - 1;
            while (hm.containsKey(tmp) && !v[hm.get(tmp)]) {
                tmpCnt++;
                v[hm.get(tmp)] = true;
                tmp--;
            }
            mc = Math.max(mc, tmpCnt);
        }
        return mc;
    }
}
