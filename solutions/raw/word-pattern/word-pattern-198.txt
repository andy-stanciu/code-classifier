class Solution {

    public boolean wordPattern(String pattern, String s) {
        final var map = new HashMap<Character, String>();
        final var map2 = new HashMap<String, Character>();
        final var split = s.split(" ");
        if (split.length != pattern.length())
            return false;
        for (int i = 0; i < split.length; i++) {
            final var candidate = split[i];
            final var segment = pattern.charAt(i);
            final var storedCandidate = map.put(segment, candidate);
            Character storedSegment;
            if ((storedCandidate == null && (storedSegment = map2.put(candidate, segment)) != null && storedSegment != segment) || (storedCandidate != null && !storedCandidate.equals(candidate)))
                return false;
        }
        return true;
    }
}
