class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        char[] letters = pattern.toCharArray();
        // checking lengths are same or not, if different return false;
        if (words.length != letters.length)
            return false;
        // creating map to store each letter with corresponding word
        Map<Character, String> map = new HashMap();
        Set<String> uniqueWords = new HashSet();
        // loop through letters to fill the map
        for (int i = 0; i < letters.length; i++) {
            if (map.containsKey(letters[i])) {
                if (!map.get(letters[i]).equals(words[i]))
                    return false;
            } else {
                // if adding new word fails then it\'s duplicated
                if (!uniqueWords.add(words[i]))
                    return false;
                map.put(letters[i], words[i]);
            }
        }
        return true;
    }
}
