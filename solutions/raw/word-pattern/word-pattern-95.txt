class Solution {

    public boolean wordPattern(String pattern, String s) {
        if (pattern == null && s == null) {
            return true;
        }
        if (pattern == null || s == null) {
            return false;
        }
        if (pattern.isEmpty() && s.isEmpty()) {
            return true;
        }
        if (pattern.isEmpty() || s.isEmpty()) {
            return false;
        }
        String[] sArray = s.split(" ");
        if (pattern.length() != sArray.length) {
            return false;
        }
        HashMap<Character, String> hashMap = new HashMap<>();
        for (int i = 0; i < sArray.length; i++) {
            if (!hashMap.containsKey(pattern.charAt(i))) {
                if (hashMap.containsValue(sArray[i])) {
                    return false;
                }
                hashMap.put(pattern.charAt(i), sArray[i]);
            } else {
                if (!hashMap.get(pattern.charAt(i)).equals(sArray[i])) {
                    return false;
                }
            }
        }
        return true;
    }
}
