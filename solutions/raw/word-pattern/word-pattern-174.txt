class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] secondQue = s.split(" ");
        if (pattern.length() != secondQue.length)
            return false;
        Map<Character, String> first = new HashMap<>();
        Map<String, Character> second = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            if (first.containsKey(pattern.charAt(i))) {
                if (second.containsKey(secondQue[i])) {
                    if (!first.get(pattern.charAt(i)).equals(secondQue[i]))
                        return false;
                } else {
                    return false;
                }
            } else {
                if (second.containsKey(secondQue[i]))
                    return false;
                first.put(pattern.charAt(i), secondQue[i]);
                second.put(secondQue[i], pattern.charAt(i));
            }
        }
        return true;
    }
}
