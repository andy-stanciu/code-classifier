class Solution {

    public boolean wordPattern(String pattern, String s) {
        StringTokenizer st = new StringTokenizer(s);
        int n = st.countTokens();
        List<String> al = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            al.add(st.nextToken());
        }
        Map<Character, Integer> hm1 = new HashMap<>();
        Map<String, Integer> hm2 = new HashMap<>();
        if (pattern.length() != al.size()) {
            return false;
        } else {
            for (int i = 0; i < pattern.length(); i++) {
                Integer chari = hm1.put(pattern.charAt(i), i);
                Integer wordi = hm2.put(al.get(i), i);
                if (!Objects.equals(chari, wordi)) {
                    return false;
                }
            }
            return true;
        }
    }
}
