class Solution {

    public boolean wordPattern(String pattern, String s) {
        s = s.trim();
        String[] words = s.split(" ");
        if (pattern.length() != words.length) {
            return false;
        }
        HashMap<Character, String> map1 = new HashMap<>();
        HashMap<String, Character> map2 = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            char charC = pattern.charAt(i);
            String word = words[i];
            if (map1.containsKey(charC)) {
                if (!map1.get(charC).equals(word)) {
                    return false;
                }
            } else {
                map1.put(charC, word);
            }
            if (map2.containsKey(word)) {
                if (map2.get(word) != charC) {
                    return false;
                }
            } else {
                map2.put(word, charC);
            }
        }
        return true;
    }
}
