class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] spt = s.split(" ");
        HashMap<Character, String> hm = new HashMap<>();
        Set<String> sSet = new HashSet<String>();
        Set<Character> cSet = new HashSet<Character>();
        for (String word : spt) sSet.add(word);
        for (char c : pattern.toCharArray()) cSet.add(c);
        int[] arr = new int[256];
        if (spt.length != pattern.length() || sSet.size() != cSet.size())
            return false;
        for (int i = 0; i < spt.length; i++) {
            if (hm.containsKey(pattern.charAt(i))) {
                if (!hm.get(pattern.charAt(i)).equals(spt[i])) {
                    System.out.println(spt[i] + " " + pattern.charAt(i));
                    return false;
                }
            } else {
                hm.put(pattern.charAt(i), spt[i]);
            }
        }
        return true;
    }
}
