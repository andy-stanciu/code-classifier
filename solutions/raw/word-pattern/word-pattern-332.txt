class Solution {

    public boolean wordPattern(String pattern, String s) {
        Map<String, String> words = new HashMap<>();
        String[] arrayS = s.split(" ");
        if (arrayS.length != pattern.length())
            return false;
        for (int i = 0; i < arrayS.length; i++) {
            String key = String.valueOf(pattern.charAt(i));
            if (words.containsKey(key)) {
                String val = words.get(key);
                if (!val.equals(arrayS[i])) {
                    return false;
                }
            }
            String retVal = words.put(key, arrayS[i]);
        }
        List<String> wordsArr = new ArrayList<>(words.values());
        for (int j = 0; j < wordsArr.size(); j++) {
            String curr = wordsArr.get(j);
            for (int k = j + 1; k < wordsArr.size(); k++) {
                String next = wordsArr.get(k);
                if (curr.equals(next)) {
                    return false;
                }
            }
        }
        return true;
    }
}
