class Solution {

    public boolean wordPattern(String pattern, String s) {
        char[] carr = new char[pattern.length()];
        String[] str = s.split(" ");
        if (carr.length != str.length) {
            return false;
        }
        for (int i = 0; i < carr.length; i++) {
            carr[i] = pattern.charAt(i);
        }
        HashMap<Character, String> mapp = new HashMap<>();
        for (int i = 0; i < carr.length; i++) {
            mapp.put(Character.valueOf(carr[i]), str[i]);
        }
        HashSet<String> sett = new HashSet<>();
        for (String i : mapp.values()) {
            if (!sett.add(i)) {
                return false;
            }
        }
        for (int i = 0; i < carr.length; i++) {
            if (!mapp.get(Character.valueOf(carr[i])).equals(str[i])) {
                return false;
            }
        }
        return true;
    }
}
