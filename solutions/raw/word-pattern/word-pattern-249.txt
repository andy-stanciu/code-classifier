class Solution {

    public boolean wordPattern(String pattern, String s) {
        int[] patternSequence = new int[pattern.length()];
        String[] words = s.split(" ");
        int[] wordSequence = new int[words.length];
        // if the length of the pattern does not match with the length of the string given,
        // we can assume the result will be false anyway
        if (patternSequence.length != wordSequence.length) {
            return false;
        }
        for (int i = 0; i < pattern.length(); i++) {
            for (int l = 0; l < pattern.length(); l++) {
                if (pattern.charAt(i) == pattern.charAt(l)) {
                    patternSequence[i] = l;
                    break;
                }
            }
        }
        for (int i = 0; i < words.length; i++) {
            for (int l = 0; l < words.length; l++) {
                if (words[i].equals(words[l])) {
                    wordSequence[i] = l;
                    break;
                }
            }
        }
        boolean result = true;
        if (patternSequence.length == wordSequence.length) {
            for (int i = 0; i < patternSequence.length; i++) {
                if (patternSequence[i] != wordSequence[i]) {
                    result = false;
                    break;
                }
            }
        } else {
            result = false;
        }
        return result;
    }
}
