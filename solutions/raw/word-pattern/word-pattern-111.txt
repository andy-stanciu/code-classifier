class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (pattern.length() != words.length) {
            // The number of words and pattern length must match
            return false;
        }
        HashMap<Character, String> map = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            char ch = pattern.charAt(i);
            String word = words[i];
            if (map.containsKey(ch)) {
                if (!map.get(ch).equals(word)) {
                    // Pattern character doesn\'t match the word
                    return false;
                }
            } else {
                if (map.containsValue(word)) {
                    // Word already mapped to another character
                    return false;
                }
                // Map pattern character to word
                map.put(ch, word);
            }
        }
        // All pattern characters match the words
        return true;
    }
}
