class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (words.length != pattern.length())
            return false;
        HashMap<Character, String> charMapping = new HashMap<>();
        HashMap<String, Character> wordMapping = new HashMap<>();
        for (int i = 0; i < words.length; i++) {
            charMapping.put(pattern.charAt(i), words[i]);
            wordMapping.put(words[i], pattern.charAt(i));
        }
        for (int i = 0; i < words.length; i++) {
            char ch = wordMapping.get(words[i]);
            String str = charMapping.get(pattern.charAt(i));
            if (ch != pattern.charAt(i) || !str.equals(words[i]))
                return false;
        }
        return true;
    }
}
