class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] arr = s.split(" ");
        if (pattern.length() != arr.length) {
            return false;
        }
        HashMap<Character, String> map = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            char c = pattern.charAt(i);
            if (!map.containsKey(c)) {
                map.put(c, arr[i]);
            }
            if (!map.get(c).equals(arr[i])) {
                return false;
            }
        }
        // Set<V> valueSet = new HashSet<>();
        // for (Map.Entry<K, V> entry : map.entrySet()) {
        //     if (!valueSet.add(entry.getValue())) {
        //         return false;
        //     }
        // }
        return map.size() == new HashSet<>(map.values()).size();
    }
}
