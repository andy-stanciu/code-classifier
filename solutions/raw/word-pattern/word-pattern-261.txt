class Solution {

    public boolean wordPattern(String pattern, String s) {
        Map<Character, String> char_map = new HashMap<Character, String>();
        Map<String, Character> word_map = new HashMap<String, Character>();
        //split the space and change the s into "dog""cat""dog""cat"
        String[] word = s.split(" ");
        if (pattern.length() != word.length) {
            //if it is not in pattern order means return false
            return false;
        }
        for (int i = 0; i < word.length; i++) {
            char ch = pattern.charAt(i);
            String str = word[i];
            if (!char_map.containsKey(ch)) {
                if (word_map.containsKey(str)) {
                    return false;
                } else {
                    char_map.put(ch, str);
                    word_map.put(str, ch);
                }
            } else {
                String maped = char_map.get(ch);
                if (!maped.equals(str)) {
                    return false;
                }
            }
        }
        return true;
    }
}
