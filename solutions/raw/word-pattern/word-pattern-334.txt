class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] arr2 = s.split(" ");
        char[] arr1 = pattern.toCharArray();
        if (arr2.length != arr1.length) {
            return false;
        }
        int[] res2 = new int[arr2.length];
        String[] dummy = new String[arr2.length];
        int k = 1;
        int[] res1 = new int[pattern.length()];
        char[] dummy2 = new char[pattern.length()];
        int h = 1;
        for (int i = 0; i < arr2.length; i++) {
            int flag = 1;
            for (int j = i - 1; j >= 0; j--) {
                if (arr2[i].equals(dummy[j])) {
                    res2[i] = res2[j];
                    flag = 0;
                    break;
                }
            }
            if (flag == 1) {
                res2[i] = k;
                k++;
            }
            dummy[i] = arr2[i];
        }
        for (int i = 0; i < arr1.length; i++) {
            int flag = 1;
            for (int j = i - 1; j >= 0; j--) {
                if (arr1[i] == dummy2[j]) {
                    res1[i] = res1[j];
                    flag = 0;
                    break;
                }
            }
            if (flag == 1) {
                res1[i] = h;
                h++;
            }
            dummy2[i] = arr1[i];
        }
        for (int i = 0; i < res1.length; i++) {
            if (res1[i] != res2[i]) {
                return false;
            }
        }
        return true;
    }
}
