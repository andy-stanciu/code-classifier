class Solution {

    public boolean wordPattern(String pattern, String s) {
        Map<Character, Set<String>> map = new HashMap<>();
        String[] words = s.split("\\\\s+");
        char[] a = pattern.toCharArray();
        Set<String> set1 = new HashSet<>();
        Set<Character> set2 = new HashSet<>();
        for (int i = 0; i < words.length; i++) {
            words[i] = words[i].replaceAll("[^\\\\w]", "");
            System.out.println(words[i]);
            set1.add(words[i]);
        }
        for (int k = 0; k < a.length; k++) {
            set2.add(a[k]);
        }
        if (set1.size() == set2.size() && words.length == a.length) {
            for (int i = 0; i < a.length; i++) {
                map.put(a[i], new HashSet<>());
            }
            for (int j = 0; j < words.length; j++) {
                System.out.println(j);
                map.get(a[j]).add(words[j]);
                if (map.get(a[j]).size() > 1) {
                    return false;
                }
            }
            System.out.println(map);
            return true;
        } else {
            return false;
        }
    }
}
