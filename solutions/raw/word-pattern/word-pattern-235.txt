class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] s1 = pattern.split("");
        String[] s2 = s.split(" ");
        // Length check
        if (s1.length != s2.length) {
            return false;
        }
        HashMap<String, String> map = new HashMap<>();
        for (int i = 0; i < s1.length; i++) {
            String charKey = s1[i];
            String wordValue = s2[i];
            // Case 1: charKey exists in the map
            if (map.containsKey(charKey)) {
                // Check if the stored value matches the current word
                if (!map.get(charKey).equals(wordValue)) {
                    return false;
                }
            } else {
                // Case 2: charKey does not exist in the map
                // Check if the current word is already mapped to another character
                if (map.containsValue(wordValue)) {
                    return false;
                }
                // Add new mapping
                map.put(charKey, wordValue);
            }
        }
        return true;
    }
}
