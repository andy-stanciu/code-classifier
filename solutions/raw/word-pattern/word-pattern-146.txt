class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] str1 = s.split(" ");
        if (pattern.length() != str1.length) {
            return false;
        }
        HashMap<Character, String> hm1 = new HashMap<>();
        HashMap<String, Character> hm2 = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            if (hm1.containsKey(pattern.charAt(i)) && !hm1.get(pattern.charAt(i)).equals(str1[i])) {
                return false;
            }
            if (hm2.containsKey(str1[i]) && !hm2.get(str1[i]).equals(pattern.charAt(i))) {
                return false;
            } else {
                hm1.put(pattern.charAt(i), str1[i]);
                hm2.put(str1[i], pattern.charAt(i));
            }
        }
        return true;
    }
}
