class Solution {

    public boolean wordPattern(String pattern, String s) {
        Map<String, String> result = new HashMap<>();
        List<String> patternWords = Arrays.stream(pattern.split("")).distinct().collect(Collectors.toList());
        List<String> valueWords = Arrays.stream(s.split(" ")).distinct().collect(Collectors.toList());
        if (patternWords.size() != valueWords.size()) {
            return false;
        }
        for (int i = 0; i < patternWords.size(); i++) {
            result.put(patternWords.get(i), valueWords.get(i));
        }
        String[] splitedWords = pattern.split("");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < splitedWords.length; i++) {
            sb.append(result.get(splitedWords[i]));
            sb.append(" ");
        }
        return sb.toString().trim().equals(s);
    }
}
