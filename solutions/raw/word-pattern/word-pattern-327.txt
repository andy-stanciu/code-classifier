class Solution {

    public boolean wordPattern(String pattern, String s) {
        boolean flag = false;
        Map<String, Character> values = new HashMap();
        String[] sValue = s.split(" ");
        if (sValue.length != pattern.length()) {
            return false;
        }
        for (int i = 0; i < sValue.length; i++) {
            if (values.containsKey(sValue[i]) && values.containsValue(pattern.charAt(i))) {
                if (values.get(sValue[i]) != pattern.charAt(i)) {
                    return false;
                }
            } else if (!values.containsKey(sValue[i]) && values.containsValue(pattern.charAt(i))) {
                return false;
            } else if (values.containsKey(sValue[i]) && !values.containsValue(pattern.charAt(i))) {
                return false;
            } else {
                values.put(sValue[i], pattern.charAt(i));
            }
        }
        return true;
    }
}
