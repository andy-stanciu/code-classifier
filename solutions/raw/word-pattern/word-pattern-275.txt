class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] wordArr = s.split(" ");
        HashMap<Character, String> map1 = new HashMap<>();
        HashMap<String, Character> map2 = new HashMap<>();
        if (pattern.length() != wordArr.length) {
            return false;
        }
        for (int i = 0; i < wordArr.length; i++) {
            char letter = pattern.charAt(i);
            String word = wordArr[i];
            if (!map1.containsKey(letter) && !map2.containsKey(word)) {
                map1.put(letter, word);
                map2.put(word, letter);
            } else if (map1.containsKey(letter) && !word.equals(map1.get(letter))) {
                return false;
            } else if (map2.containsKey(word) && letter != map2.get(word)) {
                return false;
            }
        }
        return true;
    }
}
