class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] arr = s.split(" ");
        if (pattern.length() != arr.length)
            return false;
        int n = pattern.length();
        HashMap<Character, String> map = new HashMap<>();
        HashMap<String, Boolean> mappedString = new HashMap<>();
        for (int i = 0; i < n; i++) {
            char ch = pattern.charAt(i);
            String val = arr[i];
            if (map.containsKey(ch)) {
                if (!map.get(ch).equals(val)) {
                    return false;
                }
            } else {
                if (mappedString.getOrDefault(val, false)) {
                    return false;
                }
                mappedString.put(val, true);
                map.put(ch, val);
            }
        }
        return true;
    }
}
