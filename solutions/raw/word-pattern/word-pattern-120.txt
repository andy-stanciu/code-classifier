class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (pattern.length() != words.length) {
            return false;
        }
        char[] letters = pattern.toCharArray();
        Map<Character, String> lettersToWord = new HashMap<>(letters.length);
        Map<String, Character> wordToLetters = new HashMap<>(words.length);
        for (int i = 0; i < letters.length; i++) {
            if (lettersToWord.get(letters[i]) != null && !lettersToWord.get(letters[i]).equals(words[i])) {
                return false;
            } else if (wordToLetters.get(words[i]) != null && !wordToLetters.get(words[i]).equals(letters[i])) {
                return false;
            } else {
                lettersToWord.put(letters[i], words[i]);
                wordToLetters.put(words[i], letters[i]);
            }
        }
        return true;
    }
}
