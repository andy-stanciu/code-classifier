class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] str = s.split(" ");
        if (pattern.length() != str.length) {
            return false;
        }
        Map<Character, String> map = new HashMap<>();
        for (int i = 0; i < str.length; i++) {
            if (!map.containsKey(pattern.charAt(i)) && !map.containsValue(str[i])) {
                map.put(pattern.charAt(i), str[i]);
            } else if (map.containsKey(pattern.charAt(i))) {
                if (map.get(pattern.charAt(i)).equals(str[i]) == false) {
                    return false;
                }
            } else {
                return false;
            }
        }
        return true;
    }
}
