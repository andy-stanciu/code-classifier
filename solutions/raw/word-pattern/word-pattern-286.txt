class Solution {

    public boolean wordPattern(String pattern, String s) {
        HashMap<Character, String> map = new HashMap<>();
        String[] arr = s.split(" ");
        if (arr.length != pattern.length()) {
            // if lengths are unequal then its ovbious false;
            return false;
        }
        for (int i = 0; i < pattern.length(); i++) {
            // iterate
            // selecting character to iterate on array
            char c = pattern.charAt(i);
            if (map.containsKey(c)) {
                // first time false then probably true ....acc
                if (!map.get(c).equals(arr[i])) {
                    // agr hai toh lets match its corresponding value with the current value pointing by index on created array ////// if didnt match it then return false
                    return false;
                }
            } else {
                // if map not contains key c then else
                if (map.containsValue(arr[i])) {
                    // to check whether value is already there or not if there is present that means it pointing to some other key so false again ....
                    return false;
                }
                // if not contain the put into it then try for next iteration
                map.put(c, arr[i]);
            }
        }
        return true;
    }
}
