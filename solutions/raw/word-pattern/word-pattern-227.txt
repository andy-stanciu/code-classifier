class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] charset = s.split("\\\\ ");
        Map<Character, String> hx = new HashMap<>();
        int count = 0;
        if (pattern.length() != charset.length) {
            return false;
        }
        for (String x : charset) {
            if (count == pattern.length()) {
                break;
            }
            if (hx.containsKey(pattern.charAt(count)) && !hx.get(pattern.charAt(count)).equals(x)) {
                System.out.println(hx.get(pattern.charAt(count)) + " " + pattern.charAt(count) + " " + x);
                return false;
            } else {
                hx.put(pattern.charAt(count), x);
                count++;
            }
        }
        List<String> lx = new ArrayList<>(hx.values());
        System.out.println(lx);
        for (int i = 0; i < lx.size(); i++) {
            for (int j = i + 1; j < lx.size(); j++) {
                if (lx.get(i).equals(lx.get(j))) {
                    return false;
                }
            }
        }
        return true;
    }
}
