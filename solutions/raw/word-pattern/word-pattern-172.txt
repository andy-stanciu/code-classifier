class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        Map<Character, String> map1 = new HashMap<>();
        Map<String, Character> map2 = new HashMap<>();
        if (pattern.length() != words.length) {
            return false;
        }
        int i = 0;
        while (i < pattern.length()) {
            if (map1.containsKey(pattern.charAt(i)) && map2.containsKey(words[i])) {
                String val = map1.get(pattern.charAt(i));
                char ch = map2.get(words[i]);
                if (!val.equals(words[i]) || ch != pattern.charAt(i)) {
                    return false;
                } else {
                    i++;
                    continue;
                }
            } else if (!map1.containsKey(pattern.charAt(i)) && !map2.containsKey(words[i])) {
                map1.put(pattern.charAt(i), words[i]);
                map2.put(words[i], pattern.charAt(i));
                i++;
            } else {
                return false;
            }
        }
        return true;
    }
}
