class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (pattern.length() != words.length) {
            return false;
        }
        System.out.println(5);
        HashMap<String, Character> wToP = new HashMap<>();
        HashMap<Character, String> pToW = new HashMap<>();
        for (int i = 0; i < words.length; i++) {
            if (wToP.containsKey(words[i])) {
                if (wToP.get(words[i]) != pattern.charAt(i)) {
                    return false;
                }
            } else {
                wToP.put(words[i], pattern.charAt(i));
            }
            if (pToW.containsKey(pattern.charAt(i))) {
                if (!pToW.get(pattern.charAt(i)).equals(words[i])) {
                    return false;
                }
            } else {
                pToW.put(pattern.charAt(i), words[i]);
            }
        }
        return true;
    }
}
