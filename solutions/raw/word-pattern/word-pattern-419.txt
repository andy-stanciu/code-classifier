class Solution {

    public boolean wordPattern(String pattern, String s) {
        if ((null == pattern && null == s) || (pattern.isEmpty() && s.isEmpty()))
            return true;
        String[] strs = s.split("\\\\ ");
        if (strs.length != pattern.length())
            return false;
        Map<String, Character> strMap = new HashMap<>();
        Map<Character, String> charMap = new HashMap<>();
        for (int idx = 0; idx < pattern.length(); idx++) {
            String curStr = strs[idx];
            char curChar = pattern.charAt(idx);
            Character val = strMap.get(curStr);
            String strVal = charMap.get(curChar);
            if (val == null) {
                strMap.put(curStr, curChar);
            } else {
                if (val != curChar)
                    return false;
            }
            if (strVal == null) {
                charMap.put(curChar, curStr);
            } else {
                if (!strVal.equals(curStr))
                    return false;
            }
        }
        return true;
    }
}
