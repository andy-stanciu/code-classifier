class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] arr = s.split(" ");
        HashMap<String, Character> map = new HashMap<>();
        HashMap<Character, String> map2 = new HashMap<>();
        if (arr.length != pattern.length()) {
            return false;
        }
        for (int i = 0; i < arr.length; i++) {
            if (map2.containsKey(pattern.charAt(i))) {
                String a = map2.get(pattern.charAt(i));
                if (!arr[i].equals(a)) {
                    return false;
                }
            } else {
                map2.put(pattern.charAt(i), arr[i]);
            }
        }
        for (int i = 0; i < arr.length; i++) {
            if (map.containsKey(arr[i])) {
                char c = map.get(arr[i]);
                if (pattern.charAt(i) != c) {
                    return false;
                }
            } else {
                map.put(arr[i], pattern.charAt(i));
            }
        }
        return true;
    }
}
