class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.trim().split("\\\\s+");
        if (words.length != pattern.length())
            return false;
        Map<Character, String> map = new HashMap<>();
        Map<String, Character> reserved = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            String word = words[i];
            char c = pattern.charAt(i);
            if (map.containsKey(c)) {
                if (!map.get(c).equals(word)) {
                    return false;
                }
            } else if (reserved.containsKey(word)) {
                if (reserved.get(word) != c) {
                    return false;
                }
            } else {
                map.put(c, word);
                reserved.put(word, c);
            }
        }
        return true;
    }
}
