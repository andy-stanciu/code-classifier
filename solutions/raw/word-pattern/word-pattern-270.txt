class Solution {

    public boolean wordPattern(String pattern, String s) {
        HashMap<Character, String> pToSMap = new HashMap<Character, String>();
        HashMap<String, Character> sToPMap = new HashMap<String, Character>();
        String[] words = s.split(" ");
        if (pattern.length() != words.length) {
            return false;
        }
        for (int i = 0; i < pattern.length(); i++) {
            Character pChar = pattern.charAt(i);
            String word = words[i];
            pToSMap.put(pChar, word);
            sToPMap.put(word, pChar);
        }
        for (int i = 0; i < pattern.length(); i++) {
            Character p = pattern.charAt(i);
            String word = words[i];
            String mappedWord = pToSMap.get(p);
            Character mappedChar = sToPMap.get(word);
            if (!word.equals(mappedWord) || !p.equals(mappedChar)) {
                return false;
            }
        }
        return true;
    }
}
