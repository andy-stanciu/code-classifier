class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (pattern.length() != words.length)
            return false;
        HashMap<Character, String> charToWord = new HashMap<>();
        HashSet<String> usedWords = new HashSet<>();
        for (int i = 0; i < pattern.length(); i++) {
            char pChar = pattern.charAt(i);
            String word = words[i];
            if (charToWord.containsKey(pChar)) {
                if (!charToWord.get(pChar).equals(word))
                    return false;
            } else {
                if (usedWords.contains(word))
                    return false;
                charToWord.put(pChar, word);
                usedWords.add(word);
            }
        }
        return true;
    }
}
