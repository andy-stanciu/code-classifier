class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (pattern.length() != words.length) {
            return false;
        }
        Map<Character, String> pTowMap = new HashMap<>();
        Map<String, Character> wTopMap = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            char c = pattern.charAt(i);
            String w = words[i];
            if (pTowMap.containsKey(c)) {
                if (!pTowMap.get(c).equals(w))
                    return false;
            } else {
                pTowMap.put(c, w);
            }
        }
        for (int i = 0; i < words.length; i++) {
            char c = pattern.charAt(i);
            String w = words[i];
            if (wTopMap.containsKey(w)) {
                if (wTopMap.get(w) != c)
                    return false;
            } else {
                wTopMap.put(w, c);
            }
        }
        return true;
    }
}
