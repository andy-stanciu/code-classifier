class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (words.length != pattern.length()) {
            return false;
        }
        HashMap<String, String> stores = new HashMap<>();
        HashSet<String> visit = new HashSet<>();
        for (int i = 0; i < pattern.length(); i++) {
            if (stores.containsKey(String.valueOf(pattern.charAt(i))) && !stores.get(String.valueOf(pattern.charAt(i))).equals(words[i])) {
                return false;
            } else if (stores.containsKey(String.valueOf(pattern.charAt(i))) == false && visit.contains(words[i])) {
                return false;
            } else {
                stores.put(String.valueOf(pattern.charAt(i)), words[i]);
                visit.add(words[i]);
            }
        }
        return true;
    }
}
