class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (words.length != pattern.length()) {
            // If length of pattern and number of words aren\'t same then it\'s false
            return false;
        }
        HashMap<Character, String> patternMatches = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            char currKey = pattern.charAt(i);
            if (patternMatches.containsKey(currKey)) {
                // Check whether Key is already present.
                if (!patternMatches.get(currKey).equals(words[i])) {
                    return false;
                }
            } else if (patternMatches.containsValue(words[i])) {
                // Key is already not in map then check the if value is mapped to another key
                return false;
            } else {
                patternMatches.put(currKey, words[i]);
            }
        }
        return true;
    }
}
