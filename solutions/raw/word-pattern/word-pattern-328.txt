class Solution {

    public boolean wordPattern(String pattern, String s) {
        //lets do a check if the words == to patten length
        //hashmap key would be the char of the pattern
        //value would be word from the string
        //if char already exist want to make sure that key value in hashmap
        //equals to current
        HashMap<Character, String> hm = new HashMap<>();
        HashMap<String, Character> hm1 = new HashMap<>();
        String[] arr = s.split(" ");
        if (arr.length != pattern.length())
            return false;
        for (int i = 0; i < arr.length; i++) {
            //case where both does not exist
            if (!hm.containsKey(pattern.charAt(i)) && !hm1.containsKey(arr[i])) {
                hm.put(pattern.charAt(i), arr[i]);
                hm1.put(arr[i], pattern.charAt(i));
            } else {
                //possible one is not empty
                //check if it match up and it exist in the hashmap
                String word = hm.get(pattern.charAt(i));
                char c = pattern.charAt(i);
                String current = arr[i];
                //check the case both exist
                if (hm.containsKey(c)) {
                    String grab = hm.get(c);
                    if (!grab.equals(current))
                        return false;
                }
                if (hm1.containsKey(current)) {
                    char grab = hm1.get(current);
                    if (grab != c)
                        return false;
                }
            }
        }
        return true;
    }
}
