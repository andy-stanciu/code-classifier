class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] sar = s.split(" ", -1);
        Map<Character, String> map = new HashMap<>();
        Map<String, Character> map2 = new HashMap<>();
        if (sar.length != pattern.length())
            return false;
        for (int i = 0; i < pattern.length(); i++) {
            if (map.get(pattern.charAt(i)) == null && map2.get(sar[i]) == null) {
                map.put(pattern.charAt(i), sar[i]);
                map2.put(sar[i], pattern.charAt(i));
            } else {
                if (map.get(pattern.charAt(i)) == null || map2.get(sar[i]) == null || !map.get(pattern.charAt(i)).equals(sar[i]) || map2.get(sar[i]) != pattern.charAt(i)) {
                    return false;
                }
            }
        }
        return true;
    }
}
