class Solution {

    public boolean wordPattern(String pattern, String s) {
        HashMap<Character, String> bijection = new HashMap<>();
        HashMap<String, Character> reverseBijection = new HashMap<>();
        String[] words = s.split(" ");
        if (pattern.length() != words.length) {
            return false;
        }
        for (int i = 0; i < pattern.length(); i++) {
            char c = pattern.charAt(i);
            String word = words[i];
            if (!bijection.containsKey(c)) {
                bijection.put(c, word);
            } else if (!bijection.get(c).equals(word)) {
                return false;
            }
            if (!reverseBijection.containsKey(word)) {
                reverseBijection.put(word, c);
            } else if (!reverseBijection.get(word).equals(c)) {
                return false;
            }
        }
        return true;
    }
}
