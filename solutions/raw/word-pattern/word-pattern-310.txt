class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (words.length != pattern.length())
            return false;
        Map<Character, Integer> map = new HashMap<>();
        Map<String, Integer> mapS = new HashMap<>();
        Map<Integer, Integer> mapPattern = new HashMap<>();
        Map<Integer, Integer> mapPatternS = new HashMap<>();
        for (int i = 0; i < pattern.length(); i++) {
            char c = pattern.charAt(i);
            String word = words[i];
            if (!map.containsKey(c))
                map.put(c, i);
            if (!mapS.containsKey(word))
                mapS.put(word, i);
            mapPattern.put(i, map.get(c));
            mapPatternS.put(i, mapS.get(word));
        }
        for (int i = 0; i < words.length; i++) {
            if (mapPattern.get(i) - mapPatternS.get(i) != 0)
                return false;
        }
        return true;
    }
}
