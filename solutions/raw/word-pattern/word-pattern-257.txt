class Solution {

    public boolean wordPattern(String pattern, String s) {
        HashMap<Character, String> mp = new HashMap<>();
        String[] st = s.split(" ");
        String[] at = pattern.split(" ");
        if (st.length < pattern.length()) {
            return false;
        }
        StringBuilder sb = new StringBuilder();
        StringBuilder ans = new StringBuilder();
        for (int i = 0; i < pattern.length(); i++) {
            if (!mp.containsKey(pattern.charAt(i)) && !mp.containsValue(st[i])) {
                mp.put(pattern.charAt(i), st[i]);
            }
        }
        for (int i = 0; i < pattern.length(); i++) {
            if (mp.containsKey(pattern.charAt(i))) {
                ans.append(mp.get(pattern.charAt(i)));
            }
        }
        for (int i = 0; i < st.length; i++) {
            sb.append(st[i]);
        }
        int check = sb.compareTo(ans);
        return check == 0;
    }
}
