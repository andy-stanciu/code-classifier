class Solution {

    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if (words.length != pattern.length()) {
            return false;
        }
        HashMap<String, Character> wordsToChar = new HashMap<String, Character>();
        HashMap<Character, String> charToWords = new HashMap<Character, String>();
        for (int i = 0; i < pattern.length(); i++) {
            String word = words[i];
            char c = pattern.charAt(i);
            if (!wordsToChar.containsKey(word))
                wordsToChar.put(word, c);
            if (!charToWords.containsKey(c)) {
                if (charToWords.containsValue(word))
                    return false;
                charToWords.put(c, word);
            } else if (!charToWords.get(c).equals(word) || !wordsToChar.get(word).equals(c)) {
                return false;
            }
        }
        return true;
    }
}
