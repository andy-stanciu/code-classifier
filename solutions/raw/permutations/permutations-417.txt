class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        getPermute(ans, nums, 0);
        return ans;
    }

    public void getPermute(List<List<Integer>> ans, int[] nums, int index) {
        if (index == nums.length) {
            ans.add(arrayToList(nums));
            return;
        }
        for (int i = index; i < nums.length; i++) {
            swap(nums, i, index);
            getPermute(ans, nums, index + 1);
            swap(nums, i, index);
        }
    }

    public void swap(int[] nums, int i, int j) {
        nums[i] = nums[i] + nums[j] - (nums[j] = nums[i]);
    }

    public List<Integer> arrayToList(int[] nums) {
        List<Integer> l = new ArrayList<>();
        for (int n : nums) l.add(n);
        return l;
    }
}
