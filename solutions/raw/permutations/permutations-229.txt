class Solution {

    static void backtrack(List<List<Integer>> result, ArrayList<Integer> templist, int[] arr) {
        if (templist.size() == arr.length) {
            result.add(new ArrayList<>(templist));
            return;
        }
        for (int num : arr) {
            if (templist.contains(num)) {
                continue;
            }
            templist.add(num);
            backtrack(result, templist, arr);
            templist.remove(templist.size() - 1);
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<>(), nums);
        return result;
    }
}
