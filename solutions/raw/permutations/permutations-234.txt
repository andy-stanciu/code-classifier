class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        permutations(0, nums, ans);
        return ans;
    }

    private void permutations(int i, int[] nums, List<List<Integer>> ans) {
        if (i == nums.length) {
            List<Integer> ds = new ArrayList<>();
            for (int j = 0; j < nums.length; j++) {
                ds.add(nums[j]);
            }
            ans.add(new ArrayList<>(ds));
            return;
        }
        for (int j = i; j < nums.length; j++) {
            swap(j, i, nums);
            permutations(i + 1, nums, ans);
            swap(j, i, nums);
        }
    }

    private void swap(int j, int i, int[] nums) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
