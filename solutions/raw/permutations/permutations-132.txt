class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        permutations(0, nums, ans);
        return ans;
    }

    private void permutations(int index, int[] nums, List<List<Integer>> ans) {
        if (index == nums.length) {
            // Copying nums[] elements to a List
            List<Integer> ds = new ArrayList<>();
            for (int ele : nums) {
                ds.add(ele);
            }
            // adding that list to List<List>
            ans.add(new ArrayList<>(ds));
            return;
        }
        for (int i = index; i < nums.length; i++) {
            swap(i, index, nums);
            permutations(index + 1, nums, ans);
            swap(i, index, nums);
        }
    }

    private void swap(int a, int b, int[] nums) {
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }
}
