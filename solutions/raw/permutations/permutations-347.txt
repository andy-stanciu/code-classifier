class Solution {

    int[] nums;

    List<List<Integer>> answer;

    int[] map;

    public List<List<Integer>> permute(int[] nums) {
        this.nums = nums;
        this.answer = new ArrayList<>();
        this.map = new int[21];
        List<Integer> empty = new ArrayList<>();
        formPerms(empty, nums.length);
        return answer;
    }

    private void formPerms(List<Integer> curList, int slotsLeft) {
        if (slotsLeft == 0)
            answer.add(curList);
        for (int i = 0; i < nums.length; i++) {
            if (map[nums[i] + 10] == 1)
                continue;
            map[nums[i] + 10]++;
            List<Integer> nextList = new ArrayList<>(curList);
            nextList.add(nums[i]);
            formPerms(nextList, slotsLeft - 1);
            map[nums[i] + 10]--;
        }
    }
}
