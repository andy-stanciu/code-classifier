class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList();
        LinkedList<Integer> list = new LinkedList();
        traverse(nums, list, new boolean[nums.length], ans);
        return ans;
    }

    public void traverse(int[] arr, LinkedList<Integer> list, boolean[] vis, List<List<Integer>> ans) {
        if (list.size() == arr.length) {
            ans.add(new ArrayList(list));
            return;
        }
        for (int i = 0; i < arr.length; i++) {
            if (vis[i])
                continue;
            vis[i] = true;
            list.add(arr[i]);
            traverse(arr, list, vis, ans);
            list.removeLast();
            vis[i] = false;
        }
    }
}
