class Solution {

    public void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public void fun(List<List<Integer>> list, int[] arr, int ind) {
        if (ind == arr.length) {
            List<Integer> arrList = new ArrayList<>();
            for (int num : arr) {
                arrList.add(num);
            }
            list.add(new ArrayList<>(arrList));
            return;
        }
        for (int i = ind; i < arr.length; i++) {
            swap(arr, i, ind);
            fun(list, arr, ind + 1);
            swap(arr, i, ind);
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        fun(list, nums, 0);
        return list;
    }
}
