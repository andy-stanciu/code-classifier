class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        int n = nums.length;
        backTrack(nums, new ArrayList<>(), list, n, 0);
        return list;
    }

    public static void backTrack(int[] nums, List<Integer> temp, List<List<Integer>> list, int n, int index) {
        if (temp.size() == n) {
            list.add(new ArrayList<>(temp));
            return;
        }
        for (int i = 0; i < n; i++) {
            if (!temp.contains(nums[i])) {
                temp.add(nums[i]);
                backTrack(nums, temp, list, n, index + 1);
                temp.remove(temp.size() - 1);
            }
        }
    }
}
