class Solution {

    public void solve(int[] a, int[] c, List<List<Integer>> res, List<Integer> list, int idx, int n) {
        if (list.size() == n) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int i = 0; i < n; i++) {
            if (c[i] == -1) {
                list.add(a[i]);
                c[i] = 10;
                solve(a, c, res, list, i + 1, n);
                list.remove(list.size() - 1);
                c[i] = -1;
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        int n = nums.length;
        int[] c = new int[n];
        Arrays.fill(c, -1);
        solve(nums, c, res, list, 0, n);
        return res;
    }
}
