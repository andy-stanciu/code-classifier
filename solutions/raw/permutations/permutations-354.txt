class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> perm = new ArrayList<>();
        solve(nums, 0, perm);
        return perm;
    }

    public void solve(int[] nums, int start, List<List<Integer>> res) {
        if (start == nums.length - 1) {
            res.add(toList(nums));
            return;
        }
        for (int i = start; i < nums.length; i++) {
            swap(nums, start, i);
            solve(nums, start + 1, res);
            swap(nums, start, i);
        }
        return;
    }

    public void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public List<Integer> toList(int[] arr) {
        List<Integer> list = new ArrayList<>();
        for (int i : arr) {
            list.add(i);
        }
        return list;
    }
}
