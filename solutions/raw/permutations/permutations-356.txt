class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> lst = new ArrayList();
        backtrack(lst, new ArrayList(), nums, 0);
        return lst;
    }

    public void backtrack(List<List<Integer>> lst, List<Integer> templst, int[] nums, int start) {
        if (templst.size() == nums.length) {
            lst.add(new ArrayList(templst));
        }
        for (int i = 0; i < nums.length; i++) {
            if (templst.contains(nums[i]))
                continue;
            templst.add(nums[i]);
            backtrack(lst, templst, nums, i + 1);
            templst.remove(templst.size() - 1);
        }
    }
}
