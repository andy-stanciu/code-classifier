class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        permus(res, nums, 0);
        return res;
    }

    private static void permus(List<List<Integer>> res, int[] nums, int i) {
        if (i == nums.length) {
            res.add(Arrays.stream(nums).boxed().collect(Collectors.toList()));
            return;
        }
        for (int id = i; id < nums.length; id++) {
            swap1(nums, i, id);
            permus(res, nums, i + 1);
            swap1(nums, i, id);
        }
    }

    private static void swap1(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
