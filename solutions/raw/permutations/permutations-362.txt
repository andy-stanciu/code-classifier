class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        permute(ans, nums, 0);
        return ans;
    }

    private void permute(List<List<Integer>> ans, int[] nums, int index) {
        if (index == nums.length) {
            List<Integer> ds = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                ds.add(nums[i]);
            }
            ans.add(ds);
            return;
        }
        for (int i = index; i < nums.length; i++) {
            swap(i, index, nums);
            permute(ans, nums, index + 1);
            swap(i, index, nums);
        }
    }

    private void swap(int index, int swapIndex, int[] nums) {
        int t = nums[index];
        nums[index] = nums[swapIndex];
        nums[swapIndex] = t;
    }
}
