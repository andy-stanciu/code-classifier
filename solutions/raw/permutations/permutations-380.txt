class Solution {

    void swap(int i, int j, int[] nums) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    void solve(List<List<Integer>> list, ArrayList<Integer> cur, int[] nums, int index) {
        if (index == nums.length) {
            list.add(new ArrayList<>(cur));
            return;
        }
        for (int i = index; i < nums.length; i++) {
            cur.add(nums[i]);
            swap(i, index, nums);
            solve(list, cur, nums, index + 1);
            swap(i, index, nums);
            cur.remove(cur.size() - 1);
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        ArrayList<List<Integer>> list = new ArrayList<>();
        solve(list, new ArrayList<>(), nums, 0);
        return list;
    }
}
