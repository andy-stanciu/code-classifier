class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> permute = new ArrayList<>();
        getPermutations(nums, ans, 0, permute);
        return ans;
    }

    void getPermutations(int[] nums, List<List<Integer>> ans, int index, List<Integer> permute) {
        if (index == nums.length) {
            ans.add(new ArrayList<>(permute));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (permute.contains(nums[i]))
                continue;
            permute.add(nums[i]);
            getPermutations(nums, ans, index + 1, permute);
            permute.remove(permute.size() - 1);
        }
    }
}
