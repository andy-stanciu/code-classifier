class Solution {

    public List<List<Integer>> permute(int[] nums) {
        ArrayList<List<Integer>> list1 = new ArrayList<>();
        check(nums, nums.length, list1);
        return list1;
    }

    static void check(int[] a, int b, ArrayList<List<Integer>> list) {
        if (b == 1) {
            List<Integer> d = new ArrayList<Integer>();
            for (int i = 0; i < a.length; i++) {
                d.add(a[i]);
            }
            list.add(d);
        } else {
            check(a, b - 1, list);
            for (int i = 0; i < b - 1; i++) {
                if (b % 2 == 0) {
                    int temp = a[i];
                    a[i] = a[b - 1];
                    a[b - 1] = temp;
                } else {
                    int tem = a[0];
                    a[0] = a[b - 1];
                    a[b - 1] = tem;
                }
                check(a, b - 1, list);
            }
        }
    }
}
