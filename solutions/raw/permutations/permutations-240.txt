class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        backtrack(new ArrayList<>(), nums, res);
        return res;
    }

    private void backtrack(List<Integer> curr, int[] nums, List<List<Integer>> res) {
        if (curr.size() == nums.length) {
            res.add(new ArrayList<>(curr));
            return;
        }
        for (int n : nums) {
            if (!curr.contains(n)) {
                curr.add(n);
                backtrack(curr, nums, res);
                curr.remove(curr.size() - 1);
            }
        }
    }
}
