class Solution {

    public void permutations(int index, int[] nums, List<List<Integer>> res) {
        if (index >= nums.length) {
            List<Integer> ds = new ArrayList();
            for (int i : nums) ds.add(i);
            res.add(new ArrayList(ds));
            return;
        }
        for (int i = index; i < nums.length; i++) {
            swap(i, index, nums);
            permutations(index + 1, nums, res);
            swap(i, index, nums);
        }
    }

    public void swap(int a, int b, int[] nums) {
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList();
        permutations(0, nums, res);
        return res;
    }
}
