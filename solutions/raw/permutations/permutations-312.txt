class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList();
        boolean[] arr = new boolean[nums.length];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = false;
        }
        ans(nums, ans, new ArrayList(), arr, 0);
        return ans;
    }

    public void ans(int[] nums, List<List<Integer>> list, List<Integer> templist, boolean[] arr, int count) {
        if (count == nums.length) {
            list.add(new ArrayList(templist));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!arr[i]) {
                templist.add(nums[i]);
                arr[i] = true;
                ans(nums, list, templist, arr, count + 1);
                arr[i] = false;
                templist.remove(templist.size() - 1);
            }
        }
    }
}
