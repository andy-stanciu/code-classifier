class Solution {

    public void combinations(int[] nums, List<List<Integer>> res, List<Integer> temp, boolean[] freq) {
        if (temp.size() == nums.length) {
            res.add(new ArrayList<>(temp));
        }
        for (int i = 0; i < nums.length; i++) {
            if (freq[i] == false) {
                freq[i] = true;
                temp.add(nums[i]);
                combinations(nums, res, temp, freq);
                temp.remove(temp.size() - 1);
                freq[i] = false;
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        boolean[] freq = new boolean[nums.length];
        combinations(nums, res, temp, freq);
        return res;
    }
}
