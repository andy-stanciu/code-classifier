class Solution {

    public List<List<Integer>> permute(int[] nums) {
        LinkedList<List<Integer>> res = new LinkedList<>();
        if (nums.length == 0) {
            res.add(new LinkedList<Integer>());
            return res;
        }
        for (int i = 0; i < nums.length; i++) {
            while (res.isEmpty() || res.peek().size() == i) {
                List<Integer> perm;
                if (res.isEmpty()) {
                    perm = new LinkedList<>();
                } else {
                    perm = res.remove();
                }
                for (int n : nums) {
                    if (!perm.contains(n)) {
                        List<Integer> k = new LinkedList<>(perm);
                        k.add(n);
                        res.add(k);
                    }
                }
            }
        }
        return res;
    }
}
