class Solution {

    private int[] swap(int[] nums, int i, int l) {
        int temp = nums[i];
        nums[i] = nums[l];
        nums[l] = temp;
        return nums;
    }

    private void permutation(int[] nums, int l, int r, List<List<Integer>> list) {
        if (l == r) {
            ArrayList<Integer> n = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                n.add(nums[i]);
            }
            list.add(n);
            return;
        }
        for (int i = l; i < r; i++) {
            nums = swap(nums, i, l);
            permutation(nums, l + 1, r, list);
            nums = swap(nums, i, l);
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        ArrayList<List<Integer>> list = new ArrayList<>();
        permutation(nums, 0, nums.length, list);
        return list;
    }
}
