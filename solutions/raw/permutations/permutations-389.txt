//Approach - 2 (momorization)
public class Solution {

    public int combinationSum4(int[] nums, int target) {
        int[] dp = new int[target + 1];
        Arrays.fill(dp, -1);
        dp[0] = 1;
        helper(nums, target, dp);
        return dp[target];
    }

    int helper(int[] nums, int target, int[] dp) {
        if (dp[target] != -1)
            return dp[target];
        int res = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] <= target) {
                res = res + helper(nums, target - nums[i], dp);
            }
        }
        return dp[target] = res;
    }
}
//Time   O(N*target)
//Space  O(target)
// we can eliminate the extra space ir.convert to tabulation approach
