class Solution {

    List<List<Integer>> res = new ArrayList<>();

    int length;

    public void backtrack(int[] nums, int pos, List<Integer> arr) {
        if (pos >= length) {
            res.add(new ArrayList<>(arr));
            return;
        }
        for (int i = 0; i < length; i++) {
            if (arr.get(i) == -11) {
                arr.set(i, nums[pos]);
                backtrack(nums, pos + 1, arr);
                arr.set(i, -11);
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        length = nums.length;
        List<Integer> arr = new ArrayList<>();
        for (int i = 0; i < length; i++) {
            arr.add(-11);
        }
        backtrack(nums, 0, arr);
        return res;
    }
}
