class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        permutation(nums, result, 0);
        return result;
    }

    public void permutation(int[] nums, List<List<Integer>> result, int index) {
        int n = nums.length;
        if (index == n - 1) {
            result.add(toList(nums));
            return;
        }
        for (int i = index; i < n; i++) {
            swapElements(nums, index, i);
            permutation(nums, result, index + 1);
            swapElements(nums, index, i);
        }
    }

    public void swapElements(int[] nums, int index, int i) {
        int temp = nums[index];
        nums[index] = nums[i];
        nums[i] = temp;
    }

    public List<Integer> toList(int[] nums) {
        List<Integer> tempList = new ArrayList<>();
        for (int ele : nums) {
            tempList.add(ele);
        }
        return tempList;
    }
}
