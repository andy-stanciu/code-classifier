class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ret = new ArrayList<>();
        backtrack(nums, ret, new ArrayList<>());
        return ret;
    }

    private void backtrack(int[] nums, List<List<Integer>> ret, ArrayList<Integer> temp) {
        if (temp.size() == nums.length)
            ret.add(new ArrayList<>(temp));
        for (int i = 0; i < nums.length; i++) {
            if (temp.contains(nums[i]))
                continue;
            temp.add(nums[i]);
            backtrack(nums, ret, temp);
            temp.remove(temp.size() - 1);
        }
    }
}
