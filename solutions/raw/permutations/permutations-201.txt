class Solution {

    void swap(int i, int j, int[] arr) {
        arr[i] ^= arr[j] ^ (arr[j] = arr[i]);
    }

    void creatingPermutation(int i, int[] arr, List<List<Integer>> listOfPermutations) {
        if (i == arr.length) {
            List<Integer> al = new ArrayList<>();
            for (int val : arr) al.add(val);
            listOfPermutations.add(al);
            return;
        }
        for (int j = i; j < arr.length; j++) {
            swap(i, j, arr);
            creatingPermutation(i + 1, arr, listOfPermutations);
            swap(i, j, arr);
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> listOfPermutations = new ArrayList<>();
        creatingPermutation(0, nums, listOfPermutations);
        return listOfPermutations;
    }
}
