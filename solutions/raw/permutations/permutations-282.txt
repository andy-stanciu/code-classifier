class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> proc = new ArrayList<>();
        boolean[] trav = new boolean[nums.length];
        solve(ans, proc, nums, trav);
        return ans;
    }

    public void solve(List<List<Integer>> ans, List<Integer> proc, int[] unp, boolean[] trav) {
        if (proc.size() == unp.length) {
            ans.add(new ArrayList<>(proc));
            return;
        }
        for (int i = 0; i < unp.length; i++) {
            if (!trav[i]) {
                proc.add(unp[i]);
                trav[i] = true;
                solve(ans, proc, unp, trav);
                proc.remove(proc.size() - 1);
                trav[i] = false;
            }
        }
    }
}
