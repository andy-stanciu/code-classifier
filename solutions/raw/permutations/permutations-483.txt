class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        generatePermutations(nums, result, new ArrayList<>(), new boolean[nums.length]);
        return result;
    }

    private void generatePermutations(int[] nums, List<List<Integer>> result, List<Integer> currentList, boolean[] used) {
        if (currentList.size() == nums.length) {
            result.add(new ArrayList<>(currentList));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!used[i]) {
                currentList.add(nums[i]);
                used[i] = true;
                generatePermutations(nums, result, currentList, used);
                currentList.remove(currentList.size() - 1);
                used[i] = false;
            }
        }
    }
}
