class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        backTrack(list, new ArrayList<>(), nums);
        return list;
    }

    public void backTrack(List<List<Integer>> result, List<Integer> current, int[] nums) {
        for (int i = 0; i < nums.length; i++) {
            if (current.size() == nums.length) {
                result.add(new ArrayList<>(current));
                return;
            } else {
                if (current.contains(nums[i]))
                    continue;
                current.add(nums[i]);
                backTrack(result, current, nums);
                current.remove(current.size() - 1);
            }
        }
    }
}
