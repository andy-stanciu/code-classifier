class Solution {

    public int majorityElement(int[] nums) {
        // Create a HashMap to store element frequencies
        HashMap<Integer, Integer> map = new HashMap<>();
        // Traverse the array and populate the HashMap
        for (int i = 0; i < nums.length; i++) {
            map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);
        }
        // Iterate through the HashMap to find the majority element
        for (Integer key : map.keySet()) {
            if (map.get(key) > nums.length / 2) {
                // Return the majority element
                return key;
            }
        }
        // The problem guarantees a majority element exists, so we don\'t need a return here,
        // but in a general case, we could return -1 or throw an exception if no majority exists.
        return -1;
    }
}
