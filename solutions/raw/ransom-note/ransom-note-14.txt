class Solution {

    public boolean canConstruct(String ransomNote, String magazine) {
        // declare HashMap to store calculations
        Map<Character, Integer> hash = new HashMap();
        // iterate over magazine:
        for (int i = 0; i < magazine.length(); i++) {
            // get magazine word
            char word = magazine.charAt(i);
            // count word
            hash.put(word, hash.getOrDefault(word, 0) + 1);
        }
        // iterate over ransomNote:
        for (int i = 0; i < ransomNote.length(); i++) {
            // get ransomNote word
            char word = ransomNote.charAt(i);
            // count word
            hash.put(word, hash.getOrDefault(word, 0) - 1);
        }
        // iterate over HashMap:
        for (Map.Entry<Character, Integer> entry : hash.entrySet()) {
            // check for negative values if true return false
            if (entry.getValue() < 0)
                return false;
        }
        // return true if we can make note
        return true;
    }
}
