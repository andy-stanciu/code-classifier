class Solution {

    public boolean canConstruct(String ransomNote, String magazine) {
        if (ransomNote.isEmpty() || magazine.isEmpty())
            return false;
        else if (ransomNote.length() > magazine.length())
            return false;
        HashMap<Character, Integer> mgMAP = new HashMap<>();
        char[] mgARR = magazine.toCharArray();
        for (char c : mgARR) {
            if (mgMAP.containsKey(c))
                mgMAP.put(c, mgMAP.get(c) + 1);
            else
                mgMAP.put(c, 1);
        }
        for (int i = 0; i < ransomNote.length(); i++) {
            if (mgMAP.containsKey(ransomNote.charAt(i))) {
                mgMAP.put(ransomNote.charAt(i), mgMAP.get(ransomNote.charAt(i)) - 1);
                if (mgMAP.get(ransomNote.charAt(i)) < 0)
                    return false;
            } else
                return false;
        }
        return true;
    }
}
