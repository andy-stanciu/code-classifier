class Solution {

    public boolean canConstruct(String ransomNote, String magazine) {
        int[] alph = new int[26];
        int n = magazine.length();
        char c;
        for (int i = 0; i <= n / 2; i++) {
            c = magazine.charAt(i);
            alph[c - 97] += 1;
            if (i == n / 2)
                break;
            c = magazine.charAt(n - i - 1);
            alph[c - 97] += 1;
        }
        n = ransomNote.length();
        for (int j = 0; j <= n / 2; j++) {
            if (n % 2 == 0 && j == n / 2) {
                break;
            }
            c = ransomNote.charAt(j);
            if (alph[c - 97] != 0) {
                alph[c - 97]--;
            } else {
                if (alph[c - 97] == 0) {
                    return false;
                } else if (j == n / 2) {
                    break;
                }
            }
            c = ransomNote.charAt(n - j - 1);
            if (alph[c - 97] != 0) {
                alph[c - 97]--;
            } else {
                if (j == n / 2) {
                    break;
                }
                return false;
            }
        }
        return true;
    }
}
