class Solution {

    public boolean canConstruct(String ransomNote, String magazine) {
        Map<String, Integer> ransomeCharCount = new HashMap<>();
        Map<String, Integer> magzineCharCount = new HashMap<>();
        char[] ranzomNoteArray = ransomNote.toCharArray();
        char[] magzineArray = magazine.toCharArray();
        for (int i = 0; i < magzineArray.length; i++) {
            magzineCharCount.putIfAbsent(String.valueOf(magzineArray[i]), 1);
            magzineCharCount.computeIfPresent(String.valueOf(magzineArray[i]), (key, value) -> value + 1);
        }
        for (int i = 0; i < ranzomNoteArray.length; i++) {
            ransomeCharCount.putIfAbsent(String.valueOf(ranzomNoteArray[i]), 1);
            ransomeCharCount.computeIfPresent(String.valueOf(ranzomNoteArray[i]), (key, value) -> value + 1);
        }
        boolean check = true;
        for (Map.Entry<String, Integer> ransomeEntry : ransomeCharCount.entrySet()) {
            if (magzineCharCount.containsKey(ransomeEntry.getKey())) {
                if (magzineCharCount.get(ransomeEntry.getKey()) < ransomeEntry.getValue()) {
                    check = false;
                    break;
                }
            } else {
                check = false;
                break;
            }
        }
        return check;
    }
}
