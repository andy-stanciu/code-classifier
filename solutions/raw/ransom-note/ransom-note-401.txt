class Solution {

    public boolean canConstruct(String ransomNote, String magazine) {
        Map<Character, Integer> map1 = new HashMap<>();
        Map<Character, Integer> map2 = new HashMap<>();
        int maxlen = ransomNote.length() > magazine.length() ? ransomNote.length() : magazine.length();
        for (int i = 0; i < maxlen; i++) {
            if (i < ransomNote.length())
                map1.put(ransomNote.charAt(i), map1.getOrDefault(ransomNote.charAt(i), 0) + 1);
            if (i < magazine.length())
                map2.put(magazine.charAt(i), map2.getOrDefault(magazine.charAt(i), 0) + 1);
        }
        for (Map.Entry<Character, Integer> entry : map1.entrySet()) {
            char key = entry.getKey();
            int value = entry.getValue();
            if (map2.getOrDefault(key, 0) < value)
                return false;
        }
        return true;
    }
}
