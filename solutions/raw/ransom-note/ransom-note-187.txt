class Solution {

    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character, Integer> map = new HashMap<>();
        // O(n)
        for (int i = 0; i < ransomNote.length(); i++) {
            int count = map.containsKey(ransomNote.charAt(i)) ? map.get(ransomNote.charAt(i)) + 1 : 1;
            map.put(ransomNote.charAt(i), count);
        }
        HashMap<Character, Integer> m = new HashMap<>();
        // O(n)
        for (int i = 0; i < magazine.length(); i++) {
            int count = m.containsKey(magazine.charAt(i)) ? m.get(magazine.charAt(i)) + 1 : 1;
            m.put(magazine.charAt(i), count);
        }
        for (Character c : map.keySet()) {
            if (!m.containsKey(c) || map.get(c) > m.get(c))
                return false;
        }
        return true;
    }
}
