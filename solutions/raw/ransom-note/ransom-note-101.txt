class Solution {

    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character, Integer> hash = new HashMap<>();
        //Adding all characters in Magazine to HashMap
        for (int i = 0; i < magazine.length(); i++) {
            char key = magazine.charAt(i);
            ////if key if already present in HashMap value is incremented else value=1
            hash.merge(key, 1, Integer::sum);
        }
        //Check if Characters in ransomNote are in Hashmap
        for (int i = 0; i < ransomNote.length(); i++) {
            char key = ransomNote.charAt(i);
            if (hash.containsKey(key)) {
                if (//if value against key is less than 1 then ransomNote cannot be formed using characters in hashmap so return false
                //if value against key is less than 1 then ransomNote cannot be formed using characters in hashmap so return false
                hash.get(key) < 1) {
                    return false;
                } else //decrement value of key in hashmap if character of ransomNote is found in hashmap
                {
                    int value = hash.get(key);
                    hash.put(key, value - 1);
                }
            } else //return false if character in ransomNote is not present in magazine(hashmap)
            {
                return false;
            }
        }
        return true;
    }
}
