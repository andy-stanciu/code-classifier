class Solution {

    public String minWindow(String s, String t) {
        int minLength = Integer.MAX_VALUE;
        int r = 0, l = 0;
        int sIdx = -1;
        int cnt = 0;
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            map.put(t.charAt(i), map.getOrDefault(t.charAt(i), 0) + 1);
        }
        while (r < s.length()) {
            if (map.getOrDefault(s.charAt(r), 0) > 0) {
                cnt++;
            }
            map.put(s.charAt(r), map.getOrDefault(s.charAt(r), 0) - 1);
            while (cnt == t.length()) {
                if (r - l + 1 < minLength) {
                    minLength = r - l + 1;
                    sIdx = l;
                }
                map.put(s.charAt(l), map.getOrDefault(s.charAt(l), 0) + 1);
                if (map.get(s.charAt(l)) > 0) {
                    cnt--;
                }
                l++;
            }
            r++;
        }
        return sIdx == -1 ? "" : s.substring(sIdx, sIdx + minLength);
    }
}
