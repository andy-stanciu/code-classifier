class Solution {

    public String minWindow(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        int start = 0, end = 0, counter = t.length(), d = Integer.MAX_VALUE, head = 0;
        for (char c : t.toCharArray()) {
            map.putIfAbsent(c, 0);
            map.put(c, map.get(c) + 1);
        }
        while (end < s.length()) {
            if (map.containsKey(s.charAt(end))) {
                if (map.get(s.charAt(end)) > 0)
                    counter--;
                map.put(s.charAt(end), map.get(s.charAt(end)) - 1);
            }
            end++;
            while (counter == 0) {
                if (d > end - start) {
                    d = end - start;
                    head = start;
                }
                if (map.containsKey(s.charAt(start))) {
                    if (map.get(s.charAt(start)) == 0) {
                        counter++;
                    }
                    map.put(s.charAt(start), map.get(s.charAt(start)) + 1);
                }
                start++;
            }
        }
        return d == Integer.MAX_VALUE ? "" : s.substring(head, head + d);
    }
}
