class Solution {

    public String minWindow(String s, String t) {
        int min = Integer.MAX_VALUE;
        String ans = "";
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            if (map.containsKey(t.charAt(i))) {
                map.put(t.charAt(i), map.get(t.charAt(i)) + 1);
            } else {
                map.put(t.charAt(i), 1);
            }
        }
        int count = map.size();
        int i = 0;
        int j = 0;
        while (j < s.length()) {
            if (!map.containsKey(s.charAt(j))) {
                j++;
                continue;
            } else {
                map.put(s.charAt(j), map.get(s.charAt(j)) - 1);
                if (map.get(s.charAt(j)) == 0) {
                    count--;
                }
            }
            if (count == 0) {
                if (min > j - i + 1) {
                    ans = s.substring(i, j + 1);
                    min = Math.min(min, j - i + 1);
                }
                while (count == 0) {
                    if (!map.containsKey(s.charAt(i))) {
                        i++;
                    } else {
                        map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
                        if (map.get(s.charAt(i)) > 0) {
                            count++;
                        }
                        i++;
                    }
                    if (count == 0) {
                        if (min > j - i + 1) {
                            ans = s.substring(i, j + 1);
                            min = Math.min(min, j - i + 1);
                        }
                    }
                }
            }
            j++;
        }
        return ans;
    }
}
