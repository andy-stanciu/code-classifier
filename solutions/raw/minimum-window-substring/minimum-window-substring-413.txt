class Solution {

    public String minWindow(String s, String t) {
        int m = s.length();
        int n = t.length();
        if (m < n || m == 0 || n == 0) {
            return "";
        }
        Map<Character, Integer> map = new HashMap<>();
        for (char c : t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        int start = 0;
        int count = 0;
        String sol = "";
        int min = Integer.MAX_VALUE;
        for (int r = 0; r < m; r++) {
            if (map.containsKey(s.charAt(r))) {
                if (map.get(s.charAt(r)) > 0) {
                    count++;
                }
                map.put(s.charAt(r), map.get(s.charAt(r)) - 1);
            }
            while (count == n) {
                if (min > r - start + 1) {
                    min = r - start + 1;
                    sol = s.substring(start, r + 1);
                }
                if (map.containsKey(s.charAt(start))) {
                    map.put(s.charAt(start), map.get(s.charAt(start)) + 1);
                    if (map.get(s.charAt(start)) > 0) {
                        count--;
                    }
                }
                start++;
            }
        }
        return sol;
    }
}
