class Solution {

    public String minWindow(String s, String t) {
        int l = 0, r = 0, minLen = Integer.MAX_VALUE, c = 0, si = -1;
        Map<Character, Integer> hm = new HashMap();
        while (r < t.length()) {
            hm.put(t.charAt(r), hm.getOrDefault(t.charAt(r), 0) + 1);
            r++;
        }
        r = 0;
        while (r < s.length()) {
            if (hm.getOrDefault(s.charAt(r), 0) > 0)
                c++;
            hm.put(s.charAt(r), hm.getOrDefault(s.charAt(r), 0) - 1);
            while (c == t.length()) {
                if (r - l + 1 < minLen) {
                    minLen = r - l + 1;
                    si = l;
                }
                hm.put(s.charAt(l), hm.get(s.charAt(l)) + 1);
                if (hm.get(s.charAt(l)) > 0)
                    c--;
                l++;
            }
            r++;
        }
        return si == -1 ? "" : s.substring(si, si + minLen);
    }
}
