class Solution {

    public String minWindow(String str, String t) {
        Map<Character, Integer> map1 = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            char c = t.charAt(i);
            map1.put(c, map1.getOrDefault(c, 0) + 1);
        }
        Map<Character, Integer> map2 = new HashMap<>();
        int start = -1, end = -1, acnt = 0, dcnt = t.length();
        String ans = "";
        while (end < str.length()) {
            end++;
            if (end == str.length())
                break;
            char c = str.charAt(end);
            map2.put(c, map2.getOrDefault(c, 0) + 1);
            if (map2.getOrDefault(c, 0) <= map1.getOrDefault(c, 0)) {
                acnt++;
            }
            if (acnt == dcnt) {
                while (acnt == dcnt) {
                    // save min length and release characters
                    String pans = str.substring(start + 1, end + 1);
                    if (ans.length() == 0 || pans.length() < ans.length()) {
                        ans = str.substring(start + 1, end + 1);
                    }
                    start++;
                    char c1 = str.charAt(start);
                    if (map2.get(c1) == 1) {
                        map2.remove(c1);
                    } else {
                        map2.put(c1, map2.getOrDefault(c1, 0) - 1);
                    }
                    int ctr2 = map2.getOrDefault(c1, 0);
                    int ctr1 = map1.getOrDefault(c1, 0);
                    if (ctr2 < ctr1) {
                        acnt--;
                    }
                }
            }
        }
        return ans;
    }
}
