class Solution {

    public String minWindow(String s, String t) {
        HashMap<Character, Integer> map = new HashMap<>();
        for (char ch : t.toCharArray()) {
            // frequency of characters of
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        int ans = Integer.MAX_VALUE;
        int[] substring = new int[2];
        int count = map.size(), i = 0, j = 0;
        while (j < s.length()) {
            if (map.containsKey(s.charAt(j))) {
                map.put(s.charAt(j), map.get(s.charAt(j)) - 1);
                if (map.get(s.charAt(j)) == 0)
                    count--;
            }
            while (count == 0) {
                if (j - i + 1 < ans && count == 0) {
                    ans = j - i + 1;
                    substring[0] = i;
                    substring[1] = j;
                }
                if (map.containsKey(s.charAt(i))) {
                    // Increase the character count in the map.
                    map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
                    if (map.get(s.charAt(i)) > 0) {
                        count++;
                    }
                }
                i++;
            }
            j++;
        }
        if (ans == Integer.MAX_VALUE) {
            return "";
        }
        return s.substring(substring[0], substring[1] + 1);
    }
}
