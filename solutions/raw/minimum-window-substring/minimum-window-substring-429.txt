class Solution {

    public String minWindow(String s, String t) {
        int n = s.length();
        int m = t.length();
        Map<Character, Integer> mpp = new HashMap<>();
        for (int a = 0; a < m; a++) {
            mpp.put(t.charAt(a), mpp.getOrDefault(t.charAt(a), 0) + 1);
        }
        String ans = "";
        int i = 0, j = 0;
        int mini = Integer.MAX_VALUE;
        int count = mpp.size();
        while (j < n) {
            if (mpp.get(s.charAt(j)) != null) {
                mpp.put(s.charAt(j), mpp.get(s.charAt(j)) - 1);
                if (mpp.get(s.charAt(j)) == 0)
                    count--;
            }
            if (count == 0) {
                while (count == 0) {
                    if (mini > j - i + 1) {
                        mini = j - i + 1;
                        ans = s.substring(i, j + 1);
                    }
                    if (mpp.get(s.charAt(i)) != null) {
                        mpp.put(s.charAt(i), mpp.get(s.charAt(i)) + 1);
                        if (mpp.get(s.charAt(i)) > 0)
                            count++;
                    }
                    i++;
                }
            }
            j++;
        }
        return ans;
    }
}
