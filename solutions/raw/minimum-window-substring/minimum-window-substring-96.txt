class Solution {

    public String minWindow(String s, String t) {
        int[] hash = new int[256];
        int l = 0;
        int r = 0;
        int n = s.length();
        int m = t.length();
        int minLen = Integer.MAX_VALUE;
        int count = 0;
        int sindex = -1;
        for (int i = 0; i < m; i++) {
            hash[t.charAt(i)]++;
        }
        while (r < n) {
            if (hash[s.charAt(r)] > 0) {
                count++;
            }
            hash[s.charAt(r)]--;
            while (count == m) {
                if (r - l + 1 < minLen) {
                    minLen = r - l + 1;
                    sindex = l;
                }
                hash[s.charAt(l)]++;
                if (hash[s.charAt(l)] > 0) {
                    count--;
                }
                l++;
            }
            r++;
        }
        if (sindex == -1) {
            return "";
        }
        StringBuilder ans = new StringBuilder();
        for (int i = sindex; i < sindex + minLen; i++) {
            ans.append(s.charAt(i));
        }
        return ans.toString();
    }
}
