class Solution {

    public String minWindow(String s, String t) {
        int index = -1;
        int n = s.length();
        int count = 0;
        int minlen = Integer.MAX_VALUE;
        int left = 0;
        int right = 0;
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            map.put(t.charAt(i), map.getOrDefault(t.charAt(i), 0) + 1);
        }
        while (right < n) {
            if (map.containsKey(s.charAt(right))) {
                map.put(s.charAt(right), map.get(s.charAt(right)) - 1);
                if (map.get(s.charAt(right)) >= 0) {
                    count++;
                }
            }
            while (count == t.length()) {
                if (right - left + 1 < minlen) {
                    minlen = right - left + 1;
                    index = left;
                }
                if (map.containsKey(s.charAt(left))) {
                    map.put(s.charAt(left), map.get(s.charAt(left)) + 1);
                    if (map.get(s.charAt(left)) > 0) {
                        count--;
                    }
                }
                left++;
            }
            right++;
        }
        return index == -1 ? "" : s.substring(index, index + minlen);
    }
}
