class Solution {

    public String minWindow(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        int minLength = Integer.MAX_VALUE;
        int count = 0;
        int start = -1;
        for (int i = 0; i < t.length(); i++) {
            map.put(t.charAt(i), map.getOrDefault(t.charAt(i), 0) + 1);
        }
        int i = 0, j = 0;
        while (j < s.length()) {
            if (map.getOrDefault(s.charAt(j), 0) > 0) {
                count++;
            }
            map.put(s.charAt(j), map.getOrDefault(s.charAt(j), 0) - 1);
            while (i <= j && count == t.length()) {
                if (j - i + 1 < minLength) {
                    minLength = Math.min(j - i + 1, minLength);
                    start = i;
                }
                map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
                if (map.get(s.charAt(i)) > 0) {
                    count--;
                }
                i++;
            }
            j++;
        }
        return (start != -1 ? s.substring(start, start + minLength) : "");
    }
}
