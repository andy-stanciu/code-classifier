class Solution {

    public String minWindow(String s, String t) {
        if (t.length() > s.length()) {
            return "";
        }
        Map<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            map.put(t.charAt(i), map.getOrDefault(t.charAt(i), 0) + 1);
        }
        int first = 0;
        int second = 0;
        int ans = Integer.MAX_VALUE;
        int count = map.size();
        String finalString = "";
        while (second < s.length()) {
            char c = s.charAt(second);
            if (map.containsKey(c)) {
                map.put(c, map.get(c) - 1);
                if (map.get(c) == 0) {
                    count--;
                }
            }
            if (count > 0) {
                second++;
            } else if (count == 0) {
                while (count == 0) {
                    if (second - first + 1 < ans) {
                        ans = second - first + 1;
                        finalString = s.substring(first, second + 1);
                    }
                    char ch = s.charAt(first);
                    if (map.containsKey(ch)) {
                        map.put(ch, map.get(ch) + 1);
                        if (map.get(ch) == 1) {
                            count++;
                        }
                    }
                    first++;
                }
                second++;
            }
        }
        return finalString;
    }
}
