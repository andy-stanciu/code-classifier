class Solution {

    public String minWindow(String s, String t) {
        int[] window = new int[128];
        int[] target = new int[128];
        if (t.length() > s.length())
            return "";
        for (char ch : t.toCharArray()) {
            target[ch]++;
        }
        int left = 0, right = 0;
        int minSize = 0, matchCount = 0;
        int minLen = Integer.MAX_VALUE, minStart = 0;
        while (right < s.length()) {
            char ch = s.charAt(right);
            window[ch]++;
            if (window[ch] <= target[ch]) {
                matchCount++;
            }
            while (matchCount == t.length()) {
                if (right - left + 1 < minLen) {
                    minLen = right - left + 1;
                    minStart = left;
                }
                char leftChar = s.charAt(left);
                window[leftChar]--;
                if (window[leftChar] < target[leftChar])
                    matchCount--;
                left++;
            }
            right++;
        }
        return minLen == Integer.MAX_VALUE ? "" : s.substring(minStart, minStart + minLen);
    }
}
