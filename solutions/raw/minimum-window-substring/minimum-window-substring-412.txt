class Solution {

    public String minWindow(String s, String t) {
        int lenS = s.length();
        int lenT = t.length();
        Map<Character, Integer> mapT = new HashMap<>();
        Map<Character, Integer> mapS = new HashMap<>();
        for (int i = 0; i < lenT; i++) {
            char c = t.charAt(i);
            mapT.put(c, mapT.getOrDefault(c, 0) + 1);
        }
        int l = 0;
        int start = 0;
        int end = 0;
        int len = lenS + 1;
        int need = mapT.size();
        int have = 0;
        for (int i = 0; i < lenS; i++) {
            char c = s.charAt(i);
            if (mapT.getOrDefault(c, -1) != -1) {
                mapS.put(c, mapS.getOrDefault(c, 0) + 1);
                if (mapS.get(c).equals(mapT.get(c))) {
                    have++;
                }
            }
            while (have == need) {
                char ch = s.charAt(l);
                if (mapS.containsKey(ch)) {
                    mapS.put(ch, mapS.get(ch) - 1);
                    if (mapS.get(ch) < mapT.get(ch)) {
                        have--;
                    }
                }
                int currLen = i - l + 1;
                if (currLen < len) {
                    start = l;
                    end = i;
                    len = currLen;
                }
                l++;
            }
        }
        if (len == lenS + 1) {
            return "";
        }
        return s.substring(start, end + 1);
    }
}
