class Solution {

    public String minWindow(String s, String t) {
        if (s == null || t == null || s.length() == 0 || t.length() == 0) {
            return "";
        }
        HashMap<Character, Integer> thash = new HashMap<>();
        for (char c : t.toCharArray()) {
            thash.put(c, (thash.getOrDefault(c, 0) + 1));
        }
        int l = 0, r = 0, formed = 0;
        int trequired = thash.size();
        HashMap<Character, Integer> shash = new HashMap<>();
        int[] ans = { -1, 0, 0 };
        while (r < s.length()) {
            char c = s.charAt(r);
            shash.put(c, (shash.getOrDefault(c, 0) + 1));
            if (thash.containsKey(c) && shash.get(c).intValue() == thash.get(c).intValue()) {
                formed++;
            }
            while (l <= r && trequired == formed) {
                char x = s.charAt(l);
                if (ans[0] == -1 || r - l + 1 < ans[0]) {
                    ans[0] = r - l + 1;
                    ans[1] = l;
                    ans[2] = r;
                }
                shash.put(x, shash.get(x) - 1);
                if (thash.containsKey(x) && shash.get(x).intValue() < thash.get(x).intValue()) {
                    formed--;
                }
                l++;
            }
            r++;
        }
        return ans[0] == -1 ? "" : s.substring(ans[1], ans[2] + 1);
    }
}
