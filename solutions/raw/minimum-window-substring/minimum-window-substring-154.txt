class Solution {

    public String minWindow(String s, String t) {
        int left = 0, right = 0, count = 0, min = Integer.MAX_VALUE, startindex = -1;
        Map<Character, Integer> hm = new HashMap<>();
        while (right < t.length()) {
            hm.put(t.charAt(right), hm.getOrDefault(t.charAt(right), 0) + 1);
            right++;
        }
        right = 0;
        while (right < s.length()) {
            if (hm.getOrDefault(s.charAt(right), 0) > 0)
                count++;
            hm.put(s.charAt(right), hm.getOrDefault(s.charAt(right), 0) - 1);
            while (count == t.length()) {
                if (right - left + 1 < min) {
                    min = right - left + 1;
                    startindex = left;
                }
                hm.put(s.charAt(left), hm.get(s.charAt(left)) + 1);
                if (hm.get(s.charAt(left)) > 0)
                    count--;
                left++;
            }
            right++;
        }
        return startindex == -1 ? "" : s.substring(startindex, startindex + min);
    }
}
