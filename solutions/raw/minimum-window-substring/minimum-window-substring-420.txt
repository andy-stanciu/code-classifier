class Solution {

    public String minWindow(String s, String p) {
        if (s == null || s.length() < p.length() || s.length() == 0) {
            return "";
        }
        Map<Character, Integer> mp = new HashMap<>();
        for (int i = 0; i < p.length(); i++) {
            mp.put(p.charAt(i), mp.getOrDefault(p.charAt(i), 0) + 1);
        }
        int count = mp.size();
        int i = 0, j = 0;
        int len = s.length();
        int ans = 0, si = 0;
        while (j < len) {
            char ch = s.charAt(j);
            if (mp.containsKey(ch)) {
                mp.put(ch, mp.get(ch) - 1);
                if (mp.get(ch) == 0)
                    count--;
            }
            if (count == 0) {
                while (i < len && count == 0) {
                    if (mp.containsKey(s.charAt(i))) {
                        mp.put(s.charAt(i), mp.get(s.charAt(i)) + 1);
                        if (mp.get(s.charAt(i)) > 0)
                            count++;
                    }
                    i++;
                }
                if (j - i + 2 < ans || ans == 0) {
                    ans = j - i + 2;
                    si = i - 1;
                }
            }
            j++;
        }
        return s.substring(si, si + ans);
    }
}
