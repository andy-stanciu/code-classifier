class Solution {

    public String minWindow(String s, String t) {
        String ans = "";
        HashMap<Character, Integer> map1 = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            char ch = t.charAt(i);
            map1.put(ch, map1.getOrDefault(ch, 0) + 1);
        }
        int match = 0;
        int D_match = t.length();
        int R = -1;
        int L = -1;
        HashMap<Character, Integer> map2 = new HashMap<>();
        while (true) {
            boolean f1 = false;
            boolean f2 = false;
            while (R < s.length() - 1 && match < D_match) {
                R++;
                char ch = s.charAt(R);
                map2.put(ch, map2.getOrDefault(ch, 0) + 1);
                if (map2.getOrDefault(ch, 0) <= map1.getOrDefault(ch, 0)) {
                    match++;
                }
                f1 = true;
            }
            while (match == D_match && L < R) {
                String pans = s.substring(L + 1, R + 1);
                if (ans.length() == 0 || pans.length() < ans.length()) {
                    ans = pans;
                }
                L++;
                char ch = s.charAt(L);
                if (map2.get(ch) == 1) {
                    map2.remove(ch);
                } else {
                    map2.put(ch, map2.getOrDefault(ch, 0) - 1);
                }
                if (map2.getOrDefault(ch, 0) < map1.getOrDefault(ch, 0)) {
                    match--;
                }
                f2 = true;
            }
            if (f1 == false && f2 == false) {
                break;
            }
        }
        return ans;
    }
}
