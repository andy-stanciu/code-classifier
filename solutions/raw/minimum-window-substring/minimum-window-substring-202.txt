// \u6700\u5C0F\u8986\u76D6\u5B50\u4E32
// \u7ED9\u4F60\u4E00\u4E2A\u5B57\u7B26\u4E32 s \u3001\u4E00\u4E2A\u5B57\u7B26\u4E32 t \u3002\u8FD4\u56DE s \u4E2D\u6DB5\u76D6 t \u6240\u6709\u5B57\u7B26\u7684\u6700\u5C0F\u5B50\u4E32
// \u5982\u679C s \u4E2D\u4E0D\u5B58\u5728\u6DB5\u76D6 t \u6240\u6709\u5B57\u7B26\u7684\u5B50\u4E32\uFF0C\u5219\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32 "" \u3002
// \u6D4B\u8BD5\u94FE\u63A5 : https://leetcode.cn/problems/minimum-window-substring/
public class Solution {

    //\u4E00\u5F20\u8868\u548C\u603B\u6B20\u503A https://www.bilibili.com/opus/936601207811604528?spm_id_from=333.999.0.0
    public static String minWindow(String str, String tar) {
        if (str.length() < tar.length()) {
            // \u957F\u5EA6\u8FD8\u6CA1\u6709\u6B20\u503A\u7684\u6570\u7EC4\u5927
            return "";
        }
        char[] s = str.toCharArray();
        char[] t = tar.toCharArray();
        int[] cnts = new int[256];
        for (char cha : t) {
            // \u6B20\u503A\u8868
            cnts[cha]--;
        }
        // \u6700\u5C0F\u8986\u76D6\u5B50\u4E32\u7684\u957F\u5EA6
        int len = Integer.MAX_VALUE;
        // \u4ECE\u54EA\u4E2A\u4F4D\u7F6E\u5F00\u5934\uFF0C\u53D1\u73B0\u7684\u8FD9\u4E2A\u6700\u5C0F\u8986\u76D6\u5B50\u4E32
        //\u8FD4\u56DE\u5B57\u7B26\u4E32\u662F\u5565
        int start = 0;
        // \u8BA8\u8BBA\u4EE5\u6BCF\u4E00\u4E2Ar\u7ED3\u5C3E\u7684\u60C5\u51B5\u4E0B\uFF0C\u5411\u5DE6\u5EF6\u7533\u7684\u6700\u5C0F\u8986\u76D6\u5B57\u4E32\u957F\u5EA6
        for (int l = 0, r = 0, debt = t.length; r < s.length; r++) {
            // s[r] \u5F53\u524D\u5B57\u7B26 -> int
            // cnts[s[r]] : \u5F53\u524D\u5B57\u7B26\u6B20\u503A\u60C5\u51B5\uFF0C\u8D1F\u6570\u5C31\u662F\u6B20\u503A\uFF0C\u6B63\u6570\u5C31\u662F\u591A\u7ED9\u7684
            if (cnts[s[r]]++ < 0) {
                debt--;
            }
            if (debt == 0) {
                // r\u4F4D\u7F6E\u7ED3\u5C3E\uFF0C\u771F\u7684\u6709\u8986\u76D6\u5B50\u4E32\uFF01
                // \u770B\u770B\u8FD9\u4E2A\u8986\u76D6\u5B50\u4E32\u80FD\u4E0D\u80FD\u5C3D\u91CF\u77ED
                while (cnts[s[l]] > 0) {
                    // l\u4F4D\u7F6E\u7684\u5B57\u7B26\u80FD\u62FF\u56DE
                    cnts[s[l++]]--;
                }
                // \u4ECEwhile\u91CC\u9762\u51FA\u6765\uFF0C
                // l....r\u5C31\u662Fr\u4F4D\u7F6E\u7ED3\u5C3E\u7684\u6700\u5C0F\u8986\u76D6\u5B50\u4E32
                if (r - l + 1 < len) {
                    len = r - l + 1;
                    start = l;
                }
            }
        }
        return len == Integer.MAX_VALUE ? "" : str.substring(start, start + len);
    }
}
