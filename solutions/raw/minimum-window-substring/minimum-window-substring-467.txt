class Solution {

    public String minWindow(String s, String t) {
        if (s.length() < t.length() || s.length() == 0) {
            return "";
        }
        int[] charCount = new int[128];
        int minLength = Integer.MAX_VALUE;
        int start = 0;
        int count = 0;
        int minLeft = 0;
        char[] schar = s.toCharArray();
        for (char c : t.toCharArray()) {
            charCount[c]++;
        }
        for (int i = 0; i < s.length(); i++) {
            if (charCount[schar[i]] > 0) {
                count++;
            }
            charCount[schar[i]]--;
            while (count == t.length()) {
                if (minLength > i - start + 1) {
                    minLength = Math.min(minLength, i - start + 1);
                    minLeft = start;
                }
                if (charCount[schar[start]] >= 0) {
                    count--;
                }
                charCount[schar[start]]++;
                start++;
            }
        }
        if (minLength > s.length()) {
            return "";
        }
        return s.substring(minLeft, minLeft + minLength);
    }
}
