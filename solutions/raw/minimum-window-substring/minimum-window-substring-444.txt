class Solution {

    public String minWindow(String s, String t) {
        int n = s.length();
        int m = t.length();
        if (m > n)
            return "";
        int[] hash_s = new int[256];
        int[] hash_t = new int[256];
        for (int i = 0; i < m; i++) {
            hash_t[t.charAt(i)]++;
        }
        int start = 0;
        int startIndex = -1;
        int i = 0;
        int minLen = Integer.MAX_VALUE;
        int count = 0;
        while (i < n) {
            hash_s[s.charAt(i)]++;
            if (hash_s[s.charAt(i)] <= hash_t[s.charAt(i)])
                count++;
            if (count == m) {
                while (hash_s[s.charAt(start)] > hash_t[s.charAt(start)]) {
                    hash_s[s.charAt(start)]--;
                    start++;
                }
                int len = i - start + 1;
                if (len < minLen) {
                    startIndex = start;
                    minLen = len;
                }
            }
            i++;
        }
        return startIndex == -1 ? "" : s.substring(startIndex, startIndex + minLen);
    }
}
