class Solution {

    public int removeDuplicates(int[] nums) {
        // HashSet<Integer> set=new LinkedHashSet();
        // for(int i=0;i<nums.length;i++){
        //     set.add(nums[i]);
        // }
        // int p=0;
        // for(int e:set){
        //     nums[p]=e;
        //     p++;
        //     System.out.println(e);
        // }
        // return p;
        if (nums.length == 0)
            return 0;
        int slow = 0;
        // Iterate with the fast pointer
        for (int fast = 1; fast < nums.length; fast++) {
            // Only move slow forward if a new unique element is found
            if (nums[fast] != nums[slow]) {
                slow++;
                nums[slow] = nums[fast];
            }
        }
        // The number of unique elements is slow + 1
        return slow + 1;
    }
}
