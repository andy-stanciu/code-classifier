class Solution {

    public int removeDuplicates(int[] nums) {
        // 1. t.c - O(N), s.c - O(N)
        ArrayList<Integer> newList = new ArrayList<>();
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] != nums[i + 1]) {
                newList.add(nums[i]);
            }
        }
        newList.add(nums[nums.length - 1]);
        for (int i = 0; i < newList.size(); i++) {
            nums[i] = newList.get(i);
        }
        return newList.size();
        // 2. t.c - O(N), s.c - O(1)
        int i = 0;
        int j = i + 1;
        while (j < nums.length) {
            if (nums[i] == nums[j])
                j++;
            else if (nums[i] != nums[j]) {
                i++;
                int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
                j++;
            }
        }
        //for returning the length till which the nums[] should be printed to get the desired output and since i is the index. Therefore i+1 for size;
        return i + 1;
    }
}
