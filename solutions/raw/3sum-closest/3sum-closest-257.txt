class Solution {

    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int closest = Integer.MAX_VALUE;
        int sol = 0;
        for (int i = 0; i < nums.length - 1; i++) {
            int j = i + 1, k = nums.length - 1;
            //since sorted : so dont process the same combination of tripltes again
            if (i == 0 || nums[i] != nums[i - 1]) {
                while (j < k) {
                    //we must need to process all combination as there must exists one solution
                    //bcoz whatever combination you calc : will be closest to target anyhow
                    int sum = nums[i] + nums[j] + nums[k];
                    int diff = Math.abs(sum - target);
                    if (diff < closest) {
                        closest = Math.min(closest, diff);
                        sol = sum;
                    }
                    //if we get the sum == target : means there can be no other sum that will be as close to target :p
                    if (sum < target) {
                        j++;
                    } else if (sum > target) {
                        k--;
                    } else {
                        return sum;
                    }
                }
            }
        }
        return sol;
    }
}
