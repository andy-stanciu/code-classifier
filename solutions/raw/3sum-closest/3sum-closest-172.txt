class Solution {

    public int threeSumClosest(int[] nums, int target) {
        //first the array has to be sorted as we would use two pointers
        Arrays.sort(nums);
        //we need to create a place holder for the closetsum
        // we would initaialise it with te sum of first three numbers in array and then check
        // if there is any sum closet to target than the sum we get from
        // first three numbers
        int closetSum = nums[0] + nums[1] + nums[2];
        //loop to now go through the array list
        for (int i = 0; i < nums.length - 2; i++) {
            //initalise the pointers going from left and right
            int left = i + 1;
            int right = nums.length - 1;
            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];
                if (sum == target) {
                    return sum;
                }
                //check if the diffrece between sum and target is less than that of
                // closetSum and target
                if (Math.abs(sum - target) < Math.abs(closetSum - target)) {
                    closetSum = sum;
                }
                if (sum < target) {
                    left++;
                } else {
                    right--;
                }
            }
        }
        return closetSum;
    }
}
