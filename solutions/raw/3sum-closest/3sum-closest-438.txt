class Solution {

    public int threeSumClosest(int[] nums, int target) {
        int findAfterOne, findAfterTwo, diff = Integer.MAX_VALUE;
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 2; i++) {
            findAfterOne = target - nums[i];
            for (int j = i + 1; j < nums.length - 1; j++) {
                findAfterTwo = findAfterOne - nums[j];
                for (int k = j + 1; k < nums.length; k++) {
                    if (Math.abs(findAfterTwo - nums[k]) < Math.abs(diff)) {
                        diff = findAfterTwo - nums[k];
                    }
                }
            }
        }
        return target - diff;
    }

    int nearestMatch(int[] nums, int target, int beg, int end) {
        int mid = (beg + end) / 2;
        while (beg < end) {
            if (nums[mid] == target) {
                return nums[mid];
            } else if (nums[mid] > target) {
                return nearestMatch(nums, target, beg, mid - 1);
            } else
                return nearestMatch(nums, target, mid + 1, end);
        }
        return nums[mid];
    }
}
