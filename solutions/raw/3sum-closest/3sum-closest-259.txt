class Solution {

    public int threeSumClosest(int[] nums, int target) {
        // Sort the array for two-pointer approach
        Arrays.sort(nums);
        int closestSum = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length - 2; i++) {
            int left = i + 1;
            int right = nums.length - 1;
            while (left < right) {
                int currentSum = nums[i] + nums[left] + nums[right];
                int diff = Math.abs(currentSum - target);
                // Update closest sum if current sum is closer
                if (diff < Math.abs(closestSum - target)) {
                    closestSum = currentSum;
                }
                if (currentSum == target) {
                    // Perfect triplet found, return directly
                    return currentSum;
                } else if (currentSum < target) {
                    left++;
                } else {
                    right--;
                }
            }
        }
        return closestSum;
    }
}
