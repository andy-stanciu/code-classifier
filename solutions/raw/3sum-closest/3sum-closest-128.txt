class Solution {

    public int threeSumClosest(int[] nums, int target) {
        // 1. brute force soln
        // int sum =0;
        // int closestsum = Integer.MAX_VALUE;
        // int closestdiff = Integer.MAX_VALUE;
        //int diff=0;
        // int n = nums.length;
        // for(int i =0;i<n;i++) {
        // for(int j =i=1;j<n;j++){
        // for(int k =j+1;k<n;k++){
        // sum=nums[i]+nums[j]+nums[k];
        // diff=Math.abs(target-sum);
        // if(diff<closestdiff){
        // closestdiff=diff;
        // closestsum=sum;
        // }
        // }
        // }
        // }
        // return closestsum; -------> tc =n3;
        // 2. optimal soln
        int n = nums.length;
        int sum = 0;
        int closestsum = Integer.MAX_VALUE;
        Arrays.sort(nums);
        for (int i = 0; i < n - 2; i++) {
            int j = i + 1;
            int k = n - 1;
            while (j < k) {
                sum = nums[i] + nums[j] + nums[k];
                if (Math.abs(target - sum) < Math.abs(target - closestsum)) {
                    closestsum = sum;
                }
                if (sum < target) {
                    j++;
                } else {
                    k--;
                }
            }
        }
        return closestsum;
    }
}
