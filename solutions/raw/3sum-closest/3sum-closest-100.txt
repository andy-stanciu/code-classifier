class Solution {

    public int threeSumClosest(int[] nums, int target) {
        // Sort the array
        Arrays.sort(nums);
        // Initialize closest sum with the first three elements
        int closestSum = nums[0] + nums[1] + nums[2];
        for (int i = 0; i < nums.length - 2; i++) {
            // Left pointer
            int left = i + 1;
            // Right pointer
            int right = nums.length - 1;
            while (left < right) {
                int currentSum = nums[i] + nums[left] + nums[right];
                // Update closestSum if currentSum is closer to target
                if (Math.abs(currentSum - target) < Math.abs(closestSum - target)) {
                    closestSum = currentSum;
                }
                // Move pointers based on comparison with target
                if (currentSum < target) {
                    // Increase the sum by moving left pointer to the right
                    left++;
                } else if (currentSum > target) {
                    // Decrease the sum by moving right pointer to the left
                    right--;
                } else {
                    // If the sum is exactly equal to the target, return it immediately
                    return currentSum;
                }
            }
        }
        // Return the closest sum found
        return closestSum;
    }
}
