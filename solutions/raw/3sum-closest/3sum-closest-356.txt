class Solution {

    public int threeSumClosest(int[] arr, int target) {
        // so now solving this question on the logic of the 3 sum
        // so now we have to give the sum which is colset to the the target
        // so we have to give the max when we are inside the <= target section their
        Arrays.sort(arr);
        // so now here our array is beign sorted
        // inital ans is zero
        int ans = arr[0] + arr[1] + arr[2];
        for (int i = 0; i < arr.length - 2; i++) {
            // so now here we have to skip the duplicates here
            if (i > 0 && arr[i] == arr[i - 1]) {
                continue;
            }
            // so now here we have to define the int j and k
            int j = i + 1;
            int k = arr.length - 1;
            while (j < k) {
                // so now here we have to define our sum
                int sum = arr[i] + arr[j] + arr[k];
                // so now here we have to compare the sum
                // so now if this value of sum is more close to target then we have to update this value here
                if (Math.abs(target - sum) < Math.abs(target - ans)) {
                    // so now current sum value is more close to target so we have to update it
                    ans = sum;
                }
                if (sum > target) {
                    k--;
                } else {
                    j++;
                }
            }
        }
        return ans;
    }
}
