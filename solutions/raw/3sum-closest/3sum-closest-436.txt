class Solution {

    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int left = 0;
        int right = nums.length - 2;
        int closest3Sum = Integer.MIN_VALUE;
        while (left < right) {
            int sum3 = nums[left] + twoSumClosest(nums, target - nums[left], left);
            if (closest3Sum == Integer.MIN_VALUE || Math.abs(sum3 - target) < Math.abs(closest3Sum - target)) {
                closest3Sum = sum3;
            }
            left++;
        }
        return closest3Sum;
    }

    public static int twoSumClosest(int[] nums, int target, int start) {
        int left = start + 1;
        int right = nums.length - 1;
        int closest2Sum = Integer.MIN_VALUE;
        while (left < right) {
            int sum2 = nums[left] + nums[right];
            if (closest2Sum == Integer.MIN_VALUE || Math.abs(sum2 - target) < Math.abs(closest2Sum - target)) {
                closest2Sum = sum2;
            }
            if (sum2 < target) {
                left++;
            } else if (sum2 > target) {
                right--;
            } else {
                return sum2;
            }
        }
        return closest2Sum;
    }
}
