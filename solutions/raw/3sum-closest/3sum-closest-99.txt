class Solution {

    public int threeSumClosest(int[] nums, int target) {
        int left;
        int right;
        Arrays.sort(nums);
        int mindiff = Integer.MAX_VALUE;
        int closeSum = 0;
        for (int i = 0; i < nums.length - 2; i++) {
            // -2 because left and right will not be equal for the last element
            left = i + 1;
            right = nums.length - 1;
            // Reset sum
            int sum = 0;
            while (left < right) {
                sum = nums[i] + nums[left] + nums[right];
                if (target == sum) {
                    // Return target immediately if sum matches target
                    return target;
                } else {
                    // Calculate the difference
                    int diff = Math.abs(sum - target);
                    // Update mindiff and closeSum if the current diff is smaller
                    if (diff < mindiff) {
                        mindiff = diff;
                        closeSum = sum;
                    }
                    if (sum > target) {
                        // Move right pointer to reduce the sum
                        right--;
                    } else {
                        // Move left pointer to increase the sum
                        left++;
                    }
                }
            }
        }
        // Return the closest sum
        return closeSum;
    }
}
