class Solution {

    public int missingNumber(int[] nums) {
        // Sort the nums array...
        Arrays.sort(nums);
        // Function call using Binary Search...
        return FindMissingNumberBinarySearch(nums);
    }

    public int FindMissingNumber(int[] nums) {
        for (// Iteration Method...
        // Iteration Method...
        // Iteration Method...
        // If number is not equal to the current index...
        int i = 0; i < nums.length; i++) if (nums[i] != i)
            return i;
        return nums.length;
    }

    public int FindMissingNumberBinarySearch(int[] nums) {
        // Setting left and right boundaries...
        int left = 0, right = nums.length - 1;
        while (// Binary Search...
        left < right) {
            // Extracting Mid element...
            int mid = left + (right - left) / 2;
            if (mid < nums[mid])
                // If missing number is to the left of Mid element...
                right = mid;
            else
                // If missing number is to the right of the Mid element...
                left = mid + 1;
        }
        return left == nums[left] ? ++left : left;
        // If left boundary is to the extreme right and the missing number is not extracted...
    }
}
