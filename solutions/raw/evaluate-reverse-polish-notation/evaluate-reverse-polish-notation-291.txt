class Solution {

    public int evalRPN(String[] tokens) {
        Deque<Integer> myStack = new ArrayDeque<>();
        int result = 0;
        for (String token : tokens) {
            switch(token) {
                case "+" ->
                    {
                        int first = myStack.pop();
                        int second = myStack.pop();
                        result = second + first;
                        myStack.push(result);
                    }
                case "-" ->
                    {
                        int first = myStack.pop();
                        int second = myStack.pop();
                        result = second - first;
                        myStack.push(result);
                    }
                case "*" ->
                    {
                        int first = myStack.pop();
                        int second = myStack.pop();
                        result = second * first;
                        myStack.push(result);
                    }
                case "/" ->
                    {
                        int first = myStack.pop();
                        int second = myStack.pop();
                        result = second / first;
                        myStack.push(result);
                    }
                default ->
                    {
                        int num = Integer.parseInt(token);
                        myStack.push(num);
                        result = num;
                    }
            }
        }
        return result;
    }
}
