class Solution {

    public boolean isopr(String s) {
        if (s.equals("+") || s.equals("-") || s.equals("*") || s.equals("/"))
            return true;
        return false;
    }

    public int calc(int a, String op, int b) {
        int result = 0;
        switch(op) {
            case "+":
                result = a + b;
                break;
            case "-":
                result = a - b;
                break;
            case "*":
                result = a * b;
                break;
            case "/":
                result = a / b;
                break;
            default:
                return 0;
        }
        return result;
    }

    public int evalRPN(String[] token) {
        int n = token.length;
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            if (!isopr(token[i]))
                st.push(Integer.parseInt(token[i]));
            else {
                int op2 = st.pop();
                int op1 = st.pop();
                int result = calc(op1, token[i], op2);
                st.push(result);
            }
        }
        return st.pop();
    }
}
