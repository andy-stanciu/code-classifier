class Solution {

    public int evalRPN(String[] tokens) {
        //idea
        //traverse until you find operation, then pop last two elements
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+")) {
                stack.push(stack.pop() + stack.pop());
            } else if (tokens[i].equals("-")) {
                // subtraction considering order of pop
                stack.push(-stack.pop() + stack.pop());
            } else if (tokens[i].equals("*")) {
                stack.push(stack.pop() * stack.pop());
            } else if (tokens[i].equals("/")) {
                int a = stack.pop();
                stack.push(stack.pop() / a);
                //System.out.println(a);
            } else
                stack.push(Integer.parseInt(tokens[i]));
        }
        return stack.pop();
    }
}
