class Solution {

    public int helper(String[] tokens, int i, int[] a) {
        if (i < 0) {
            return 0;
        }
        String s = tokens[i];
        a[0] = i;
        if (s.equals("*")) {
            int temp = helper(tokens, i - 1, a);
            return helper(tokens, a[0] - 1, a) * temp;
        } else if (s.equals("+")) {
            int temp = helper(tokens, i - 1, a);
            return helper(tokens, a[0] - 1, a) + temp;
        } else if (s.equals("-")) {
            int temp = helper(tokens, i - 1, a);
            return helper(tokens, a[0] - 1, a) - temp;
        } else if (s.equals("/")) {
            int temp = helper(tokens, i - 1, a);
            return helper(tokens, a[0] - 1, a) / temp;
        }
        a[0] = i;
        return Integer.parseInt(tokens[i]);
    }

    public int evalRPN(String[] tokens) {
        int[] ar = new int[] { tokens.length - 1 };
        return helper(tokens, tokens.length - 1, ar);
    }
}
