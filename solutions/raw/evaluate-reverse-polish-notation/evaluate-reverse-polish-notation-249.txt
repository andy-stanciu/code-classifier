class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> s = new Stack<>();
        for (String i : tokens) {
            int f = 0;
            switch(i) {
                case "+":
                    int a = (s.pop());
                    int b = (s.pop());
                    s.push(a + b);
                    f = 1;
                    break;
                case "-":
                    int a1 = (s.pop());
                    int b1 = (s.pop());
                    s.push(b1 - a1);
                    f = 1;
                    break;
                case "*":
                    int a2 = (s.pop());
                    int b2 = (s.pop());
                    s.push(a2 * b2);
                    f = 1;
                    break;
                case "/":
                    int a3 = (s.pop());
                    int b3 = (s.pop());
                    s.push(b3 / a3);
                    f = 1;
                    break;
            }
            if (f == 0)
                s.push(Integer.parseInt(i));
        }
        return s.pop();
    }
}
