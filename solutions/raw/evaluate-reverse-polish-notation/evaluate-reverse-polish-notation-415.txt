class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        //String tokensStr= String.join("", tokens); //Doesn\'t work because I\'m not only getting single-digit numbers
        for (String c : tokens) {
            switch(c) {
                case "+":
                    //.charValue()
                    stack.push(stack.pop() + stack.pop());
                    break;
                case "-":
                    //ordering l-r
                    stack.push(-stack.pop() + stack.pop());
                    break;
                case "*":
                    stack.push(stack.pop() * stack.pop());
                    break;
                case "/":
                    //ordering l-r //plus, remeber that we\'re dealing with ints, so 1/anythingOtherThanOne is a ZERO
                    stack.push((int) ((1 / (double) stack.pop()) * stack.pop()));
                    break;
                default:
                    stack.push(Integer.parseInt(c));
            }
        }
        return stack.pop();
    }
}
