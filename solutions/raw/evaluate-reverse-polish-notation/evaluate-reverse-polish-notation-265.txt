class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            String s = tokens[i];
            if (tokens[i].equals("*") || tokens[i].equals("-") || tokens[i].equals("/") || tokens[i].equals("+")) {
                int v2 = st.pop();
                int v1 = st.pop();
                st.push(calc(v1, v2, s));
            } else {
                int num = Integer.parseInt(s);
                st.push(num);
            }
        }
        return st.peek();
    }

    public static int calc(int v1, int v2, String st) {
        if (st.equals("+")) {
            return v1 + v2;
        }
        if (st.equals("-")) {
            return v1 - v2;
        }
        if (st.equals("*")) {
            return v1 * v2;
        } else {
            return v1 / v2;
        }
    }
}
