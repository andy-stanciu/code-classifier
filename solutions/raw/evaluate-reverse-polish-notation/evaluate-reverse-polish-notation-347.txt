class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> str = new Stack<Integer>();
        for (int i = 0; i < tokens.length; i++) {
            String s = tokens[i];
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("/") || tokens[i].equals("*")) {
                int pop1 = str.pop();
                int pop2 = str.pop();
                str.push(solve(pop1, pop2, s));
            } else {
                str.push(Integer.parseInt(s));
            }
        }
        return str.pop();
    }

    public static int solve(int pop1, int pop2, String s) {
        int ans = 0;
        if (s.equals("+")) {
            ans = pop1 + pop2;
        } else if (s.equals("-")) {
            ans = pop2 - pop1;
        } else if (s.equals("*")) {
            ans = pop2 * pop1;
        } else if (s.equals("/")) {
            ans = pop2 / pop1;
        }
        return ans;
    }
}
