class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<Integer>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("*") || tokens[i].equals("/")) {
                stack.add(calc(stack.pop(), stack.pop(), tokens[i]));
            } else
                stack.add(Integer.parseInt(tokens[i]));
        }
        return stack.pop();
    }

    public int calc(int j, int i, String oper) {
        if (oper.equals("+"))
            return i + j;
        else if (oper.equals("-"))
            return i - j;
        else if (oper.equals("*"))
            return i * j;
        return i / j;
    }
}
