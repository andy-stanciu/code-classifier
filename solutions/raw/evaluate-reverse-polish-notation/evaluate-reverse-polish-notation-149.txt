class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+")) {
                int j = 0;
                int sum = 0;
                while (j < 2) {
                    if (!st.isEmpty()) {
                        sum = sum + st.pop();
                    }
                    j++;
                }
                st.push(sum);
            } else if (tokens[i].equals("-")) {
                int j = 0;
                int sum = 0;
                while (j < 2) {
                    if (!st.isEmpty()) {
                        sum = st.pop() - sum;
                    }
                    j++;
                }
                st.push(sum);
            } else if (tokens[i].equals("/")) {
                int j = 0;
                int sum = 1;
                while (j < 2) {
                    if (!st.isEmpty()) {
                        sum = st.pop() / sum;
                    }
                    j++;
                }
                st.push(sum);
            } else if (tokens[i].equals("*")) {
                int j = 0;
                int sum = 1;
                while (j < 2) {
                    if (!st.isEmpty()) {
                        sum = sum * st.pop();
                    }
                    j++;
                }
                st.push(sum);
            } else {
                st.push(Integer.parseInt(tokens[i]));
            }
        }
        return st.pop();
    }
}
