class Solution {

    public int evalRPN(String[] tokens) {
        Set<String> oper = new HashSet<>();
        oper.add("+");
        oper.add("-");
        oper.add("*");
        oper.add("/");
        var stack = new Stack<Integer>();
        int a = 0;
        int b = 0;
        for (int i = 0; i < tokens.length; i++) {
            if (oper.contains(tokens[i])) {
                switch(tokens[i]) {
                    case "+" ->
                        {
                            a = stack.pop();
                            b = stack.pop();
                            stack.push(a + b);
                        }
                    case "*" ->
                        {
                            a = stack.pop();
                            b = stack.pop();
                            stack.push(a * b);
                        }
                    case "/" ->
                        {
                            a = stack.pop();
                            b = stack.pop();
                            stack.push(b / a);
                        }
                    case "-" ->
                        {
                            a = stack.pop();
                            b = stack.pop();
                            stack.push(b - a);
                        }
                }
            } else {
                stack.push(Integer.parseInt(tokens[i]));
            }
        }
        return stack.peek();
    }
}
