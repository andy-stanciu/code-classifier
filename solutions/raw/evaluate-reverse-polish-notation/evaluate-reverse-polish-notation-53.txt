class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stck = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if ((tokens[i].equals("+") != true) && (tokens[i].equals("-") != true) && (tokens[i].equals("*") != true) && (tokens[i].equals("/") != true)) {
                int integ1;
                //System.out.println(tokens[i]);
                integ1 = Integer.parseInt(tokens[i]);
                stck.push(integ1);
            } else {
                System.out.println(tokens[i]);
                if (stck.size() > 1) {
                    int b = stck.pop();
                    int a = stck.pop();
                    if (tokens[i].equals("+")) {
                        stck.push(a + b);
                        //System.out.println(a+b);
                    } else if (tokens[i].equals("-")) {
                        stck.push(a - b);
                        //System.out.println(a-b);
                    } else if (tokens[i].equals("*")) {
                        stck.push(a * b);
                        //System.out.println(a*b);
                    } else if (tokens[i].equals("/")) {
                        if (b != 0)
                            stck.push(a / b);
                        //System.out.println(a/b);
                    }
                }
            }
        }
        return stck.pop();
    }
}
