class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        int i = 0, n = tokens.length;
        while (i < n) {
            String s = tokens[i++];
            switch(s) {
                case "+":
                    st.push(st.pop() + st.pop());
                    break;
                case "/":
                    int divisor = st.pop();
                    int dividend = st.pop();
                    st.push(dividend / divisor);
                    break;
                case "-":
                    int subtrahend = st.pop();
                    int minuend = st.pop();
                    st.push(minuend - subtrahend);
                    break;
                case "*":
                    st.push(st.pop() * st.pop());
                    break;
                default:
                    st.push(Integer.parseInt(s));
                    break;
            }
        }
        return st.pop();
    }
}
