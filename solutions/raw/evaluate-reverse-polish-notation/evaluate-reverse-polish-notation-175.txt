class Solution {

    public int evalRPN(String[] arr) {
        int n = arr.length;
        Stack<Integer> s = new Stack<>();
        for (int i = 0; i < n; i++) {
            if (!arr[i].equals("+") && !arr[i].equals("-") && !arr[i].equals("*") && !arr[i].equals("/")) {
                int num = Integer.parseInt(arr[i]);
                s.push(num);
            } else {
                if (arr[i].equals("+")) {
                    int n1 = s.pop();
                    int n2 = s.pop();
                    int val = n1 + n2;
                    s.push(val);
                } else if (arr[i].equals("*")) {
                    int n1 = s.pop();
                    int n2 = s.pop();
                    int val = n1 * n2;
                    s.push(val);
                } else if (arr[i].equals("/")) {
                    int n1 = s.pop();
                    int n2 = s.pop();
                    int val = n2 / n1;
                    s.push(val);
                } else {
                    int n1 = s.pop();
                    int n2 = s.pop();
                    int val = n2 - n1;
                    s.push(val);
                }
            }
        }
        return s.peek();
    }
}
