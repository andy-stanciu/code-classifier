class Solution {

    public int strStr(String haystack, String needle) {
        // Firstly we need to check if haystack\'s length is smaller than needle it means needle is not exist in haystack so simply return -1.
        if (haystack.length() < needle.length()) {
            return -1;
        }
        // Iterate loop from oth character to haystack\'s length - needle\'s length +1 because we do not have startingf point after that.
        for (int i = 0; i < haystack.length() - needle.length() + 1; i++) {
            // Check if haystack\'s ith character and needle\'s 0th character are same then check all charcters of needle is exist in haystack or not.
            if (haystack.charAt(i) == needle.charAt(0)) {
                int s = i;
                int cnt = 0;
                // For check the needle is exist in haystack or not we need to Iterate loop over the needle string.
                for (int j = 0; j < needle.length(); j++) {
                    // Go at every character and check in the both string character is same or not if same just increase cnt.
                    if (haystack.charAt(s) == needle.charAt(j)) {
                        cnt++;
                        s++;
                    } else {
                        break;
                    }
                }
                // Check if cnt is equal to the needle\'s length it means needle is completely exist in haystack so simple return i.(beacuse i is a starting point of the needle string)
                if (cnt == needle.length()) {
                    return i;
                }
            }
        }
        // return -1.
        return -1;
    }
}
