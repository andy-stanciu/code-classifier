class Solution {

    public int strStr(String haystack, String needle) {
        // Length of haystack
        int n1 = haystack.length();
        // Length of needle
        int n2 = needle.length();
        // If needle is empty, return 0 (as per problem statement).
        if (n2 == 0) {
            return 0;
        }
        // If needle is longer than haystack, it can\'t be a substring.
        if (n2 > n1) {
            return -1;
        }
        // Iterate through the haystack, checking substrings of length n2.
        for (int i = 0; i <= n1 - n2; i++) {
            int j = 0;
            // Compare characters of haystack and needle.
            while (j < n2 && haystack.charAt(i + j) == needle.charAt(j)) {
                j++;
            }
            // If all characters match, return the starting index.
            if (j == n2) {
                return i;
            }
        }
        // If no match is found, return -1.
        return -1;
    }
}
