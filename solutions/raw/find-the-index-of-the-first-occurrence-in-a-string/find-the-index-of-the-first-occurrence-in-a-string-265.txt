class Solution {

    public int strStr(String haystack, String needle) {
        // Get the lengths of needle and haystack strings
        int n = needle.length();
        int m = haystack.length();
        // Initialize pointers for haystack (i) and needle (j)
        int i = 0;
        int j = 0;
        // Traverse haystack until the end
        while (i < m) {
            // Check if characters at i and j match
            if (haystack.charAt(i) == needle.charAt(j)) {
                // If they match, move both pointers to the right
                i++;
                j++;
                // If j reaches the length of needle, we have a match
                if (j == n) {
                    // Return the starting index of the match in haystack
                    return i - j;
                }
            } else {
                // If characters do not match, reset j to 0
                // Move i back to the next possible starting position
                i = i - j + 1;
                j = 0;
            }
        }
        // If no match is found, return -1
        return -1;
    }
}
