class Solution {

    public int strStr(String haystack, String needle) {
        int h = haystack.length();
        int n = needle.length();
        // Construct the LPS array
        int[] lps = constructLPS(needle);
        int i = 0, j = 0;
        while (i < h) {
            if (haystack.charAt(i) == needle.charAt(j)) {
                i++;
                j++;
            } else {
                if (j != 0) {
                    j = lps[j - 1];
                } else {
                    i++;
                }
            }
            // Needle found, return start index of needle in haystack
            if (j == n) {
                return i - j;
            }
        }
        // Needle not found
        return -1;
    }

    private int[] constructLPS(String needle) {
        int n = needle.length();
        int[] lps = new int[n];
        int j = 0;
        for (int i = 1; i < n; ) {
            if (needle.charAt(i) == needle.charAt(j)) {
                lps[i] = ++j;
                i++;
            } else {
                if (j != 0) {
                    j = lps[j - 1];
                } else {
                    lps[i] = 0;
                    i++;
                }
            }
        }
        return lps;
    }
}
