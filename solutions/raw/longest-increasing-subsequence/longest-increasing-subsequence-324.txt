class Solution {

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        //dp[i] contains the length of the longest subsequence that can be formed by that index
        int[] dp = new int[n];
        dp[0] = 1;
        //keep track of longest
        int count = 1;
        //edge case
        if (nums == null || n == 0) {
            return 0;
        } else if (n == 1) {
            return 1;
        }
        for (int i = 1; i < n; i++) {
            dp[i] = 1;
            for (int j = 0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    dp[i] = Math.max(dp[j] + 1, dp[i]);
                }
            }
            count = Math.max(count, dp[i]);
        }
        return count;
    }
}
