class Solution {

    public int func(int[] arr, int n, int ind, int prev_ind, int[][] dp) {
        if (ind == n)
            return 0;
        if (dp[ind][prev_ind + 1] != -1)
            return dp[ind][prev_ind + 1];
        int notTake = func(arr, n, ind + 1, prev_ind, dp);
        int take = 0;
        if (prev_ind == -1 || arr[ind] > arr[prev_ind]) {
            take = 1 + func(arr, n, ind + 1, ind, dp);
        }
        return dp[ind][prev_ind + 1] = Math.max(notTake, take);
    }

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[][] dp = new int[n][n + 1];
        for (int[] rows : dp) {
            Arrays.fill(rows, -1);
        }
        return func(nums, n, 0, -1, dp);
    }
}
