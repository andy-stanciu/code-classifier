class Solution {

    public int lengthOfLIS(int[] nums) {
        // array to store the sequence in sorted order
        int[] seq = new int[nums.length];
        int left = 0;
        int right = 0;
        int seqLen = 0;
        int item = 0;
        for (int i = 0; i < nums.length; i++) {
            left = 0;
            right = seqLen;
            // take one num in each iteration
            item = nums[i];
            while (left < right) {
                // check for the suitable index of item in seq array
                int mid = (left + right) / 2;
                if (seq[mid] >= item) {
                    right = mid;
                } else {
                    left = mid + 1;
                }
            }
            // if left(suitable index of item) is same as seqLen means it forms increasing  subsequence
            if (left == seqLen)
                seqLen++;
            // replace the itemin seq array at left(suitable index of item found out using the binary search)
            seq[left] = item;
        }
        // return the seqLen (aslo same as the seq array Length)
        return seqLen;
    }
}
