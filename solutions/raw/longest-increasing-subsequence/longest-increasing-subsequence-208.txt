class Solution {

    public int lengthOfLIS(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        List<Integer> ls = new ArrayList<>();
        for (int num : nums) {
            int pos = binarySearch(ls, num);
            if (pos < ls.size()) {
                ls.set(pos, num);
            } else {
                ls.add(num);
            }
        }
        return ls.size();
    }

    private int binarySearch(List<Integer> ls, int target) {
        int left = 0;
        int right = ls.size() - 1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (ls.get(mid) == target) {
                return mid;
            } else if (ls.get(mid) < target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return left;
    }
}
