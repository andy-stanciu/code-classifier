class Solution {

    public int recur(int idx, int[] nums, int prev, int[][] dp) {
        if (idx == nums.length)
            return 0;
        if (dp[idx][prev + 1] != -1)
            return dp[idx][prev + 1];
        int notPick = recur(idx + 1, nums, prev, dp);
        int pick = 0;
        if (prev == -1 || nums[prev] < nums[idx])
            pick = 1 + recur(idx + 1, nums, idx, dp);
        return dp[idx][prev + 1] = Math.max(notPick, pick);
    }

    public int lengthOfLIS(int[] nums) {
        int[][] dp = new int[nums.length + 1][nums.length + 1];
        for (int[] x : dp) Arrays.fill(x, -1);
        return recur(0, nums, -1, dp);
    }
}
