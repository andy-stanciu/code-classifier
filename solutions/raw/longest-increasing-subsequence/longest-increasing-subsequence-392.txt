class Solution {

    public int lengthOfLIS(int[] nums) {
        int size = nums.length;
        int[] sorted = new int[size];
        int sortedSize = 0;
        for (int i = 0; i < size; i++) {
            int num = nums[i];
            int index = binarySearch(sorted, 0, sortedSize - 1, num);
            if (index == sortedSize) {
                sorted[sortedSize++] = num;
            } else {
                sorted[index] = num;
            }
        }
        return sortedSize;
    }

    private int binarySearch(int[] buffer, int l, int r, int target) {
        while (l <= r) {
            int m = (l + r) >>> 1;
            int val = buffer[m];
            if (val < target) {
                l = m + 1;
            } else if (val > target) {
                r = m - 1;
            } else {
                return m;
            }
        }
        return l;
    }
}
