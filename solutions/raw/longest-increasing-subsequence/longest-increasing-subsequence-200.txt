class Solution {

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        if (n == 0)
            return 0;
        // Array to store the increasing subsequences\' end values
        int[] lis = new int[n];
        // Length of the longest increasing subsequence found so far
        int length = 0;
        for (int num : nums) {
            // Use binary search to find the position to replace or extend the lis array
            int pos = Arrays.binarySearch(lis, 0, length, num);
            // If num is not found, binarySearch returns (-(insertion point) - 1)
            if (pos < 0)
                pos = -(pos + 1);
            // Replace or extend the subsequence
            lis[pos] = num;
            // If we placed the num at the end, it means we have found a longer subsequence
            if (pos == length) {
                length++;
            }
        }
        return length;
    }
}
