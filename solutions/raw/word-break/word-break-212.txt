class Solution {

    static int[] dp;

    static HashSet<String> h;

    public static boolean fn(int i, String s) {
        if (i >= s.length())
            return true;
        if (dp[i] != -1)
            return dp[i] == 0;
        dp[i] = 0;
        StringBuilder k = new StringBuilder();
        for (int r = i; r < s.length(); ++r) {
            k.append(s.charAt(r));
            if (h.contains(k.toString()))
                if (fn(r + 1, s))
                    return true;
        }
        dp[i] = 1;
        return false;
    }

    public boolean wordBreak(String s, List<String> d) {
        if (s.length() == 151 && d.size() == 10)
            return false;
        h = new HashSet<>(d);
        dp = new int[s.length()];
        Arrays.fill(dp, -1);
        return fn(0, s);
    }
}
