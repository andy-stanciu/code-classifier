class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Boolean[] dp = new Boolean[s.length() + 1];
        return solve(s, wordDict, 0, dp);
    }

    private static boolean solve(String s, List<String> wordDict, int index, Boolean[] dp) {
        if (s.length() == 0)
            return false;
        if (index >= s.length())
            return true;
        if (dp[index] != null)
            return dp[index];
        dp[index] = false;
        for (int i = index + 1; i <= s.length(); i++) {
            String prefix = s.substring(index, i);
            if (wordDict.contains(prefix))
                dp[index] = dp[index] || true && solve(s, wordDict, i, dp);
        }
        return dp[index];
    }
}
