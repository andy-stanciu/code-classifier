class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> word = new HashSet<>(wordDict);
        int[] dp = new int[s.length()];
        Arrays.fill(dp, -1);
        return operations(0, s, word, dp);
    }

    public static boolean operations(int startIndex, String s, Set<String> word, int[] dp) {
        //base condtion
        if (startIndex == s.length())
            return true;
        if (dp[startIndex] != -1)
            return dp[startIndex] == 1 ? true : false;
        boolean result = false;
        for (int i = startIndex; i < s.length(); i++) {
            if (word.contains(s.substring(startIndex, i + 1))) {
                result = result || (operations(i + 1, s, word, dp));
            }
            if (result == true) {
                dp[startIndex] = 1;
                return true;
            }
        }
        dp[startIndex] = 0;
        return false;
    }
}
