class Solution {

    Set<String> set = null;

    HashMap<Integer, Boolean> map = new HashMap<>();

    public boolean wordBreak(String s, List<String> wordDict) {
        set = new HashSet(wordDict);
        return recur(s, s.length(), 0);
    }

    public boolean recur(String s, int n, int ind) {
        if (ind == n)
            return true;
        if (map.get(ind) != null)
            return map.get(ind);
        int i = ind;
        String sub = "";
        while (i < n) {
            sub += s.charAt(i);
            if (set.contains(sub)) {
                if (recur(s, n, i + 1)) {
                    map.put(ind, true);
                    return true;
                }
            }
            i++;
        }
        map.put(ind, false);
        return false;
    }
}
