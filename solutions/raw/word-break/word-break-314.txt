class Solution {

    HashMap<Integer, Boolean> set = new HashMap<>();

    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> words = new HashSet<>();
        for (String word : wordDict) {
            words.add(word);
        }
        return wordBreak2(s, words, 0);
    }

    public boolean wordBreak2(String s, Set<String> words, int start) {
        if (start == s.length())
            return true;
        if (set.containsKey(start))
            return set.get(start);
        StringBuilder br = new StringBuilder();
        for (int i = start; i < s.length(); i++) {
            br.append(s.charAt(i));
            if (words.contains(br.toString())) {
                if (wordBreak2(s, words, i + 1)) {
                    set.put(i + 1, true);
                    set.put(start, true);
                    return true;
                } else {
                    set.put(i + 1, false);
                    set.put(start, false);
                }
            }
        }
        return false;
    }
}
