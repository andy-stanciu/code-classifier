public class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        boolean[] dp = new boolean[s.length() + 1];
        // Empty string is always present in the dictionary
        dp[0] = true;
        for (int i = 1; i <= s.length(); i++) {
            for (String word : wordDict) {
                int wordLength = word.length();
                if (i >= wordLength && dp[i - wordLength] && s.substring(i - wordLength, i).equals(word)) {
                    // Mark current position as true if we can break at this point
                    dp[i] = true;
                    // No need to check further for this position
                    break;
                }
            }
        }
        return dp[s.length()];
    }
}
