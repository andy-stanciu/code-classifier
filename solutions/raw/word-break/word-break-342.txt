class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Boolean[] memo = new Boolean[s.length()];
        if (wordDict.contains(s)) {
            return true;
        }
        return wordBreak(s, 0, wordDict, memo);
    }

    public boolean wordBreak(String s, int index, List<String> wordDict, Boolean[] memo) {
        if (index == s.length()) {
            return true;
        }
        if (memo[index] != null) {
            return memo[index];
        }
        for (int i = index + 1; i <= s.length(); i++) {
            String str = s.substring(index, i);
            if (wordDict.contains(str) && wordBreak(s, i, wordDict, memo)) {
                return memo[index] = true;
            }
        }
        return memo[index] = false;
    }
}
