class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Boolean[] dp = new Boolean[s.length()];
        return solve(s, wordDict, 0, "", dp);
    }

    public boolean solve(String s, List<String> wordDict, int index, String subStr, Boolean[] dp) {
        if (index == s.length()) {
            return true;
        }
        if (dp[index] != null) {
            return dp[index];
        }
        for (String d : wordDict) {
            int len = index + d.length();
            if (len <= s.length()) {
                String sub = s.substring(index, len);
                if (sub.equals(d)) {
                    if (solve(s, wordDict, index + d.length(), subStr + sub + " ", dp)) {
                        return true;
                    }
                }
            }
        }
        return dp[index] = false;
    }
}
