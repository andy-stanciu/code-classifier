class Solution {

    int[] dp = new int[305];

    public boolean wordBreak(String s, List<String> wordDict) {
        HashSet<String> hs = new HashSet<>();
        for (String str : wordDict) hs.add(str);
        Arrays.fill(dp, -1);
        return helper(0, s, wordDict, hs);
    }

    public boolean helper(int index, String s, List<String> dict, HashSet<String> hs) {
        if (index >= s.length())
            return true;
        if (dp[index] != -1)
            return (dp[index] == 1 ? true : false);
        String temp = "";
        for (int k = index; k < s.length(); k++) {
            temp += s.charAt(k);
            if (hs.contains(temp)) {
                System.out.println(temp);
                if (helper(k + 1, s, dict, hs)) {
                    dp[k + 1] = 1;
                    return true;
                }
            }
        }
        dp[index] = 0;
        return false;
    }
}
