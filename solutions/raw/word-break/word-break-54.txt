class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        int n = s.length();
        HashSet<String> set = new HashSet<>(wordDict);
        //dp[i] contains if String s.substring(0, i) can be segmented into words in the dictionary.
        boolean[] dp = new boolean[n + 1];
        //dp[0] means if empty String can be segmented, which is true.
        dp[0] = true;
        for (int i = 1; i <= n; i++) {
            for (int j = 0; j < i; j++) {
                //If dp[j] is true and s.substring(j, i) is present in dictionary, then set dp[i] to true and break.
                if (dp[j] && set.contains(s.substring(j, i))) {
                    dp[i] = true;
                    break;
                }
            }
        }
        //dp[n] contains if String s.substring(0, n), which is String s can be segmented into words in the
        //dictionary or not.
        return dp[n];
    }
}
