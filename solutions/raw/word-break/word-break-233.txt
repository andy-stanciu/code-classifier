class Solution {

    //creating a new map to check whether their are any repeated tasks example a,aa,aaa,aaaa
    Map<String, Boolean> map = new HashMap();

    public boolean wordBreak(String s, List<String> wordDict) {
        //check if the dictionary contains s
        if (wordDict.contains(s))
            return true;
        //check that if it contains the key so that a repeated word is not added to map
        if (map.containsKey(s))
            return map.get(s);
        //dividing the string left and right so that comparing with the help of loops
        for (int i = 1; i < s.length(); i++) {
            String left = s.substring(0, i);
            //if left string contains the word and it should go in recursive so that remaining string is checked
            if (wordDict.contains(left) && wordBreak(s.substring(i), wordDict)) {
                //adding the element to map by making as true
                map.put(s, true);
                return true;
            }
        }
        //if above not satisfied it returns false
        map.put(s, false);
        return false;
    }
}
