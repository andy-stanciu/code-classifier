class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> words = new HashSet<>(wordDict);
        int n = s.length();
        boolean[] f = new boolean[n + 1];
        // base case
        f[0] = true;
        for (int i = 1; i <= n; i++) {
            String newInput = s.substring(0, i);
            for (int j = 0; j < i; j++) {
                // time complexity is n^2 / 2, i.e. n ^ 2
                if (words.contains(newInput.substring(j)) && f[j]) {
                    // n ^ 3
                    f[i] = true;
                    break;
                }
            }
        }
        return f[n];
    }
}
