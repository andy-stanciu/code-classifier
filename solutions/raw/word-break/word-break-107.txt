class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        boolean[] dp = new boolean[s.length() + 1];
        dp[s.length()] = true;
        int start = s.length() - 1;
        while (start >= 0) {
            boolean result = false;
            for (int index = 0; index < wordDict.size(); ++index) {
                String currentString = wordDict.get(index);
                if ((s.length() - start) >= currentString.length() && s.substring(start, start + currentString.length()).equals(currentString)) {
                    result = dp[start + currentString.length()];
                }
                if (result) {
                    break;
                }
            }
            dp[start] = result;
            --start;
        }
        return dp[0];
    }

    private String findMatch(String s, int start, List<String> wordDict) {
        boolean result = false;
        return null;
    }
}
