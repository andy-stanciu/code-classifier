class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        int[] dp = new int[s.length()];
        Arrays.fill(dp, -1);
        Set<String> set = new HashSet<>();
        for (int i = 0; i < wordDict.size(); i++) {
            set.add(wordDict.get(i));
        }
        if (check(0, s, set, dp) == 1)
            return true;
        else
            return false;
    }

    public int check(int i, String target, Set<String> set, int[] dp) {
        if (i == target.length()) {
            return 1;
        }
        if (dp[i] != -1)
            return dp[i];
        for (int j = i + 1; j <= target.length(); j++) {
            if (set.contains(target.substring(i, j)) && check(j, target, set, dp) == 1) {
                return dp[i] = 1;
            }
        }
        return dp[i] = 0;
    }
}
