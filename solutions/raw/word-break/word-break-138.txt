class Solution {

    String s;

    List<String> dict;

    Boolean[] memo;

    HashSet<String> set;

    int n = 0;

    public boolean wordBreak(String s, List<String> wordDict) {
        int n = s.length();
        this.s = s;
        this.dict = wordDict;
        this.memo = new Boolean[n];
        this.set = new HashSet<>(wordDict);
        this.n = s.length();
        return dp(0);
    }

    public boolean dp(int start) {
        if (start == n)
            return true;
        if (memo[start] != null)
            return memo[start];
        for (int end = start + 1; end <= n; end++) {
            if (set.contains(s.substring(start, end)) && dp(end)) {
                return memo[start] = true;
            }
        }
        return memo[start] = false;
    }
}
