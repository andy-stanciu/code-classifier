class Solution {

    /*public boolean f(int i,String s,Set<String> dict,boolean[] dp){
        if(i==s.length()) return true;
        if(dp[i]!=false) return dp[i];
        String temp="";
        for(int j=i;j<s.length();j++){
            char ch=s.charAt(j);
            temp=temp+ch;
            if(dict.contains(temp)){
                if(f(j+1,s,dict,dp)) return dp[i]=true;
            }
        }
        return dp[i]=false;
    }*/
    public boolean wordBreak(String s, List<String> wordDict) {
        boolean[] dp = new boolean[s.length() + 1];
        Arrays.fill(dp, false);
        HashSet<String> ans = new HashSet<>();
        for (String word : wordDict) {
            ans.add(word);
        }
        dp[0] = true;
        for (int i = 1; i <= s.length(); i++) {
            for (int j = i - 1; j >= 0; j--) {
                if (dp[j]) {
                    if (ans.contains(s.substring(j, i))) {
                        dp[i] = true;
                        break;
                    }
                }
            }
        }
        return dp[s.length()];
    }
}
