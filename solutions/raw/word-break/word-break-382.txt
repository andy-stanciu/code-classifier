class Solution {

    static boolean f(String s, Set<String> st, HashMap<String, Boolean> map) {
        if (st.contains(s))
            return true;
        if (map.containsKey(s))
            return map.get(s);
        for (int i = 1; i <= s.length(); i++) {
            if (st.contains(s.substring(0, i))) {
                boolean tem = f(s.substring(i), st, map);
                if (tem == true) {
                    map.put(s.substring(0, i), true);
                    return true;
                }
            }
        }
        map.put(s, false);
        return false;
    }

    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> st = new HashSet<>();
        for (String a : wordDict) st.add(a);
        HashMap<String, Boolean> map = new HashMap<>();
        return f(s, st, map);
    }
}
