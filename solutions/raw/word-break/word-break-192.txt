class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Boolean[] memo = new Boolean[s.length()];
        return exist(0, s, wordDict, memo);
    }

    public static boolean exist(int j, String s, List<String> wo, Boolean[] memo) {
        if (j == s.length()) {
            return true;
        }
        if (memo[j] != null) {
            return memo[j];
        }
        for (int i = 0; i < wo.size(); i++) {
            if (j + wo.get(i).length() <= s.length() && s.substring(j, j + wo.get(i).length()).equals(wo.get(i))) {
                if (exist(j + wo.get(i).length(), s, wo, memo)) {
                    memo[j] = true;
                    return true;
                }
            }
        }
        memo[j] = false;
        return false;
    }
}
