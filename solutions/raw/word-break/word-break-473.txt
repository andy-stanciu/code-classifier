class Solution {

    public Boolean[] dp;

    public boolean wordBreak(String s, List<String> wordDict) {
        dp = new Boolean[s.length() + 1];
        return solve(0, s, wordDict);
    }

    private boolean solve(int start, String s, List<String> wordDict) {
        if (start >= s.length()) {
            return true;
        }
        if (dp[start] != null) {
            return dp[start];
        }
        for (int end = start + 1; end <= s.length(); end++) {
            if (wordDict.contains(s.substring(start, end)) && solve(end, s, wordDict)) {
                return dp[start] = true;
            }
        }
        return dp[start] = false;
    }
}
