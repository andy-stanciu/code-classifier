class Solution {

    Map<String, Boolean> dp = new HashMap<>();

    boolean solve(Set<String> hs, String s) {
        if (s.length() == 0)
            return true;
        if (dp.containsKey(s))
            return dp.get(s);
        for (int i = 0; i < s.length(); i++) {
            String temp = s.substring(0, i + 1);
            if (hs.contains(temp)) {
                if (solve(hs, s.substring(i + 1))) {
                    dp.put(s, true);
                    return true;
                }
            }
        }
        dp.put(s, false);
        return false;
    }

    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> hs = new HashSet<>();
        for (String I : wordDict) hs.add(I);
        return solve(hs, s);
    }
}
