class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Map<String, Boolean> map = new HashMap<>();
        return canWordBreak(s, wordDict, map);
    }

    private boolean canWordBreak(String s, List<String> wordDict, Map<String, Boolean> map) {
        if (s.isEmpty()) {
            return true;
        }
        if (map.containsKey(s)) {
            return map.get(s);
        }
        for (String word : wordDict) {
            if (s.startsWith(word)) {
                String remaining = s.substring(word.length());
                if (canWordBreak(remaining, wordDict, map)) {
                    map.put(s, true);
                    return true;
                }
            }
        }
        map.put(s, false);
        return false;
    }
}
