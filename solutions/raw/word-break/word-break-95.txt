class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> set = new HashSet<>(wordDict);
        // return helper(s,set);
        boolean[] dp = new boolean[s.length() + 1];
        dp[0] = true;
        for (int i = 0; i <= s.length(); i++) {
            for (int j = 0; j < i; j++) {
                if (dp[j] && set.contains(s.substring(j, i))) {
                    dp[i] = true;
                    break;
                }
            }
        }
        //System.out.print(Arrays.toString(dp));
        return dp[dp.length - 1];
    }
    // boolean helper(String s , Set<String> set){
    //    if(s.length() == 0){
    //     return true;
    //    }
    //    for(int i = 1 ; i <= s.length() ; i++){
    //     if(set.contains(s.substring(0,i)) && helper(s.substring(i) , set)){
    //         return true;
    //     }
    //    }
    //    return false;
    // }
}
