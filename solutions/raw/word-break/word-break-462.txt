class Solution {

    public boolean wordBreak(String str, List<String> wordDict) {
        Set<Integer> offsetsWithNoSolution = new HashSet<>();
        return wordBreak(str, wordDict, 0, offsetsWithNoSolution);
    }

    public boolean wordBreak(String str, List<String> wordDict, int offset, Set<Integer> cache) {
        if (cache.contains(offset))
            return false;
        else if (offset == str.length())
            return true;
        for (String word : wordDict) {
            if (str.startsWith(word, offset))
                if (wordBreak(str, wordDict, offset + word.length(), cache))
                    return true;
        }
        cache.add(offset);
        return false;
    }
}
