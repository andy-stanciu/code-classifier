class Solution {

    Boolean[] memo;

    public boolean wordBreak(String s, List<String> wordDict) {
        memo = new Boolean[s.length() + 1];
        return dp(s, 0, new HashSet<>(wordDict));
    }

    public boolean dp(String s, int i, Set<String> wordDict) {
        int n = s.length();
        if (i == n)
            return true;
        if (memo[i] != null)
            return memo[i];
        for (int j = i + 1; j <= n; j++) {
            String word = s.substring(i, j);
            if (wordDict.contains(word) && dp(s, j, wordDict)) {
                memo[i] = true;
                return true;
            }
        }
        memo[i] = false;
        return false;
    }
}
