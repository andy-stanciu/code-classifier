class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        //O(n)
        Set<String> words = new HashSet<>(wordDict);
        //used to store if first i char can be space separated or not
        boolean[] dp = new boolean[s.length() + 1];
        dp[0] = true;
        //O(m^3), substring - o(m)
        for (int i = 0; i < s.length(); i++) {
            for (int j = i; j >= 0; j--) {
                dp[i + 1] = dp[j] && words.contains(s.substring(j, i + 1));
                if (dp[i + 1])
                    break;
            }
        }
        return dp[s.length()];
    }
}
