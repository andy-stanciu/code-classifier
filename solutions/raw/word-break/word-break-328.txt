class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        // dp(i) = dp(i+w.length) for each w in wordDict if s[i:w.length]==w
        int n = s.length();
        boolean[] valid = new boolean[n + 1];
        valid[n] = true;
        for (int i = n - 1; i >= 0; i--) {
            // at each character of s, check if the substring starting from this character is present in wordDict
            for (String word : wordDict) {
                int k = word.length();
                if (i + k <= n && s.substring(i, i + k).equals(word)) {
                    valid[i] = valid[i + k];
                }
                // once the substring starting from i is valid, go for previous character
                if (valid[i])
                    break;
            }
        }
        return valid[0];
    }
}
