class Solution {

    boolean ans = false;

    boolean[] seen;

    public boolean wordBreak(String s, List<String> wordDict) {
        HashSet<String> set = new HashSet<>(wordDict);
        seen = new boolean[s.length() + 1];
        seen[0] = true;
        dfs(s, 0, set);
        return this.ans;
    }

    public void dfs(String s, int start, HashSet<String> set) {
        if (start == s.length()) {
            this.ans = true;
            return;
        } else {
            for (int end = start + 1; end < s.length() + 1; end++) {
                String candidate = s.substring(start, end);
                if (set.contains(candidate) && !seen[end]) {
                    seen[end] = true;
                    dfs(s, end, set);
                }
            }
        }
    }
}
