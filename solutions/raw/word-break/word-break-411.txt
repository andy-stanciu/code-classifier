class Solution {

    Boolean[] dp = null;

    public boolean wordBreak(String s, List<String> wordDict) {
        dp = new Boolean[s.length() + 1];
        return checkWord(s, 0, wordDict);
    }

    public boolean checkWord(String s, int i, List<String> wordDict) {
        if (i == s.length())
            return true;
        if (dp[i] != null)
            return dp[i];
        for (int j = i; j < s.length(); j++) {
            if (isWordPresent(s, i, j + 1, wordDict) && checkWord(s, j + 1, wordDict)) {
                return dp[i] = true;
            }
        }
        return dp[i] = false;
    }

    public boolean isWordPresent(String s, int l, int r, List<String> wordDict) {
        String word = s.substring(l, r);
        return wordDict.contains(word);
    }
}
