class Solution {

    public boolean callRec(String s, List<String> wordDict, Map<String, Boolean> dp) {
        boolean r = false;
        for (int j = 0; j < wordDict.size(); j++) {
            String temp = wordDict.get(j);
            if (s.equals(temp))
                return true;
            if (dp.get(s) != null)
                return dp.get(s);
            if (s.length() >= temp.length()) {
                if (s.substring(0, temp.length()).equals(temp)) {
                    r = r || callRec(s.substring(temp.length()), wordDict, dp);
                }
            }
        }
        dp.put(s, r);
        return r;
    }

    public boolean wordBreak(String s, List<String> wordDict) {
        Map<String, Boolean> dp = new HashMap<>();
        return callRec(s, wordDict, dp);
    }
}
