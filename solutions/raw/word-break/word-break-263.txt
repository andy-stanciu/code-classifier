class Solution {

    static Boolean[] dp;

    static boolean f(int idx, String s, List<String> wordDict) {
        int n = s.length();
        if (idx == n) {
            return true;
        }
        if (dp[idx] != null) {
            return dp[idx];
        }
        for (int i = idx; i < s.length(); i++) {
            String str = s.substring(idx, i + 1);
            if (wordDict.contains(str) && f(i + 1, s, wordDict)) {
                dp[idx] = true;
                return true;
            }
        }
        dp[idx] = false;
        return false;
    }

    public boolean wordBreak(String s, List<String> wordDict) {
        int n = s.length();
        dp = new Boolean[n];
        return f(0, s, wordDict);
    }
}
