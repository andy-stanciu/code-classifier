class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        int[] dp = new int[s.length()];
        Arrays.fill(dp, -1);
        return solve(s, wordDict, 0, dp) == 0 ? false : true;
    }

    static int solve(String s, List<String> wordDict, int idx, int[] dp) {
        if (idx == s.length()) {
            return 1;
        }
        if (dp[idx] != -1) {
            return dp[idx];
        }
        String res = "";
        for (int i = idx; i < s.length(); i++) {
            res += s.charAt(i);
            if (wordDict.contains(res)) {
                if (solve(s, wordDict, i + 1, dp) != 0) {
                    return dp[idx] = 1;
                }
            }
        }
        return dp[idx] = 0;
    }
}
