class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        if (s == null || s.length() == 0 || wordDict == null || wordDict.size() == 0) {
            return false;
        }
        boolean[] dpTable = new boolean[s.length() + 1];
        dpTable[s.length()] = true;
        for (int i = s.length() - 1; i >= 0; i--) {
            for (String word : wordDict) {
                int maxLength = s.length() - i;
                if (word.length() <= maxLength && s.substring(i, i + word.length()).equals(word)) {
                    dpTable[i] = dpTable[i + word.length()];
                    if (dpTable[i]) {
                        break;
                    }
                }
            }
        }
        return dpTable[0];
    }
}
