class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> set = new HashSet<>();
        for (String str : wordDict) set.add(str);
        Map<String, Boolean> map = new HashMap<>();
        return traverse(s, set, map);
    }

    public boolean traverse(String s, Set<String> set, Map<String, Boolean> map) {
        if (//base case
        s.equals(""))
            return true;
        if (map.containsKey(s))
            return map.get(s);
        for (int i = 1; i <= s.length(); i++) {
            boolean flag = traverse(s.substring(i, s.length()), set, map);
            if (set.contains(s.substring(0, i)) && flag) {
                map.put(s.substring(i, s.length()), flag);
                return true;
            }
            map.put(s.substring(i, s.length()), flag);
        }
        return false;
    }
}
