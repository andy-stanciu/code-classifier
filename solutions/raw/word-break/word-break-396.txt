class Solution {

    public boolean wordBreak(String s, List<String> wordDict) {
        int[] dp = new int[s.length() + 1];
        Arrays.fill(dp, -1);
        return helper(s, wordDict, dp);
    }

    boolean helper(String s, List<String> wordDict, int[] dp) {
        if (s.length() == 0)
            return true;
        if (dp[s.length()] != -1)
            return dp[s.length()] == 1;
        for (int i = 0; i <= s.length(); i++) {
            if (wordDict.contains(s.substring(0, i))) {
                if (helper(s.substring(i), wordDict, dp)) {
                    dp[s.length()] = 1;
                    return true;
                }
            }
        }
        dp[s.length()] = 0;
        return false;
    }
}
