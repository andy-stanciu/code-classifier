/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/*
    [1,2,3,4,5] , 2 from last = 5(length) - 2  + 1;
  */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode h = head, prev = null;
        // Count total number of nodes
        int count = 0;
        while (h != null) {
            count++;
            h = h.next;
        }
        int c = 0;
        h = head;
        while (c != count - n) {
            c++;
            prev = h;
            h = h.next;
        }
        // System.out.println("got: "+ h.val);
        if (prev != null)
            prev.next = h.next;
        else
            // if prev is not moved yet ie. first node to be delted
            head = head.next;
        return head;
    }
}
