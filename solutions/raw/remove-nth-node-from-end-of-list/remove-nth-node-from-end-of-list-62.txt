/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null) {
            return head;
        }
        //size-n+1
        int size = 0;
        ListNode temp = head;
        while (temp != null) {
            size++;
            temp = temp.next;
        }
        int pos = size - n + 1;
        if (pos == 1) {
            head = head.next;
            return head;
        } else {
            pos--;
            ListNode temp1 = head;
            ListNode temp2 = head;
            while (pos > 0) {
                temp1 = temp2;
                temp2 = temp2.next;
                pos--;
            }
            temp1.next = temp2.next;
            temp2.next = null;
            temp2 = null;
            return head;
        }
    }
}
