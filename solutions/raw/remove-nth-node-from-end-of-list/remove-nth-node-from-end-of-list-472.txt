/**
 *  Definition for singly-linked list.
 *  public class ListNode {
 *      int val;
 *      ListNode next;
 *      ListNode() {}
 *      ListNode(int val) { this.val = val; }
 *      ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 *
 * n = 3
 * 1 -> 2 -> 3 -> 4 -> 5
 *          *
 *          *
 *          *
 *  }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        var current = head;
        var sec = head;
        var previous = head;
        if (head.next == null)
            return head = head.next;
        for (int i = 0; i < n - 1; i++) {
            sec = sec.next;
        }
        while (sec.next != null) {
            previous = current;
            current = current.next;
            sec = sec.next;
        }
        if (current != head) {
            previous.next = current.next;
            current.next = null;
        } else
            head = current.next;
        return head;
    }
}
