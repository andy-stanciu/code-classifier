/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    int target;

    boolean stop;

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null) {
            return head;
        }
        if (head.next == null && n == 1) {
            return null;
        }
        target = n;
        stop = false;
        helper(head, head.next);
        if (!stop) {
            return head.next;
        }
        return head;
    }

    public int helper(ListNode prev, ListNode curr) {
        int depth;
        if (curr.next == null) {
            depth = 1;
        } else {
            depth = 1 + helper(curr, curr.next);
        }
        if (stop) {
            return -1;
        }
        if (target == depth) {
            prev.next = curr.next;
            stop = true;
            return -1;
        }
        return depth;
    }
}
