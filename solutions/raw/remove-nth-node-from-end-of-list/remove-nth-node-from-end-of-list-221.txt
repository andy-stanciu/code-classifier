class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        // note the n is counting from end going backwards
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode first = dummy, sec = dummy;
        for (int i = 0; i <= n; i++) {
            // maintaining the difference of n between first and second pointer
            first = first.next;
        }
        while (first != null) {
            //when first pointer arrives the end, the position of second pointer is what we need
            first = first.next;
            sec = sec.next;
        }
        // simple removal
        sec.next = sec.next.next;
        return dummy.next;
    }
}
