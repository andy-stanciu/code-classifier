/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    int nodeCount = 0;

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummyHead = new ListNode(-1);
        dummyHead.next = head;
        recursion(head, dummyHead, 0, n);
        return dummyHead.next;
    }

    public void recursion(ListNode node, ListNode prev, int count, int n) {
        if (node == null) {
            nodeCount = count;
            return;
        }
        recursion(node.next, node, count + 1, n);
        if (nodeCount - count == n) {
            prev.next = node.next;
        }
    }
}
