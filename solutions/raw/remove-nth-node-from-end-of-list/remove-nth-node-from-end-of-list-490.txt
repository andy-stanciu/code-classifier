/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode tmp = head;
        int length;
        for (length = 0; tmp != null; length++) {
            tmp = tmp.next;
        }
        int toremove = length - n;
        if (toremove == 0) {
            return head.next;
        }
        ListNode curr = head;
        ListNode prev = null;
        for (int i = 0; i < toremove; i++) {
            prev = curr;
            curr = curr.next;
        }
        if (toremove == length - 1) {
            prev.next = null;
        } else {
            prev.next = curr.next;
            curr.next = null;
        }
        return head;
    }
}
