/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr = head;
        List<Integer> res = new ArrayList<>();
        while (curr != null) {
            res.add(curr.val);
            curr = curr.next;
        }
        ListNode newhead = null;
        for (int i = res.size() - 1; i >= 0; i--) {
            if (i == res.size() - n) {
                continue;
            } else {
                ListNode temp = new ListNode(res.get(i));
                temp.next = newhead;
                newhead = temp;
            }
        }
        return newhead;
    }
}
