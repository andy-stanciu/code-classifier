class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr = head;
        // Get the length and remove by index (Two Passes)
        int len = 1;
        while (curr.next != null) {
            curr = curr.next;
            len++;
        }
        // e.g. head = [1,2,3,4,5], n = 2, target = 5 - 2 + 1 = 4
        int target = len - n + 1;
        // Create dummy node to point to the new head
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        curr = dummy;
        // We move curr to target\'s parent, which needs (target - 1) moves
        for (int i = 1; i < target; i++) {
            curr = curr.next;
        }
        // Remove the target
        curr.next = curr.next.next;
        return dummy.next;
    }
}
