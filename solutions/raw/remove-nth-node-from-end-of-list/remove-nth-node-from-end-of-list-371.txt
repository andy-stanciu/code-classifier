/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode nextone = head;
        ListNode dummy = new ListNode(0);
        ListNode prev = dummy;
        dummy.next = head;
        ListNode curr = head;
        int size = 0;
        while (curr != null) {
            curr = curr.next;
            size++;
        }
        int pos = size - n;
        curr = head;
        for (int i = 0; i < pos; i++) {
            if (i == pos - 1) {
                prev = curr;
            }
            curr = curr.next;
        }
        prev.next = curr.next;
        curr.next = null;
        return dummy.next;
    }
}
