/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public int lengthLL(ListNode head) {
        ListNode curr = head;
        int count = 0;
        while (curr != null) {
            count++;
            curr = curr.next;
        }
        return count;
    }

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int length = lengthLL(head);
        ListNode curr = head, del = null;
        if (curr.next == null)
            return null;
        for (int i = 1; i < length - n; i++) curr = curr.next;
        if (length == n) {
            head = head.next;
        } else if (curr.next != null && curr.next.next != null) {
            del = curr.next;
            curr.next = curr.next.next;
            del.next = null;
        } else {
            curr.next = null;
        }
        return head;
    }
}
