/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public int Count(ListNode head) {
        ListNode temp = head;
        int cnt = 0;
        while (temp != null) {
            cnt++;
            temp = temp.next;
        }
        return cnt;
    }

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int c = Count(head);
        if (head.next == null && n == 1) {
            return null;
        }
        if (head == null) {
            return null;
        }
        ListNode temp = head;
        ListNode temp1 = head;
        for (int i = 0; i < c - n; i++) {
            temp1 = temp;
            temp = temp.next;
        }
        if (c == n) {
            head = head.next;
        } else {
            temp1.next = temp.next;
            temp.next = null;
        }
        return head;
    }
}
