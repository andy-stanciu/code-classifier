/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null) {
            return head;
        }
        ListNode remove;
        int length = 0;
        ListNode temp = head;
        while (temp != null) {
            length++;
            temp = temp.next;
        }
        if (n > length) {
            return head;
        }
        int expectedNode = length - (n);
        ListNode prev = head;
        temp = head;
        while (temp != null) {
            if (expectedNode == 0) {
                if (prev == temp) {
                    return temp.next;
                }
                prev.next = temp.next;
                return head;
            }
            prev = temp;
            temp = temp.next;
            expectedNode--;
        }
        return head;
    }
}
