/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public int length(ListNode head) {
        ListNode curr = head;
        int len = 0;
        while (curr != null) {
            len++;
            curr = curr.next;
        }
        return len;
    }

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int l = length(head);
        if (head == null) {
            return head;
        }
        if (l - n == 0) {
            head = head.next;
            return head;
        }
        //int i = 0;
        ListNode curr = head;
        for (int i = 0; i < l - n - 1; i++) {
            curr = curr.next;
        }
        //if(curr.next != null){
        curr.next = curr.next.next;
        //}
        return head;
    }
}
