/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null) {
            return head;
        }
        ListNode current = head;
        int listLength = 0;
        while (current != null) {
            listLength++;
            current = current.next;
        }
        if (listLength == n)
            return head.next;
        int nThNodeFromTheStart = listLength - n;
        int count = 1;
        ListNode newCurrent = head;
        while (count < nThNodeFromTheStart) {
            newCurrent = newCurrent.next;
            count++;
        }
        newCurrent.next = newCurrent.next.next;
        return head;
    }
}
