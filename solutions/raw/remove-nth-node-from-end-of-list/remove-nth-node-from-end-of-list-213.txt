/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int size = 0;
        //temp is used to measure size of linkedlist
        ListNode temp = head;
        ListNode curr = head;
        /*------------------------------------------*/
        while (temp != null) {
            size++;
            temp = temp.next;
        }
        /*------------------------------------------*/
        if (size == n) {
            //if size == n then we don\'t need first node
            return curr.next;
        }
        int k = size - n;
        for (int i = 1; i < k; i++) {
            //curr pointer points before delete node
            curr = curr.next;
        }
        ListNode store = curr.next.next;
        curr.next.next = null;
        curr.next = null;
        curr.next = store;
        return head;
    }
}
