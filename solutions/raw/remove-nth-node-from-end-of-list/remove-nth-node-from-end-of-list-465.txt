/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode cur = head;
        int counter = 1;
        while (cur.next != null) {
            cur = cur.next;
            counter++;
        }
        if (counter == 1 || n > counter) {
            System.out.println("return here");
            head = head.next;
            return head;
        }
        int remove = counter - (n - 1);
        System.out.println("counter : " + counter);
        System.out.println("remove : " + remove);
        ListNode newCur = head;
        int newCounter = 1;
        if (remove == 1) {
            head = head.next;
            return head;
        }
        while (newCur.next != null) {
            System.out.println("counter : " + newCounter);
            System.out.println("remove : " + remove);
            System.out.println("cur val : " + newCur.val);
            if (newCounter == remove - 1) {
                newCur.next = newCur.next.next;
                break;
            }
            newCur = newCur.next;
            newCounter++;
        }
        return head;
    }
}
