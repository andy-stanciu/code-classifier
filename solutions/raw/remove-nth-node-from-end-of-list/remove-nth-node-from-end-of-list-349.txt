/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummy = new ListNode(1);
        dummy.next = head;
        ListNode frontNode = dummy;
        ListNode backNode = dummy;
        for (int i = 0; i <= n; i++) {
            frontNode = frontNode.next;
        }
        while (frontNode != null) {
            frontNode = frontNode.next;
            backNode = backNode.next;
        }
        if (backNode.next != null) {
            backNode.next = backNode.next.next;
        }
        return dummy.next;
    }
}
