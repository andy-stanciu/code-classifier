/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public int getSize(ListNode head) {
        int size = 0;
        while (head != null) {
            head = head.next;
            size++;
        }
        return size;
    }

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null || head.next == null) {
            return null;
        }
        int size = getSize(head);
        ListNode previous = head;
        for (int i = 1; i < size - n; i++) {
            previous = previous.next;
        }
        if (size == n) {
            head = head.next;
            return head;
        }
        previous.next = previous.next.next;
        return head;
    }
}
