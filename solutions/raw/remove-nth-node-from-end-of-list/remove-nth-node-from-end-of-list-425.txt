/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr = head;
        int i = 0, size = 0;
        while (curr != null) {
            size++;
            curr = curr.next;
        }
        curr = head;
        int index = size - n;
        for (i = 0; i < index - 1; i++) {
            curr = curr.next;
        }
        System.out.print(size);
        if (index == size - 1 && size != 1) {
            curr.next = null;
            return head;
        } else if (size == index + 1) {
            head = null;
            return head;
        } else if (index == 0) {
            head = head.next;
            return head;
        }
        ListNode temp = curr.next;
        temp = temp.next;
        // curr=curr.next;
        curr.next = temp;
        //curr.next=
        //temp=temp.next;
        //curr.next=temp;
        return head;
    }
}
