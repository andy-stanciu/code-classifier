/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int size = 0;
        ListNode node = head;
        ListNode node2 = head;
        while (node != null) {
            size++;
            node = node.next;
        }
        size = size - n;
        //If there is a single element
        if (size == 1) {
            head.next = head.next.next;
            return head;
        } else if (size == 0) {
            //else if there are not elements
            return head.next;
        }
        for (int i = 1; i < size; i++) {
            //finding the position just before the;
            node2 = node2.next;
        }
        node2.next = node2.next.next;
        return head;
    }
}
