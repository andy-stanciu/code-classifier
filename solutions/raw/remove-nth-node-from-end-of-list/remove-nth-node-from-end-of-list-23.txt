/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/*
    [1,2,3,4,5] , 2 from last = 5(length) - 2  + 1;
  */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode first = head, second = head, follow = null;
        int count = 0;
        while (first != null) {
            count++;
            if (count > n) {
                // move both
                follow = second;
                second = second.next;
                first = first.next;
            } else {
                // move first only
                first = first.next;
            }
        }
        if (// delete first only
        follow == null)
            head = head.next;
        else
            follow.next = second.next;
        return head;
    }
}
