/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int l = length(head);
        if (l == 1) {
            head = null;
            return head;
        } else if (l == 2) {
            if (n == 1) {
                head.next = null;
                return head;
            }
            head = head.next;
            return head;
        }
        ListNode temp = head;
        ListNode curr = temp.next.next;
        int val = l - n - 1;
        while (val-- > 0) {
            temp = temp.next;
            curr = curr.next;
        }
        if (l == n) {
            head = head.next;
        } else {
            temp.next = curr;
        }
        return head;
    }

    public int length(ListNode head) {
        ListNode temp = head;
        int count = 0;
        while (temp != null) {
            temp = temp.next;
            count++;
        }
        return count;
    }
}
