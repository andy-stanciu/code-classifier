/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    static int countNodes(ListNode head) {
        int count = 0;
        while (head != null) {
            count++;
            head = head.next;
        }
        return count;
    }

    public ListNode removeNthFromEnd(ListNode head, int x) {
        int n = countNodes(head);
        n = n - x;
        ListNode current, prev = null;
        current = head;
        if (n < 0) {
            return prev;
        } else if (n == 0) {
            head = head.next;
            return head;
        }
        while (n > 0) {
            prev = current;
            current = current.next;
            n--;
        }
        prev.next = current.next;
        current.next = null;
        return head;
    }
}
