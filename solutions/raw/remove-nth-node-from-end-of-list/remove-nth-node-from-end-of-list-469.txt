/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        Map<Integer, ListNode> map = new HashMap<>();
        ListNode root = new ListNode();
        root.next = head;
        int index = 0;
        map.put(index, root);
        while (head != null) {
            index++;
            map.put(index, head);
            head = head.next;
        }
        ListNode left = map.get(index - n);
        ListNode right = map.get(index - (n - 2));
        left.next = right;
        return root.next;
    }
}
