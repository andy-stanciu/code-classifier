/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode leftPtr = head;
        ListNode rightPtr = head;
        ListNode prevPtr = null;
        int diff = 0;
        while (rightPtr != null) {
            if (diff == n) {
                prevPtr = leftPtr;
                leftPtr = leftPtr.next;
            } else {
                diff++;
            }
            rightPtr = rightPtr.next;
        }
        if (prevPtr == null) {
            head = leftPtr.next;
        } else {
            prevPtr.next = leftPtr.next;
        }
        leftPtr.next = null;
        return head;
    }
}
