/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int count = 0;
        ListNode temp = head;
        while (temp != null) {
            ++count;
            temp = temp.next;
        }
        return deleteAtGivenPosition(head, count - n);
    }

    private ListNode deleteAtGivenPosition(ListNode head, int n) {
        //  System.out.println(n);
        if (n == 0 && head != null)
            return head.next;
        ListNode prev = head;
        for (int i = 1; i < n; i++) {
            if (prev != null) {
                prev = prev.next;
            }
        }
        if (prev.next != null) {
            prev.next = prev.next.next;
            return head;
        }
        return null;
    }
}
