/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Idea: n from end => (length-n+1) from start
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int l = 0;
        ListNode tmp = head;
        while (tmp != null) {
            l++;
            tmp = tmp.next;
        }
        if (l == n) {
            return head.next;
        }
        int pos = l - n + 1;
        l = 1;
        tmp = head;
        ListNode prev = null;
        while (l != pos) {
            prev = tmp;
            tmp = tmp.next;
            l++;
        }
        if (tmp != null)
            prev.next = tmp.next;
        else
            prev.next = null;
        return head;
    }
}
