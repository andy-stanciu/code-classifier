// java
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        // add a dummy node to deal with the border issue
        ListNode dummy = new ListNode(-1, head);
        ListNode fast = head, slow = dummy;
        // the fast pointer is N steps ahead of the slow pointer
        for (int i = 0; i < n; i++) fast = fast.next;
        // if the fast pointer reaches the end, then the slow pointer will be pointing to before the node which we want to delete
        while (fast != null) {
            fast = fast.next;
            slow = slow.next;
        }
        slow.next = slow.next.next;
        return dummy.next;
    }
}
