/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int length = 0;
        ListNode curr = head;
        //Length calculate
        while (curr != null) {
            length++;
            curr = curr.next;
        }
        int jump = length - n;
        // For one elemet in LinkList
        if (jump == 0) {
            return head.next;
        }
        //Traverse again from head
        curr = head;
        for (int i = 0; i < jump - 1; i++) {
            curr = curr.next;
        }
        curr.next = curr.next.next;
        return head;
    }
}
