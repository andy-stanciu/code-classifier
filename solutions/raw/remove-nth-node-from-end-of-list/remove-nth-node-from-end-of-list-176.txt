/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        //if LL have 0 or 1 element
        if (head == null || head.next == null)
            return null;
        //count no elements in LL
        int c = 0;
        ListNode temp = head;
        while (temp != null) {
            temp = temp.next;
            c++;
        }
        //if n==c then we have to remove head
        if (n == c)
            return head.next;
        temp = head;
        for (int i = 0; i < c - n - 1; i++) temp = temp.next;
        if (//if n==1 then we have to remove last element
        n == 1)
            //if n==1 then we have to remove last element
            temp.next = null;
        else
            // removing nth element
            temp.next = temp.next.next;
        return head;
    }
}
