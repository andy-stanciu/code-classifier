public class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode slow = dummy;
        ListNode fast = dummy;
        // Move fast pointer n+1 steps ahead.
        for (int i = 0; i <= n; i++) {
            fast = fast.next;
        }
        // If fast is null, remove the head.
        if (fast == null) {
            ListNode temp = head;
            head = head.next;
            temp = null;
            return head;
        }
        // Move both slow and fast pointers until fast reaches the end of the list.
        while (fast != null) {
            slow = slow.next;
            fast = fast.next;
        }
        // Skip the nth node from the end by updating the pointers.
        ListNode toBeDeleted = slow.next;
        slow.next = slow.next.next;
        toBeDeleted = null;
        // Return the updated head.
        return dummy.next;
    }
}
