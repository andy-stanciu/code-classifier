/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int length = 0;
        ListNode curr = head;
        // Calculate the length of the list
        while (curr != null) {
            length++;
            curr = curr.next;
        }
        // Use a dummy node to simplify edge cases
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        curr = dummy;
        // Find the node just before the one we want to remove
        for (int i = 0; i < length - n; i++) {
            curr = curr.next;
        }
        // Remove the nth node from the end
        if (curr.next != null) {
            curr.next = curr.next.next;
        }
        return dummy.next;
    }
}
