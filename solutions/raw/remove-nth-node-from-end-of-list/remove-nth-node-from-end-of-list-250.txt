/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode t1 = head;
        ListNode t2 = head;
        int count = 0;
        while (t1 != null) {
            t1 = t1.next;
            count++;
        }
        if (count == 0) {
            return null;
        }
        if (count == 1 && n == 1) {
            return null;
        }
        if (count == 2 && n == 1) {
            t1 = head;
            t1.next = null;
            return t1;
        }
        if (count == n) {
            head = head.next;
            return head;
        }
        for (int i = 1; i < n; i++) {
            t2 = t2.next;
        }
        t1 = head;
        while (t2.next.next != null) {
            t1 = t1.next;
            t2 = t2.next;
        }
        t1.next = t1.next.next;
        return head;
    }
}
