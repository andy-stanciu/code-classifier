/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        List<ListNode> nodes = new ArrayList<>();
        nodes.add(head);
        while (head.next != null) {
            nodes.add(head.next);
            head = head.next;
        }
        int index = nodes.size() - n;
        ListNode removedNode = nodes.remove(index);
        if (nodes.isEmpty()) {
            return null;
        }
        if (index > 0) {
            nodes.get(index - 1).next = removedNode.next;
        }
        return nodes.get(0);
    }
}
