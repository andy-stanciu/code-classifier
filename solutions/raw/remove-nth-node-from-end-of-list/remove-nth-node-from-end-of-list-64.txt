/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        int size = 0;
        ListNode currnode = head;
        if (head == null || head.next == null) {
            return null;
        }
        while (currnode != null) {
            currnode = currnode.next;
            size++;
        }
        if (n == size) {
            return head.next;
        }
        int indx = size - n;
        ListNode prevnode = head;
        int i = 1;
        while (i < indx) {
            prevnode = prevnode.next;
            i++;
        }
        prevnode.next = prevnode.next.next;
        return head;
    }
}
