/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null)
            return null;
        // Calculate the size of the list
        int size = 0;
        ListNode current = head;
        while (current != null) {
            size++;
            current = current.next;
        }
        // if we need to remove the head
        if (n == size) {
            return head.next;
        }
        // Find the node just before the one to be removed
        int k = size - n;
        current = head;
        for (int i = 0; i < k - 1; i++) {
            current = current.next;
        }
        // Remove the nth node from the end
        current.next = current.next.next;
        return head;
    }
}
