/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null) {
            return head;
        }
        ListNode dummy = new ListNode();
        dummy.next = head;
        countNodesAfter(head, dummy, n);
        return dummy.next;
    }

    public int countNodesAfter(ListNode node, ListNode prev, int n) {
        if (node == null) {
            return 0;
        }
        int after = countNodesAfter(node.next, node, n);
        if (after == n - 1) {
            prev.next = node.next;
            node.next = null;
        }
        return 1 + after;
    }
}
