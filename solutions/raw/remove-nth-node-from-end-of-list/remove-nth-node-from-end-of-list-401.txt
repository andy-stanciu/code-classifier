/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int removedNodeFromEnd) {
        ListNode current = head;
        int length = 0;
        while (current != null) {
            length += 1;
            current = current.next;
        }
        length = length - removedNodeFromEnd;
        current = head;
        if (length == 0)
            return current.next;
        while (true) {
            // 1 - its node before removedNodeFromEnd
            if (length == 1) {
                if (removedNodeFromEnd > 1) {
                    current.next = current.next.next;
                } else {
                    current.next = null;
                }
                break;
            }
            length--;
            current = current.next;
        }
        return head;
    }
}
