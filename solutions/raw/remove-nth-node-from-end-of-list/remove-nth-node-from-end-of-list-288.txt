/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        head = rev(head, null);
        ListNode current = head;
        ListNode prev = null;
        for (int i = 1; i < n; i++) {
            prev = current;
            current = current.next;
        }
        if (prev == null) {
            head = current.next;
        } else {
            prev.next = current.next;
            current.next = null;
        }
        head = rev(head, null);
        return head;
    }

    public ListNode rev(ListNode node, ListNode prev) {
        if (node == null)
            return prev;
        ListNode temp = node.next;
        node.next = prev;
        return rev(temp, node);
    }
}
