/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode cur = head;
        int i = 0;
        while (cur != null) {
            i++;
            cur = cur.next;
            // i++;
        }
        if (i == n) {
            return head.next;
        }
        int k = Math.abs(i - n);
        int j = 0;
        ListNode temp = head;
        ListNode prev = new ListNode(0);
        while (j < k && temp.next != null) {
            j++;
            prev = temp;
            temp = temp.next;
        }
        prev.next = temp.next;
        //temp=prev.next;
        return head;
    }
}
