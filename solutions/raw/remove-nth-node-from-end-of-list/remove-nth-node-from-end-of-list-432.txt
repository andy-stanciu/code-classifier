/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode sizeNode = head;
        int size = 0;
        while (sizeNode != null) {
            sizeNode = sizeNode.next;
            size++;
        }
        int delNode = size - n;
        int trav = 0;
        ListNode startNode = head;
        ListNode prevNode = null;
        while (head != null) {
            if (delNode == 0 && prevNode == null && head.next == null) {
                startNode = null;
                break;
            } else if (trav == delNode && prevNode == null) {
                startNode = head.next;
                break;
            } else if (trav == delNode) {
                if (prevNode == null) {
                    head.next = null;
                }
                prevNode.next = head.next;
            } else {
                prevNode = head;
                head = head.next;
            }
            trav++;
        }
        return startNode;
    }
}
