/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode rsNode = new ListNode();
        if (head.next == null && n == 1) {
            return null;
        }
        List<ListNode> rsList = new ArrayList<>();
        while (head != null) {
            ListNode tempNode = new ListNode(head.val);
            rsList.add(tempNode);
            head = head.next;
        }
        rsList.remove(rsList.size() - n);
        for (int i = 0; i < rsList.size() - 1; i++) {
            rsList.get(i).next = rsList.get(i + 1);
        }
        rsNode = rsList.get(0);
        return rsNode;
    }
}
