/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr = head, pres = head, now = head;
        if (curr.next == null)
            return null;
        if (n == 1) {
            while (pres.next.next != null) {
                pres = pres.next;
            }
            pres.next = null;
            return head;
        }
        int count = 0;
        while (curr != null) {
            count++;
            curr = curr.next;
        }
        if (count == n) {
            return head.next;
        }
        int a = count - n;
        for (int i = 1; i <= a; i++) {
            now = now.next;
            if (i == a) {
                now.val = now.next.val;
                now.next = now.next.next;
            }
        }
        return head;
    }
}
