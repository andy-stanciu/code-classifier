/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr = head;
        int count = 0;
        if (head == null || head.next == null) {
            return null;
        }
        while (curr != null) {
            curr = curr.next;
            count++;
        }
        count = count - n;
        curr = head;
        if (count == 0) {
            head = curr.next;
        } else {
            ListNode prev = head;
            while (count > 0 && curr != null) {
                prev = curr;
                curr = curr.next;
                count--;
            }
            prev.next = prev.next.next;
        }
        return head;
    }
}
