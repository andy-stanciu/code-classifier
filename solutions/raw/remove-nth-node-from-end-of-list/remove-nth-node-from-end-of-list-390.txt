/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    private int sizeOfList(ListNode head) {
        int size = 0;
        ListNode curr = head;
        while (curr != null) {
            size++;
            curr = curr.next;
        }
        return size;
    }

    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null)
            return head;
        int k = sizeOfList(head) - n;
        if (k == 0)
            return head.next;
        ListNode prevNode = null;
        ListNode nextNode = head;
        for (int i = 0; i < k; i++) {
            prevNode = nextNode;
            nextNode = nextNode.next;
        }
        prevNode.next = nextNode.next;
        nextNode.next = null;
        return head;
    }
}
