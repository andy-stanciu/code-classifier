class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode newHead = reverse(head);
        //whether the node to be removed is last node or not
        if (n == 1)
            return reverse(newHead.next);
        ListNode curr = head;
        for (curr = newHead; curr != null && n - 1 > 1; curr = curr.next) {
            //one node previous to the node to be removed
            n--;
        }
        //update the link
        curr.next = curr.next.next;
        return reverse(newHead);
    }

    private ListNode reverse(ListNode head) {
        ListNode curr = head, prev = null;
        while (curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
