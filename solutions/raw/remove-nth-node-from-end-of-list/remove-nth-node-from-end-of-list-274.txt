/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode oldHead = head;
        int len = getLen(head);
        if (len == 1 && n == 1)
            return null;
        // this line is important!!
        if (n == len)
            return head.next;
        int steps = len - n;
        for (int i = 0; i < steps - 1; i++) {
            head = head.next;
        }
        head.next = head.next.next;
        return oldHead;
    }

    int getLen(ListNode l) {
        int i = 0;
        for (; l != null; l = l.next) {
            i++;
        }
        return i;
    }
}
