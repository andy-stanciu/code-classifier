/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode temp = head, deletedNode = new ListNode();
        if (listLength(head) == n)
            return head.next;
        for (int i = 0; i < (listLength(head) - n - 1); i++) {
            temp = temp.next;
        }
        deletedNode = temp.next;
        temp.next = deletedNode.next;
        deletedNode.next = null;
        return head;
    }

    public int listLength(ListNode head) {
        ListNode temp = head;
        int count = 1;
        while (temp.next != null) {
            temp = temp.next;
            count++;
        }
        return count;
    }
}
