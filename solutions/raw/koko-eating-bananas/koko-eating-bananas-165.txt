class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int start = 1;
        int end = Arrays.stream(piles).max().getAsInt();
        while (start < end) {
            int mid = start + (end - start) / 2;
            if (canEat(piles, mid, h)) {
                end = mid;
            } else {
                start = mid + 1;
            }
        }
        return start;
    }

    public boolean canEat(int[] piles, int k, int h) {
        int time = 0;
        for (int i : piles) {
            time += (int) Math.ceil(i * 1.0 / k);
        }
        if (time > h) {
            return false;
        } else {
            return true;
        }
    }
}
