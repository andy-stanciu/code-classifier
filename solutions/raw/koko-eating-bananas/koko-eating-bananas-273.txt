class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        return findK(piles, h);
    }

    public static int findK(int[] nums, int h) {
        Arrays.sort(nums);
        // koko can eat bananas min = nums[0]  and max = nums[nums.length-1] in 1hr
        //using bin srch find ans
        int start = 1;
        int end = nums[nums.length - 1];
        while (start < end) {
            int mid = start + (end - start) / 2;
            int k = 0;
            for (int n : nums) {
                if (n % mid == 0) {
                    k += (n / mid);
                } else {
                    k += n / mid + 1;
                }
                if (k > h) {
                    break;
                }
            }
            if (k > h) {
                start = mid + 1;
            }
            if (k <= h) {
                end = mid;
            }
        }
        //end
        return start;
    }
}
