class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        Arrays.sort(piles);
        int max = piles[piles.length - 1];
        int low = 1;
        int high = max;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (isPossible(piles, mid, h)) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }

    public boolean isPossible(int[] nums, int k, int h) {
        int ans = 0;
        for (int i = 0; i < nums.length; i++) {
            ans += Math.ceil((double) nums[i] / (double) k);
        }
        return ans <= h;
    }
}
