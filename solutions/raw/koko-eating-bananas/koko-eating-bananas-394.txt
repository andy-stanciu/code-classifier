class Solution {

    public int minEatingSpeed(int[] v, int h) {
        int low = 1;
        int high = findMax(v);
        while (low <= high) {
            int mid = (low + high) / 2;
            int hours = totalhours(v, mid);
            if (hours <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }

    static int totalhours(int[] v, int h) {
        int hours = 0;
        for (int i = 0; i < v.length; i++) {
            hours += Math.ceil((double) (v[i]) / (double) (h));
        }
        return hours;
    }

    static int findMax(int[] v) {
        int max = 0;
        for (int i = 0; i < v.length; i++) {
            max = Math.max(max, v[i]);
        }
        return max;
    }
}
