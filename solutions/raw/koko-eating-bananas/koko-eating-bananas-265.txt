class Solution {

    private boolean simulate(int[] piles, int h, int k) {
        if (k == 0)
            return false;
        for (int p : piles) {
            h -= (int) Math.ceil(p / (double) k);
            if (h < 0)
                return false;
        }
        return true;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int min = 0;
        int max = Integer.MIN_VALUE;
        for (int p : piles) {
            max = Math.max(max, p);
        }
        while (max - min > 1) {
            int center = min + (int) Math.floor((max - min) / 2d);
            if (simulate(piles, h, center)) {
                max = center;
            } else {
                min = center;
            }
        }
        return max;
    }
}
