class Solution {

    public boolean func(int mid, int h, int[] nums) {
        long hr = 0;
        for (int i = 0; i < nums.length; i++) {
            long div = nums[i] / mid;
            hr += div;
            if (nums[i] % mid != 0) {
                hr++;
            }
        }
        if (hr <= h) {
            return true;
        }
        return false;
    }

    public int minEatingSpeed(int[] piles, int h) {
        Arrays.sort(piles);
        int max = piles[piles.length - 1];
        int si = 1;
        int ei = max;
        int ans = 0;
        while (si <= ei) {
            int mid = si + (ei - si) / 2;
            if (func(mid, h, piles)) {
                ei = mid - 1;
            } else {
                si = mid + 1;
            }
        }
        return si;
    }
}
