class Solution {

    public int checkPile(int[] piles, int h, int mid) {
        int ans = 0;
        for (int i = 0; i < piles.length; i++) {
            ans += piles[i] / mid;
            if (piles[i] % mid != 0) {
                ans++;
            }
        }
        return ans;
    }

    public int maxElement(int[] piles) {
        int max = 0;
        for (int i = 0; i < piles.length; i++) {
            if (piles[i] > max) {
                max = piles[i];
            }
        }
        return max;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int n = piles.length;
        //1 banana per hour, minimum value
        int low = 1;
        //greatest no. of banana pile, maximum value
        int high = maxElement(piles);
        while (low < high) {
            int mid = low + (high - low) / 2;
            int check = checkPile(piles, h, mid);
            if (check <= h) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }
        //or high
        return low;
    }
}
