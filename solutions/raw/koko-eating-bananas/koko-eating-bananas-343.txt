class Solution {

    public static boolean ispossible(int[] piles, int speed, int h) {
        long ans = 0;
        for (int i = 0; i < piles.length; i++) {
            ans += (piles[i] + speed - 1) / speed;
        }
        return ans <= h;
    }

    public int minEatingSpeed(int[] piles, int h) {
        Arrays.sort(piles);
        int i = 1, j = piles[piles.length - 1];
        int mid = 0;
        while (i <= j) {
            mid = (i + j) / 2;
            // System.out.println(mid);
            int[] ans = new int[piles.length];
            for (int k = 0; k < piles.length; k++) ans[k] = piles[k];
            if (ispossible(ans, mid, h)) {
                j = mid - 1;
            } else {
                i = mid + 1;
            }
        }
        return i;
    }
}
