class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int max = 0;
        for (int i : piles) {
            max = Math.max(max, i);
        }
        int l = 1, r = max;
        double out = Double.MAX_VALUE;
        while (l <= r) {
            double time = 0;
            int mid = (l + r) / 2;
            for (int j : piles) {
                time = time + Math.ceil((double) (j / (double) mid));
            }
            if (time <= (double) h) {
                r = mid - 1;
                out = Math.min(out, mid);
            } else
                l = mid + 1;
        }
        return (int) out;
    }
}
