class Solution {

    public int maxOfArr(int[] arr) {
        int max = Integer.MIN_VALUE;
        for (int num : arr) {
            max = Math.max(num, max);
        }
        return max;
    }

    public int countOfHours(int[] piles, int mid) {
        int totalHours = 0;
        for (int num : piles) {
            totalHours += Math.ceil((double) num / (double) mid);
        }
        return totalHours;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int n = piles.length;
        int low = 1;
        int high = maxOfArr(piles);
        while (low <= high) {
            int mid = (low + high) / 2;
            if (countOfHours(piles, mid) > h) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return low;
    }
}
