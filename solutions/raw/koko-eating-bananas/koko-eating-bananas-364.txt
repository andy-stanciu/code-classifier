class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int left = 1;
        int right = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            right = Math.max(piles[i], right);
        }
        while (left < right) {
            int mid = (left + right) / 2;
            if (isAns(mid, piles) > h) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return left;
    }

    private int isAns(int mid, int[] piles) {
        int hoursSpent = 0;
        for (int pile : piles) {
            //  hoursSpent+=Math.ceil((double)pile/mid);
            hoursSpent += pile / mid;
            if (pile % mid > 0) {
                hoursSpent += 1;
            }
        }
        return hoursSpent;
    }
}
