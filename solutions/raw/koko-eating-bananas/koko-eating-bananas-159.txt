class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int l = 1;
        int r = 1;
        int m = 1;
        for (int i = 0; i < piles.length; i++) {
            r = Math.max(r, piles[i]);
        }
        while (l <= r) {
            m = l + (r - l) / 2;
            int totalTime = 0;
            for (int k = 0; k < piles.length; k++) {
                totalTime += Math.ceil((double) (piles[k]) / (double) (m));
            }
            if (totalTime <= h)
                r = m - 1;
            else
                l = m + 1;
        }
        return l;
    }
}
