class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int low = 1;
        int high = 0;
        for (int i = 0; i < piles.length; i++) {
            high = Math.max(high, piles[i]);
        }
        while (low < high) {
            int mid = low + (high - low) / 2;
            int count = 0;
            for (int i = 0; i < piles.length; i++) {
                int time = piles[i] / mid;
                count = count + time;
                if (piles[i] % mid != 0)
                    count++;
            }
            if (count <= h) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
