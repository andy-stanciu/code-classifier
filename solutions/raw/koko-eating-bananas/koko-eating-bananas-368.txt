class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        // Initialize r to 0
        int l = 1, r = 0;
        for (int p : piles) r = Math.max(r, p);
        int res = 0;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (getHoursBySpeed(piles, mid) <= h) {
                res = mid;
                r = mid - 1;
            } else {
                l = mid + 1;
            }
        }
        return res;
    }

    public long getHoursBySpeed(int[] piles, int cap) {
        long hours = 0;
        for (int p : piles) {
            hours += (p % cap == 0) ? p / cap : (p / cap) + 1;
        }
        return hours;
    }
}
