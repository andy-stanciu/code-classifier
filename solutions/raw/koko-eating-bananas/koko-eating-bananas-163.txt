class Solution {

    public static int findMax(int[] v) {
        int n = v.length;
        int maxi = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            maxi = Math.max(maxi, v[i]);
        }
        return maxi;
    }

    public static int func(int[] arr, int hour) {
        int total_hours = 0;
        for (int i = 0; i < arr.length; i++) {
            total_hours += Math.ceil((double) arr[i] / hour);
        }
        return total_hours;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int low = 1, high = findMax(piles);
        int ans = Integer.MAX_VALUE;
        while (low <= high) {
            int mid = (low + high) / 2;
            int total_hours = func(piles, mid);
            if (total_hours <= h) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
}
