class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int maxEatingSpeed = 0;
        for (int n : piles) if (maxEatingSpeed < n)
            maxEatingSpeed = n;
        int minEatingSpeed = 1;
        while (minEatingSpeed <= maxEatingSpeed) {
            int guessSpeed = (minEatingSpeed + maxEatingSpeed) / 2;
            int minHrs = minHours(piles, guessSpeed);
            if (minHrs > h)
                minEatingSpeed = guessSpeed + 1;
            else
                maxEatingSpeed = guessSpeed - 1;
        }
        return minEatingSpeed;
    }

    private static int minHours(int[] piles, int k) {
        int minHrs = 0;
        for (int ele : piles) {
            minHrs += Math.ceil((double) ele / k);
        }
        return minHrs;
    }
}
