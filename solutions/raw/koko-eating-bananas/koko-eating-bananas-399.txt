class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int low = 1;
        int max = -1;
        for (int i : piles) {
            if (i > max) {
                max = i;
            }
        }
        int high = max;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            long sum = 0;
            for (int j : piles) {
                sum += (j + mid - 1) / mid;
                //(int)Math.ceil((double)j/ (double)mid) works but uses much slower runtime
            }
            if (sum > h) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return low;
    }
}
