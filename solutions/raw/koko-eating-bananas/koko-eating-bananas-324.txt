class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            if (max < piles[i]) {
                max = piles[i];
            }
        }
        int start = 1;
        int end = max;
        if (h == piles.length) {
            return max;
        }
        while (start <= end) {
            int ans = 0;
            int mid = (start + end) / 2;
            for (int i = 0; i < piles.length; i++) {
                ans = ans + piles[i] / mid;
                if (piles[i] % mid > 0) {
                    ans++;
                }
            }
            if (ans <= h && ans > 0) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return start;
    }
}
