class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        //lowerbound
        int s = 1;
        //upperbound
        int e = Integer.MIN_VALUE;
        for (int i : piles) e = Math.max(e, i);
        while (s < e) {
            //assumed speed(or)bananas per hour
            int m = s + (e - s) / 2;
            int c = 0;
            for (int i : piles) {
                //no of hours taken for speed
                c += i / m;
                if (i % m != 0)
                    c++;
            }
            if (//check if hours for assumed speed equals given hours if equal loop teminates
            c > h)
                //check if hours for assumed speed equals given hours if equal loop teminates
                s = m + 1;
            else
                e = m;
        }
        //e gives assumed speed
        return e;
    }
}
