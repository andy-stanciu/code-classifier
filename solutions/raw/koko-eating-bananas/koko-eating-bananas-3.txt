class Solution {

    public int calculate(int[] piles, int h) {
        int hrs = 0;
        for (int i = 0; i < piles.length; i++) {
            hrs += Math.ceil((double) piles[i] / (double) h);
        }
        return hrs;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int n = piles.length;
        int low = 1;
        int high = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            if (piles[i] > high) {
                high = piles[i];
            }
        }
        while (low <= high) {
            int mid = low + (high - low) / 2;
            int time = calculate(piles, mid);
            if (time <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
