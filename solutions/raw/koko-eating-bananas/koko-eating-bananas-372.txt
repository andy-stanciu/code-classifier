class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int right = Integer.MAX_VALUE;
        int left = 1;
        int ans = 0;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            int thr = canEat(piles, mid);
            if (thr <= h) {
                ans = mid;
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return ans;
    }

    public int canEat(int[] piles, int k) {
        int cnt = 0;
        for (int pile : piles) {
            int currH = pile % k == 0 ? pile / k : pile / k + 1;
            cnt += currH;
        }
        return cnt;
    }
}
