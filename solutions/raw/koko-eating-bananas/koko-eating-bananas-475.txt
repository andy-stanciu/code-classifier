class Solution {

    int findmax(int[] array) {
        int max = -1;
        for (int i = 0; i < array.length; i++) {
            max = Math.max(array[i], max);
        }
        return max;
    }

    int calculatehour(int[] array, int hour) {
        int totalh = 0;
        for (int i = 0; i < array.length; i++) {
            totalh += Math.ceil((double) array[i] / (double) hour);
        }
        return totalh;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int low = 1;
        int high = findmax(piles);
        int ans = 0;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            int total = calculatehour(piles, mid);
            if (total <= h) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
}
