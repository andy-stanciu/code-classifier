class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        long minSpeed = 1;
        long maxSpeed = Integer.MIN_VALUE;
        for (int pile : piles) maxSpeed = Math.max(maxSpeed, pile);
        while (minSpeed <= maxSpeed) {
            long mid = minSpeed + (maxSpeed - minSpeed) / 2;
            long hoursForSpeed = findHoursForSpeed(piles, mid);
            if (hoursForSpeed <= h)
                maxSpeed = mid - 1;
            else
                minSpeed = mid + 1;
        }
        return (int) minSpeed;
    }

    public long findHoursForSpeed(int[] piles, long speed) {
        long hrs = 0;
        for (int pile : piles) {
            hrs += pile / speed + (pile % speed != 0 ? 1 : 0);
        }
        return hrs;
    }
}
