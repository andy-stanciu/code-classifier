class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        Arrays.sort(piles);
        long high = piles[piles.length - 1];
        long low = 1;
        while (low <= high) {
            long mid = low + (high - low) / 2;
            int hours = kokoEatsBanana(mid, piles);
            if (hours <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return (int) low;
    }

    public int kokoEatsBanana(long mid, int[] piles) {
        int hours = 0;
        for (int i = 0; i < piles.length; i++) {
            double val = (double) piles[i] / (double) mid;
            hours += Math.ceil(val);
        }
        return hours;
    }
}
