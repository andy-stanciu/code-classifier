class Solution {

    public int MaxElement(int[] arr) {
        int n = arr.length;
        int max = arr[0];
        for (int i = 1; i < n; i++) {
            max = Math.max(arr[i], max);
        }
        return max;
    }

    public int calculateHours(int[] arr, int k) {
        int n = arr.length;
        int value = 0;
        for (int i = 0; i < n; i++) {
            value += Math.ceil((double) (arr[i]) / (double) (k));
        }
        return value;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int low = 0;
        int high = MaxElement(piles);
        int ans = Integer.MAX_VALUE;
        while (low <= high) {
            int mid = (low + high) / 2;
            ans = calculateHours(piles, mid);
            if (ans <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
