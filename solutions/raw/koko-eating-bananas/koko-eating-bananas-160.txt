class Solution {

    int calculateTotalHours(int[] piles, int h) {
        int totalHours = 0;
        for (int i = 0; i < piles.length; i++) {
            totalHours += Math.ceil((double) piles[i] / (double) h);
        }
        return totalHours;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int low = 1, high = Arrays.stream(piles).max().getAsInt();
        int ans = 0;
        while (low <= high) {
            int mid = (low + high) / 2;
            int reqTime = calculateTotalHours(piles, mid);
            if (reqTime <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
