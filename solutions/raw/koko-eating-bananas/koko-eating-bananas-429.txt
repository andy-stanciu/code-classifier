class Solution {

    public int max(int[] ar) {
        int max = 0;
        for (int i = 0; i < ar.length; i++) {
            max = Math.max(max, ar[i]);
        }
        return max;
    }

    public int time(int[] ar, int x) {
        int sum = 0;
        for (int i = 0; i < ar.length; i++) {
            sum = (int) (sum + Math.ceil((double) ar[i] / (double) x));
        }
        return sum;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int l = 1;
        int r = max(piles);
        while (l <= r) {
            int m = l + (r - l) / 2;
            if (time(piles, m) > h) {
                l = m + 1;
            } else {
                r = m - 1;
            }
        }
        return l;
    }
}
