class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int maxi = Integer.MIN_VALUE;
        int n = piles.length;
        for (int i = 0; i < n; i++) {
            maxi = Math.max(maxi, piles[i]);
        }
        int l = 1;
        int r = maxi;
        int ansr = maxi;
        while (l <= r) {
            int mid = (l + r) / 2;
            long hours = 0;
            for (int i = 0; i < n; i++) {
                hours += Math.ceil((double) piles[i] / mid);
            }
            if (hours <= h) {
                ansr = mid;
                r = mid - 1;
            } else {
                l = mid + 1;
            }
        }
        return ansr;
    }
}
