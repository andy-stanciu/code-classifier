class Solution {

    public boolean find(int[] ar, int x, int h) {
        int c = 0;
        if (x <= 0)
            return false;
        for (int y : ar) {
            c += (y / x);
            if (y % x != 0)
                c++;
        }
        if (c <= h)
            return true;
        return false;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int n = piles.length;
        int high = 0, low = 0;
        for (int x : piles) {
            high = Math.max(high, x);
        }
        if (n == h)
            return high;
        int ans = -1;
        while (low <= high) {
            int m = (low + high) / 2;
            if (find(piles, m, h)) {
                ans = m;
                high = m - 1;
            } else
                low = m + 1;
        }
        return ans;
    }
}
