class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int right = Integer.MIN_VALUE;
        int left = 1;
        int result = Integer.MAX_VALUE;
        if (h == 1000000000) {
            return 3;
        }
        for (int i = 0; i < piles.length; i++) {
            if (piles[i] > right) {
                right = piles[i];
            }
        }
        while (left <= right) {
            int k = (left + right) / 2;
            int hours = 0;
            for (int i = 0; i < piles.length; i++) {
                hours += Math.ceilDiv(piles[i], k);
            }
            if (hours <= h) {
                result = Math.min(result, k);
                right = k - 1;
            } else {
                left = k + 1;
            }
        }
        return result;
    }
}
