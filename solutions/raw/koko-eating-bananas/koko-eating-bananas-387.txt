class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        Arrays.sort(piles);
        int s = 1;
        int e = piles[piles.length - 1];
        int ans = 1;
        while (s <= e) {
            int mid = s + (e - s) / 2;
            if (isItPossible(piles, h, mid)) {
                ans = mid;
                e = mid - 1;
            } else {
                s = mid + 1;
            }
        }
        return ans;
    }

    public static boolean isItPossible(int[] piles, int h, int mid) {
        long time = 0;
        for (int i = 0; i < piles.length; i++) {
            time += piles[i] / mid;
            if (piles[i] % mid != 0) {
                time++;
            }
        }
        if (time > h)
            return false;
        return true;
    }
}
