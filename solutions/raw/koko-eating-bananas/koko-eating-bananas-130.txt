class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        Arrays.sort(piles);
        int start = 1;
        int ans = 0;
        int end = piles[piles.length - 1];
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (isDone(piles, h, mid) != -1) {
                ans = mid;
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return ans;
    }

    private int isDone(int[] piles, int h, int mid) {
        int count = 0;
        for (int i = 0; i < piles.length; i++) {
            int c = piles[i];
            count += Math.ceil((double) c / mid);
            if (count > h) {
                return -1;
            }
        }
        return mid;
    }
}
