class Solution {

    public int minEatingSpeed(int[] piles, int h) {
        int start = 1;
        int end = 0;
        for (int i = 0; i < piles.length; i++) {
            if (piles[i] > end)
                end = piles[i];
        }
        while (start <= end) {
            int mid = start + (end + 1 - start) / 2;
            int hours = helper(piles, mid);
            if (hours <= h) {
                end = mid - 1;
            } else
                start = mid + 1;
        }
        return start;
    }

    public int helper(int[] piles, int k) {
        int temp = 0;
        for (int i = 0; i < piles.length; i++) {
            if (piles[i] % k == 0)
                temp += piles[i] / k;
            else
                temp += (piles[i] / k) + 1;
        }
        return temp;
    }
}
