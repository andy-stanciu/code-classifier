class Solution {

    public int minEatingSpeed(int[] a, int tar) {
        int max = -1;
        for (int i = 0; i < a.length; i++) {
            max = Math.max(max, a[i]);
        }
        int l = 1, h = max;
        while (l <= h) {
            int m = l + (h - l) / 2;
            boolean val = f(a, tar, m);
            if (val == true)
                h = m - 1;
            else
                l = m + 1;
        }
        return l;
    }

    public boolean f(int[] a, int tar, int m) {
        int c = 0;
        for (int i = 0; i < a.length; i++) {
            int x = a[i] / m;
            int y = a[i] % m;
            c += x;
            if (y != 0)
                c += 1;
            if (c > tar)
                return false;
        }
        if (c <= tar)
            return true;
        return false;
    }
}
