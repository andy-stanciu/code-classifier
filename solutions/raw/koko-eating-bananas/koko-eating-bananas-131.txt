class Solution {

    public static int findmax(int[] array) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < array.length; i++) {
            if (array[i] > max) {
                max = array[i];
            }
        }
        return max;
    }

    public static int counthour(int[] array, int hourly) {
        int total_hours = 0;
        for (int i = 0; i < array.length; i++) {
            total_hours += Math.ceil((double) array[i] / hourly);
        }
        return total_hours;
    }

    public static int minEatingSpeed(int[] piles, int h) {
        // implement the binary search and find the kth time in which koko could finish
        // bananas.
        int low = 1, high = findmax(piles);
        while (low <= high) {
            int mid = (low + high) / 2;
            int time = counthour(piles, mid);
            if (time <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
