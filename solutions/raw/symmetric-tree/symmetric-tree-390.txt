/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isSymmetric(TreeNode root) {
        left(root.right);
        return check(root.left, root.right);
    }

    public static void left(TreeNode root) {
        if (root == null) {
            return;
        } else {
            left(root.left);
            left(root.right);
            TreeNode temp = root.right;
            root.right = root.left;
            root.left = temp;
        }
    }

    public static boolean check(TreeNode root1, TreeNode root2) {
        if (root1 == null) {
            if (root2 == null) {
                return true;
            } else {
                return false;
            }
        } else if (root2 == null) {
            if (root1 != null)
                return false;
            return true;
        }
        boolean left = check(root1.left, root2.left);
        boolean right = check(root1.right, root2.right);
        if (left && right && (root1.val == root2.val))
            return true;
        return false;
    }
}
