/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return false;
        }
        return traverse(root.left, root.right);
    }

    public boolean traverse(TreeNode leftTree, TreeNode rightTree) {
        boolean result = false;
        if (leftTree == null && rightTree == null) {
            return true;
        }
        if ((leftTree != null && rightTree == null) || (leftTree == null && rightTree != null)) {
            return result;
        }
        if (leftTree.val != rightTree.val) {
            return false;
        }
        result = traverse(leftTree.left, rightTree.right);
        if (!result) {
            return result;
        }
        result = traverse(leftTree.right, rightTree.left);
        if (!result) {
            return result;
        }
        return true;
    }
}
