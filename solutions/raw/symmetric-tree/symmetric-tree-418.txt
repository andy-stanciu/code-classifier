/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isSymmetric(TreeNode root) {
        List<Integer> left = leftPreorder(root);
        List<Integer> right = rightPreorder(root);
        return left.equals(right);
    }

    public List<Integer> leftPreorder(TreeNode root) {
        if (root == null)
            return Arrays.asList(-101);
        List<Integer> left = new ArrayList<>();
        left.add(root.val);
        left.addAll(leftPreorder(root.left));
        left.addAll(leftPreorder(root.right));
        return left;
    }

    public List<Integer> rightPreorder(TreeNode root) {
        if (root == null)
            return Arrays.asList(-101);
        List<Integer> right = new ArrayList<>();
        right.add(root.val);
        right.addAll(rightPreorder(root.right));
        right.addAll(rightPreorder(root.left));
        return right;
    }
}
