/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    boolean ans = true;

    int i = 0;

    public boolean isSymmetric(TreeNode root) {
        ArrayList<Integer> lst = new ArrayList<>();
        fun(root, lst);
        chk(root, lst);
        return ans;
    }

    public void chk(TreeNode root, ArrayList<Integer> lst) {
        if (root == null) {
            if (lst.get(i) != -1) {
                ans = false;
            }
            i++;
            return;
        }
        if (root != null && root.val != lst.get(i)) {
            ans = false;
        } else {
            i++;
        }
        chk(root.right, lst);
        chk(root.left, lst);
    }

    public void fun(TreeNode root, ArrayList<Integer> lst) {
        if (root == null) {
            lst.add(-1);
            return;
        }
        lst.add(root.val);
        fun(root.left, lst);
        fun(root.right, lst);
    }
}
