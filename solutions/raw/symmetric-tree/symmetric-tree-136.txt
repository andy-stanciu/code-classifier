class Solution {

    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return true;
        }
        // Check if the left and right subtrees are mirrors of each other
        return isMirror(root.left, root.right);
    }

    private boolean isMirror(TreeNode left, TreeNode right) {
        // If both subtrees are empty, they are mirrors
        if (left == null && right == null) {
            return true;
        }
        // If only one of the subtrees is empty, they are not mirrors
        if (left == null || right == null) {
            return false;
        }
        // The subtrees are mirrors if:
        // 1. The root values are the same
        // 2. The left subtree of the left tree is a mirror of the right subtree of the right tree
        // 3. The right subtree of the left tree is a mirror of the left subtree of the right tree
        return (left.val == right.val) && isMirror(left.left, right.right) && isMirror(left.right, right.left);
    }
}
