class Solution {

    public boolean isSymmetric(TreeNode root) {
        if (root == null)
            return true;
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        while (!q.isEmpty()) {
            int levelSize = q.size();
            List<Integer> levelList = new ArrayList<>();
            for (int i = 0; i < levelSize; i++) {
                TreeNode curr = q.poll();
                if (curr == null) {
                    levelList.add(null);
                } else {
                    levelList.add(curr.val);
                    q.offer(curr.left);
                    q.offer(curr.right);
                }
            }
            for (int i = 0, j = levelList.size() - 1; i < j; i++, j--) if (levelList.get(i) != levelList.get(j))
                return false;
        }
        return true;
    }
}
