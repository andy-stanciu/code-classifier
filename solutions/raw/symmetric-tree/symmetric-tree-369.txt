/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return true;
        }
        return helper(root.left, root.right);
    }

    boolean check = false;

    private boolean helper(TreeNode rL, TreeNode rR) {
        if (rL == null && rR != null) {
            return check;
        }
        if (rR == null && rL != null) {
            return check;
        }
        if (rL != null && rR != null) {
            if (rL.val != rR.val) {
                return check;
            } else {
                return helper(rL.left, rR.right) && helper(rL.right, rR.left);
            }
        }
        return true;
    }
}
