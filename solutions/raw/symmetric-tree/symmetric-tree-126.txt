class Solution {

    public boolean isSymmetric(TreeNode root) {
        TreeNode invertedTreeRoot = invertTree(root);
        return isSameTree(root, invertedTreeRoot);
    }

    private TreeNode invertTree(TreeNode root) {
        if (root == null)
            return null;
        TreeNode invertedRoot = new TreeNode(root.val);
        invertedRoot.left = invertTree(root.right);
        invertedRoot.right = invertTree(root.left);
        return invertedRoot;
    }

    private boolean isSameTree(TreeNode a, TreeNode b) {
        if (a == null && b == null)
            return true;
        if (a == null || b == null)
            return false;
        if (a.val != b.val)
            return false;
        return isSameTree(a.left, b.left) && isSameTree(a.right, b.right);
    }
}
