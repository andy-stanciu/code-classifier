/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean symmetric(TreeNode root1, TreeNode root2) {
        //these two lines can be written as
        if (root1 == null && root2 != null || root1 != null && root2 == null)
            return false;
        //if (root1==null || root2== null)return root1==root2;
        if (root1 == null && root2 == null)
            return true;
        if (root1.val != root2.val)
            return false;
        boolean a = symmetric(root1.left, root2.right);
        boolean b = symmetric(root1.right, root2.left);
        // these two lines can be written as   return a && b;
        if (a == false || b == false)
            return false;
        //
        return true;
    }

    public boolean isSymmetric(TreeNode root) {
        if (root == null)
            return true;
        return symmetric(root.left, root.right);
    }
}
