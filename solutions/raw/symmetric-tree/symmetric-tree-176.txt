/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isSymmetric(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int len = queue.size();
            List<Integer> list = new ArrayList<>();
            for (int i = 0; i < len; i++) {
                TreeNode node = queue.poll();
                if (node == null) {
                    list.add(null);
                } else {
                    list.add(node.val);
                }
                if (node != null) {
                    queue.add(node.left);
                }
                if (node != null) {
                    queue.add(node.right);
                }
            }
            int start = 0;
            int end = list.size() - 1;
            while (start < end) {
                if (list.get(start) != list.get(end)) {
                    return false;
                }
                start++;
                end--;
            }
        }
        return true;
    }
}
