class Solution {

    public boolean isSymmetricUtil(TreeNode rLeft, TreeNode rRight) {
        if (rLeft == null && rRight == null) {
            return true;
        }
        if (rLeft == null || rRight == null) {
            return false;
        }
        boolean left = isSymmetricUtil(rLeft.left, rRight.right);
        boolean right = isSymmetricUtil(rLeft.right, rRight.left);
        if (rLeft.val == rRight.val) {
            if (left && right) {
                return true;
            }
        }
        return false;
    }

    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return true;
        }
        //Divide the tree into two parts i.e. left and right , and
        // then check if left and right tree is same or not
        return isSymmetricUtil(root.left, root.right);
    }
}
