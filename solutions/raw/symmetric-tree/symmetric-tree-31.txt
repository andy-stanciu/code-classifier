/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isSymmetric(TreeNode root) {
        ArrayList<Integer> left = new ArrayList<Integer>();
        ArrayList<Integer> right = new ArrayList<Integer>();
        lt(root.left, left);
        rt(root.right, right);
        // if(left.size() != right.size()) return false;
        // for(int i = 0 ; i < left.size() ; i++){
        //     if(left.get(i) != right.get(i)) return false;
        // }
        return left.equals(right);
    }

    public static void lt(TreeNode root, ArrayList<Integer> left) {
        if (root == null) {
            left.add(-111);
            return;
        }
        left.add(root.val);
        lt(root.left, left);
        lt(root.right, left);
    }

    public static void rt(TreeNode root, ArrayList<Integer> right) {
        if (root == null) {
            right.add(-111);
            return;
        }
        right.add(root.val);
        rt(root.right, right);
        rt(root.left, right);
    }
}
