/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void DFS(TreeNode r1, TreeNode r2, boolean[] ans) {
        if (r1 == null || r2 == null) {
            if (r1 != null || r2 != null) {
                ans[0] = false;
            }
            return;
        }
        if (r1.val != r2.val) {
            ans[0] = false;
        }
        if (ans[0] == false)
            return;
        DFS(r1.left, r2.right, ans);
        DFS(r1.right, r2.left, ans);
    }

    public boolean isSymmetric(TreeNode root) {
        boolean[] ans = { true };
        DFS(root, root, ans);
        return ans[0];
    }
}
