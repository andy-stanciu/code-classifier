class Solution {

    public int[] findOrder(int numCourses, int[][] prerequisites) {
        ArrayList<Integer>[] graph = new ArrayList[numCourses];
        int[] indegree = new int[numCourses];
        ArrayList<Integer> ans = new ArrayList<>();
        for (int i = 0; i < numCourses; i++) graph[i] = new ArrayList<>();
        for (int[] arr : prerequisites) {
            graph[arr[1]].add(arr[0]);
            indegree[arr[0]]++;
        }
        LinkedList<Integer> queue = new LinkedList<>();
        for (int i = 0; i < numCourses; i++) {
            if (indegree[i] == 0)
                queue.add(i);
        }
        while (!queue.isEmpty()) {
            int front = queue.removeFirst();
            ans.add(front);
            for (int v : graph[front]) {
                indegree[v]--;
                if (indegree[v] == 0)
                    queue.add(v);
            }
        }
        if (ans.size() != numCourses)
            return new int[0];
        int[] result = new int[numCourses];
        for (int i = 0; i < numCourses; i++) result[i] = ans.get(i);
        return result;
    }
}
