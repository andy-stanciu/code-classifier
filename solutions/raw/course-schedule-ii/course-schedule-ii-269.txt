class Solution {

    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] indegree = new int[numCourses];
        List<Integer>[] adj = new List[numCourses];
        int[] ans = new int[numCourses];
        for (int i = 0; i < prerequisites.length; i++) {
            int prerequisite = prerequisites[i][1];
            int course = prerequisites[i][0];
            if (adj[prerequisite] == null) {
                adj[prerequisite] = new ArrayList<>();
            }
            adj[prerequisite].add(course);
            indegree[course]++;
        }
        Queue<Integer> queue = new LinkedList<>();
        for (int i = 0; i < numCourses; i++) {
            if (indegree[i] == 0) {
                queue.offer(i);
            }
        }
        int count = 0;
        while (!queue.isEmpty()) {
            int check = queue.poll();
            ans[count++] = check;
            if (adj[check] != null) {
                for (int course : adj[check]) {
                    indegree[course]--;
                    if (indegree[course] == 0) {
                        queue.offer(course);
                    }
                }
            }
        }
        if (count != numCourses)
            return new int[0];
        return ans;
    }
}
