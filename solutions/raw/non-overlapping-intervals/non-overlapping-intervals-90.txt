class Solution {

    public int eraseOverlapIntervals(int[][] intervals) {
        if (intervals.length == 0)
            return 0;
        // Step 1: Sort intervals by their end times
        Arrays.sort(intervals, new Comparator<int[]>() {

            public int compare(int[] a, int[] b) {
                return Integer.compare(a[1], b[1]);
            }
        });
        // Step 2: Initialize variables
        int nonOverlappingCount = 0;
        int end = Integer.MIN_VALUE;
        // Step 3: Iterate through the sorted intervals
        for (int[] interval : intervals) {
            // If the start of the current interval is greater than the end of the last non-overlapping interval
            if (interval[0] >= end) {
                nonOverlappingCount++;
                end = interval[1];
            }
        }
        // Step 4: Calculate the number of intervals to remove
        return intervals.length - nonOverlappingCount;
    }
}
