class Solution {

    public int eraseOverlapIntervals(int[][] intervals) {
        int n = intervals.length;
        // Sort intervals by start time
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));
        int removeCount = 0;
        // End time of the last non-overlapping interval
        int lastEnd = intervals[0][1];
        for (int i = 1; i < n; i++) {
            // Check if the current interval overlaps with the last non-overlapping interval
            if (intervals[i][0] < lastEnd) {
                // There is an overlap, increment removeCount
                removeCount++;
                // Choose the interval with the smaller end time to minimize further overlaps
                lastEnd = Math.min(lastEnd, intervals[i][1]);
            } else {
                // No overlap, update lastEnd to the end of the current interval
                lastEnd = intervals[i][1];
            }
        }
        return removeCount;
    }
}
