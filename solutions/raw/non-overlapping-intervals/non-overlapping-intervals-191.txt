class Solution {

    public int eraseOverlapIntervals(int[][] intervals) {
        if (intervals == null || intervals.length == 0)
            return 0;
        //Sort/Prioritise the intervals by their ending time first.
        Arrays.sort(intervals, (a, b) -> a[1] - b[1]);
        // First interval is non-overlapping as nothing to compare it with.
        // Store the first interval\'s endpoint to later compare it with the start of the next interval
        int prevEnd = intervals[0][1];
        // Counted the first interval alreadt as non-overlapping
        int noOfNonOverlappingIntervals = 1;
        for (int i = 1; i < intervals.length; i++) {
            // If the previous interval is already less than the start of the next interval.
            if (prevEnd <= intervals[i][0]) {
                noOfNonOverlappingIntervals++;
                prevEnd = intervals[i][1];
            }
        }
        return intervals.length - noOfNonOverlappingIntervals;
    }
}
