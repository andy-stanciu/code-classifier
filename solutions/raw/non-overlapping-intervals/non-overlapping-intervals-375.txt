class Solution {

    public int eraseOverlapIntervals(int[][] intervals) {
        Arrays.sort(intervals, (a, b) -> {
            if (a[1] != b[1])
                return a[1] - b[1];
            else
                return b[0] - a[0];
        });
        int n = intervals.length;
        int[] dp = new int[n];
        for (int i = 1; i < n; i++) {
            int start = intervals[i][0];
            //finding index which has end less than or equal to this start
            int j = find(i - 1, intervals, start);
            ;
            int notRemove = j == -1 ? i : (i - j - 1 + dp[j]);
            dp[i] = Math.min(dp[i - 1] + 1, notRemove);
        }
        return dp[n - 1];
    }

    public int find(int end, int[][] intervals, int start) {
        int l = 0;
        int r = end;
        int ans = -1;
        while (l <= r) {
            int mid = l + r >> 1;
            if (intervals[mid][1] <= start) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}
