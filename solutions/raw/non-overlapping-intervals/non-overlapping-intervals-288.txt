class Solution {

    public int eraseOverlapIntervals(int[][] intervals) {
        int n = intervals.length;
        if (n == 0) {
            return 0;
        }
        // Sort the array according to the end of the interval
        Arrays.sort(intervals, new Comparator<int[]>() {

            @Override
            public int compare(int[] a, int[] b) {
                return Integer.compare(a[1], b[1]);
            }
        });
        int cnt = 0, end = intervals[0][1];
        // Greedy approach
        // If c < b then count++, where [a,b], [c,d]..... (After sorting)
        // Else update "end" with "newEnd".
        for (int i = 1; i < n; ++i) {
            if (intervals[i][0] < end) {
                cnt++;
            } else {
                end = intervals[i][1];
            }
        }
        return cnt;
    }
}
