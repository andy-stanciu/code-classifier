class Solution {

    // Greedy Approach
    public int eraseOverlapIntervals(int[][] intervals) {
        // sort on basis of end time
        Arrays.sort(intervals, (a, b) -> a[1] - b[1]);
        int n = intervals.length;
        int intervalCount = 0;
        Pair prev = new Pair(intervals[0][0], intervals[0][1]);
        for (int i = 1; i < n; i++) {
            Pair curr = new Pair(intervals[i][0], intervals[i][1]);
            if (prev.end > curr.start) {
                intervalCount++;
            } else {
                prev = curr;
            }
        }
        return intervalCount;
    }
}

class Pair {

    int start, end;

    public Pair(int s, int e) {
        this.start = s;
        this.end = e;
    }
}
// TC: O(nlogn), SC: O(1)
