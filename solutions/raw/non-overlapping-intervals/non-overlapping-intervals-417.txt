class Solution {

    public int eraseOverlapIntervals(int[][] intervals) {
        if (intervals.length == 0) {
            // No intervals to remove
            return 0;
        }
        // Sort the intervals based on the end time in ascending order
        Arrays.sort(intervals, Comparator.comparingInt(a -> a[1]));
        // Number of non-overlapping intervals
        int count = 1;
        // End time of the first interval
        int end = intervals[0][1];
        for (int i = 1; i < intervals.length; i++) {
            // If the current interval\'s start time is after or equal to the previous interval\'s end time,
            // it is non-overlapping and can be included
            if (intervals[i][0] >= end) {
                count++;
                end = intervals[i][1];
            }
        }
        // Calculate the number of intervals to remove
        int removeCount = intervals.length - count;
        return removeCount;
    }
}
