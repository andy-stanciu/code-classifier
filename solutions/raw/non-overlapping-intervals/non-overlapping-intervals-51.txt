class Solution {

    public int eraseOverlapIntervals(int[][] intervals) {
        //SORT BY START TIME
        Arrays.sort(intervals, (a, b) -> a[0] - b[0]);
        int count = 0;
        //keep track of END TIME of last approved interval
        int prevEnd = intervals[0][1];
        for (int i = 1; i < intervals.length; i++) {
            //if the end for our last interval is after the start of any given one, overlap
            if (prevEnd > intervals[i][0]) {
                count++;
                //we want to pick the interval that ends earliest to be our comparison point, so if prev ends after cur, make prev= cur
                if (prevEnd > intervals[i][1]) {
                    prevEnd = intervals[i][1];
                }
            } else {
                //update if no overlap
                prevEnd = intervals[i][1];
            }
        }
        return count;
    }
}
