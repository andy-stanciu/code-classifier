class Solution {

    public int eraseOverlapIntervals(int[][] intervals) {
        Interval[] interval = new Interval[intervals.length];
        for (int i = 0; i < intervals.length; i++) {
            interval[i] = new Interval(intervals[i][0], intervals[i][1]);
        }
        Arrays.sort(interval, new Comparator<Interval>() {

            @Override
            public int compare(Interval o1, Interval o2) {
                return o1.end - o2.end;
            }
        });
        int count = 0, lastEnd = Integer.MIN_VALUE;
        for (int i = 0; i < interval.length; i++) {
            if (interval[i].start >= lastEnd) {
                count++;
                lastEnd = interval[i].end;
            }
        }
        return interval.length - count;
    }
}

class Interval {

    int start;

    int end;

    Interval(int start, int end) {
        this.start = start;
        this.end = end;
    }
}
