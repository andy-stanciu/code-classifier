class Solution {

    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int k = m + n - 1;
        //for memory management i didnt use additional variables
        m--;
        n--;
        //note: \'m\'th index and \'nums1\' array\'s last index are different.
        //the below loop will be looking for the largest element from the \'m\'th and \'n\'th indices. The largest one will be inserted from the last index of nums1 array.
        while (m >= 0 && n >= 0) {
            if (nums1[m] >= nums2[n]) {
                nums1[k--] = nums1[m--];
            } else {
                nums1[k--] = nums2[n--];
            }
        }
        //finally, only the elements from nums2 array will be remaining. Note: if nums1 array\'s elements are remaining, they are already in the proper order. Just think!!
        while (//add elements from nums2 array from the place where we left(i.e.\'k\'th index and \'n\'th index).
        n >= 0) {
            nums1[k--] = nums2[n--];
        }
    }
}
