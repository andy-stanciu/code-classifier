class Solution {

    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int nums1Index = m - 1;
        int nums2Index = n - 1;
        int currentDestinationIndex = m + n - 1;
        while (nums1Index >= 0 && nums2Index >= 0) {
            if (nums2[nums2Index] > nums1[nums1Index]) {
                nums1[currentDestinationIndex] = nums2[nums2Index];
                nums2Index--;
            } else {
                nums1[currentDestinationIndex] = nums1[nums1Index];
                nums1Index--;
            }
            currentDestinationIndex--;
        }
        while (nums2Index >= 0) {
            nums1[currentDestinationIndex] = nums2[nums2Index];
            nums2Index--;
            currentDestinationIndex--;
        }
        // no need to check for nums1Index since they are already in order
    }
}
