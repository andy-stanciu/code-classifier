/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        // Rekursive Traversierung
        if (root != null) {
            // Linken Teilbaum durchlaufen
            result.addAll(inorderTraversal(root.left));
            // Knoten verarbeiten
            result.add(root.val);
            // Rechten Teilbaum durchlaufen
            result.addAll(inorderTraversal(root.right));
        }
        return result;
    }
}
