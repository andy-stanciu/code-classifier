/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        if (root == null)
            return res;
        Stack<TreeNode> st = new Stack<>();
        st.add(root);
        while (!st.isEmpty()) {
            TreeNode temp = st.peek();
            while (temp.left != null) {
                TreeNode t = temp.left;
                temp.left = null;
                temp = t;
                st.push(temp);
            }
            temp = st.pop();
            res.add(temp.val);
            if (temp.right != null)
                st.push(temp.right);
        }
        return res;
    }
}
