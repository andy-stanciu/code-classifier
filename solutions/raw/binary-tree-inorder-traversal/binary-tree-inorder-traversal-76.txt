/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    //creating an instance
    List<Integer> list = new ArrayList<Integer>();

    public List<Integer> inorderTraversal(TreeNode root) {
        //if empty tree
        if (root == null)
            return list;
        TreeNode ptr = root;
        traversal(ptr);
        return list;
    }

    //inorder traversal
    public void traversal(TreeNode root) {
        //return on reaching end
        if (root == null)
            return;
        // recur on the left node
        traversal(root.left);
        //get the data of the node
        list.add(root.val);
        //now recur on the right node
        traversal(root.right);
    }
}
