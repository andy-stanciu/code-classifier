/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> inorderTraversal(TreeNode root) {
        ArrayList<Integer> a = new ArrayList<>();
        inorderHelper(root, a);
        return a;
    }

    private void inorderHelper(TreeNode root, ArrayList<Integer> a) {
        if (root == null)
            return;
        // Traverse the left subtree
        inorderHelper(root.left, a);
        // Visit the root
        a.add(root.val);
        // Traverse the right subtree
        inorderHelper(root.right, a);
    }
}
