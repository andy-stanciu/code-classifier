/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Integer> inorderList = new ArrayList<>();

    public List<Integer> inorderTraversal(TreeNode root) {
        if (// if current node exceeded out of the tree
        root == null)
            return inorderList;
        // Traverse until reaches left end of the tree
        inorderTraversal(root.left);
        inorderList.add(root.val);
        // Traverse until reaches right end of the tree
        inorderTraversal(root.right);
        return inorderList;
    }
}
