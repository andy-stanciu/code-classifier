class Solution {

    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        TreeNode curr = root;
        TreeNode pre;
        while (curr != null) {
            if (curr.left == null) {
                res.add(curr.val);
                // move to next right node
                curr = curr.right;
            } else {
                // has a left subtree
                pre = curr.left;
                while (pre.right != null) {
                    // find rightmost
                    pre = pre.right;
                }
                // put cur after the pre node
                pre.right = curr;
                // store cur node
                TreeNode temp = curr;
                // move cur to the top of the new tree
                curr = curr.left;
                // original cur left be null, avoid infinite loops
                temp.left = null;
            }
        }
        return res;
    }
}
