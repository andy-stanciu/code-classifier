/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<Integer>();
        // If there is nothing then ask the program to gtfo
        if (root == null)
            return result;
        if (root.left == null && root.right == null) {
            // If it has only one elment then add it and gtfo
            result.add(root.val);
            return result;
        }
        if (root.left != null) {
            // If left is not null then add whatever list comes out of left
            result.addAll(inorderTraversal(root.left));
        }
        // Next add route
        result.add(root.val);
        if (root.right != null)
            // Next add whatever list comes out of right and then gtfo
            result.addAll(inorderTraversal(root.right));
        return result;
    }
}
