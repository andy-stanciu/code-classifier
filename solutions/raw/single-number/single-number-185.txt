class Solution {

    public int singleNumber(int[] nums) {
        // if length is 1, return the element
        if (nums.length == 1)
            return nums[0];
        Map<Integer, Integer> map = new HashMap<>();
        for (int i : nums) {
            // put the int and 1 in the map, and get the return value
            Integer v = map.putIfAbsent(i, 1);
            if (// if the key did not exist before, the return will containe the value; null otherwise
            v != null) {
                // increment the value
                v++;
                // replace the key+value
                map.replace(i, v);
            }
        }
        if (// check if there is a key with value 1
        map.containsValue(1)) {
            for (Map.Entry<Integer, Integer> e : map.entrySet()) {
                // iterate through map
                if (e.getValue() == 1) {
                    // find the key with value 1
                    return e.getKey();
                }
            }
        }
        // return anything here
        return -1;
    }
}
