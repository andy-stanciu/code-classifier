class Solution {

    public int singleNumber(int[] nums) {
        // Edge case: if there\'s only one number, return it.
        if (nums.length == 1)
            return nums[0];
        // Sort the array to bring duplicates together
        Arrays.sort(nums);
        // Traverse the sorted array
        for (int i = 0; i < nums.length - 1; i += 2) {
            // If current number doesn\'t match the next one, it\'s the unique number
            if (nums[i] != nums[i + 1]) {
                // Return the unique number
                return nums[i];
            }
        }
        // If the last number is unique (e.g., if all other pairs are matched before it)
        return nums[nums.length - 1];
    }
}
