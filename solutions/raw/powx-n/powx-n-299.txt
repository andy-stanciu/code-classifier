class Solution {

    public double myPow(double x, int n) {
        if (n == 0)
            // x^0 is 1 for any x
            return 1;
        // Convert n to long to handle cases like n = -2147483648 (Integer.MIN_VALUE)
        // long is needed to handle overflow
        long N = n;
        if (N < 0) {
            // For negative exponent, use the reciprocal of x
            x = 1 / x;
            // Convert N to positive without overflow
            N = -N;
        }
        double res = 1.0;
        while (N > 0) {
            if (N % 2 == 1) {
                // Multiply by x if N is odd
                res *= x;
            }
            // Square the base
            x = x * x;
            // Divide the exponent by 2
            N = N / 2;
        }
        return res;
    }
}
