class Solution {

    public double myPow(double x, int n) {
        // Handle negative exponent
        if (n < 0) {
            // Negate n
            n = -n;
            // Take reciprocal of x
            x = 1 / x;
        }
        // Initialize result
        double pow = 1;
        // Loop until n becomes zero
        while (n != 0) {
            // If n is odd, multiply the current x to pow
            if ((n & 1) != 0) {
                pow *= x;
            }
            // Square the base
            x *= x;
            // Right shift n by 1 (equivalent to dividing n by 2)
            n >>>= 1;
        }
        // Return the final result
        return pow;
    }
}
