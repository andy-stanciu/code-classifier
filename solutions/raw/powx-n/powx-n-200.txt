class Solution {

    public double myPow(double x, int n) {
        boolean flag = false;
        if (n == Integer.MAX_VALUE) {
            return x == 1 ? 1 : (x == -1 ? -1 : 0);
        }
        if (n == Integer.MIN_VALUE) {
            return x == 1 || x == -1 ? 1 : 0;
        }
        if (n < 0) {
            flag = true;
            n *= -1;
        }
        double result = powerFunction(x, n);
        if (flag) {
            result = 1 / result;
        }
        return result;
    }

    private double powerFunction(double x, int n) {
        // base condition
        if (n < 1) {
            return 1.0;
        }
        double halfPowerResult = powerFunction(x, n / 2);
        double result = halfPowerResult * halfPowerResult;
        if (n % 2 == 1) {
            result *= x;
        }
        return result;
    }
}
