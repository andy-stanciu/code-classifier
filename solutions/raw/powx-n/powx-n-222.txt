class Solution {

    public double myPow(double x, int n) {
        if (x == 0)
            return 0;
        if (n == 0)
            return 1;
        boolean isNegative;
        long newN;
        if (n < 0) {
            isNegative = true;
            newN = -(long) n;
        } else {
            isNegative = false;
            newN = n;
        }
        double res = ((newN & 1) == 1) ? x : 1d;
        int maxBit = 32;
        while ((newN >>> --maxBit) == 0) ;
        for (int i = 1; i <= maxBit; i++) {
            x *= x;
            if (((newN >>> i) & 1) == 1)
                res *= x;
        }
        return isNegative ? 1d / res : res;
    }
}
