class Solution {

    public double myPow(double x, int n) {
        if (n == 0) {
            return 1;
        }
        // Step 2: Handle negative powers by converting to positive and adjusting result
        if (n < 0) {
            x = 1 / x;
            // Special handling for Integer.MIN_VALUE to avoid overflow
            if (n == Integer.MIN_VALUE) {
                // To prevent overflow
                n += 1;
                // Compensate for the adjustment
                x *= x;
            }
            n = -n;
        }
        double halfPower = myPow(x, n / 2);
        double hPowerSq = halfPower * halfPower;
        if (n % 2 != 0) {
            hPowerSq *= x;
        }
        return hPowerSq;
    }
}
