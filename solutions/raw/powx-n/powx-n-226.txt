class Solution {

    // brute force for loop n time return result
    // but we can do a optimzation by break it in half
    // if n is even myPower(x,n/2)*myPower(x,n/2)
    //if n is odd myPow(x,n/2)*myPow(x,n/2)*x
    // if n=1 return x
    // if n = 0 return 1
    public double myPow(double x, int n) {
        if (n == 0)
            return 1;
        if (n == 1)
            return x;
        int exp = n / 2;
        if (n < 0) {
            exp = Math.abs(n / 2);
        }
        double halfResult = n > 0 ? myPow(x, exp) : 1.0 / myPow(x, exp);
        if (n % 2 == 0) {
            return halfResult * halfResult;
        }
        return n > 0 ? halfResult * halfResult * x : halfResult * halfResult * 1.0 / x;
    }
}
