class Solution {

    public double myPow(double x, int n) {
        boolean negative = false;
        if (n < 0) {
            negative = true;
            n = -n;
        }
        double val = myPowHelper(x, n);
        if (negative == true)
            return 1 / val;
        return val;
    }

    private double myPowHelper(double x, int n) {
        if (n == 0)
            return 1.0;
        // recursion answer
        double rans = myPowHelper(x, n / 2);
        double ans = rans * rans;
        // if n is odd
        if ((n & 1) != 0)
            ans *= x;
        return ans;
    }
}
