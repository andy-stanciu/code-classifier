class Solution {

    public double myPow(double x, int n) {
        // Any number to the power of 1 is x(itself)
        if (n == 1)
            return x;
        // Any number to the power of 0 is 1
        if (n == 0)
            return 1;
        // Handle 0 and 1 cases
        if (x == 0 || x == 1)
            return x;
        if (x == -1) {
            // Handle -1 case
            return (n % 2 == 0) ? 1 : -1;
        }
        if (n < 0) {
            // Check for the special case
            if (n == Integer.MIN_VALUE)
                n = -(n + 1);
            else
                // Adjust n to avoid overflowelse
                // Simply negate n to make it positive
                n = -n;
            // Invert x for negative exponent
            x = 1 / x;
        }
        double half = myPow(x, n / 2);
        if (n % 2 == 0)
            return half * half;
        else
            return half * half * x;
    }
}
