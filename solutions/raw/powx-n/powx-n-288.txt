class Solution {

    public double myPow(double x, int n) {
        // x^0 is always 1
        if (n == 0)
            return 1;
        // Use long to handle overflow for Integer.MIN_VALUE
        long power = n;
        if (n < 0) {
            // If n is negative, invert x
            x = 1 / x;
            // Use the positive value of n
            power = -power;
        }
        double res = 1;
        while (power > 0) {
            if ((power % 2) == 1) {
                // If power is odd, multiply the result by x
                res *= x;
            }
            // Square the base
            x *= x;
            // Divide the exponent by 2
            power /= 2;
        }
        return res;
    }
}
