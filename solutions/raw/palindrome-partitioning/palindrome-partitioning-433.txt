class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> resultList = new ArrayList<>();
        List<String> tempList = new ArrayList<>();
        helper(0, s, resultList, tempList);
        return resultList;
    }

    public void helper(int index, String s, List<List<String>> resultList, List<String> tempList) {
        if (s.length() == index) {
            resultList.add(new ArrayList<>(tempList));
            return;
        }
        for (int i = index; i < s.length(); i++) {
            if (check(index, s, i)) {
                tempList.add(s.substring(index, i + 1));
                helper(i + 1, s, resultList, tempList);
                tempList.remove(tempList.size() - 1);
            }
        }
    }

    public boolean check(int start, String s, int end) {
        while (start <= end) {
            if (s.charAt(start) != s.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
