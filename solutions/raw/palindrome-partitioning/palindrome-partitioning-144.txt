class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ll = new ArrayList<>();
        backtrack(ll, s, new ArrayList<>(), 0);
        return ll;
    }

    public void backtrack(List<List<String>> ll, String s, List<String> al, int f) {
        if (f == s.length()) {
            ll.add(new ArrayList<>(al));
        } else {
            for (int i = f; i < s.length(); i++) {
                if (ispal(s, f, i)) {
                    al.add(s.substring(f, i + 1));
                    backtrack(ll, s, al, i + 1);
                    al.remove(al.size() - 1);
                }
            }
        }
    }

    public boolean ispal(String s, int f, int l) {
        while (f < l) {
            if (s.charAt(f++) != s.charAt(l--))
                return false;
        }
        return true;
    }
}
