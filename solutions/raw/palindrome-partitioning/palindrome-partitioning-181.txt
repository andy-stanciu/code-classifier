class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList<>();
        List<String> curr = new ArrayList<>();
        explore(0, s, curr, result);
        return result;
    }

    public void explore(int index, String s, List<String> curr, List<List<String>> result) {
        if (index >= s.length()) {
            result.add(new ArrayList<>(curr));
            return;
        }
        for (int i = index; i < s.length(); i++) {
            String str = s.substring(index, i + 1);
            if (isPalin(str)) {
                curr.add(str);
                explore(i + 1, s, curr, result);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public boolean isPalin(String str) {
        int i = 0;
        int j = str.length() - 1;
        while (i < j) {
            if (str.charAt(i) != str.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}
