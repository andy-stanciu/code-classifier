class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        part(s, 0, 1, ans, new ArrayList<>());
        return ans;
    }

    public void part(String s, int i, int j, List<List<String>> ans, List<String> list) {
        if (i == s.length() && j > s.length()) {
            ans.add(new ArrayList<>(list));
            return;
        }
        if (j > s.length()) {
            //System.out.println("oo");
            return;
        }
        if (isValid(s.substring(i, j))) {
            //    System.out.println("yes");
            list.add(s.substring(i, j));
            // list.stream().forEach(x->System.out.print(x +" and i -->"+i+" and  j-->"+j));
            // System.out.println(" ");
            part(s, j, j + 1, ans, list);
            list.remove(list.size() - 1);
        }
        part(s, i, j + 1, ans, list);
    }

    public boolean isValid(String s) {
        int start = 0;
        int end = s.length() - 1;
        while (start < end) {
            if (s.charAt(start) != s.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
