class Solution {

    List<List<String>> results = new ArrayList<>();

    public List<List<String>> partition(String s) {
        solve(s, 0, new ArrayList<String>());
        return results;
    }

    public void solve(String s, int index, List<String> answer) {
        if (index >= s.length()) {
            results.add(new ArrayList<String>(answer));
            return;
        }
        for (int i = index; i < s.length(); i++) {
            String sub = s.substring(index, i + 1);
            if (isPalindrome(sub)) {
                answer.add(sub);
                solve(s, i + 1, answer);
                answer.remove(answer.size() - 1);
            }
        }
    }

    public boolean isPalindrome(String s) {
        int i = 0;
        int j = s.length() - 1;
        while (i < j) {
            char c1 = s.charAt(i);
            char c2 = s.charAt(j);
            if (c1 != c2)
                return false;
            i++;
            j--;
        }
        return true;
    }
}
