class Solution {

    boolean isPalindrome(int i, int j, String str) {
        while (i < j) {
            if (str.charAt(i) != str.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }

    void f(int ind, String s, List<String> ls, List<List<String>> ans) {
        if (ind == s.length()) {
            ans.add(new ArrayList<>(ls));
            return;
        }
        for (int i = ind; i < s.length(); i++) {
            if (isPalindrome(ind, i, s)) {
                ls.add(s.substring(ind, i + 1));
                f(i + 1, s, ls, ans);
                ls.remove(ls.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> ls = new ArrayList<>();
        f(0, s, ls, ans);
        return ans;
    }
}
