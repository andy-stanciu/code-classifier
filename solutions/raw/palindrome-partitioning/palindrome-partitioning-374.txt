class Solution {

    public List<List<String>> partition(String s) {
        List<String> l = new ArrayList<>();
        List<List<String>> ans = new ArrayList<>();
        fun(0, s, l, ans);
        return ans;
    }

    public void fun(int idx, String s, List<String> l, List<List<String>> ans) {
        if (idx == s.length()) {
            ans.add(new ArrayList<>(l));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            if (isPalindrome(s, idx, i)) {
                l.add(s.substring(idx, i + 1));
                fun(i + 1, s, l, ans);
                l.remove(l.size() - 1);
            }
        }
    }

    public boolean isPalindrome(String s, int st, int e) {
        while (st <= e) {
            if (s.charAt(st++) != s.charAt(e--))
                return false;
        }
        return true;
    }
}
