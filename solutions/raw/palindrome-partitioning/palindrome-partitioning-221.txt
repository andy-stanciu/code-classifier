class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        helper(s, 0, res, new ArrayList<>());
        return res;
    }

    public void helper(String s, int idx, List<List<String>> res, List<String> ans) {
        if (idx == s.length()) {
            res.add(new ArrayList<>(ans));
            return;
        }
        for (int end = idx; end < s.length(); end++) {
            if (isPalindrome(s, idx, end)) {
                ans.add(s.substring(idx, end + 1));
                helper(s, end + 1, res, ans);
                ans.remove(ans.size() - 1);
            }
        }
    }

    public boolean isPalindrome(String s, int i, int j) {
        while (i < j) {
            if (s.charAt(i) != s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}
