class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> list = new ArrayList<>();
        helper(s, new ArrayList<>(), list);
        return list;
    }

    public void helper(String s, ArrayList<String> ans, List<List<String>> list) {
        if (s.length() == 0) {
            list.add(new ArrayList(ans));
            return;
        }
        for (int i = 1; i <= s.length(); i++) {
            String prefix = s.substring(0, i);
            if (isPalindrome(prefix)) {
                ans.add(prefix);
                helper(s.substring(i), ans, list);
                ans.remove(ans.size() - 1);
            }
        }
    }

    public boolean isPalindrome(String s) {
        int l = 0, r = s.length() - 1;
        while (l <= r) {
            if (s.charAt(l) != s.charAt(r))
                return false;
            l++;
            r--;
        }
        return true;
    }
}
