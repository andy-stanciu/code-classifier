class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList<>();
        int n = s.length();
        List<String> list = new ArrayList<>();
        solution(0, n, s, list, result);
        return result;
    }

    private void solution(int idx, int n, String s, List<String> list, List<List<String>> result) {
        if (idx == n) {
            result.add(new ArrayList<>(list));
            return;
        }
        String t = "";
        for (int i = idx; i < n; i++) {
            t += s.charAt(i);
            if (pal(idx, i, s)) {
                list.add(t);
                solution(i + 1, n, s, list, result);
                list.remove(list.size() - 1);
            }
        }
    }

    private boolean pal(int start, int end, String s) {
        while (start < end) {
            if (s.charAt(start) != s.charAt(end))
                return false;
            start++;
            end--;
        }
        return true;
    }
}
