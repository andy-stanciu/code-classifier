class Solution {

    List<String> res = new ArrayList<>();

    List<List<String>> fina = new ArrayList<>();

    public List<List<String>> partition(String s) {
        generate(s, 0);
        return fina;
    }

    public void generate(String s, int index) {
        if (index >= s.length()) {
            fina.add(new ArrayList<>(res));
            return;
        }
        for (int i = index; i < s.length(); i++) {
            if (isPalindrome(s.substring(index, i + 1))) {
                res.add(s.substring(index, i + 1));
                generate(s, i + 1);
                res.remove(res.size() - 1);
            }
        }
        return;
    }

    boolean isPalindrome(String sub) {
        int lo = 0;
        int hi = sub.length() - 1;
        while (lo < hi) {
            if (sub.charAt(lo++) != sub.charAt(hi--)) {
                return false;
            }
        }
        return true;
    }
}
