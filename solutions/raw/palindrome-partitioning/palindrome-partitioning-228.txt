class Solution {

    boolean isPalindrome(String s) {
        String rev = "";
        for (int i = s.length() - 1; i >= 0; i--) rev += s.charAt(i);
        return rev.equals(s);
    }

    void solve(int ind, String s, List<List<String>> res, List<String> ds) {
        if (ind == s.length()) {
            res.add(new ArrayList<>(ds));
            return;
        }
        for (int i = ind; i < s.length(); i++) {
            if (isPalindrome(s.substring(ind, i + 1))) {
                ds.add(s.substring(ind, i + 1));
                solve(i + 1, s, res, ds);
                ds.remove(ds.size() - 1);
            }
        }
    }

    List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        List<String> ds = new ArrayList<>();
        solve(0, s, res, ds);
        return res;
    }
}
