class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        partition(ans, new ArrayList<>(), s, 0);
        return ans;
    }

    public void partition(List<List<String>> list, List<String> temp, String s, int start) {
        if (start == s.length()) {
            list.add(new ArrayList<>(temp));
        } else {
            for (int i = start; i < s.length(); i++) {
                if (ispal(s, start, i)) {
                    temp.add(s.substring(start, i + 1));
                    partition(list, temp, s, i + 1);
                    temp.remove(temp.size() - 1);
                }
            }
        }
    }

    public boolean ispal(String ss, int s, int h) {
        while (s <= h) {
            if (ss.charAt(s) != ss.charAt(h))
                return false;
            s++;
            h--;
        }
        return true;
    }
}
