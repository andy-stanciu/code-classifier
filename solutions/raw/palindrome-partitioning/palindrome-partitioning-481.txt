class Solution {

    List<List<String>> ans;

    public List<List<String>> partition(String s) {
        ans = new ArrayList();
        rec(0, s, new ArrayList());
        return ans;
    }

    void rec(int start, String s, List<String> list) {
        if (start == s.length()) {
            ans.add(new ArrayList(list));
            return;
        }
        for (int i = start; i < s.length(); i++) {
            String substring = s.substring(start, i + 1);
            if (isPallindrome(substring)) {
                list.add(substring);
                rec(i + 1, s, list);
                list.remove(list.size() - 1);
            }
        }
    }

    boolean isPallindrome(String s) {
        int n = s.length();
        for (int i = 0, j = n - 1; j >= i; i++, j--) if (s.charAt(i) != s.charAt(j))
            return false;
        return true;
    }
}
