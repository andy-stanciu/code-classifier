class Solution {

    List<List<String>> ans = new ArrayList<>();

    public List<List<String>> partition(String s) {
        List<String> str = new ArrayList<>();
        find(s, 0, str);
        return ans;
    }

    public void find(String s, int i, List<String> str) {
        if (i == s.length()) {
            ans.add(new ArrayList<>(str));
            return;
        }
        for (int k = i + 1; k <= s.length(); k++) {
            if (isPalindrome(s, i, k - 1)) {
                str.add(s.substring(i, k));
                find(s, k, str);
                str.remove(str.size() - 1);
            }
        }
    }

    private boolean isPalindrome(String s, int left, int right) {
        while (left < right) {
            if (s.charAt(left++) != s.charAt(right--)) {
                return false;
            }
        }
        return true;
    }
}
