class Solution {

    void partitionHelper(List<List<String>> ans, int idx, String s, ArrayList<String> temp) {
        if (idx == s.length()) {
            ans.add(new ArrayList(temp));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            if (isPalindrome(s, idx, i)) {
                temp.add(s.substring(idx, i + 1));
                partitionHelper(ans, i + 1, s, temp);
                temp.remove(temp.size() - 1);
            }
        }
    }

    boolean isPalindrome(String s, int l, int h) {
        while (l <= h) if (s.charAt(l++) != s.charAt(h--))
            return false;
        return true;
    }

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        partitionHelper(ans, 0, s, new ArrayList<>());
        return ans;
    }
}
