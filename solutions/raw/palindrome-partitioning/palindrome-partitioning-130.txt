class Solution {

    List<List<String>> res = new ArrayList<>();

    public List<List<String>> partition(String s) {
        recr(s, 0, new ArrayList<>());
        return res;
    }

    void recr(String s, int st, List<String> temp) {
        if (st == s.length()) {
            res.add(new ArrayList<>(temp));
            return;
        }
        for (int i = st; i < s.length(); i++) {
            if (isPalindrome(s, st, i)) {
                temp.add(s.substring(st, i + 1));
                recr(s, i + 1, temp);
                temp.remove(temp.size() - 1);
            }
        }
    }

    boolean isPalindrome(String s, int st, int ed) {
        if (s.length() == 1)
            return true;
        while (st < ed) {
            if (s.charAt(st) != s.charAt(ed))
                return false;
            st++;
            ed--;
        }
        return true;
    }
}
