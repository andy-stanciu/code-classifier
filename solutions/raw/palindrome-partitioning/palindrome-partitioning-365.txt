class Solution {

    List<List<String>> b = new ArrayList<>();

    public List<List<String>> partition(String s) {
        help(s, new ArrayList<>(), 0);
        return b;
    }

    void help(String s, List<String> l, int i) {
        //if(f==false) return;
        if (i >= s.length()) {
            b.add(new ArrayList<>(l));
            return;
        }
        String d = "";
        for (int j = i; j < s.length(); j++) {
            d += s.charAt(j);
            //String d = s.substring(i, j + 1);
            boolean n = pal(d, 0, d.length() - 1);
            if (n) {
                l.add(d);
                help(s, l, j + 1);
                l.remove(l.size() - 1);
            }
            //else help(s,l.add(d),j+1,false);
        }
    }

    boolean pal(String d, int q, int r) {
        while (q < r) {
            if (d.charAt(q) == d.charAt(r)) {
                q++;
                r--;
            } else {
                return false;
            }
        }
        return true;
    }
}
