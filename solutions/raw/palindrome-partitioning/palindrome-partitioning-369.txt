class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> curr = new ArrayList<>();
        helper(ans, curr, s, 0);
        return ans;
    }

    public void helper(List<List<String>> ans, List<String> curr, String s, int ind) {
        if (ind == s.length()) {
            ans.add(new ArrayList<>(curr));
            return;
        }
        for (int i = ind + 1; i <= s.length(); i++) {
            String substring = s.substring(ind, i);
            if (isPalindrome(substring)) {
                curr.add(substring);
                helper(ans, curr, s, i);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public boolean isPalindrome(String s) {
        int i = 0;
        int j = s.length() - 1;
        while (i <= j) {
            if (s.charAt(i) != s.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
}
