class Solution {

    public int canCompleteCircuit(int[] gas, int[] cost) {
        if (gas.length == 1) {
            if (gas[0] >= cost[0]) {
                return 0;
            } else
                return -1;
        }
        ArrayList<Integer> arr = new ArrayList<>();
        for (int i = 0; i < gas.length; i++) {
            arr.add(gas[i] - cost[i]);
        }
        for (int i = 0; i < arr.size(); i++) {
            if (arr.get(i) <= 0) {
                continue;
            } else {
                int costs = 0;
                int k = i;
                for (int j = 0; j < arr.size(); j++) {
                    if (k >= arr.size())
                        k = 0;
                    costs += arr.get(k);
                    if (costs < 0)
                        break;
                    k += 1;
                }
                if (costs >= 0 && i == k)
                    return i;
                if (i == 0 && costs >= 0 && k == arr.size())
                    return i;
            }
        }
        return -1;
    }
}
