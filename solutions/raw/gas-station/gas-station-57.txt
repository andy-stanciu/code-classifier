class Solution {

    public int canCompleteCircuit(int[] gas, int[] cost) {
        int gasSum = 0, costSum = 0, n = cost.length, ind = -1, prevDiff = 0;
        for (int i = 0; i < n; i++) {
            costSum += cost[i];
            gasSum += gas[i];
            // finding the lowest possible diff between cost and gas sum
            if (prevDiff > (gasSum - costSum)) {
                ind = i;
                prevDiff = gasSum - costSum;
            }
        }
        // if cost sum is more than gas sum then there so no path
        if (costSum > gasSum)
            return -1;
        // if there is a path we will return the next ind of lowest possible value
        return ind + 1;
    }
}
