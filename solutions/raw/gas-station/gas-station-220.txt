class Solution {

    public int canCompleteCircuit(int[] gas, int[] cost) {
        int totalGas = 0;
        int totalCost = 0;
        int len = gas.length;
        for (int i = 0; i < len; i++) {
            totalGas += gas[i];
            totalCost += cost[i];
        }
        // No way we can have circular as cost > gas.
        if (totalCost > totalGas) {
            return -1;
        }
        // I am certain: there is circle from somewhere.
        // Lets find where?
        // Assume circle starts from 0.
        int circleStarts = 0;
        int windowGas = 0;
        for (int i = 0; i < len; i++) {
            int currGas = gas[i];
            int currCost = cost[i];
            windowGas += currGas - currCost;
            if (windowGas < 0) {
                // Oh No! We cant start cycle here.
                // But may be from the next station.
                circleStarts = i + 1;
                windowGas = 0;
            }
        }
        return circleStarts;
    }
}
