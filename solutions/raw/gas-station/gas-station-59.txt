class Solution {

    public int canCompleteCircuit(int[] gas, int[] cost) {
        // O(n) time | O(1) space
        int sumOfGas = 0, sumOfCost = 0, startIdx = 0, total = 0;
        for (int i = 0; i < gas.length; i++) {
            sumOfGas += gas[i];
            sumOfCost += cost[i];
        }
        // gas < cost then it means we won\'t be able to complete a loop
        if (sumOfGas < sumOfCost)
            return -1;
        for (int i = 0; i < gas.length; i++) {
            total += gas[i] - cost[i];
            // total < 0 means that we won\'t be able to move to the next index because gas < cost
            // so this startIdx is invalid. We have to try other idx as startIdx
            if (total < 0) {
                total = 0;
                startIdx = i + 1;
            }
        }
        return startIdx;
    }
}
