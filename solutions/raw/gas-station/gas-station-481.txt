class Solution {

    public int canCompleteCircuit(int[] gas, int[] cost) {
        int n = gas.length;
        // Starting index of the tour
        int start = 0;
        // Current gas in the tank
        int currGas = 0;
        // Total gas available
        int totalGas = 0;
        for (int i = 0; i < n; i++) {
            // Calculate the difference between gas and cost
            int gasDiff = gas[i] - cost[i];
            // If current gas + gasDiff becomes negative, we cannot start the tour from the current index
            if (currGas + gasDiff < 0) {
                // Update the starting index to the next index
                start = i + 1;
                // Reset the current gas
                currGas = 0;
            } else {
                // Update the current gas with the difference
                currGas += gasDiff;
            }
            // Update the total gas available
            totalGas += gasDiff;
        }
        // If total gas available is negative, it means there is no possible tour
        if (totalGas < 0) {
            return -1;
        }
        // Return the starting index of the tour
        return start;
    }
}
