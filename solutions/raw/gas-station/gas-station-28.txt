class Solution {

    public int canCompleteCircuit(int[] gas, int[] cost) {
        int total_gas = 0;
        int total_cost = 0;
        for (int i = 0; i < gas.length; i++) {
            total_gas += gas[i];
        }
        for (int i = 0; i < cost.length; i++) {
            total_cost += cost[i];
        }
        //if our total fuel we are having is less than total cost of fuel for travelling a entire cirle
        //it is not possible to travel a entire circle
        if (total_gas < total_cost) {
            return -1;
        }
        int start = 0;
        //current represents the currentFuel we have to continue;
        //whenever current becomes negative we cannot travel anymore
        int currentFuel = 0;
        //which is the diff btw gas - cost
        for (int i = 0; i < gas.length; i++) {
            //we will try to start from each point
            //if curr is negative means we dont have enough resourses to travel
            currentFuel += gas[i] - cost[i];
            if (currentFuel < 0) {
                start = i + 1;
                currentFuel = 0;
            }
        }
        return start;
    }
}
