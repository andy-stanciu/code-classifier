class Solution {

    public int canCompleteCircuit(int[] gas, int[] cost) {
        int n = gas.length;
        int i = 0;
        int j = 0;
        while (i < n) {
            if (gas[i] >= cost[i]) {
                outer: {
                    int curr = gas[i] - cost[i] + gas[(i + 1) % n];
                    j = (i + 1) % n;
                    while (j != i) {
                        if (curr < cost[j])
                            break outer;
                        curr = curr - cost[j] + gas[(j + 1) % n];
                        j = (j + 1) % n;
                    }
                    return i;
                }
                if (i < j)
                    i = j - 1;
                else
                    return -1;
                // let say 10 stations, i try to start from first station onwards, let say at station 2nd gas >= cost, so i start at 2nd, until i reached 5th, now i can\'t go any further so i break here, now instead of starting again from station 3 is of no use, now i should start from station 6
                //  if you start from station a and stuck at b, then you can\'t get to b from any station between a and b
            }
            i++;
        }
        return -1;
    }
}
