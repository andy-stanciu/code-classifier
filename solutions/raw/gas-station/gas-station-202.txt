class Solution {

    public int findStart(int[] gas, int[] cost) {
        for (int i = 0; i < gas.length; i++) {
            int nextStation = i == gas.length - 1 ? 0 : i + 1;
            int curGas = gas[i];
            int gasNeeded = cost[nextStation];
            if (curGas - gasNeeded >= 0) {
                return i;
            }
            nextStation++;
        }
        return -1;
    }

    public int canCompleteCircuit(int[] gas, int[] cost) {
        int totalGas = 0;
        int totalCost = 0;
        int tank = 0;
        int startStation = 0;
        for (int i = 0; i < gas.length; i++) {
            totalGas += gas[i];
            totalCost += cost[i];
            tank += gas[i] - cost[i];
            if (tank < 0) {
                startStation = i + 1;
                tank = 0;
            }
        }
        return totalGas >= totalCost ? startStation : -1;
    }
}
