class Solution {

    public boolean isAnagram(String s, String t) {
        int sl = s.length();
        int freq = 0;
        if (sl != t.length()) {
            return false;
        }
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < sl; i++) {
            char chs = s.charAt(i);
            freq = 1;
            if (map.containsKey(chs)) {
                freq = map.get(chs) + 1;
            }
            //if the map already contains the key "chs", we get its corresponding Value (the letters frequency) add 1 to it and update the Value to the Key chs (by reentering the same Key with a new Value)
            map.put(chs, freq);
        }
        for (int i = 0; i < sl; i++) {
            char cht = t.charAt(i);
            if (map.containsKey(cht) && map.get(cht) > 0) {
                //we need to make sure that the map doesnt only contains the key, but also that its frequency is still > 0  (because deletign a Key-Value Pair when its Frequency gets below zero is unnecessary computational effort)
                freq = map.get(cht) - 1;
                map.put(cht, freq);
            } else {
                return false;
            }
        }
        return true;
    }
}
