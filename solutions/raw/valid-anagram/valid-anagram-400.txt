class Solution {

    public boolean isAnagram(String s, String t) {
        if (s.length() != t.length()) {
            return false;
        }
        Map<Character, Integer> freqsForS = new HashMap<>();
        Map<Character, Integer> freqsForT = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            if (freqsForT.containsKey(s.charAt(i))) {
                if (freqsForT.get(s.charAt(i)) - 1 == 0) {
                    freqsForT.remove(s.charAt(i));
                } else {
                    freqsForT.put(s.charAt(i), freqsForT.get(s.charAt(i)) - 1);
                }
            } else {
                freqsForS.put(s.charAt(i), freqsForS.getOrDefault(s.charAt(i), 0) + 1);
            }
            if (freqsForS.containsKey(t.charAt(i))) {
                if (freqsForS.get(t.charAt(i)) - 1 == 0) {
                    freqsForS.remove(t.charAt(i));
                } else {
                    freqsForS.put(t.charAt(i), freqsForS.get(t.charAt(i)) - 1);
                }
            } else {
                freqsForT.put(t.charAt(i), freqsForT.getOrDefault(t.charAt(i), 0) + 1);
            }
        }
        return freqsForS.isEmpty() && freqsForT.isEmpty();
    }
}
