class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // Dummy head to simplify the result list construction
        ListNode dummyHead = new ListNode(0);
        ListNode current = dummyHead;
        int carry = 0;
        // Loop until both lists are exhausted and there is no carry
        while (l1 != null || l2 != null || carry != 0) {
            // Extract values from the current nodes; use 0 if the node is null
            int val1 = (l1 != null) ? l1.val : 0;
            int val2 = (l2 != null) ? l2.val : 0;
            // Calculate the sum and update carry
            int total = val1 + val2 + carry;
            // Correctly update carry
            carry = total / 10;
            // Value to store in the new node
            int newVal = total % 10;
            // Create a new node with the computed value
            current.next = new ListNode(newVal);
            current = current.next;
            // Move to the next nodes if they exist
            if (l1 != null)
                l1 = l1.next;
            if (l2 != null)
                l2 = l2.next;
        }
        // Return the result list (which starts after dummyHead)
        return dummyHead.next;
    }
}
