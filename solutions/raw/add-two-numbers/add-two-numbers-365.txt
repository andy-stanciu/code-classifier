/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    int carry = 0, sum = 0;

    ListNode l3 = null;

    ListNode head = l3;

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1 == null && l2 != null) {
            sum = l2.val + carry;
            carry = sum / 10;
            sum = sum % 10;
            if (l3 == null) {
                l3 = new ListNode(sum);
                head = l3;
            } else {
                l3.next = new ListNode(sum);
                l3 = l3.next;
            }
            return addTwoNumbers(l1, l2.next);
        }
        if (l2 == null && l1 != null) {
            sum = l1.val + carry;
            carry = sum / 10;
            sum = sum % 10;
            if (l3 == null) {
                l3 = new ListNode(sum);
                head = l3;
            } else {
                l3.next = new ListNode(sum);
                l3 = l3.next;
            }
            return addTwoNumbers(l1.next, l2);
        }
        if (l1 == null && l2 == null) {
            if (carry != 0)
                l3.next = new ListNode(carry);
            l3 = l3.next;
            return head;
        }
        sum = l1.val + l2.val + carry;
        carry = sum / 10;
        sum = sum % 10;
        if (l3 == null) {
            l3 = new ListNode(sum);
            head = l3;
        } else {
            l3.next = new ListNode(sum);
            l3 = l3.next;
        }
        return addTwoNumbers(l1.next, l2.next);
    }
}
