/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        int carry = 0;
        ListNode ans = new ListNode(-1);
        ListNode res = ans;
        while (temp1 != null && temp2 != null) {
            ListNode curr = new ListNode(-1);
            int sum = temp1.val + temp2.val + carry;
            curr.val = sum % 10;
            carry = sum / 10;
            ans.next = curr;
            ans = ans.next;
            temp1 = temp1.next;
            temp2 = temp2.next;
        }
        while (temp1 != null) {
            ListNode curr = new ListNode(-1);
            int sum = temp1.val + carry;
            curr.val = sum % 10;
            carry = sum / 10;
            ans.next = curr;
            ans = ans.next;
            temp1 = temp1.next;
        }
        while (temp2 != null) {
            ListNode curr = new ListNode(-1);
            int sum = temp2.val + carry;
            curr.val = sum % 10;
            carry = sum / 10;
            ans.next = curr;
            ans = ans.next;
            temp2 = temp2.next;
        }
        if (carry != 0) {
            ListNode curr = new ListNode(-1);
            curr.val = carry;
            ans.next = curr;
            ans = ans.next;
        }
        return res.next;
    }
}
