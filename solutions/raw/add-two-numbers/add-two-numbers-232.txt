/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1 == null)
            return l2;
        if (l2 == null)
            return l1;
        if (l1 == null && l2 == null)
            return null;
        ListNode dummy = new ListNode();
        ListNode tail = dummy;
        ListNode t1 = l1;
        ListNode t2 = l2;
        int carry = 0;
        while (t1 != null || t2 != null) {
            int sum = (t1 != null ? t1.val : 0) + (t2 != null ? t2.val : 0) + carry;
            carry = sum / 10;
            int digit = sum % 10;
            tail.next = new ListNode(digit);
            tail = tail.next;
            t1 = t1 == null ? null : t1.next;
            t2 = t2 == null ? null : t2.next;
        }
        if (carry > 0) {
            tail.next = new ListNode(carry);
        }
        return dummy.next;
    }
}
