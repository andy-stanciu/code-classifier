/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode res = new ListNode();
        ListNode curRes = res;
        int nextNodeAdd = 0;
        while (l1 != null || l2 != null || nextNodeAdd > 0) {
            int l1Val = l1 == null ? 0 : l1.val;
            int l2Val = l2 == null ? 0 : l2.val;
            int sum = l1Val + l2Val + nextNodeAdd;
            int currentNodeVal = sum % 10;
            nextNodeAdd = (int) (sum / 10);
            curRes.val = currentNodeVal;
            if (l1 != null)
                l1 = l1.next;
            if (l2 != null)
                l2 = l2.next;
            if (l1 != null || l2 != null || nextNodeAdd > 0) {
                curRes.next = new ListNode();
                curRes = curRes.next;
            }
        }
        return res;
    }
}
