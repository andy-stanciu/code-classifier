/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode current1 = l1;
        ListNode current2 = l2;
        int carry = 0;
        ListNode head = null;
        ListNode currentSum = null;
        while (current1 != null || current2 != null) {
            int val1 = current1 == null ? 0 : current1.val;
            int val2 = current2 == null ? 0 : current2.val;
            int sum = val1 + val2 + carry;
            carry = sum / 10;
            sum = sum % 10;
            ListNode node = new ListNode(sum, null);
            if (currentSum == null) {
                head = node;
                currentSum = head;
            } else {
                currentSum.next = node;
                currentSum = currentSum.next;
            }
            current1 = current1 != null ? current1.next : null;
            current2 = current2 != null ? current2.next : null;
        }
        if (carry > 0) {
            ListNode node = new ListNode(carry, null);
            currentSum.next = node;
        }
        return head;
    }
}
