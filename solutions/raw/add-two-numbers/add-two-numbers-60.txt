/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        //dummy node
        ListNode l3 = new ListNode(0);
        // Pointer to build the result
        ListNode head = l3;
        int carry = 0;
        int value = 0;
        while (l1 != null && l2 != null) {
            value = l1.val + l2.val + carry;
            carry = value / 10;
            l3.next = new ListNode(value % 10);
            l3 = l3.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        //add l1 if has more value then l2
        while (l1 != null) {
            value = l1.val + carry;
            carry = value / 10;
            l3.next = new ListNode(value % 10);
            l3 = l3.next;
            l1 = l1.next;
        }
        //add l2 if has more value then l1
        while (l2 != null) {
            value = l2.val + carry;
            carry = value / 10;
            l3.next = new ListNode(value % 10);
            l3 = l3.next;
            l2 = l2.next;
        }
        //add if carry left
        if (carry == 1) {
            l3.next = new ListNode(carry);
        }
        return head.next;
    }
}
