/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        ListNode connect = temp1;
        ListNode connect_for_temp2 = temp2;
        int carry = 0;
        while (temp1 != null && temp2 != null) {
            temp1.val = temp1.val + temp2.val + carry;
            carry = temp1.val / 10;
            temp1.val = temp1.val % 10;
            connect = temp1;
            temp1 = temp1.next;
            temp2 = temp2.next;
        }
        if (temp1 != null && temp2 == null) {
            while (temp1 != null) {
                temp1.val += carry;
                carry = temp1.val / 10;
                temp1.val = temp1.val % 10;
                connect = temp1;
                temp1 = temp1.next;
            }
        } else if (temp2 != null && temp1 == null) {
            connect.next = temp2;
            while (temp2 != null) {
                temp2.val += carry;
                carry = temp2.val / 10;
                temp2.val = temp2.val % 10;
                connect_for_temp2 = temp2;
                temp2 = temp2.next;
            }
            if (carry == 1) {
                connect_for_temp2.next = new ListNode(1);
            }
            return l1;
        }
        if (carry == 1) {
            connect.next = new ListNode(1);
        }
        return l1;
    }
}
