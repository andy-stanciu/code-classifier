/**
 * Definition for singly-linksingly-linkeded list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        int sum = 0;
        ListNode dummy = new ListNode(0);
        ListNode temp = dummy;
        while (l1 != null || l2 != null) {
            //These variables will be assigned the values of respective nodes of l1 & l2 iff any of the lists is not null
            int x = (l1 != null) ? l1.val : 0;
            int y = (l2 != null) ? l2.val : 0;
            sum = x + y + carry;
            carry = sum / 10;
            //Adding value in the temp node
            temp.next = new ListNode(sum % 10);
            //Moving the temp pointer to a step ahead
            temp = temp.next;
            //Moving the pointer of list l1 and l2
            if (l1 != null)
                l1 = l1.next;
            if (l2 != null)
                l2 = l2.next;
        }
        if (carry > 0)
            temp.next = new ListNode(carry);
        return dummy.next;
    }
}
