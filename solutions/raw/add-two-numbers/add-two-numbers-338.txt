/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode ll1 = l1;
        ListNode ll2 = l2;
        ListNode l3 = new ListNode(0);
        ListNode ll3 = l3;
        int c = 0;
        while (ll1 != null || ll2 != null) {
            int a = 0;
            int b = 0;
            if (ll1 != null) {
                a = ll1.val;
            }
            if (ll2 != null) {
                b = ll2.val;
            }
            int ab = a + b + c;
            c = ab / 10;
            ab = ab % 10;
            ll3.val = ab;
            if (ll2 != null) {
                ll2 = ll2.next;
            }
            if (ll1 != null) {
                ll1 = ll1.next;
            }
            if (ll1 != null || ll2 != null) {
                ll3.next = new ListNode(0);
                ll3 = ll3.next;
            } else if (c != 0) {
                ll3.next = new ListNode(c);
            }
        }
        return l3;
    }
}
