/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int addNext = 0;
        int sum = 0;
        ListNode current = new ListNode();
        ListNode res = current;
        while (l1 != null && l2 != null) {
            sum = l1.val + l2.val + addNext;
            current.val = (sum) % 10;
            addNext = sum / 10;
            if (l1.next != null && l2.next != null) {
                current.next = new ListNode();
                current = current.next;
            }
            l1 = l1.next;
            l2 = l2.next;
        }
        while (l1 != null) {
            current.next = new ListNode();
            current = current.next;
            sum = l1.val + addNext;
            current.val = sum % 10;
            addNext = sum / 10;
            l1 = l1.next;
        }
        while (l2 != null) {
            current.next = new ListNode();
            current = current.next;
            sum = l2.val + addNext;
            current.val = sum % 10;
            addNext = sum / 10;
            l2 = l2.next;
        }
        if (addNext != 0)
            current.next = new ListNode(addNext);
        return res;
    }
}
