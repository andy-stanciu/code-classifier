/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        String numOne = "";
        String numTwo = "";
        do {
            numOne = l1.val + "" + numOne;
            l1 = l1.next;
        } while (l1 != null);
        do {
            numTwo = l2.val + "" + numTwo;
            l2 = l2.next;
        } while (l2 != null);
        BigInteger bOne = new BigInteger(numOne);
        BigInteger bTwo = new BigInteger(numTwo);
        bOne = bOne.add(bTwo);
        String numThree = bOne.toString();
        System.out.println(numThree);
        ListNode result = new ListNode(0);
        ListNode pointer = result;
        while (!numThree.equals("")) {
            pointer.val = Integer.parseInt(numThree.substring(numThree.length() - 1, numThree.length()));
            System.out.println("pointer value: " + pointer.val);
            numThree = numThree.substring(0, numThree.length() - 1);
            System.out.println("num after concat value: " + numThree);
            if (numThree.equals(""))
                break;
            pointer.next = new ListNode();
            pointer = pointer.next;
        }
        return result;
    }
}
