class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        /* Approach
        - TC --> O(M+N) || SC --> O(M+N)
        - Use 2-pointer to find sum 
        - Logic :: simple carry forward technique of addition
        */
        //base - case
        if (l1 == null)
            return l2;
        if (l2 == null)
            return l1;
        ListNode t1 = l1;
        ListNode t2 = l2;
        //dummy node to avoid unnecessary if else. Clean code
        ListNode head = new ListNode(0);
        ListNode temp = head;
        int carry = 0;
        while (t1 != null || t2 != null) {
            int sum = 0;
            if (t1 != null && t2 != null) {
                sum = t1.val + t2.val + carry;
                t1 = t1.next;
                t2 = t2.next;
            } else if (t1 == null) {
                sum = t2.val + carry;
                t2 = t2.next;
            } else if (t2 == null) {
                sum = t1.val + carry;
                t1 = t1.next;
            }
            ListNode node = new ListNode(sum % 10);
            carry = sum / 10;
            temp.next = node;
            temp = temp.next;
        }
        //Removing dummy node
        head = head.next;
        if (carry != 0) {
            // Left out carry
            ListNode node = new ListNode(carry);
            temp.next = node;
        }
        return head;
    }
}
