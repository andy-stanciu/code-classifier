/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int n1 = 0;
        int n2 = 0;
        int resultVal = 0;
        int carry = 0;
        ListNode resultList = null;
        ListNode start = null;
        while (l1 != null || l2 != null || carry != 0) {
            resultVal = 0;
            n1 = 0;
            if (l1 != null) {
                n1 = l1.val;
                l1 = l1.next;
            }
            n2 = 0;
            if (l2 != null) {
                n2 = l2.val;
                l2 = l2.next;
            }
            resultVal = n1 + n2 + carry;
            // Reset carry
            carry = 0;
            if (resultVal >= 10) {
                carry = 1;
                resultVal -= 10;
            }
            if (resultList == null) {
                resultList = new ListNode(resultVal);
                start = resultList;
            } else {
                resultList.next = new ListNode(resultVal);
                resultList = resultList.next;
            }
        }
        return start;
    }
}
