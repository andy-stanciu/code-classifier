class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        return sumAllNodes(l1, l2, 0);
    }

    private ListNode sumAllNodes(ListNode node1, ListNode node2, int reminder) {
        // if nothing to sum up
        if (node1 == null && node2 == null && reminder == 0) {
            return null;
        }
        // get values to sum up
        final int val1 = node1 != null ? node1.val : 0;
        final int val2 = node2 != null ? node2.val : 0;
        // create sum result node
        final int summ = val1 + val2 + reminder;
        final ListNode node = new ListNode(summ % 10);
        // get next nodes
        final ListNode next1 = node1 != null ? node1.next : null;
        final ListNode next2 = node2 != null ? node2.next : null;
        // process child nodes recursively
        node.next = sumAllNodes(next1, next2, summ / 10);
        return node;
    }
}
