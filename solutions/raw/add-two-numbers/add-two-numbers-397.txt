/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    private ListNode r = new ListNode();

    private ListNode rp = r;

    private void createNode(int p, ListNode a, ListNode b) {
        if (a == null && b == null) {
            if (p != 0) {
                rp.next = new ListNode(p);
            }
            return;
        } else {
            int s = (a == null ? 0 : a.val) + (b == null ? 0 : b.val) + p;
            p = 0;
            if (s > 9) {
                s = s - 10;
                p = 1;
            }
            rp.next = new ListNode(s);
            rp = rp.next;
            a = a == null ? null : (a.next == null ? null : a.next);
            b = b == null ? null : (b.next == null ? null : b.next);
            createNode(p, a, b);
        }
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int p = 0;
        int s = l1.val + l2.val;
        if (s > 9) {
            s = s - 10;
            p = 1;
        }
        l1 = l1.next;
        l2 = l2.next;
        r.val = s;
        createNode(p, l1, l2);
        return r;
    }
}
