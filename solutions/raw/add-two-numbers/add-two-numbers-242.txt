/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode DumyNode = new ListNode(-1);
        ListNode curr = DumyNode;
        ListNode Temp1 = l1;
        ListNode Temp2 = l2;
        int carry = 0;
        while (Temp1 != null || Temp2 != null) {
            int sum = carry;
            if (Temp1 != null) {
                sum += Temp1.val;
            }
            if (Temp2 != null) {
                sum += Temp2.val;
            }
            ListNode newNode = new ListNode(sum % 10);
            carry = sum / 10;
            curr.next = newNode;
            curr = curr.next;
            if (Temp1 != null) {
                Temp1 = Temp1.next;
            }
            if (Temp2 != null) {
                Temp2 = Temp2.next;
            }
        }
        if (carry == 1) {
            ListNode newNode = new ListNode(carry);
            curr.next = newNode;
        }
        return DumyNode.next;
    }
}
