/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int c = 0;
        ListNode node = new ListNode(1);
        ListNode head = node;
        int temp = 0;
        while (l1 != null || l2 != null) {
            if (l1 != null && l2 != null) {
                temp = (l1.val + l2.val + c) % 10;
                c = (l1.val + l2.val + c) / 10;
                node.next = new ListNode(temp);
                node = node.next;
                l1 = l1.next;
                l2 = l2.next;
            } else {
                temp = (l1 == null) ? l2.val + c : l1.val + c;
                if (l1 == null) {
                    c = (l2.val + c) / 10;
                    l2 = l2.next;
                } else {
                    c = (l1.val + c) / 10;
                    l1 = l1.next;
                }
                node.next = new ListNode((temp % 10));
                node = node.next;
            }
        }
        if (c > 0) {
            node.next = new ListNode(c);
        }
        return head.next;
    }
}
