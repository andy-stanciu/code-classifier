/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int f = 0;
        ListNode l;
        if (l1.val + l2.val > 9) {
            l = new ListNode((l1.val + l2.val) % 10);
            f = 1;
        } else
            l = new ListNode(l1.val + l2.val);
        ListNode t = l;
        while (l1.next != null || l2.next != null) {
            if (l2.next != null)
                l2 = l2.next;
            else
                l2.val = 0;
            if (l1.next != null)
                l1 = l1.next;
            else
                l1.val = 0;
            int n = 0;
            if (l1 == null)
                n = l2.val;
            else if (l2 == null)
                n = l1.val;
            else
                n = l1.val + l2.val;
            if (f == 1) {
                n++;
                f = 0;
            }
            if (n > 9) {
                if (f == 1)
                    t.next = new ListNode(n % 10 + 1);
                else
                    t.next = new ListNode(n % 10);
                f = 1;
            } else {
                if (f == 1) {
                    t.next = new ListNode(n + 1);
                    f = 0;
                } else
                    t.next = new ListNode(n);
            }
            t = t.next;
        }
        if (f == 1)
            t.next = new ListNode(1);
        return l;
    }
}
