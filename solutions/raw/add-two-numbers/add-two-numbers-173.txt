class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        List<Integer> tmp = new ArrayList();
        while (l1 != null) {
            tmp.add(l1.val);
            l1 = l1.next;
        }
        int count = 0;
        int x = 0;
        while (l2 != null) {
            if (count == tmp.size()) {
                if (l2.val + x < 10) {
                    tmp.add(x + l2.val);
                    x = 0;
                } else {
                    tmp.add((x + l2.val) % 10);
                    x = 1;
                }
            } else {
                if (tmp.get(count) + x + l2.val < 10) {
                    tmp.set(count, tmp.get(count) + x + l2.val);
                    x = 0;
                } else {
                    tmp.set(count, (tmp.get(count) + x + l2.val) % 10);
                    x = 1;
                }
            }
            l2 = l2.next;
            count++;
        }
        while (x == 1 && count < tmp.size()) {
            if (tmp.get(count) + x > 9) {
                tmp.set(count, (tmp.get(count) + x) % 10);
                x = 1;
            } else {
                tmp.set(count, tmp.get(count) + x);
                x = 0;
            }
            count++;
        }
        if (x == 1) {
            tmp.add(1);
        }
        for (int i = tmp.size() - 1; i >= 0; i--) {
            l1 = new ListNode(tmp.get(i), l1);
        }
        return l1;
    }
}
