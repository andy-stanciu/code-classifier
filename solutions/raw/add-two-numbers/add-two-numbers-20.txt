/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode m = new ListNode(0);
        ListNode ans = m;
        int c = 0;
        while (l1 != null && l2 != null) {
            int x = l1.val + l2.val;
            if (x + c > 9) {
                ListNode n = new ListNode();
                n.val = (x + c) % 10;
                m.next = n;
                m = m.next;
                c = (x + c) / 10;
            } else {
                ListNode n = new ListNode();
                n.val = x + c;
                m.next = n;
                m = m.next;
                c = 0;
            }
            l1 = l1.next;
            l2 = l2.next;
        }
        while (l1 != null) {
            ListNode n = new ListNode();
            n.val = (l1.val + c) % 10;
            m.next = n;
            m = m.next;
            c = (l1.val + c) / 10;
            l1 = l1.next;
        }
        while (l2 != null) {
            ListNode n = new ListNode();
            n.val = (l2.val + c) % 10;
            m.next = n;
            m = m.next;
            c = (l2.val + c) / 10;
            l2 = l2.next;
        }
        if (c != 0) {
            ListNode n = new ListNode();
            n.val = c;
            m.next = n;
            m = m.next;
        }
        return ans.next;
    }
}
