/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode list1, ListNode list2) {
        //creating a dummy node so that data can be stored
        ListNode dummy = new ListNode();
        //creating temp using dummy node
        ListNode temp = dummy;
        //carry pointer
        int carry = 0;
        while (list1 != null || list2 != null || carry != 0) {
            int sum = 0;
            if (list1 != null) {
                sum += list1.val;
                list1 = list1.next;
            }
            if (list2 != null) {
                sum += list2.val;
                list2 = list2.next;
            }
            //adding carry to the sum
            sum += carry;
            //getting carry by sum, for 16 it will be 1
            carry = sum / 10;
            //adding leftover after taking carry in the new linked list, i.e from 16, 6 will be added in the linked list
            ListNode ll = new ListNode(sum % 10);
            //increasing the pointer of address so as to store the data
            temp.next = ll;
            //continuing the iteration
            temp = temp.next;
        }
        // dummy will be 0, therefore, we return dummy.next which is temp where first value is stored.
        return dummy.next;
    }
}
