/**
 * Definition for singly-linked list.
 *
 *  public class ListNode {
 *      int val;
 *      ListNode next;
 *      ListNode() {}
 *      ListNode(int val) { this.val = val; }
 *      ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 *  }
 */
class Solution {

    //public static int NUMBER_SYSTEM_BASE = 10;
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = null;
        ListNode sum_current = null;
        int digit_1, digit_2, sum, node_value, carry = 0;
        while (l1 != null || l2 != null || carry != 0) {
            digit_1 = l1 == null ? 0 : l1.val;
            digit_2 = l2 == null ? 0 : l2.val;
            sum = digit_1 + digit_2 + carry;
            //NUMBER_SYSTEM_BASE;
            node_value = sum % 10;
            //NUMBER_SYSTEM_BASE;
            carry = sum / 10;
            if (head == null) {
                sum_current = new ListNode(node_value);
                head = sum_current;
            } else {
                sum_current.next = new ListNode(node_value);
                sum_current = sum_current.next;
            }
            l1 = l1 != null ? l1.next : null;
            l2 = l2 != null ? l2.next : null;
        }
        return head;
    }
}
