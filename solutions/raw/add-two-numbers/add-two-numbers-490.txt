/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode result = new ListNode(0);
        ListNode ptr = result;
        int carry = 0;
        while (l1 != null || l2 != null) {
            int sum = 0;
            if (l1 != null && l2 == null) {
                sum = carry + l1.val;
                l1 = l1.next;
            } else if (l1 == null && l2 != null) {
                sum = carry + l2.val;
                l2 = l2.next;
            } else {
                sum = carry + l1.val + l2.val;
                l1 = l1.next;
                l2 = l2.next;
            }
            ptr.next = new ListNode(sum % 10);
            carry = sum / 10;
            ptr = ptr.next;
        }
        if (carry != 0)
            ptr.next = new ListNode(carry);
        return result.next;
    }
}
