/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode iter1 = l1;
        ListNode iter2 = l2;
        int carry = 0;
        ListNode result = new ListNode();
        ListNode resultIter = result;
        while (iter1 != null && iter2 != null) {
            int digit = iter1.val + iter2.val + carry;
            if (digit <= 9) {
                carry = 0;
            } else {
                digit -= 10;
                carry = 1;
            }
            resultIter.val = digit;
            iter1 = iter1.next;
            iter2 = iter2.next;
            if (iter1 != null || iter2 != null) {
                resultIter.next = new ListNode();
                resultIter = resultIter.next;
            }
        }
        ListNode iter = (iter1 != null) ? iter1 : iter2;
        while (iter != null) {
            int digit = iter.val + carry;
            if (digit <= 9) {
                carry = 0;
            } else {
                digit -= 10;
                carry = 1;
            }
            resultIter.val = digit;
            iter = iter.next;
            if (iter != null) {
                resultIter.next = new ListNode();
                resultIter = resultIter.next;
            }
        }
        if (carry > 0) {
            resultIter.next = new ListNode();
            resultIter = resultIter.next;
            resultIter.val = 1;
            carry = 0;
        }
        return result;
    }
}
