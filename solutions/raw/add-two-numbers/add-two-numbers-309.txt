class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        boolean flag = false;
        ListNode l3 = null;
        ListNode head = new ListNode();
        while (l1 != null && l2 != null) {
            int sum = l1.val + l2.val + carry;
            flag = sum > 9 ? true : false;
            carry = sum / 10;
            sum = sum % 10;
            if (l3 == null) {
                l3 = new ListNode(sum, null);
                head = l3;
            } else {
                ListNode node = new ListNode(sum, null);
                l3.next = node;
                l3 = node;
            }
            l1 = l1.next;
            l2 = l2.next;
        }
        while (l1 != null) {
            int sum = l1.val + carry;
            flag = sum > 9 ? true : false;
            carry = sum / 10;
            sum = sum % 10;
            ListNode node = new ListNode(sum, null);
            l3.next = node;
            l3 = node;
            l1 = l1.next;
        }
        while (l2 != null) {
            int sum = l2.val + carry;
            flag = sum > 9 ? true : false;
            carry = sum / 10;
            sum = sum % 10;
            ListNode node = new ListNode(sum, null);
            l3.next = node;
            l3 = node;
            l2 = l2.next;
        }
        if (flag) {
            ListNode node = new ListNode(carry, null);
            l3.next = node;
            l3 = node;
        }
        return head;
    }
}
