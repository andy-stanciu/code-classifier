/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode temp = l1;
        ListNode temp1 = l2;
        String str = "";
        String str1 = "";
        while (temp != null) {
            str = temp.val + str;
            temp = temp.next;
        }
        while (temp1 != null) {
            str1 = temp1.val + str1;
            temp1 = temp1.next;
        }
        BigInteger arr = new BigInteger(str);
        BigInteger arr1 = new BigInteger(str1);
        BigInteger res = arr.add(arr1);
        String fin = res.toString();
        ListNode h = null;
        ListNode prev = null;
        for (int i = fin.length() - 1; i >= 0; i--) {
            ListNode current = new ListNode();
            char x = fin.charAt(i);
            int a = x - 48;
            if (i == fin.length() - 1) {
                h = current;
            }
            current.val = a;
            if (prev != null) {
                prev.next = current;
            }
            prev = current;
            current.next = null;
        }
        return h;
    }
}
