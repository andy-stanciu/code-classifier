class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = new ListNode(-1);
        //creating a node in order to store the sum of digit in a List format
        //we are using temp to add node to the new List
        ListNode temp = head;
        //we are storing the carry at every digit pair iteration
        int carry = 0;
        while (//our loop terminating condtition, all the numbers will be added
        l1 != null || l2 != null || carry > 0) {
            //to store the sum at every digit pair iteration
            int sum = 0;
            if (//adding list one node to the local sum
            l1 != null) {
                //adding to the sum
                sum += l1.val;
                //moving the l1 pointer to the next node
                l1 = l1.next;
            }
            if (l2 != null) {
                //adding to the sum
                sum += l2.val;
                //moving the l2 pointer to the next node
                l2 = l2.next;
            }
            //adding the sum inclusive carry
            sum += carry;
            //extracting the first digit
            carry = sum / 10;
            //extracting the last digit and creating the node
            ListNode node = new ListNode(sum % 10);
            //linking the node to the list
            temp.next = node;
            //moving the temp
            temp = temp.next;
        }
        //reaturning the new head of the new list
        return head.next;
    }
}
