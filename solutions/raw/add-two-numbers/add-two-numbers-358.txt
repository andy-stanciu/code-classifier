/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode head = l1;
        ListNode temp = head;
        while (l1 != null && l2 != null) {
            int sum = (l1.val + l2.val + carry);
            temp.val = sum % 10;
            carry = sum / 10;
            if (temp.next == null) {
                l2 = l2.next;
                l1 = l1.next;
                break;
            }
            l2 = l2.next;
            l1 = l1.next;
            temp = temp.next;
        }
        if (l2 != null) {
            temp.next = l2;
            temp = temp.next;
            while (l2 != null) {
                int sum = temp.val + carry;
                temp.val = sum % 10;
                carry = sum / 10;
                if (temp.next == null) {
                    l2 = l2.next;
                    break;
                }
                temp = temp.next;
                l2 = l2.next;
            }
        } else if (l1 != null) {
            while (l1 != null) {
                int sum = temp.val + carry;
                temp.val = sum % 10;
                carry = sum / 10;
                if (temp.next == null) {
                    l1 = l1.next;
                    break;
                }
                temp = temp.next;
            }
        }
        if (carry != 0) {
            ListNode lastNode = new ListNode(carry);
            temp.next = lastNode;
        }
        return head;
    }
}
