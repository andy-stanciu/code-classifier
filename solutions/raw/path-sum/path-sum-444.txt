/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        List<Integer> list = new ArrayList<Integer>();
        int sum = 0;
        if (root == null)
            return false;
        treepath(root, sum, list);
        {
            for (int i : list) if (i == targetSum)
                return true;
        }
        return false;
    }

    public static void treepath(TreeNode root, int sum, List<Integer> list) {
        if (root.left == null && root.right == null) {
            sum = sum + root.val;
            list.add(sum);
        }
        if (root.left != null) {
            treepath(root.left, sum + root.val, list);
        }
        if (root.right != null) {
            treepath(root.right, sum + root.val, list);
        }
    }
}
