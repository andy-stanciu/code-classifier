/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return false;
        }
        if (root.left == null && root.right == null) {
            return root.val == targetSum;
        }
        return helper(root, 0, targetSum);
    }

    public boolean helper(TreeNode root, int curr, int target) {
        int newCurr = curr + root.val;
        if (root.left == null && root.right == null) {
            if (newCurr == target) {
                return true;
            } else {
                return false;
            }
        }
        if (root.left == null) {
            return helper(root.right, (newCurr), target);
        }
        if (root.right == null) {
            return helper(root.left, (newCurr), target);
        }
        boolean ans1 = helper(root.left, (curr + root.val), target);
        boolean ans2 = helper(root.right, (curr + root.val), target);
        return ans1 || ans2;
    }
}
