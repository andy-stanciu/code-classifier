/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return false;
        }
        boolean[] arr = { false };
        findPathSum(root, targetSum, arr);
        return arr[0];
    }

    private void findPathSum(TreeNode root, int sum, boolean[] arr) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            if (sum - root.val == 0) {
                arr[0] = true;
            }
            return;
        }
        findPathSum(root.left, sum - root.val, arr);
        findPathSum(root.right, sum - root.val, arr);
    }
}
