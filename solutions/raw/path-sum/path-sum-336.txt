/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    boolean ans = false;

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null)
            return false;
        if ((root.left == null) && (root.right == null) && (root.val == targetSum))
            return true;
        boolean result = fun(root, targetSum, 0);
        return result;
    }

    boolean fun(TreeNode root, int targetSum, int sum) {
        if (ans == true)
            return ans;
        if (root == null)
            return true;
        sum = sum + root.val;
        if ((sum == targetSum) && (root.left == null) && (root.right == null))
            ans = true;
        fun(root.left, targetSum, sum);
        fun(root.right, targetSum, sum);
        return ans;
    }
}
