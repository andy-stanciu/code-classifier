/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null)
            return false;
        Queue<TreeNode> q1 = new LinkedList<>();
        Queue<Integer> q2 = new LinkedList<>();
        q1.add(root);
        q2.add(root.val);
        while (!q1.isEmpty()) {
            TreeNode node1 = q1.poll();
            int node2 = q2.poll();
            if (node1.right == null && node1.left == null && node2 == targetSum) {
                return true;
            }
            if (node1.right != null) {
                q1.add(node1.right);
                q2.add(node2 + node1.right.val);
            }
            if (node1.left != null) {
                q1.add(node1.left);
                q2.add(node2 + node1.left.val);
            }
        }
        return false;
    }
}
