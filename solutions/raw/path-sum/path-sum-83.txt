/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    boolean result;

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root != null)
            traverse(root, targetSum, 0);
        return result;
    }

    public void traverse(TreeNode node, int targetSum, int currentSum) {
        if (result)
            return;
        int sum = currentSum + node.val;
        if ((node.left == null && node.right == null) && sum == targetSum)
            result = true;
        if (node.left != null)
            traverse(node.left, targetSum, sum);
        if (node.right != null)
            traverse(node.right, targetSum, sum);
    }
}
