/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null)
            return false;
        List<Integer> sums = new ArrayList();
        addRootToLeafSums(root, targetSum, sums, 0);
        return sums.contains(targetSum);
    }

    private void addRootToLeafSums(TreeNode node, int targetSum, List<Integer> sums, int sum) {
        sum += node.val;
        if (node.left == null && node.right == null) {
            sums.add(sum);
            return;
        }
        if (node.left != null) {
            addRootToLeafSums(node.left, targetSum, sums, sum);
        }
        if (node.right != null) {
            addRootToLeafSums(node.right, targetSum, sums, sum);
        }
    }
}
