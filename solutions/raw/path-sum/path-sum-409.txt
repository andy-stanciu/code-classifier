/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null || root.val < -1000)
            return false;
        return hasPathSum(root, targetSum, 0);
    }

    public boolean hasPathSum(TreeNode root, int targetSum, int sum) {
        int newSum = sum;
        newSum += root.val;
        if (root.left == null && root.right == null) {
            System.out.println("sum : " + sum);
            if (newSum == targetSum)
                return true;
            else
                return false;
        }
        boolean flag = false;
        if (root.left != null)
            flag = hasPathSum(root.left, targetSum, newSum);
        if (!flag)
            if (root.right != null)
                flag = hasPathSum(root.right, targetSum, newSum);
        return flag;
    }
}
