class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return false;
        }
        Stack<Pair<TreeNode, Integer>> stack = new Stack<>();
        stack.push(new Pair<>(root, root.val));
        while (!stack.isEmpty()) {
            Pair<TreeNode, Integer> now = stack.pop();
            TreeNode nowNode = now.getKey();
            int nowSum = now.getValue();
            if (nowNode.left == null && nowNode.right == null) {
                if (nowSum == targetSum) {
                    return true;
                }
            }
            if (nowNode.left != null)
                stack.push(new Pair<>(nowNode.left, nowSum + nowNode.left.val));
            if (nowNode.right != null)
                stack.push(new Pair<>(nowNode.right, nowSum + nowNode.right.val));
        }
        return false;
    }
}
