/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        return hasPathSum(root, targetSum, 0);
    }

    private boolean hasPathSum(TreeNode node, int targetSum, int sumSoFar) {
        if (node == null) {
            return false;
        }
        sumSoFar += node.val;
        if (isLeaf(node)) {
            return sumSoFar == targetSum;
        }
        return (node.left != null && hasPathSum(node.left, targetSum, sumSoFar)) || (node.right != null && hasPathSum(node.right, targetSum, sumSoFar));
    }

    private boolean isLeaf(TreeNode node) {
        return node != null && node.right == null && node.left == null;
    }
}
