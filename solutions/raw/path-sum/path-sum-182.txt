/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return false;
        }
        return preOrder(root, root.val, targetSum);
    }

    boolean preOrder(TreeNode root, int sum, int target) {
        if (root.left == null && root.right == null) {
            if (sum == target) {
                return true;
            }
            return false;
        }
        boolean ans = false;
        if (root.left != null)
            ans = preOrder(root.left, sum + root.left.val, target);
        if (ans == true) {
            return true;
        }
        if (root.right != null)
            return preOrder(root.right, sum + root.right.val, target);
        return false;
    }
}
