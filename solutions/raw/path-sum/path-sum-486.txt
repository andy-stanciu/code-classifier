/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return false;
        }
        Stack<Integer> sumpath = new Stack<Integer>();
        Stack<TreeNode> path = new Stack<TreeNode>();
        path.add(root);
        sumpath.add(root.val);
        while (!path.empty()) {
            root = path.pop();
            int temp = sumpath.pop();
            if (root.left == null && root.right == null && temp == targetSum) {
                return true;
            }
            if (root.right != null) {
                path.add(root.right);
                sumpath.add(temp + root.right.val);
            }
            if (root.left != null) {
                path.add(root.left);
                sumpath.add(temp + root.left.val);
            }
        }
        return false;
    }
}
