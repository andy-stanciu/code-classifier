class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        // Base case: If the root is null, return false
        if (root == null)
            return false;
        // If the current node is a leaf node and its value equals the targetSum, return true
        if (root.left == null && root.right == null && root.val == targetSum)
            return true;
        // Recursively check if there exists a path with the remaining sum in the left or right subtree
        return hasPathSum(root.left, targetSum - root.val) || hasPathSum(root.right, targetSum - root.val);
    }
}
