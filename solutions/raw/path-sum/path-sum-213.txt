/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private boolean helper(TreeNode root, int target, int sum) {
        if (root == null) {
            return false;
        }
        sum += root.val;
        // check  if it is leaf node and if sum == targget then return true
        //else in other  if statement which is also for leaf node  but this
        //timme sum is not equal to target value so  will subtract its value
        //from sum
        if (root.left == null && root.right == null && sum == target) {
            return true;
        }
        if (root.left == null && root.right == null && sum != target) {
            sum -= root.val;
        }
        return helper(root.left, target, sum) || helper(root.right, target, sum);
    }

    public boolean hasPathSum(TreeNode root, int targetSum) {
        return helper(root, targetSum, 0);
    }
}
