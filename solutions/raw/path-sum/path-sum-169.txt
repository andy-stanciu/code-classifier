/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Integer> l = new ArrayList<>();

    public boolean hasPathSum(TreeNode root, int targetSum) {
        pathsum(root, 0);
        return l.contains(targetSum);
    }

    void pathsum(TreeNode root, int res) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            l.add(res + root.val);
            return;
        }
        pathsum(root.left, res + root.val);
        pathsum(root.right, res + root.val);
    }
}
