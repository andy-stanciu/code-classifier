/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSumHelper(TreeNode root, int targetSum, int currentSum) {
        if (root.left == null && root.right == null) {
            //currentSum += root.val;
            if (targetSum == currentSum + root.val)
                return true;
            else
                return false;
        }
        return (root.left != null && hasPathSumHelper(root.left, targetSum, currentSum + root.val)) || (root.right != null && hasPathSumHelper(root.right, targetSum, currentSum + root.val));
    }

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null)
            return false;
        return hasPathSumHelper(root, targetSum, 0);
    }
}
