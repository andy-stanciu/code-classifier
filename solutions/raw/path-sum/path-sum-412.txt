/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean findSum(TreeNode node, int targetSum, int sum) {
        if (node != null) {
            if (node.left == null && node.right == null) {
                return node.val + sum == targetSum;
            } else {
                return findSum(node.left, targetSum, sum + node.val) || findSum(node.right, targetSum, sum + node.val);
            }
        }
        return false;
    }

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root != null) {
            return findSum(root, targetSum, 0);
        }
        return false;
    }
}
