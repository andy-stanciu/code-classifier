/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null)
            return false;
        return checkSum(root, targetSum, root.val);
    }

    private boolean checkSum(TreeNode root, int targetSum, int currSum) {
        if (root.left == null && root.right == null) {
            //check condition for leaf node
            return currSum == targetSum;
        }
        boolean left = root.left != null ? checkSum(root.left, targetSum, currSum + root.left.val) : false;
        boolean right = root.right != null ? checkSum(root.right, targetSum, currSum + root.right.val) : false;
        return left || right;
    }
}
