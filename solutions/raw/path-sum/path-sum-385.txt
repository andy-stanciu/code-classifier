/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        Deque<TreeNode> q = new LinkedList();
        if (root != null)
            q.offer(root);
        while (!q.isEmpty()) {
            int size = q.size();
            for (int i = 0; i < size; i++) {
                TreeNode node = q.poll();
                if (node.left == null && node.right == null && node.val == targetSum)
                    return true;
                if (node.left != null) {
                    node.left.val += node.val;
                    q.offer(node.left);
                }
                if (node.right != null) {
                    node.right.val += node.val;
                    q.offer(node.right);
                }
            }
        }
        return false;
    }
}
