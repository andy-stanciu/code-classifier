/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    boolean bMatchFound = false;

    public boolean hasPathSum(TreeNode root, int targetSum) {
        traverse(root, targetSum, 0);
        return bMatchFound;
    }

    public void traverse(TreeNode root, int targetSum, int current_sum) {
        if (root == null)
            return;
        if (!bMatchFound && root.left == null && root.right == null && root.val + current_sum == targetSum) {
            bMatchFound = true;
            return;
        } else {
            traverse(root.left, targetSum, root.val + current_sum);
            traverse(root.right, targetSum, root.val + current_sum);
        }
    }
}
