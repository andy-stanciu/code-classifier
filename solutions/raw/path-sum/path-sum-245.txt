/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static int solve(TreeNode x, int target) {
        // 0 is true, 1 is false
        if (x == null) {
            return 1;
        }
        if (x.left == null && x.right == null) {
            if (target - x.val == 0)
                return 0;
            else
                return 1;
        }
        if (solve(x.left, target - x.val) == 0 || solve(x.right, target - x.val) == 0) {
            return 0;
        }
        return 1;
    }

    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (solve(root, targetSum) == 0)
            return true;
        return false;
    }
}
