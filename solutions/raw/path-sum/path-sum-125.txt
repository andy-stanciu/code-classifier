class Solution {

    public boolean hasPathSum(TreeNode root, int targetSum) {
        // Base case: If the tree is empty, return false.
        if (root == null) {
            return false;
        }
        // If this is a leaf node (no children), check if the current node value equals targetSum.
        if (root.left == null && root.right == null) {
            return root.val == targetSum;
        }
        // Recursively check the left and right subtrees with the updated targetSum.
        int newTargetSum = targetSum - root.val;
        return hasPathSum(root.left, newTargetSum) || hasPathSum(root.right, newTargetSum);
    }
}
