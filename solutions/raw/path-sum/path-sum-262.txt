/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Pair {

    TreeNode node;

    int sum;

    Pair(TreeNode node, int sum) {
        this.node = node;
        this.sum = sum;
    }
}

class Solution {

    public boolean hasPathSum(TreeNode root, int Tsum) {
        if (root == null)
            return false;
        Stack<Pair> s = new Stack<>();
        s.push(new Pair(root, 0));
        while (!s.isEmpty()) {
            Pair pair = s.pop();
            TreeNode node = pair.node;
            int sum = pair.sum;
            sum += node.val;
            if (node.left == null && node.right == null) {
                if (sum == Tsum)
                    return true;
            }
            if (node.left != null)
                s.push(new Pair(node.left, sum));
            if (node.right != null)
                s.push(new Pair(node.right, sum));
        }
        return false;
    }
}
