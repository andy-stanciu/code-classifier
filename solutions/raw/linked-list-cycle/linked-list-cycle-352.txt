/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean hasCycleHelper(ListNode slow, ListNode fast, ListNode head) {
        if (head == null || fast == null || fast.next == null) {
            return false;
        }
        if (slow == fast) {
            return true;
        }
        return hasCycleHelper(slow.next, fast.next.next, head);
    }

    public boolean hasCycle(ListNode head) {
        if (head == null || head.next == null) {
            return false;
        }
        return hasCycleHelper(head, head.next, head.next.next);
    }
}
