/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean hasCycle(ListNode head) {
        if (head == null || head.next == null) {
            return false;
        }
        ListNode temp = head;
        ListNode oneStep = temp, twoSteps = temp;
        while (twoSteps != null && twoSteps.next != null) {
            oneStep = oneStep.next;
            twoSteps = twoSteps.next.next;
            if (oneStep == twoSteps) {
                return true;
            }
        }
        return false;
    }
}
