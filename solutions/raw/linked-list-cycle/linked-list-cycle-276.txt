/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean hasCycle(ListNode head) {
        HashMap<ListNode, Integer> map = new HashMap<ListNode, Integer>();
        ListNode temp = head;
        int pos = 0;
        while (!map.containsKey(temp) && temp != null) {
            map.put(temp, pos);
            pos++;
            temp = temp.next;
        }
        if (map.containsKey(temp))
            return true;
        return false;
    }
}
