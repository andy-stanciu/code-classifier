/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean hasCycle(ListNode head) {
        if (head != null) {
            ArrayList<ListNode> al = new ArrayList<>();
            while (head.next != null) {
                al.add(head);
                ListNode nex = head.next;
                for (int i = 0; i < al.size(); i++) {
                    if (al.get(i) == nex) {
                        return true;
                    }
                }
                head = head.next;
            }
        }
        return false;
    }
}
