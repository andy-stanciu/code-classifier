/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean hasCycle(ListNode head) {
        Set<ListNode> setOfNodes = new HashSet<>();
        while (head != null) {
            if (!setOfNodes.add(head)) {
                //if setofNodes.add(head) returns false
                //it means that we are trying to insert non uniquw element
                return true;
            }
            // so we return true
            head = head.next;
        }
        // if we were able to triverse the LL then for sure it has no cycles
        return false;
    }
    // hence return false
}
