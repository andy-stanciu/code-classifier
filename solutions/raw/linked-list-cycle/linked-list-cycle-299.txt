/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean hasCycle(ListNode head) {
        Map<ListNode, Integer> map = new HashMap<>();
        int pos = -1;
        int i = -1;
        boolean b = false;
        while (head != null) {
            i++;
            if (map.containsKey(head)) {
                pos = map.get(head);
                break;
            }
            map.put(head, i);
            head = head.next;
        }
        if (pos != -1) {
            return true;
        }
        return false;
    }
}
