class Solution {

    public int findMin(int[] nums) {
        //O(N) Solution
        // int n=nums.length;
        // int minEle=nums[0];
        // for(int i=0; i<n; i++){
        //     if(nums[i]<minEle){
        //         minEle=nums[i];
        //         break;
        //     }
        // }
        // return minEle;
        //O(logn) Solution
        int n = nums.length;
        int left = 0;
        int right = n - 1;
        int first = nums[0];
        if (nums.length == 1) {
            return nums[0];
        }
        if (nums[right] > first) {
            return first;
        }
        while (left < right) {
            int mid = (left + right) / 2;
            if (mid > 0 && nums[mid] < nums[mid - 1]) {
                return nums[mid];
            }
            if (mid < (n - 1) && nums[mid] > nums[mid + 1]) {
                return nums[mid + 1];
            }
            if (first > nums[mid]) {
                right = mid - 1;
            } else if (first < nums[mid]) {
                left = mid + 1;
            }
        }
        return Integer.MAX_VALUE;
    }
}
