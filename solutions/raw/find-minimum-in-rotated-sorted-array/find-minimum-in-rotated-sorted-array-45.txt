class Solution {

    public int findMin(int[] arr) {
        int l = 0;
        int h = arr.length - 1;
        // Initialize min to a large value
        int min = Integer.MAX_VALUE;
        while (l <= h) {
            int mid = l + (h - l) / 2;
            // If the left half is sorted (including the middle element):
            if (arr[l] <= arr[mid]) {
                // Update min if necessary
                if (min > arr[l]) {
                    min = arr[l];
                }
                // Pivot is in the right half, move left pointer
                l = mid + 1;
            } else {
                // Right half is sorted, pivot is in the left half
                // Update min if necessary
                if (min > arr[mid]) {
                    min = arr[mid];
                }
                // Move right pointer
                h = mid - 1;
            }
        }
        return min;
    }
}
