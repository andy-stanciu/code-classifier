class Solution {

    public int findMin(int[] nums) {
        if (nums.length == 1)
            return nums[0];
        //if(nums.length==2)return Math.min(nums[0],nums[1]);
        int start = 0;
        int end = nums.length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (mid != 0 && mid != end && nums[mid] < nums[mid - 1] && nums[mid] < nums[mid + 1])
                return nums[mid];
            else if (start == mid || end == mid)
                return Math.min(nums[mid], Math.min(nums[start], nums[end]));
            else if (nums[start] > nums[mid] && nums[mid] < nums[end]) {
                if (nums[start] > nums[end])
                    end = mid - 1;
                else
                    start = mid + 1;
            } else if (nums[start] < nums[mid] && nums[mid] < nums[end])
                end = mid - 1;
            else if (nums[start] < nums[mid] && nums[mid] < nums[end])
                start = mid + 1;
            else if (nums[start] < nums[mid] && nums[mid] > nums[end]) {
                if (nums[start] < nums[end])
                    end = mid - 1;
                else
                    start = mid + 1;
            }
        }
        return -1;
    }
}
