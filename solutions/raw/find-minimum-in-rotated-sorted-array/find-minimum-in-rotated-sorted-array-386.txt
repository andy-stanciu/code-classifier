class Solution {

    public int findMin(int[] nums) {
        int pivot = findpivot(nums);
        if (pivot == -1) {
            return nums[0];
        }
        return nums[pivot + 1];
    }

    public static int findpivot(int[] nums) {
        int start = 0, end = nums.length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            // checking for pivot
            if (mid < end && nums[mid] > nums[mid + 1]) {
                return mid;
            }
            // checking for pivot
            if (mid > start && nums[mid - 1] > nums[mid]) {
                return mid - 1;
            } else // Shrink the search area
            if (nums[start] >= nums[mid]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return -1;
    }
}
