class Solution {

    public static int findMin(int[] arr) {
        int low = 0, high = arr.length - 1;
        int ans = Integer.MAX_VALUE;
        while (low <= high) {
            int mid = (low + high) / 2;
            // Search space is already sorted,
            // then arr[low] will always be
            // the minimum in that search space:
            if (arr[low] <= arr[high]) {
                ans = Math.min(ans, arr[low]);
                break;
            }
            // If left part is sorted:
            if (arr[low] <= arr[mid]) {
                // Keep the minimum:
                ans = Math.min(ans, arr[low]);
                // Eliminate left half:
                low = mid + 1;
            } else {
                // If right part is sorted:
                // Keep the minimum:
                ans = Math.min(ans, arr[mid]);
                // Eliminate right half:
                high = mid - 1;
            }
        }
        return ans;
    }
}
