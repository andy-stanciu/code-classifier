class Solution {

    public int findMin(int[] nums) {
        int i = 0, j = nums.length - 1;
        // if array is sorted: returning first element
        if (nums[i] < nums[j]) {
            return nums[i];
        }
        // Observation made: min value will always be in unsorted part
        // (including mid value in the part)
        while (i < j - 1) {
            int m = (i + j) / 2;
            if (nums[i] > nums[m]) {
                j = m;
            } else {
                i = m;
            }
        }
        // since max and min value always go together in rotated array
        //we\'ll always have i at max value and j at min value
        return nums[j];
    }
}
