class Solution {

    public int findMin(int[] nums) {
        // Initialize pointers for binary search
        int left = 0, right = nums.length - 1;
        // Loop until the search space is reduced to one element
        while (left < right) {
            // Calculate the middle index
            int mid = left + (right - left) / 2;
            // Check if the middle element is less than the rightmost element
            // If true, the minimum must be in the left half (including mid)
            if (nums[mid] < nums[right]) {
                // Narrow down the search to the left half
                right = mid;
            } else {
                // If the middle element is greater than or equal to the rightmost element
                // The minimum must be in the right half (excluding mid)
                // Narrow down the search to the right half
                left = mid + 1;
            }
        }
        // At the end of the loop, left and right converge to the minimum element
        return nums[left];
    }
}
