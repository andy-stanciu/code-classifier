class Solution {

    public int findMin(int[] nums) {
        if (nums.length == 1) {
            return nums[0];
        }
        if (nums[0] < nums[nums.length - 1]) {
            return nums[0];
        } else {
            return nums[findPivot(nums) + 1];
        }
    }

    static int findPivot(int[] arr) {
        int s = 0, e = arr.length - 1, mid = 0;
        while (s <= e) {
            mid = s + (e - s) / 2;
            if (mid < arr.length - 1 && arr[mid] > arr[mid + 1]) {
                return mid;
            }
            if (mid < arr.length - 1 && (arr[mid] > arr[arr.length - 1] && arr[mid] < arr[mid + 1])) {
                s = mid + 1;
            }
            if (mid > 0 && (arr[mid] <= arr[arr.length - 1] && arr[mid] < arr[mid + 1])) {
                e = mid - 1;
            } else {
                System.out.println("else");
            }
        }
        return -1;
    }
}
