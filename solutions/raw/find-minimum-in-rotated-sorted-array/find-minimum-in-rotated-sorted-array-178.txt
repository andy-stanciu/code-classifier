class Solution {

    public int findMin(int[] nums) {
        int l = 0;
        int r = nums.length - 1;
        int mid;
        while (l < r) /* If L==R, we need to stop the iteration
        because when L and R meet, the minimum value has been found*/
        {
            // Calculate Mid Value for Each Iteration
            mid = l + (r - l) / 2;
            if (// Check Whether The mid > R
            nums[mid] > nums[r])
                l = mid + 1;
            else
                /* If it is , then minimum Value should be in 
                Right side */
                r = mid;
            /* Otherwise, set R=mid because the mid value
               might be the minimum this is why we assign R=mid instead of R=mid\u22121. */
        }
        //return l or r Both points Minimum Value
        return nums[r];
    }
}
