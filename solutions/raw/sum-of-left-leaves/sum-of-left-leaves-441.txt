/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        int sum = 0;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while (q.size() > 0) {
            TreeNode curr = q.remove();
            if (curr.left != null) {
                if (isLeaf(curr.left))
                    sum += curr.left.val;
                q.add(curr.left);
            }
            if (curr.right != null)
                q.add(curr.right);
        }
        return sum;
    }

    boolean isLeaf(TreeNode curr) {
        if (curr.left == null && curr.right == null)
            return true;
        return false;
    }
}
