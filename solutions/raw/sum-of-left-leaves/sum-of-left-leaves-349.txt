/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        return solve(root, null);
    }

    public int solve(TreeNode currNode, TreeNode parent) {
        if (currNode == null) {
            return 0;
        }
        if (currNode.left == null && currNode.right == null) {
            if (parent != null && currNode == parent.left) {
                return currNode.val;
            }
        }
        int left = solve(currNode.left, currNode);
        int right = solve(currNode.right, currNode);
        return left + right;
    }
}
