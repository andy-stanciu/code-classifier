/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        int sum = 0;
        Stack<TreeNode> stack = new Stack<>();
        boolean isLeft = false;
        stack.add(root);
        while (!stack.isEmpty()) {
            TreeNode curr = stack.pop();
            if (curr.left == null && curr.right == null && isLeft) {
                sum += curr.val;
                isLeft = false;
            }
            if (curr.right != null) {
                stack.push(curr.right);
                isLeft = false;
            }
            if (curr.left != null) {
                stack.push(curr.left);
                isLeft = true;
            }
        }
        return sum;
    }
}
