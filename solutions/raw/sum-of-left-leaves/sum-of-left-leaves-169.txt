/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private void fastSum(TreeNode root, boolean flag, int[] sum) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null && flag) {
            sum[0] += root.val;
            return;
        }
        fastSum(root.left, true, sum);
        fastSum(root.right, false, sum);
    }

    public int sumOfLeftLeaves(TreeNode root) {
        boolean flag = false;
        int[] sum = { 0 };
        fastSum(root, flag, sum);
        return sum[0];
    }
}
