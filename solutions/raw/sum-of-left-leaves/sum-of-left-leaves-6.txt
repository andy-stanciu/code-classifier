/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    //define a global variable for left leave values
    public int fres = 0;

    public int sumOfLeftLeaves(TreeNode root) {
        if (root == null)
            return fres;
        preorder(root, false);
        return fres;
    }

    // using technique of dfs and define a boolean varibale isLeft which help to keep track of left leaf node
    public void preorder(TreeNode root, boolean isLeft) {
        if (root == null)
            return;
        //leave node condition : left and right TreeNode is null
        // isLeft define it is left TreeNode
        if ((root.left == null && root.right == null) && isLeft) {
            fres += root.val;
        }
        preorder(root.left, true);
        preorder(root.right, false);
    }
}
