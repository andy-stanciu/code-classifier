/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int calculateSum(TreeNode root, int[] sum) {
        if (root == null)
            return 0;
        if (root.left == null && root.right == null)
            return root.val;
        int leftSum = calculateSum(root.left, sum);
        sum[0] += leftSum;
        calculateSum(root.right, sum);
        return 0;
    }

    public int sumOfLeftLeaves(TreeNode root) {
        int[] sum = new int[1];
        calculateSum(root, sum);
        return sum[0];
    }
}
