/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        if (// Base case
        root == null)
            return 0;
        else {
            if (// Call recursive function for both childs and add the value of left child if it is a leaf node.
            root.left != null)
                return sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right) + ((root.left.left == null && root.left.right == null) ? root.left.val : 0);
            else
                // Call recursive function for both childs
                return sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right);
        }
    }
}
