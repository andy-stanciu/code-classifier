/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public void sumofroot(TreeNode root, int[] sum, int k) {
        if (root == null) {
            return;
        }
        if (k == 1) {
            sum[0] += root.val;
        }
        sumofroot(root.left, sum, 1);
        sumofroot(root.right, sum, 0);
    }

    public void sumofRoot(TreeNode root, int[] sum) {
        if (root == null) {
            return;
        }
        if (root.left != null && root.left.left == null && root.left.right == null) {
            sum[0] += root.left.val;
        }
        sumofRoot(root.left, sum);
        sumofRoot(root.right, sum);
    }

    public int sumOfLeftLeaves(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int[] sum = new int[] { 0 };
        sumofRoot(root, sum);
        return sum[0];
    }
}
