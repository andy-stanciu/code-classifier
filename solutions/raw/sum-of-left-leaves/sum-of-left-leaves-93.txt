/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int recursiveSum(TreeNode root, boolean isRightPath) {
        int leftSum = 0;
        int rightSum = 0;
        if (root == null)
            return 0;
        if (isRightPath && root.left == null && root.right == null)
            return 0;
        if (root.left == null && root.right == null)
            return root.val;
        if (root.right != null && (root.right.left != null || root.right.right != null))
            rightSum = rightSum + recursiveSum(root.right, true);
        leftSum = leftSum + recursiveSum(root.left, false);
        return rightSum + leftSum;
    }

    public int sumOfLeftLeaves(TreeNode root) {
        if (root.left == null && root.right == null)
            return 0;
        return recursiveSum(root, false);
    }
}
