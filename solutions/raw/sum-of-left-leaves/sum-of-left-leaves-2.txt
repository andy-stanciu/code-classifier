/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Pair {

    TreeNode first;

    boolean left;

    Pair(TreeNode p, boolean l) {
        first = p;
        left = l;
    }
}

class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        int ans = 0;
        Queue<Pair> q = new LinkedList<>();
        q.add(new Pair(root, false));
        while (!q.isEmpty()) {
            Pair removed = q.poll();
            if (removed.first.left != null) {
                q.add(new Pair(removed.first.left, true));
            }
            if (removed.first.right != null) {
                q.add(new Pair(removed.first.right, false));
            }
            if (removed.first.left == null && removed.first.right == null) {
                if (removed.left) {
                    ans = ans + removed.first.val;
                }
            }
        }
        return ans;
    }
}
