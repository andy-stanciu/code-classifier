/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        int[] result = new int[1];
        traverseTree(root, result);
        return result[0];
    }

    public static void traverseTree(TreeNode root, int[] result) {
        if (root == null) {
            return;
        }
        if (root.left != null && (root.left.left == null & root.left.right == null)) {
            result[0] += root.left.val;
            traverseTree(root.right, result);
        } else {
            traverseTree(root.right, result);
            traverseTree(root.left, result);
        }
    }
}
