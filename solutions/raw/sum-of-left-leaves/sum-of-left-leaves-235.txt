/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        return dfs(root, 0, false);
    }

    private int dfs(TreeNode node, int sum, boolean left) {
        if (node == null)
            return sum;
        if (node.left == null && node.right == null) {
            System.out.println(node.val + " " + left);
            if (left)
                sum += node.val;
            return sum;
        }
        if (node.left != null)
            sum = dfs(node.left, sum, true);
        if (node.right != null)
            sum = dfs(node.right, sum, false);
        return sum;
    }
}
