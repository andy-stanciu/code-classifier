/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int helper(TreeNode node, int side) {
        // 0 for left and 1 for right
        if (node.left == null && node.right == null && side == 0) {
            return node.val;
        }
        int ans = 0;
        if (node.left != null) {
            ans += helper(node.left, 0);
        }
        if (node.right != null) {
            ans += helper(node.right, 1);
        }
        return ans;
    }

    public int sumOfLeftLeaves(TreeNode root) {
        return helper(root, -1);
    }
}
