/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int[] ans = { 0 };

    public int sumOfLeftLeaves(TreeNode root) {
        if (root == null)
            return 0;
        solve(root, ans);
        return ans[0];
    }

    public void solve(TreeNode root, int[] ans) {
        if (root == null)
            return;
        if (root.left == null && root.right == null)
            return;
        // if cur node has left child and it is a leaf,
        // then and only then we add it to ans
        if (root.left != null && root.left.left == null && root.left.right == null) {
            ans[0] += root.left.val;
        }
        solve(root.left, ans);
        solve(root.right, ans);
    }
}
