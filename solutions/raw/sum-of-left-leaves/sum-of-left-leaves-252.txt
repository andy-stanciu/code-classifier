/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        if (root == null) {
            return 0;
        }
        if (root.left != null) {
            if (root.left.left == null && root.left.right == null) {
                /* if the left node is a leaf return it\'s value. Also
                Also Check Right */
                return root.left.val + sumOfLeftLeaves(root.right);
            } else {
                /*if the left node is not a leaf node move to the
                left node. Also Check the right node */
                return sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right);
            }
        }
        //if no left node check the right node
        return sumOfLeftLeaves(root.right);
    }
}
