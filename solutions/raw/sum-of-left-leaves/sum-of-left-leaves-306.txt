/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int result = 0;

    public int sumOfLeftLeaves(TreeNode root) {
        add(root.left, true);
        add(root.right, false);
        return result;
    }

    private void add(TreeNode node, boolean isLeftChild) {
        if (node == null)
            return;
        if (isLeftChild && node.left == null && node.right == null) {
            result += node.val;
        }
        add(node.left, true);
        add(node.right, false);
    }
}
/*
we want to know whether a node is a leaf node and is also a left child.

call a recursive method

void add(node, isLeftChild) {
    if (isLeftChild && isLeaf(node)) {
        result += node.value;
    }
    if (node.left != null) add(node.left, true);
    if (node.right != null) add(node.right, false);
}
*/
