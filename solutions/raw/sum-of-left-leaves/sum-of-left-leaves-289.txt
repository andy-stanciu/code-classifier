/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int sumOfLeftLeaves(TreeNode root) {
        return checkLeftSum(root.left, 0) + checkLeftSum(root.right, 1);
    }

    public int checkLeftSum(TreeNode root, int leftOrRight) {
        if (root == null) {
            return 0;
        }
        if (leftOrRight == 0 && (root.left == null && root.right == null)) {
            return root.val;
        }
        return checkLeftSum(root.left, 0) + checkLeftSum(root.right, 1);
    }
}
