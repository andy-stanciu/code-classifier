/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int traversal(TreeNode curNode, int sum, boolean isLeft) {
        if (curNode == null) {
            return sum;
        }
        if (curNode.left == null && curNode.right == null && isLeft) {
            sum += curNode.val;
        }
        sum = traversal(curNode.left, sum, true);
        sum = traversal(curNode.right, sum, false);
        return sum;
    }

    public int sumOfLeftLeaves(TreeNode root) {
        int sum = 0;
        return traversal(root, sum, false);
    }
}
