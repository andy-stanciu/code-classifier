/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    boolean flag = true;

    int sum = 0;

    int preorder(TreeNode root, TreeNode nod) {
        if (root != null && root.left == null && root.right == null && nod.left != null && flag) {
            sum += nod.left.val;
            return 0;
        } else if (root == null) {
            return 0;
        }
        nod = root;
        flag = true;
        preorder(root.left, nod);
        flag = false;
        preorder(root.right, nod);
        return sum;
    }

    public int sumOfLeftLeaves(TreeNode root) {
        if (root.left == null && root.right == null || root == null)
            return 0;
        int sum = preorder(root, root);
        return sum;
    }
}
