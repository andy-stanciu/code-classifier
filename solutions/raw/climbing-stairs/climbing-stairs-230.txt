class Solution {

    public int climbStairs(int n) {
        int[][] M = { { 1, 1 }, { 1, 0 } };
        int[][] finalMatrix = power(M, n);
        return finalMatrix[0][0];
    }

    public int[][] power(int[][] X, int n) {
        int[][] res = { { 1, 0 }, { 0, 1 } };
        while (n > 0) {
            if (n % 2 == 1)
                res = multiply(res, X);
            X = multiply(X, X);
            n = n / 2;
        }
        return res;
    }

    public int[][] multiply(int[][] A, int[][] B) {
        int[][] C = new int[2][2];
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 2; j++) {
                C[i][j] = A[i][0] * B[0][j] + A[i][1] * B[1][j];
            }
        }
        return C;
    }
}
