class Solution {

    public int climbStairs(int n) {
        Map<Integer, Integer> map = new HashMap<>();
        return climbStairsWithDp(n, map);
    }

    private int climbStairsWithDp(int n, Map<Integer, Integer> map) {
        if (n == 2) {
            return 2;
        }
        if (n == 1) {
            return 1;
        }
        if (map.containsKey(n)) {
            return map.get(n);
        }
        int result = climbStairsWithDp(n - 1, map) + climbStairsWithDp(n - 2, map);
        map.put(n, result);
        return result;
    }
}
