class Solution {

    public int climbStairs(int n) {
        // just like how we keep track of previous n values in a dp array
        // here we need only two values in the calculation
        // so, at every step, we keep track of the previous two steps
        int previous = 0, current = 1;
        int next = 1;
        // at every step, we shift the current and previous, and then calculate for the next step
        while (n-- > 0) {
            previous = current;
            current = next;
            next = previous + current;
        }
        // the value in the current variable will be locked when n = 0 and will be returned
        return current;
    }
}
