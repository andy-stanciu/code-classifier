class Solution {

    public int findKthLargest(int[] nums, int k) {
        //Normal method- O(n log n)
        // Arrays.sort(nums);
        // int n=nums.length-k;
        // return nums[n];
        //MINHEAP method - O(k log n)
        PriorityQueue<Integer> minHeap = new PriorityQueue<>();
        for (int num : nums) {
            minHeap.add(num);
            if (minHeap.size() > k) {
                // Remove the smallest element to maintain heap size k
                minHeap.poll();
            }
        }
        // The root of the heap is the kth largest element
        return minHeap.peek();
    }
}
