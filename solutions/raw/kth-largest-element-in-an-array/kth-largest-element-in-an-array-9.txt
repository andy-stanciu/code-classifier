class Solution {

    public int findKthLargest(int[] nums, int k) {
        PriorityQueue<Integer> heap = new PriorityQueue<>();
        // Add first k elements to the heap
        for (int i = 0; i < k; i++) {
            heap.add(nums[i]);
        }
        // Process the rest of the array
        for (int i = k; i < nums.length; i++) {
            if (heap.peek() < nums[i]) {
                // Remove the smallest element
                heap.poll();
                // Add the current element
                heap.add(nums[i]);
            }
        }
        // The kth largest element
        return heap.peek();
    }
}
