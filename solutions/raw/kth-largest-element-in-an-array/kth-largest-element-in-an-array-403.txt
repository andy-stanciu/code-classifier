class Solution {

    public int findKthLargest(int[] nums, int k) {
        //default: nim heap
        // store k element from array
        //make sure it has k largest elements
        // then find top of priority queue as it gives the minimum value in it
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for (int i = 0; i < k; i++) {
            pq.add(nums[i]);
        }
        for (int i = k; i < nums.length; i++) {
            if (pq.peek() < nums[i]) {
                pq.poll();
                pq.add(nums[i]);
            }
        }
        return pq.peek();
    }
}
