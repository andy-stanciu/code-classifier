class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        combinations(1, n, k, res, new ArrayList<>());
        return res;
    }

    public void combinations(int start, int last, int k, List<List<Integer>> res, List<Integer> ds) {
        if (ds.size() == k) {
            res.add(new ArrayList<>(ds));
            return;
        }
        for (int i = start; i <= last; i++) {
            ds.add(i);
            combinations(i + 1, last, k, res, ds);
            ds.remove(ds.size() - 1);
        }
    }
}
