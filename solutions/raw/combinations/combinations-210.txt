class Solution {

    private int n;

    private int k;

    public List<List<Integer>> combine(int n, int k) {
        this.n = n;
        this.k = k;
        List<List<Integer>> combinations = new ArrayList<>();
        generateCombinations(combinations, new ArrayList<>(), 1);
        return combinations;
    }

    public void generateCombinations(List<List<Integer>> combinations, List<Integer> currCombinations, int start) {
        if (currCombinations.size() == k) {
            combinations.add(new ArrayList<>(currCombinations));
            return;
        }
        for (int i = start; i <= n; i++) {
            currCombinations.add(i);
            generateCombinations(combinations, currCombinations, i + 1);
            currCombinations.remove(currCombinations.size() - 1);
        }
    }
}
