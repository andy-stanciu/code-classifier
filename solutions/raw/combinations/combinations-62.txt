class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        if (n < k || k <= 0)
            return result;
        makeArrange(n, k, 1, new ArrayList<>(), result);
        return result;
    }

    public void makeArrange(int n, int k, int start, List<Integer> curr, List<List<Integer>> result) {
        if (curr.size() == k) {
            result.add(new ArrayList<>(curr));
            return;
        }
        for (int i = start; i <= n - (k - curr.size()) + 1; i++) {
            curr.add(i);
            makeArrange(n, k, i + 1, curr, result);
            // backTrack
            curr.remove(curr.size() - 1);
        }
        return;
    }
}
