class Solution {

    public List<List<Integer>> combine(int n, int k) {
        findPossible(k, 1, n);
        return result;
    }

    LinkedList<Integer> list = new LinkedList<>();

    List<List<Integer>> result = new ArrayList<>();

    private void findPossible(int restPickTimes, int lo, int hi) {
        if (restPickTimes == 0) {
            result.add(new ArrayList<Integer>(list));
        }
        for (int i = lo; i <= hi; i++) {
            list.add(i);
            findPossible(restPickTimes - 1, i + 1, hi);
            list.removeLast();
        }
    }
}
