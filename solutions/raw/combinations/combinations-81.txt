class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(1, n, k, result, new ArrayList<>());
        return result;
    }

    private void backtrack(int i, int n, int k, List<List<Integer>> result, List<Integer> comb) {
        if (comb.size() == k) {
            result.add(new ArrayList<>(comb));
            return;
        }
        for (int j = i; j <= n; ++j) {
            comb.add(j);
            backtrack(j + 1, n, k, result, comb);
            comb.remove(comb.size() - 1);
        }
    }
}
