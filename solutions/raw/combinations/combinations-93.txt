class Solution {

    private List<List<Integer>> combinations = new ArrayList<>();

    private ArrayList<Integer> nums = new ArrayList<>();

    private int len;

    public void makeCombinations(ArrayList<Integer> current, int start) {
        if (current.size() == len) {
            combinations.add(current);
            return;
        }
        for (int i = start; i < nums.size(); i++) {
            ArrayList<Integer> copy = new ArrayList<>(current);
            copy.add(nums.get(i));
            makeCombinations(copy, i + 1);
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        len = k;
        for (int i = 1; i <= n; i++) {
            nums.add(i);
        }
        makeCombinations(new ArrayList<Integer>(), 0);
        System.out.println(nums);
        return combinations;
    }
}
