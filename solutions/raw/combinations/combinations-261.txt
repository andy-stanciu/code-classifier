class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> allCombinations = new LinkedList<>();
        addAllCombinations(allCombinations, new ArrayList<>(k), 1, 1, n, k);
        return allCombinations;
    }

    private void addAllCombinations(List<List<Integer>> allCombinations, ArrayList<Integer> currentArray, int currentN, int currentK, int n, int k) {
        if (currentK > k) {
            allCombinations.add(new ArrayList<>(currentArray));
            return;
        }
        for (int i = currentN; i <= n; i++) {
            currentArray.add(i);
            addAllCombinations(allCombinations, currentArray, i + 1, currentK + 1, n, k);
            currentArray.remove(currentArray.size() - 1);
        }
    }
}
