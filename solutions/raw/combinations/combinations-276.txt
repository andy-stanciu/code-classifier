class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> ans = new ArrayList<>();
        generateSubset(1, n, new ArrayList<>(), ans, k);
        return ans;
    }

    void generateSubset(int start, int n, List<Integer> curr, List<List<Integer>> ans, int k) {
        if (curr.size() == k) {
            // this is the condition
            ans.add(new ArrayList<>(curr));
            return;
        }
        for (int i = start; i <= n; i++) {
            // here suppose 1 add [1]
            curr.add(i);
            // this will take all the element which start with 1 eg. [1,2] [1,3]
            generateSubset(i + 1, n, curr, ans, k);
            // this finaly remove 1 and become [] and then loop will go for 2
            curr.remove(curr.size() - 1);
        }
    }
}
