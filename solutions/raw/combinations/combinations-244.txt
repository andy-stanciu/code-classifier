class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        combineUtil(res, k, n, 0, new ArrayList<Integer>(), k);
        return res;
    }

    void combineUtil(List<List<Integer>> res, int k, int n, int curr, List<Integer> op, int count) {
        if (op.size() == k) {
            res.add(new ArrayList<Integer>(op));
            // this is important.we can not do res.add(op) because in that case when we remove item from op,as res had same reference,even res will change
            return;
        } else {
            for (int i = curr + 1; i <= n; i++) {
                op.add(i);
                combineUtil(res, k, n, i, op, count);
                op.remove(op.size() - 1);
            }
        }
    }
}
