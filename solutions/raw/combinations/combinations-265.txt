class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> combine(int n, int k) {
        if (n < k)
            return res;
        List<Integer> list = new ArrayList<>();
        backTrack(n, 1, k, list);
        return res;
    }

    private void backTrack(int n, int index, int k, List<Integer> list) {
        if (list.size() == k) {
            List<Integer> list2 = new ArrayList<>(list);
            res.add(list2);
            return;
        }
        int currIndex = index;
        for (int i = currIndex; i <= n; i++) {
            list.add(i);
            backTrack(n, i + 1, k, list);
            list.remove(list.size() - 1);
        }
    }
}
