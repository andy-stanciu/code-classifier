class Solution {

    public List<List<Integer>> combine(int n, int k) {
        int[] arr = new int[n];
        for (int i = 1; i <= n; i++) {
            arr[i - 1] = i;
        }
        List<List<Integer>> list = new ArrayList<>();
        helper(0, k, arr, list, new ArrayList<>());
        return list;
    }

    void helper(int index, int k, int[] arr, List<List<Integer>> list, ArrayList<Integer> current) {
        if (current.size() == k) {
            list.add(new ArrayList<>(current));
            return;
        }
        if (index > arr.length - 1)
            return;
        current.add(arr[index]);
        helper(index + 1, k, arr, list, current);
        //BACKTRACK
        current.remove(current.size() - 1);
        helper(index + 1, k, arr, list, current);
    }
}
