class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        backtrack(n, k, 1, new ArrayList<>(), res);
        return res;
    }

    // to fill lenth of k
    private void backtrack(int n, int k, int index, List<Integer> op, List<List<Integer>> res) {
        // base conditions
        if (op.size() == k) {
            res.add(new ArrayList<>(op));
            return;
        }
        // choices
        for (int i = index; i <= n; i++) {
            // add i to output
            op.add(i);
            backtrack(n, k, i + 1, op, res);
            op.remove(op.size() - 1);
        }
    }
}
