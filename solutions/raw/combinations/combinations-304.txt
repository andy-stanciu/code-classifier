class Solution {

    List<List<Integer>> ans;

    public List<List<Integer>> combine(int n, int k) {
        ArrayList<Integer> combination = new ArrayList<>();
        ans = new ArrayList<>();
        combinations(0, 1, combination, n, k);
        return ans;
    }

    private void combinations(int count, int idx, ArrayList<Integer> combination, int n, int k) {
        if (count == k) {
            List<Integer> temp = new ArrayList<>(combination);
            ans.add(new ArrayList<>(temp));
            return;
        }
        if (idx > n)
            return;
        combination.add(idx);
        combinations(count + 1, idx + 1, combination, n, k);
        combination.remove(combination.size() - 1);
        combinations(count, idx + 1, combination, n, k);
    }
}
//Upvote if helpful...
