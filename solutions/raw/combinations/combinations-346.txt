class Solution {

    List<List<Integer>> ans;

    public List<List<Integer>> combine(int n, int k) {
        ans = new ArrayList<>();
        for (int i = 1; i <= n - k + 1; i++) {
            ans.addAll(dp(n, i, k));
        }
        return ans;
    }

    List<List<Integer>> dp(int n, int i, int k) {
        List<List<Integer>> res = new ArrayList<>();
        if (k == 1) {
            res.add(new ArrayList<>());
            res.get(0).add(i);
            return res;
        }
        for (int j = i + 1; j <= n; j++) {
            List<List<Integer>> response = dp(n, j, k - 1);
            for (List<Integer> r : response) {
                List<Integer> current = new ArrayList<>();
                current.add(i);
                current.addAll(r);
                res.add(current);
            }
        }
        return res;
    }
}
