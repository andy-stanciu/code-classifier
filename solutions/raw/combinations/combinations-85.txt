class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> ans = new ArrayList<>();
        findCombinations(1, k, new ArrayList<>(), ans, n);
        return ans;
    }

    void findCombinations(int index, int k, List<Integer> ds, List<List<Integer>> ans, int n) {
        //base condition
        if (k == 0) {
            ans.add(new ArrayList<>(ds));
            return;
        }
        //explore all possibilities for the index
        for (int i = index; i <= n; i++) {
            ds.add(i);
            findCombinations(i + 1, k - 1, ds, ans, n);
            ds.remove(ds.size() - 1);
        }
    }
}
