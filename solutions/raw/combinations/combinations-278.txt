class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList();
        backtrack(1, new ArrayList(), n, k, res);
        return res;
    }

    private static void backtrack(int i, List<Integer> curr, int n, int k, List<List<Integer>> res) {
        if (curr.size() == k) {
            res.add(new ArrayList(curr));
            return;
        }
        if (curr.size() > k) {
            return;
        }
        for (int j = i; j <= n; j++) {
            curr.add(j);
            backtrack(j + 1, curr, n, k, res);
            curr.remove(curr.size() - 1);
        }
    }
}
