class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> curr = new ArrayList<>();
        backTrack(res, curr, 1, n, k);
        return res;
    }

    private void backTrack(List<List<Integer>> res, List<Integer> curr, int idx, int n, int k) {
        if (curr.size() == k) {
            res.add(new ArrayList<>(curr));
            return;
        }
        for (int i = idx; i <= n; i++) {
            curr.add(i);
            backTrack(res, curr, i + 1, n, k);
            curr.remove(curr.size() - 1);
        }
    }
}
