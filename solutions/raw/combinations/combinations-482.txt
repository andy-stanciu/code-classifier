class Solution {

    List<List<Integer>> res;

    public List<List<Integer>> combine(int n, int k) {
        res = new ArrayList<>();
        backtrack(new ArrayList<>(), 1, k, n);
        return res;
    }

    void backtrack(List<Integer> comb, int start, int k, int n) {
        if (k == 0) {
            res.add(new ArrayList<>(comb));
            return;
        }
        for (int x = start; x <= n; x++) {
            comb.add(x);
            backtrack(comb, x + 1, k - 1, n);
            comb.remove(comb.size() - 1);
        }
    }
}
