class Solution {

    public void helper(int n, int k, List<List<Integer>> res, List<Integer> curr, int newdigit) {
        if (curr.size() == k) {
            res.add(new ArrayList<>(curr));
            return;
        }
        for (int i = newdigit; i <= n; i++) {
            if (!curr.contains(i)) {
                curr.add(i);
                helper(n, k, res, curr, i);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> curr = new ArrayList<>();
        helper(n, k, res, curr, 1);
        return res;
    }
}
