class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        dfs(res, path, 1, n, k);
        return res;
    }

    public void dfs(List<List<Integer>> res, List<Integer> path, int startIndex, int n, int k) {
        if (path.size() == k) {
            res.add(new ArrayList<Integer>(path));
            return;
        }
        for (int i = startIndex; i <= n; i++) {
            path.add(i);
            dfs(res, path, i + 1, n, k);
            path.remove(path.size() - 1);
        }
    }
}
