class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> ans = new ArrayList<>();
        int[] arr = new int[n];
        List<Integer> l1 = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            arr[i] = i + 1;
        }
        combinations(l1, ans, arr, 0, k);
        return ans;
    }

    public void combinations(List<Integer> l1, List<List<Integer>> ans, int[] arr, int index, int k) {
        if (l1.size() == k) {
            ans.add(new ArrayList<>(l1));
            return;
        }
        for (int i = index; i < arr.length; i++) {
            l1.add(arr[i]);
            combinations(l1, ans, arr, i + 1, k);
            l1.remove(l1.size() - 1);
        }
    }
}
