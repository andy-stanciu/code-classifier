class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> sub = new ArrayList<>();
        if (k > n)
            return ans;
        backtrack(ans, sub, n, k, 1);
        return ans;
    }

    public void backtrack(List<List<Integer>> ans, List<Integer> sub, int n, int k, int start) {
        if (sub.size() == k) {
            ans.add(new ArrayList<>(sub));
            return;
        }
        for (int i = start; i <= n; i++) {
            sub.add(i);
            backtrack(ans, sub, n, k, i + 1);
            sub.remove(sub.size() - 1);
        }
    }
}
