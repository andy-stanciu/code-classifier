class Solution {

    LinkedList<Integer> path = new LinkedList<>();

    List<List<Integer>> res = new ArrayList<>();

    public void backtrack(int n, int idx, int k) {
        if (path.size() == k) {
            res.add(new ArrayList<>(path));
            return;
        }
        if (n - idx < k - path.size()) {
            return;
        }
        for (int i = idx; i < n; i++) {
            path.add(i + 1);
            backtrack(n, i + 1, k);
            path.removeLast();
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        backtrack(n, 0, k);
        return res;
    }
}
