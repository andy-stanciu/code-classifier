class Solution {

    public void solve(List<Integer> ls, List<List<Integer>> res, int k, List<Integer> ll, int start) {
        /**
         *         When length of accumulating list becomes k,
         *         we get a possible answer and store it in res
         */
        if (start == ls.size()) {
            //base case
            if (ll.size() == k) {
                res.add(new ArrayList<>(ll));
            }
            return;
        }
        ll.add(ls.get(start));
        solve(ls, res, k, ll, start + 1);
        ll.remove(ll.size() - 1);
        solve(ls, res, k, ll, start + 1);
    }

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> ls = new ArrayList<>();
        List<Integer> ll = new ArrayList<>();
        for (int j = 1; j <= n; j++) {
            ls.add(j);
        }
        solve(ls, res, k, ll, 0);
        return res;
    }
}
