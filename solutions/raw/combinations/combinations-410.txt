class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> ans = new ArrayList<>();
        int[] arr = new int[n];
        for (int i = 1; i <= n; i++) {
            arr[i - 1] = i;
        }
        allCombinations(0, k, arr, ans, new ArrayList<>());
        return ans;
    }

    public void allCombinations(int ind, int len, int[] arr, List<List<Integer>> ans, List<Integer> li) {
        if (ind == arr.length) {
            if (li.size() == len) {
                ans.add(new ArrayList<>(li));
            }
            return;
        }
        li.add(arr[ind]);
        allCombinations(ind + 1, len, arr, ans, li);
        li.remove(li.size() - 1);
        allCombinations(ind + 1, len, arr, ans, li);
    }
}
