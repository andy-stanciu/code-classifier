/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        //1
        ListNode prevNode = head;
        //2
        ListNode currNode = head.next;
        //3
        ListNode nextNode = currNode.next;
        //2
        head = currNode;
        while (currNode.next != null && nextNode != null && nextNode.next != null) {
            //2->1
            currNode.next = prevNode;
            //1->4
            prevNode.next = nextNode.next;
            //4
            currNode = nextNode.next;
            //3
            prevNode = nextNode;
            //null
            nextNode = currNode.next;
        }
        currNode.next = prevNode;
        prevNode.next = nextNode;
        return head;
    }
}
