/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    static ListNode Head = null;

    static boolean check = true;

    public void swapInPairs(ListNode First, ListNode LastNode) {
        if (First == null || First.next == null) {
            return;
        }
        ListNode Second = First.next;
        ListNode Third = Second.next;
        if (LastNode == null) {
            Head = Second;
        } else {
            LastNode.next = Second;
        }
        First.next = Third;
        Second.next = First;
        swapInPairs(Third, First);
    }

    public ListNode swapPairs(ListNode head) {
        if (head == null) {
            return head;
        }
        Head = null;
        swapInPairs(head, null);
        if (Head == null) {
            return head;
        }
        return Head;
    }
}
