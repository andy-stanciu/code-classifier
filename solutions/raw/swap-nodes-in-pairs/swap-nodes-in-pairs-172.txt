/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode ptr = head;
        // next pointer (swaps with ptr)
        ListNode n = ptr.next;
        head = head.next;
        // used to link the first swapped pair with the next pair
        ListNode temp;
        while (true) {
            ptr.next = n.next;
            n.next = ptr;
            temp = ptr;
            ptr = ptr.next;
            if (ptr == null || ptr.next == null)
                break;
            n = ptr.next;
            temp.next = n;
        }
        return head;
    }
}
