/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        ListNode temp2 = new ListNode();
        ListNode curr = head;
        ListNode temp = head;
        int i = 0;
        int count = 0;
        ListNode len = head;
        int f = 0;
        while (len != null) {
            f++;
            len = len.next;
        }
        while (curr != null && i < f) {
            i++;
            ListNode prev = null;
            if (i % 2 == 0) {
                int l = 0;
                temp2 = curr;
                while (l < 2 && curr != null) {
                    ListNode forward = curr.next;
                    curr.next = prev;
                    prev = curr;
                    curr = forward;
                    l++;
                }
                if (count == 0) {
                    head = prev;
                }
                temp.next = prev;
                temp = temp2;
                count++;
            }
        }
        temp2.next = curr;
        return head;
    }
}
