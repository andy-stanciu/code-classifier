/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        //Verificamos se a lisa esta vazia
        if (head == null || head.next == null) {
            return head;
        }
        //Criamos uma n\xF3 fict\xEDcio
        ListNode aux = new ListNode(0);
        aux.next = head;
        //inicializar dois ponteiros
        ListNode current = aux;
        //Uso do while para sempre que ouver dois n\xF3s trocar
        while (current.next != null && current.next.next != null) {
            //identifica o primeiro e o segundo n\xF3s do par
            ListNode first = current.next;
            ListNode second = current.next.next;
            //swap
            first.next = second.next;
            second.next = first;
            current.next = second;
            // move o ponteiro para o pr\xF3ximo par
            current = first;
        }
        return aux.next;
    }
}
