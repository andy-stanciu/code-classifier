/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverse(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;
        ListNode Next;
        while (curr != null) {
            Next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = Next;
        }
        return prev;
    }

    public ListNode swapPairs(ListNode head) {
        if (head == null)
            return null;
        ListNode ptr = head;
        if (ptr == null || ptr.next == null)
            return head;
        ListNode nextNode = ptr.next.next;
        ptr.next.next = null;
        ListNode finalhead = reverse(head);
        head.next = swapPairs(nextNode);
        return finalhead;
    }
}
