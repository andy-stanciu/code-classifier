/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        int count = 0;
        ListNode curr = head;
        while (curr != null) {
            count++;
            curr = curr.next;
        }
        curr = head;
        int[] a = new int[count];
        int i = 0;
        while (curr != null) {
            a[i] = curr.val;
            i++;
            curr = curr.next;
        }
        i = 0;
        ans(0, 1, a);
        curr = head;
        while (curr != null) {
            curr.val = a[i];
            i++;
            curr = curr.next;
        }
        return head;
    }

    public static void ans(int i, int j, int[] a) {
        if (i < a.length && j < a.length) {
            int temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            ans(i + 2, j + 2, a);
        }
    }
}
