/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        List<Integer> ans = new ArrayList<>();
        while (head != null) {
            ans.add(head.val);
            head = head.next;
        }
        int count = 0;
        while (count < ans.size() - 1) {
            Collections.swap(ans, count, count + 1);
            count += 2;
        }
        Collections.reverse(ans);
        ListNode ans1 = new ListNode();
        ans1 = ans1.next;
        for (int i : ans) {
            ans1 = new ListNode(i, ans1);
        }
        return ans1;
    }
}
