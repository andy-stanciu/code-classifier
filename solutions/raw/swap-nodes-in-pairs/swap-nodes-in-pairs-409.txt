/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode pointer = head;
        ListNode proxy = head;
        ListNode prev = null;
        boolean wasHeadChanged = false;
        while (pointer != null && pointer.next != null) {
            proxy = pointer.next;
            pointer.next = proxy.next;
            proxy.next = pointer;
            if (prev != null)
                prev.next = proxy;
            if (!wasHeadChanged) {
                wasHeadChanged = true;
                head = proxy;
            }
            prev = pointer;
            // move pointer
            pointer = pointer.next;
        }
        return head;
    }
}
