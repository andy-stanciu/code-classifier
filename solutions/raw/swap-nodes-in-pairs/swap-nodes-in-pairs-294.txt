/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null)
            return head;
        List<Integer> ls1 = new ArrayList<>();
        while (head != null) {
            ls1.add(head.val);
            head = head.next;
        }
        ListNode ls = new ListNode();
        ListNode tmp = ls;
        int j;
        for (j = 0; j < ls1.size() - 1; j += 2) {
            tmp.next = new ListNode(ls1.get(j + 1));
            tmp = tmp.next;
            tmp.next = new ListNode(ls1.get(j));
            tmp = tmp.next;
        }
        if (j < ls1.size()) {
            tmp.next = new ListNode(ls1.get(j));
            tmp = tmp.next;
        }
        return ls.next;
    }
}
