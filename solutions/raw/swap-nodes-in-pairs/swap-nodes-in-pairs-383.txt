/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public static ListNode swapPairs(ListNode head) {
        ListNode grand = null;
        ListNode parent = head;
        ListNode child = head != null ? head.next : null;
        while (parent != null && child != null) {
            if (grand == null) {
                parent.next = child.next;
                child.next = parent;
                head = child;
            } else {
                parent.next = (grand.next = child).next;
                child.next = parent;
            }
            parent = child;
            child = child.next;
            parent = parent.next;
            child = child.next;
            grand = parent;
            if (child != null) {
                parent = parent.next;
                child = child.next;
            }
        }
        return head;
    }
}
