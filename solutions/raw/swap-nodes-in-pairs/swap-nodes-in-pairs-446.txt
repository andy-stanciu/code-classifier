/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        Stack<ListNode> stackOf2nodes = new Stack<>();
        ListNode temp = head;
        ListNode newHead = null, tempNewList = null;
        if (temp == null || temp.next == null) {
            return head;
        }
        stackOf2nodes.add(head);
        temp = head.next;
        while (temp != null) {
            stackOf2nodes.add(temp);
            temp = temp.next;
            if (stackOf2nodes.size() == 2) {
                if (newHead == null) {
                    newHead = stackOf2nodes.pop();
                    newHead.next = stackOf2nodes.pop();
                    newHead.next.next = null;
                    tempNewList = newHead.next;
                } else {
                    tempNewList.next = stackOf2nodes.pop();
                    tempNewList.next.next = stackOf2nodes.pop();
                    tempNewList.next.next.next = null;
                    tempNewList = tempNewList.next.next;
                }
            }
        }
        if (stackOf2nodes.size() == 1) {
            tempNewList.next = stackOf2nodes.pop();
            tempNewList.next.next = null;
        }
        return newHead;
    }
}
