/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        // ListNode head1=new ListNode(100);
        // ListNode temp=head1;
        // ListNode curr=head;
        // ListNode prev=null;
        // while(curr!=null){
        //     temp.next=curr.next;
        //     temp=temp.next;
        //     prev=curr;
        //     curr=curr.next;
        //     temp.next=prev;
        //     temp=temp.next;
        //     prev=curr;
        //     curr=curr.next;
        // }
        // return head1.next;
        if (head == null || head.next == null)
            return head;
        ListNode curr = head;
        while (curr != null && curr.next != null) {
            //   ListNode temp=curr;
            int value = curr.val;
            curr.val = curr.next.val;
            curr = curr.next;
            curr.val = value;
            curr = curr.next;
        }
        return head;
    }
}
