/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode curr = head;
        head = curr.next;
        if (head != null) {
            curr.next = head.next;
            head.next = curr;
        }
        ListNode first = curr.next;
        if (first == null) {
            return head;
        }
        ListNode second = first.next;
        while (first != null && second != null) {
            first.next = second.next;
            curr.next = second;
            second.next = first;
            curr = curr.next.next;
            if (curr != null) {
                first = curr.next;
                if (first != null) {
                    second = first.next;
                } else {
                    second = null;
                }
            } else {
                return head;
            }
        }
        return head;
    }
}
