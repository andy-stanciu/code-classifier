/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        // Handle edge cases
        if (head == null || head.next == null)
            return head;
        ListNode newHead = head.next;
        ListNode prev = null;
        ListNode curr = head;
        while (curr != null && curr.next != null) {
            ListNode first = curr;
            ListNode second = curr.next;
            first.next = second.next;
            second.next = first;
            if (prev != null) {
                prev.next = second;
            }
            prev = first;
            curr = first.next;
        }
        return newHead;
    }

    public ListNode get(ListNode head, int col) {
        ListNode node = head;
        for (int i = 0; i < col; i++) {
            if (node == null)
                return null;
            node = node.next;
        }
        return node;
    }
}
