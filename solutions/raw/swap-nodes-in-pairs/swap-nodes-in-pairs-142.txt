// class ListNode {
//     int val;
//     ListNode next;
//     ListNode(int val) { this.val = val; }
// }
class Solution {

    public ListNode swapPairs(ListNode head) {
        // Dummy node to handle edge cases
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;
        // Loop through the list in pairs
        while (head != null && head.next != null) {
            ListNode firstNode = head;
            ListNode secondNode = head.next;
            // Swapping the nodes
            prev.next = secondNode;
            firstNode.next = secondNode.next;
            secondNode.next = firstNode;
            // Move pointers to the next pair
            prev = firstNode;
            head = firstNode.next;
        }
        // Return the new head of the list
        return dummy.next;
    }
}
