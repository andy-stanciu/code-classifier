/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        ListNode temp = head;
        int l = 0;
        while (temp != null) {
            l++;
            temp = temp.next;
        }
        int c = 1;
        ListNode temp2 = head;
        ListNode pre = new ListNode(0);
        pre.next = temp2;
        if (temp2 == null)
            return head;
        ListNode next = temp2.next;
        while (temp2 != null && temp2.next != null) {
            pre.next = next;
            temp2.next = next.next;
            next.next = temp2;
            if (c == 1)
                head = next;
            c++;
            pre = temp2;
            temp2 = temp2.next;
            if (temp2 != null)
                next = temp2.next;
        }
        return head;
    }
}
