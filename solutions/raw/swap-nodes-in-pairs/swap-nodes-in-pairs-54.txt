/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null) {
            return null;
        }
        ListNode node1 = head, node2 = head.next, prev = head;
        if (node2 != null) {
            head = node2;
        }
        while (node2 != null) {
            //If we are at first position there no need of this step
            if (prev != node1) {
                prev.next = node2;
            }
            node1.next = node2.next;
            node2.next = node1;
            prev = node1;
            node1 = node1.next;
            //If node1 is null it means we have reached end of list
            if (node1 == null) {
                break;
            }
            node2 = node1.next;
        }
        return head;
    }
}
