/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode temphead = head, prev = null, mod2next = null, currnext = null;
        int count = 0, s = 0;
        while (temphead != null) {
            if (count == 0) {
                s = 0;
            }
            count++;
            if (count % 2 == 0) {
                if (s == 0) {
                    currnext = null;
                    currnext = temphead.next;
                    temphead.next = prev;
                    prev.next = currnext;
                    head = temphead;
                    temphead = temphead.next;
                    s = 1;
                    if (temphead == null) {
                        break;
                    }
                } else {
                    currnext = temphead.next;
                    temphead.next = prev;
                    prev.next = currnext;
                    mod2next.next = temphead;
                    temphead = temphead.next;
                    if (temphead == null) {
                        break;
                    }
                }
            }
            if (count % 2 == 0) {
                mod2next = temphead;
            }
            prev = temphead;
            temphead = temphead.next;
        }
        return head;
    }
}
