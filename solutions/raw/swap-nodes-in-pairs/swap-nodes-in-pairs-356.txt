/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    List<Integer> ans = new ArrayList<>();

    ListNode ptr = null;

    public ListNode swapPairs(ListNode head) {
        ListNode temp = head;
        while (temp != null) {
            ans.add(temp.val);
            temp = temp.next;
        }
        int k = 2;
        for (int i = 0; i < ans.size() - 1; i += k) {
            swap(i, i + k - 1);
        }
        System.out.print(ans);
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ptr = dummy;
        for (int i : ans) {
            ptr.next = new ListNode(i);
            ptr = ptr.next;
        }
        return dummy.next;
    }

    public void swap(int left, int right) {
        while (left < right) {
            int t = ans.get(left);
            ans.set(left, ans.get(right));
            ans.set(right, t);
            right--;
            left++;
        }
    }
}
