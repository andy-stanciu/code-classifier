/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    // public ListNode tworev(ListNode a, ListNode b){
    //     ListNode q = b;
    // }
    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode p = head;
        ListNode q = head.next;
        ListNode r = new ListNode(-1);
        while (p != null && q != null) {
            System.out.println(p.val + "asdf" + q.val + "ad" + r.val);
            p.next = q.next;
            q.next = p;
            if (r.val == -1) {
                r = p;
                head = q;
            } else {
                r.next = q;
                r = p;
            }
            p = p.next;
            if (p != null) {
                q = p.next;
            }
        }
        return head;
    }
}
