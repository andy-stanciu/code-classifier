/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public int length(ListNode head) {
        ListNode temp = head;
        int count = 0;
        while (temp != null) {
            count++;
            temp = temp.next;
        }
        return count;
    }

    public ListNode swapPairs(ListNode head) {
        int len = length(head);
        if (len == 0 || len == 1) {
            return head;
        }
        ListNode first = head;
        while (first != null && first.next != null) {
            int temp = first.val;
            first.val = first.next.val;
            first.next.val = temp;
            first = first.next.next;
        }
        return head;
    }
}
