/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        //pointer to traverse the list
        ListNode point = dummy;
        //loop until there are at least two nodes to swap
        while (point.next != null && point.next.next != null) {
            // 2 nodes to be swapped
            ListNode swap1 = point.next;
            ListNode swap2 = point.next.next;
            // swapping both nodes
            swap1.next = swap2.next;
            swap2.next = swap1;
            //updating the next of previous node to the new head of the swapped pair
            point.next = swap2;
            //updating pointer for next iteration
            point = swap1;
        }
        return dummy.next;
    }
}
