/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null)
            return null;
        if (head.next == null)
            return head;
        return swap(head);
    }

    public ListNode swap(ListNode head) {
        if (head == null || head.next == null)
            return head;
        //left node before swap
        ListNode left = head;
        //right node before swap
        ListNode right = head.next;
        ListNode temp = right.next;
        right.next = left;
        left.next = temp;
        head = right;
        left.next = swap(left.next);
        return head;
    }
}
