/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        ListNode temp = head;
        int size = 0;
        while (temp != null) {
            temp = temp.next;
            size++;
        }
        if (size == 1) {
            return head;
        }
        if (size == 0) {
            return null;
        }
        temp = head;
        ListNode prev = head;
        int counter = 1;
        while (counter < size) {
            if (counter % 2 == 1) {
                prev = temp;
                temp = temp.next;
                int holder = prev.val;
                prev.val = temp.val;
                temp.val = holder;
                counter++;
            } else {
                if (counter <= size) {
                    prev = temp;
                    temp = temp.next;
                    counter++;
                }
            }
        }
        return head;
    }
}
