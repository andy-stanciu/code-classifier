/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public static void swap(ListNode prev, ListNode after) {
        int temp = prev.val;
        prev.val = after.val;
        after.val = temp;
    }

    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode prev = head;
        ListNode after = head.next;
        if (after.next == null) {
            swap(prev, after);
            return head;
        }
        while (after != null && after.next != null) {
            swap(prev, after);
            prev = after.next;
            after = prev.next;
            if (after != null && after.next == null) {
                swap(prev, after);
            }
        }
        return head;
    }
}
