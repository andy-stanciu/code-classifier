/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        // swapt the first two nodes
        ListNode forward = head.next;
        head.next = forward.next;
        forward.next = head;
        head.next = swapPairs(head.next);
        // after wapping the forward becomes the new head that is why
        return forward;
    }
}
