class Solution {

    public boolean canJump(int[] nums) {
        if (nums.length == 1)
            return true;
        int n = nums.length;
        int[] dp = new int[n];
        Arrays.fill(dp, -1);
        return solve(nums, 0, n, dp);
    }

    public boolean solve(int[] a, int i, int n, int[] dp) {
        if (i == n - 1)
            return true;
        if (i >= n || a[i] == 0)
            return false;
        if (dp[i] != -1)
            return dp[i] == 0 ? false : true;
        boolean res = false;
        for (int j = 1; j <= a[i]; j++) {
            boolean small = solve(a, i + j, n, dp);
            res = res || small;
        }
        dp[i] = res ? 1 : 0;
        return res;
    }
}
