class Solution {

    public boolean canJump(int[] nums) {
        if (nums.length == 1) {
            return true;
        }
        if (nums.length == 2) {
            if (nums[0] >= 1) {
                return true;
            } else {
                return false;
            }
        }
        boolean[] nearesttrue = new boolean[nums.length - 1];
        int val = nums[nums.length - 2];
        int nearesttrueindex = nums.length - 1;
        if (val > 0) {
            nearesttrue[nums.length - 2] = true;
            nearesttrueindex = nums.length - 2;
        }
        int zz = nums.length - 3;
        for (int i = zz; i >= 0; i--) {
            int temp = nums[i];
            int temp2 = temp + i;
            if (temp2 >= nums.length - 1 || temp2 >= nearesttrueindex) {
                nearesttrue[i] = true;
                nearesttrueindex = i;
                continue;
            }
        }
        return nearesttrue[0];
    }
}
