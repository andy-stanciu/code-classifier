class Solution {

    public boolean canJump(int[] nums) {
        boolean containsZero = false;
        boolean flag = false;
        if (nums.length == 1) {
            return true;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                containsZero = true;
                break;
            }
        }
        if (containsZero) {
            if (nums[0] == 0) {
                return false;
            } else {
                int maxIndex = 0;
                for (int i = 0; i < nums.length; i++) {
                    int jumpIndex = i + nums[i];
                    if (maxIndex < jumpIndex) {
                        maxIndex = jumpIndex;
                    }
                    if (maxIndex >= nums.length - 1) {
                        flag = true;
                        return true;
                    }
                    if (nums[i] == 0 && jumpIndex == i && maxIndex == i) {
                        return false;
                    }
                }
            }
        } else {
            return true;
        }
        return flag;
    }
}
