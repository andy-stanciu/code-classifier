class Solution {

    public boolean canJump(int[] nums) {
        if (nums.length == 1)
            return true;
        int maxJump = nums[0];
        for (int i = 0; i < nums.length; i++) {
            if (// Out of jumps cant reach the current index
            maxJump <= 0)
                return false;
            //Recalculate jumps remaining.
            maxJump = Math.max(maxJump - 1, nums[i]);
            //Be greedy so you have more jumps.
        }
        return true;
    }
}
