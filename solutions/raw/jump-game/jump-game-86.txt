class Solution {

    public boolean canJump(int[] nums) {
        boolean[] dp = new boolean[nums.length];
        return DFS(nums, 0, dp);
    }

    public boolean DFS(int[] nums, int index, boolean[] dp) {
        if (index >= nums.length - 1)
            return true;
        if (dp[index] == true)
            return false;
        dp[index] = true;
        int jump = nums[index];
        if (jump == 0)
            return false;
        for (int k = jump; k >= 1; k--) {
            if (DFS(nums, index + k, dp)) {
                return true;
            }
        }
        return false;
    }
}
