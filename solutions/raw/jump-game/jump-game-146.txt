class Solution {

    boolean[] visited;

    public boolean canJump(int[] nums) {
        int len = nums.length;
        visited = new boolean[len];
        return canJump(0, len, nums, visited);
    }

    private boolean canJump(int ind, int len, int[] nums, boolean[] visited) {
        if (ind >= len - 1) {
            return true;
        }
        if (visited[ind]) {
            return false;
        }
        visited[ind] = true;
        int maxJumps = nums[ind];
        if (maxJumps == 0) {
            return false;
        }
        for (int i = maxJumps; i >= 1; i--) {
            if (canJump(ind + i, len, nums, visited)) {
                return true;
            }
        }
        return false;
    }
}
