/**
 *    The point of this problem is to travase each element and
 *    trace max reachable point in same time.(piont 1)
 *    This point helps to mitigate time complexity and space complexity.
 *
 *    In point 1 , I caluculate maximum reachable index and
 *    decide whether to update maxReach(variable) or not.
 *
 *    And then, in the if statement,
 *    I check whether it\'s possible to reach the final index
 */
class Solution {

    public boolean canJump(int[] nums) {
        int maxReach = 0;
        for (int i = 0; i < nums.length; i++) {
            if (i > maxReach) {
                return false;
            }
            //point 1
            maxReach = Math.max(maxReach, nums[i] + i);
        }
        return true;
    }
}
