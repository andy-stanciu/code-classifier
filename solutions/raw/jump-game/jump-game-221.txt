class Solution {

    public boolean canJump(int[] nums) {
        int maxJump = 0;
        boolean[] traversed = new boolean[nums.length];
        Deque<List<Integer>> stack = new ArrayDeque<>();
        stack.push(List.of(0, nums[0]));
        while (!stack.isEmpty()) {
            var el = stack.pop();
            if (el.get(0) == nums.length - 1) {
                return true;
            }
            maxJump = Math.max(maxJump, el.get(0) + el.get(1));
            for (int i = el.get(0) + 1; i < nums.length && i <= maxJump; i++) {
                if (traversed[i])
                    continue;
                stack.push(List.of(i, nums[i]));
            }
            traversed[el.get(0)] = true;
        }
        return false;
    }
}
