class Solution {

    public boolean canJump(int[] nums) {
        // Initialize the step needed to reach the end as 1
        int step = 1;
        int n = nums.length;
        // Traverse the array from the second last element to the first
        for (int i = n - 2; i >= 0; i--) {
            // If the current element can help us reach or surpass the needed step
            if (nums[i] >= step)
                // Reset step to 1 because we can jump to the end from here
                step = 1;
            else
                // Increment step because we need more steps to reach the end
                step++;
        }
        // If step is 1 at the start, it means we can reach the end from the first element
        return step == 1;
    }
}
