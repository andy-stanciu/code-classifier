class Solution {

    public boolean canJump(int[] nums) {
        // edge case: what if starting node itself is 0
        int maxJumpSteps = 0;
        for (int i = 0; i < nums.length - 1; i++) {
            if (maxJumpSteps <= 0 && nums[i] <= 0) {
                return false;
            }
            maxJumpSteps = Math.max(maxJumpSteps, nums[i]);
            maxJumpSteps--;
        }
        return true;
    }
}
