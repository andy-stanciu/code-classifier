/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int countNodes(TreeNode root) {
        if (root == null)
            return 0;
        int leftDepth = findLeftDepth(root.left);
        int rightDepth = findLeftDepth(root.right);
        int count = (int) Math.pow(2, rightDepth);
        if (leftDepth == rightDepth)
            return count + countNodes(root.right);
        else
            return count + countNodes(root.left);
    }

    public int findLeftDepth(TreeNode root) {
        if (root == null)
            return 0;
        return 1 + findLeftDepth(root.left);
    }
}
