/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int findMaxHeightLeft(TreeNode root) {
        if (root == null)
            return 0;
        TreeNode temp1 = root;
        int cntLeft = 0;
        while (temp1 != null) {
            cntLeft++;
            temp1 = temp1.left;
        }
        return cntLeft;
    }

    public int findMaxHeightRight(TreeNode root) {
        if (root == null)
            return 0;
        TreeNode temp2 = root;
        int cntRight = 0;
        while (temp2 != null) {
            cntRight++;
            temp2 = temp2.right;
        }
        return cntRight;
    }

    public int countNodes(TreeNode root) {
        if (root == null)
            return 0;
        int lh = findMaxHeightLeft(root.left);
        int rh = findMaxHeightRight(root.right);
        if (lh == rh)
            return (2 << lh) - 1;
        return 1 + countNodes(root.left) + countNodes(root.right);
    }
}
