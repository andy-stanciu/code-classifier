/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public int countNodes(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int lh = countLeft(root);
        int rh = countRight(root);
        if (lh == rh) {
            return ((2 << lh) - 1);
        } else {
            return countNodes(root.left) + countNodes(root.right) + 1;
        }
    }

    public int countLeft(TreeNode root) {
        int height = 0;
        while (root.left != null) {
            height++;
            root = root.left;
        }
        return height;
    }

    public int countRight(TreeNode root) {
        int height = 0;
        while (root.right != null) {
            height++;
            root = root.right;
        }
        return height;
    }
}
