/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int getLeftheight(TreeNode root) {
        int c = 0;
        while (root != null) {
            c++;
            root = root.left;
        }
        return c;
    }

    public int getRightheight(TreeNode root) {
        int c = 0;
        while (root != null) {
            c++;
            root = root.right;
        }
        return c;
    }

    public int countNodes(TreeNode root) {
        if (root == null)
            return 0;
        int left = getLeftheight(root);
        int right = getRightheight(root);
        if (left == right) {
            return ((int) Math.pow(2, left)) - 1;
        } else {
            return countNodes(root.left) + countNodes(root.right) + 1;
        }
    }
}
