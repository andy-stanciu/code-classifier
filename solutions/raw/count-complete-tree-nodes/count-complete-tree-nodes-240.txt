/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int countNodes(TreeNode root) {
        if (root == null)
            return 0;
        int leftHeight = countLeftHeight(root.left);
        int rightHeight = countRightHeight(root.right);
        if (leftHeight == rightHeight)
            return ((2 << (leftHeight)) - 1);
        return 1 + countNodes(root.left) + countNodes(root.right);
    }

    int countLeftHeight(TreeNode leftHead) {
        int count = 0;
        while (leftHead != null) {
            count++;
            leftHead = leftHead.left;
        }
        return count;
    }

    int countRightHeight(TreeNode rightHead) {
        int count = 0;
        while (rightHead != null) {
            count++;
            rightHead = rightHead.right;
        }
        return count;
    }
}
