/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int countNodes(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int hl = getHeight(root, true);
        int hr = getHeight(root, false);
        if (hl == hr) {
            return (1 << hl) - 1;
        } else {
            return 1 + countNodes(root.left) + countNodes(root.right);
        }
    }

    private static int getHeight(TreeNode root, boolean isLeft) {
        int count = 1;
        while (isLeft ? root.left != null : root.right != null) {
            count++;
            root = isLeft ? root.left : root.right;
        }
        return count;
    }
}
