/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int findLength(int direction, TreeNode node) {
        int count = 0;
        while (node != null) {
            count++;
            node = direction == -1 ? node.left : node.right;
        }
        return count;
    }

    public int countNodes(TreeNode root) {
        int leftLength = findLength(-1, root);
        int rightLength = findLength(1, root);
        if (leftLength == rightLength) {
            return (int) Math.pow(2, leftLength) - 1;
        }
        return 1 + countNodes(root.left) + countNodes(root.right);
    }
}
