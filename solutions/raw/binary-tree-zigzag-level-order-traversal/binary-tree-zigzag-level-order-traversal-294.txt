/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if (root == null)
            return res;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        // To keep track of odd or even level
        boolean flag = false;
        while (!q.isEmpty()) {
            int n = q.size();
            List<Integer> temp = new ArrayList<>(n);
            for (int i = 0; i < n; i++) {
                TreeNode val = q.poll();
                if (!flag)
                    temp.add(val.val);
                else
                    temp.add(0, val.val);
                if (val.left != null)
                    q.add(val.left);
                if (val.right != null)
                    q.add(val.right);
            }
            res.add(temp);
            flag = !flag;
        }
        return res;
    }
}
