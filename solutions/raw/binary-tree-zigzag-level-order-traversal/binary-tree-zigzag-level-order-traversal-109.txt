/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new LinkedList<>();
        if (root == null)
            return result;
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        int level = 0;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> lebel = new LinkedList<>();
            while (size-- > 0) {
                TreeNode c = q.poll();
                if (level % 2 != 0) {
                    lebel.addFirst(c.val);
                } else {
                    lebel.add(c.val);
                }
                if (c.left != null)
                    q.offer(c.left);
                if (c.right != null)
                    q.offer(c.right);
            }
            level++;
            result.add(lebel);
        }
        return result;
    }
}
