/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> queueNode = new LinkedList<>();
        List<List<Integer>> listNode = new ArrayList<>();
        int level = 0;
        if (root == null) {
            return listNode;
        }
        queueNode.add(root);
        while (!queueNode.isEmpty()) {
            int size1 = queueNode.size();
            List<Integer> row = new ArrayList<>();
            for (int i = 0; i < size1; i++) {
                // Get the first Element
                TreeNode node = queueNode.poll();
                // Insert the node\'s value at
                // the determined index
                //row.add(node.val);
                if (level % 2 == 0) {
                    row.add(node.val);
                } else {
                    row.add(0, node.val);
                }
                if (node.left != null) {
                    queueNode.add(node.left);
                }
                if (node.right != null) {
                    queueNode.add(node.right);
                }
            }
            listNode.add(row);
            level += 1;
        }
        return listNode;
    }
}
