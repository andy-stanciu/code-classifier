/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        return zigzagLevelOrder(0, root, new ArrayList<>());
    }

    public static List<List<Integer>> zigzagLevelOrder(int level, TreeNode root, List<List<Integer>> listOfLists) {
        if (root == null)
            return listOfLists;
        if (level == listOfLists.size()) {
            listOfLists.add(new LinkedList<>());
        }
        List<Integer> list = listOfLists.get(level);
        if (level % 2 == 0) {
            list.add(root.val);
        } else {
            list.add(0, root.val);
        }
        zigzagLevelOrder(level + 1, root.left, listOfLists);
        zigzagLevelOrder(level + 1, root.right, listOfLists);
        return listOfLists;
    }
}
