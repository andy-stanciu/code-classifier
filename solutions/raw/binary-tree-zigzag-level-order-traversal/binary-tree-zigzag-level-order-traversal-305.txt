class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return new ArrayList<List<Integer>>();
        }
        q.add(root);
        q.add(null);
        boolean b = true;
        ArrayList<Integer> List = new ArrayList<>();
        while (!q.isEmpty()) {
            TreeNode curr = q.remove();
            if (curr == null) {
                if (b) {
                    b = false;
                    ans.add(new ArrayList<>(List));
                } else {
                    b = true;
                    List<Integer> list = new ArrayList<>(List);
                    Collections.reverse(list);
                    ans.add(list);
                }
                List.clear();
                if (q.isEmpty()) {
                    break;
                } else {
                    q.add(null);
                }
            } else {
                List.add(curr.val);
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
        }
        return ans;
    }
}
