class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null)
            return res;
        q.add(root);
        q.add(null);
        int t = 0;
        while (!q.isEmpty()) {
            TreeNode c = q.poll();
            if (c == null) {
                if (t % 2 == 0) {
                    res.add(new LinkedList<>(list));
                } else {
                    Collections.reverse(list);
                    res.add(new LinkedList<>(list));
                }
                list.clear();
                if (q.isEmpty())
                    break;
                q.add(null);
                t++;
            } else {
                list.add(c.val);
                if (c.left != null) {
                    q.add(c.left);
                }
                if (c.right != null) {
                    q.add(c.right);
                }
            }
        }
        return res;
    }
}
