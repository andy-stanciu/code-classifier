/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null) {
            return list;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        TreeNode temp = null;
        Boolean zigZag = true;
        List<Integer> subList;
        while (!queue.isEmpty()) {
            int size = queue.size();
            subList = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                temp = queue.remove();
                subList.add(temp.val);
                if (temp.left != null) {
                    queue.add(temp.left);
                }
                if (temp.right != null) {
                    queue.add(temp.right);
                }
            }
            if (zigZag == false) {
                Collections.reverse(subList);
            }
            list.add(subList);
            zigZag = !zigZag;
        }
        return list;
    }
}
