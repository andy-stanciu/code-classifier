/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        if (root == null) {
            return ans;
        }
        int level = 0;
        while (q.size() > 0) {
            int n = q.size();
            List<Integer> temp = new ArrayList<>();
            for (int i = 1; i <= n; i++) {
                TreeNode rem = q.remove();
                temp.add(rem.val);
                if (rem.left != null)
                    q.add(rem.left);
                if (rem.right != null)
                    q.add(rem.right);
            }
            if (level % 2 == 1) {
                Collections.reverse(temp);
            }
            ans.add(temp);
            level++;
        }
        return ans;
    }
}
