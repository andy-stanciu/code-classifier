class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if (root == null) {
            return new ArrayList<>();
        }
        Deque<TreeNode> q = new ArrayDeque<>();
        q.offer(root);
        int level = 0;
        List<List<Integer>> res = new ArrayList<>();
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> vals = new ArrayList<>();
            if (level % 2 == 0) {
                for (int i = 0; i < size; i++) {
                    TreeNode cur = q.removeFirst();
                    vals.add(cur.val);
                    if (cur.left != null) {
                        q.addLast(cur.left);
                    }
                    if (cur.right != null) {
                        q.addLast(cur.right);
                    }
                }
            } else {
                for (int i = 0; i < size; i++) {
                    TreeNode cur = q.removeLast();
                    vals.add(cur.val);
                    if (cur.right != null) {
                        q.addFirst(cur.right);
                    }
                    if (cur.left != null) {
                        q.addFirst(cur.left);
                    }
                }
            }
            res.add(vals);
            level++;
        }
        return res;
    }
}
