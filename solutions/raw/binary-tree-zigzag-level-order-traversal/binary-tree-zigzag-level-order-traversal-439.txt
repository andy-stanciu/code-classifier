/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public void zigzag(TreeNode root, int level) {
        if (root == null)
            return;
        if (level > ans.size()) {
            ArrayList<Integer> element = new ArrayList<>();
            element.add(root.val);
            ans.add(element);
        } else {
            List<Integer> element = ans.get(level - 1);
            if (level % 2 == 0) {
                element.addFirst(root.val);
            } else {
                element.addLast(root.val);
            }
        }
        zigzag(root.left, level + 1);
        zigzag(root.right, level + 1);
    }

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        zigzag(root, 1);
        return ans;
    }
}
