/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int level = 0;

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList();
        helper(root, 0, list);
        return list;
    }

    public void helper(TreeNode root, int currLevel, List<List<Integer>> list) {
        if (root == null)
            return;
        if (level == currLevel) {
            List<Integer> newList = new ArrayList();
            newList.add(root.val);
            list.add(newList);
            level += 1;
        } else {
            if (currLevel % 2 == 1) {
                list.get(currLevel).add(0, root.val);
            } else {
                list.get(currLevel).add(root.val);
            }
        }
        helper(root.left, currLevel + 1, list);
        helper(root.right, currLevel + 1, list);
        return;
    }
}
