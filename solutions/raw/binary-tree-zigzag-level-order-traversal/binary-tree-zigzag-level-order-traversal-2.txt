/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> zigzagTraversal;

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        zigzagTraversal = new ArrayList<>();
        zigzagLevelOrder(root, 0);
        return zigzagTraversal;
    }

    private void zigzagLevelOrder(TreeNode root, int h) {
        if (root == null)
            return;
        if (zigzagTraversal.size() - 1 < h) {
            zigzagTraversal.add(new LinkedList<>());
        }
        zigzagLevelOrder(root.left, h + 1);
        if (h % 2 == 0) {
            zigzagTraversal.get(h).add(root.val);
        } else {
            zigzagTraversal.get(h).add(0, root.val);
        }
        zigzagLevelOrder(root.right, h + 1);
    }
}
