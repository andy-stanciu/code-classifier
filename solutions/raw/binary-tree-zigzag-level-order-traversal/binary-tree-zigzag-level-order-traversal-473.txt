/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if (root == null)
            return List.of();
        List<List<Integer>> result = new ArrayList<>();
        zigzagLevelOrderRec(root, 0, result);
        return result;
    }

    private void zigzagLevelOrderRec(TreeNode root, int level, List<List<Integer>> acc) {
        if (root == null)
            return;
        if (level == acc.size()) {
            acc.add(new LinkedList<>());
        }
        LinkedList<Integer> list = (LinkedList<Integer>) acc.get(level);
        if (level % 2 == 0) {
            list.addLast(root.val);
        } else {
            list.addFirst(root.val);
        }
        zigzagLevelOrderRec(root.left, level + 1, acc);
        zigzagLevelOrderRec(root.right, level + 1, acc);
    }
}
