/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> arr = new LinkedList();
        arr.add(root);
        boolean f = false;
        List<List<Integer>> tot = new ArrayList<>();
        while (!arr.isEmpty()) {
            int n = arr.size();
            List<Integer> arr1 = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                TreeNode temp = arr.poll();
                if (temp != null) {
                    arr1.add(temp.val);
                    if (temp.left != null) {
                        arr.add(temp.left);
                    }
                    if (temp.right != null) {
                        arr.add(temp.right);
                    }
                } else {
                    return tot;
                }
            }
            if (f) {
                for (int i = 0, j = arr1.size() - 1; i < j; i++, j--) {
                    int tem = arr1.get(i);
                    arr1.set(i, arr1.get(j));
                    arr1.set(j, tem);
                }
            }
            tot.add(arr1);
            f = !f;
        }
        return tot;
    }
}
