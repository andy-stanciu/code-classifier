/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> arr = new ArrayList<>();
        if (root == null)
            return arr;
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        TreeNode node;
        int level = 0;
        while (!q.isEmpty()) {
            List<Integer> a = new ArrayList<>();
            int size = q.size();
            for (int i = 0; i < size; i++) {
                node = q.poll();
                a.add(node.val);
                if (node.left != null)
                    q.offer(node.left);
                if (node.right != null)
                    q.offer(node.right);
            }
            if (level % 2 == 0)
                arr.add(a);
            else {
                Collections.reverse(a);
                arr.add(a);
            }
            level++;
        }
        return arr;
    }
}
