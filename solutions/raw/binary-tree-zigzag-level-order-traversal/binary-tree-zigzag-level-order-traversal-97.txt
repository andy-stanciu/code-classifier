/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new LinkedList<>();
        if (root == null) {
            return list;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        int lvl = 0;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> list1 = new LinkedList<>();
            while (size > 0) {
                TreeNode node = q.poll();
                if (lvl % 2 == 0) {
                    list1.add(node.val);
                } else {
                    list1.addFirst(node.val);
                }
                if (node.left != null)
                    q.offer(node.left);
                if (node.right != null)
                    q.offer(node.right);
                size--;
            }
            list.add(list1);
            lvl++;
        }
        return list;
    }
}
