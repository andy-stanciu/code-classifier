/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void fillRec(TreeNode root, List<List<Integer>> list, int depth) {
        if (root == null)
            return;
        if (list.size() == depth) {
            list.add(new ArrayList<Integer>());
        }
        if (depth % 2 == 1) {
            list.get(depth).add(0, root.val);
        } else {
            list.get(depth).add(root.val);
        }
        fillRec(root.left, list, depth + 1);
        fillRec(root.right, list, depth + 1);
    }

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        fillRec(root, list, 0);
        return list;
    }
}
