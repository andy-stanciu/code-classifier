/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if (root == null) {
            return new ArrayList<>();
        }
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> st = new LinkedList<>();
        st.add(root);
        int curr = 1;
        while (st.size() > 0) {
            int till = st.size();
            //System.out.println(st.size());
            List<Integer> op = new ArrayList<>();
            for (int i = 0; i < till; i++) {
                TreeNode tree = st.poll();
                if (tree != null) {
                    //System.out.println("Tree os val "+tree.val);
                    op.add(tree.val);
                    if (tree.left != null)
                        st.add(tree.left);
                    if (tree.right != null)
                        st.add(tree.right);
                }
            }
            if (curr % 2 == 0) {
                Collections.reverse(op);
                ans.add(op);
            } else {
                ans.add(op);
            }
            curr++;
        }
        return ans;
    }
}
