/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        return build(root);
    }

    public List<List<Integer>> build(TreeNode root) {
        if (root == null)
            return List.of();
        var res = new ArrayList<List<Integer>>();
        build(res, root, 0);
        return res;
    }

    private void build(List<List<Integer>> res, TreeNode cur, int level) {
        if (cur == null)
            return;
        if (res.size() <= level)
            res.add(new ArrayList<>());
        if (level % 2 == 0)
            res.get(level).add(cur.val);
        else
            res.get(level).add(0, cur.val);
        build(res, cur.left, level + 1);
        build(res, cur.right, level + 1);
    }
}
