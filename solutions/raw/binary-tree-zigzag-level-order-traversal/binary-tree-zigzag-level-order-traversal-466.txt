/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        ArrayList<List<Integer>> ans = new ArrayList<>();
        if (root == null)
            return ans;
        q.add(root);
        int level = 0;
        while (q.size() > 0) {
            level++;
            int size = q.size();
            ArrayList<Integer> sublist = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                if (q.peek().left != null)
                    q.add(q.peek().left);
                if (q.peek().right != null)
                    q.add(q.peek().right);
                sublist.add(q.poll().val);
            }
            if (level % 2 == 0) {
                Collections.reverse(sublist);
                ans.add(sublist);
            } else
                ans.add(sublist);
        }
        return ans;
    }
}
