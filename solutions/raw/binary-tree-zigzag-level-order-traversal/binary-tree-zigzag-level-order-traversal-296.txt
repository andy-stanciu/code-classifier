class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if (root == null) {
            return new ArrayList<>();
        }
        List<List<Integer>> view = new ArrayList<>();
        Stack<TreeNode> s1 = new Stack<>();
        Stack<TreeNode> s2 = new Stack<>();
        s1.add(root);
        while (!s1.isEmpty() || !s2.isEmpty()) {
            while (!s1.isEmpty()) {
                int e = s1.size();
                List<Integer> al = new ArrayList<>();
                for (int i = 0; i < e; i++) {
                    TreeNode node = s1.pop();
                    al.add(node.val);
                    if (node.left != null) {
                        s2.add(node.left);
                    }
                    if (node.right != null) {
                        s2.add(node.right);
                    }
                }
                view.add(al);
            }
            while (!s2.isEmpty()) {
                int e = s2.size();
                List<Integer> al = new ArrayList<>();
                for (int i = 0; i < e; i++) {
                    TreeNode node = s2.pop();
                    al.add(node.val);
                    if (node.right != null) {
                        s1.add(node.right);
                    }
                    if (node.left != null) {
                        s1.add(node.left);
                    }
                }
                view.add(al);
            }
        }
        return view;
    }
}
