/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null)
            return list;
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.add(root);
        boolean reverse = false;
        while (!q.isEmpty()) {
            List<Integer> level = new ArrayList<Integer>();
            int range = q.size();
            for (int i = 0; i < range; i++) {
                TreeNode current = q.poll();
                if (reverse)
                    level.add(0, current.val);
                else
                    level.add(current.val);
                if (current.left != null)
                    q.add(current.left);
                if (current.right != null)
                    q.add(current.right);
            }
            list.add(level);
            reverse = !reverse;
        }
        return list;
    }
}
