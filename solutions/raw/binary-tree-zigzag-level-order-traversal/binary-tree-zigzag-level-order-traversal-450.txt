class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        List<List<Integer>> traversals = new ArrayList<>();
        int level = 2;
        if (null != root) {
            while (!queue.isEmpty()) {
                List<TreeNode> treeNodes = new ArrayList<>();
                List<Integer> nodeDataList = new ArrayList<>();
                while (!queue.isEmpty()) {
                    TreeNode latestNode = queue.poll();
                    nodeDataList.add(latestNode.val);
                    treeNodes.add(latestNode);
                }
                traversals.add(nodeDataList);
                Collections.reverse(treeNodes);
                for (TreeNode node : treeNodes) {
                    if (level % 2 == 0) {
                        if (null != node.right) {
                            queue.add(node.right);
                        }
                        if (null != node.left) {
                            queue.add(node.left);
                        }
                    } else {
                        if (null != node.left) {
                            queue.add(node.left);
                        }
                        if (null != node.right) {
                            queue.add(node.right);
                        }
                    }
                }
                level++;
            }
        }
        return traversals;
    }
}
