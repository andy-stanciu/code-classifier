/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ll = new ArrayList<>();
        if (root == null)
            return ll;
        int level = 0;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        Stack<Integer> s = new Stack<>();
        while (!q.isEmpty()) {
            List<Integer> l = new ArrayList<>();
            int n = q.size();
            for (int i = 0; i < n; i++) {
                TreeNode cur = q.poll();
                if (level % 2 == 1) {
                    s.push(cur.val);
                } else {
                    l.add(cur.val);
                }
                if (cur.left != null)
                    q.add(cur.left);
                if (cur.right != null)
                    q.add(cur.right);
                if (i == n - 1)
                    level++;
            }
            while (!s.isEmpty()) {
                l.add(s.pop());
            }
            ll.add(l);
        }
        return ll;
    }
}
