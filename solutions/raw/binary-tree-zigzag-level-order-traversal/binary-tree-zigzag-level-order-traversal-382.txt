/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    List<List<Integer>> ans;

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        ans = new ArrayList<>();
        recursion(root, 0);
        return ans;
    }

    private void recursion(TreeNode node, int level) {
        if (node == null)
            return;
        if (ans.size() <= level)
            ans.add(new ArrayList<>());
        if (level % 2 == 0)
            ans.get(level).add(node.val);
        else
            ans.get(level).add(0, node.val);
        recursion(node.left, level + 1);
        recursion(node.right, level + 1);
    }
}
