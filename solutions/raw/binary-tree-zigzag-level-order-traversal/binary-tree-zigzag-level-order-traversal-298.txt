/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void ZigZagLevelorder(TreeNode root, List<List<Integer>> listresult) {
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean a = false;
        while (!q.isEmpty()) {
            int sizep = q.size();
            ArrayList<Integer> list = new ArrayList<>();
            for (int i = 0; i < sizep; i++) {
                TreeNode curr = q.remove();
                list.add(curr.val);
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
            if (a) {
                a = false;
                Collections.reverse(list);
                listresult.add(list);
            } else {
                a = true;
                listresult.add(list);
            }
        }
    }

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null) {
            return list;
        }
        ZigZagLevelorder(root, list);
        return list;
    }
}
