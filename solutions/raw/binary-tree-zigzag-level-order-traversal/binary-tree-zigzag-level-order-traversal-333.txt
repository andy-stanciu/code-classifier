/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> l;

    Queue<TreeNode> q;

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        l = new ArrayList<>();
        q = new LinkedList<>();
        if (root == null)
            return l;
        q.add(root);
        bfs(root, true);
        return l;
    }

    void bfs(TreeNode root, boolean order) {
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> temp = new ArrayList<>();
            while (size != 0) {
                TreeNode n = q.poll();
                temp.add(n.val);
                if (n.left != null)
                    q.add(n.left);
                if (n.right != null)
                    q.add(n.right);
                size--;
            }
            if (order == true) {
                l.add(temp);
                order = false;
            } else {
                Collections.reverse(temp);
                l.add(temp);
                order = true;
            }
        }
    }
}
