class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        Queue<TreeNode> que = new LinkedList<>();
        boolean leftToRight = true;
        que.add(root);
        while (!que.isEmpty()) {
            int size = que.size();
            List<Integer> curr = new ArrayList<>(size);
            for (int i = 0; i < size; i++) {
                TreeNode node = que.poll();
                // Add node\'s value based on the traversal direction
                if (leftToRight) {
                    curr.add(node.val);
                } else {
                    // Insert at the beginning to reverse the order
                    curr.add(0, node.val);
                }
                // Add children to the queue
                if (node.left != null)
                    que.add(node.left);
                if (node.right != null)
                    que.add(node.right);
            }
            // Add current level to result
            result.add(curr);
            // Toggle the direction for the next level
            leftToRight = !leftToRight;
        }
        return result;
    }
}
