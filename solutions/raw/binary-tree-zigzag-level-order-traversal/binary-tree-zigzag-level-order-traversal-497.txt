/**
 * Definition for a binary tree TreeNode.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Queue<TreeNode> q1 = new ArrayDeque<>();
        q1.add(root);
        int count = 0;
        while (!q1.isEmpty()) {
            int levelsize = q1.size();
            List<Integer> currentlevel = new ArrayList<>(levelsize);
            for (int i = 0; i < levelsize; i++) {
                TreeNode current = q1.remove();
                currentlevel.add(current.val);
                if (current.left != null) {
                    q1.add(current.left);
                }
                if (current.right != null) {
                    q1.add(current.right);
                }
            }
            count++;
            if (count % 2 == 0) {
                List<Integer> revcurrentlevel = new ArrayList<>();
                for (int i = currentlevel.size() - 1; i >= 0; i--) {
                    revcurrentlevel.add(currentlevel.get(i));
                }
                System.out.println("yes");
                result.add(revcurrentlevel);
            } else {
                result.add(currentlevel);
            }
        }
        // yeh ek aur list maine banayi hain kyunki leetcode reverse list ki demand kar
        // raha tha
        return result;
    }
}
