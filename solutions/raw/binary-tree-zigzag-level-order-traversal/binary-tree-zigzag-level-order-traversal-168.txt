/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> list = new ArrayList<>();

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        createList(root, 0);
        for (int i = 0; i < list.size(); i++) {
            if (i % 2 != 0) {
                List<Integer> temp = list.get(i);
                int n = temp.size();
                for (int j = 0; j < n / 2; j++) {
                    int t = temp.get(j);
                    temp.set(j, temp.get(n - j - 1));
                    temp.set(n - j - 1, t);
                }
            }
        }
        return list;
    }

    private void createList(TreeNode root, int level) {
        if (root == null)
            return;
        if (list.size() < level + 1) {
            list.add(level, new ArrayList<Integer>());
        }
        list.get(level).add(root.val);
        createList(root.left, level + 1);
        createList(root.right, level + 1);
    }
}
