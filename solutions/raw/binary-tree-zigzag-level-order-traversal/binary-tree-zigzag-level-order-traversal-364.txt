/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int ans = 0;

    int level = 0;

    List<List<Integer>> al = new ArrayList<>();

    public void inorder(TreeNode root, int lvl) {
        if (root == null)
            return;
        if (al.size() <= lvl)
            al.add(lvl, new ArrayList<Integer>());
        if (lvl % 2 == 0)
            al.get(lvl).add(root.val);
        else
            al.get(lvl).add(0, root.val);
        inorder(root.left, lvl + 1);
        inorder(root.right, lvl + 1);
    }

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        inorder(root, 0);
        return al;
    }
}
