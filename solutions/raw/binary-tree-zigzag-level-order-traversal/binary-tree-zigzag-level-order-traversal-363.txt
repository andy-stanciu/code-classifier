class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> rs = new ArrayList<>();
        Queue<TreeNode> que = new LinkedList<>();
        boolean leftToRight = true;
        que.add(root);
        while (!que.isEmpty()) {
            int size = que.size();
            List<Integer> temp = new ArrayList<>(size + 1);
            for (int i = 0; i < size; i++) {
                TreeNode node = que.poll();
                if (node == null) {
                    return rs;
                }
                if (leftToRight)
                    temp.add(node.val);
                else
                    temp.add(0, node.val);
                if (node.left != null) {
                    que.offer(node.left);
                }
                if (node.right != null) {
                    que.offer(node.right);
                }
            }
            leftToRight = !leftToRight;
            rs.add(temp);
        }
        return rs;
    }
}
