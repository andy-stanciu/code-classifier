/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if (root == null)
            return new ArrayList<>();
        List<List<Integer>> res = new ArrayList<>();
        Deque<TreeNode> dq = new ArrayDeque<>();
        boolean leftToRight = true;
        dq.add(root);
        while (dq.size() != 0) {
            int size = dq.size();
            List<Integer> levelList = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode cur = null;
                if (leftToRight) {
                    cur = dq.removeFirst();
                    if (cur.left != null)
                        dq.addLast(cur.left);
                    if (cur.right != null)
                        dq.addLast(cur.right);
                } else {
                    cur = dq.removeLast();
                    if (cur.right != null)
                        dq.addFirst(cur.right);
                    if (cur.left != null)
                        dq.addFirst(cur.left);
                }
                levelList.add(cur.val);
            }
            res.add(levelList);
            leftToRight = !leftToRight;
        }
        return res;
    }
}
