/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> list = new ArrayList<>();
        if (root == null)
            return list;
        q.add(root);
        int index = 0;
        while (!q.isEmpty()) {
            List<Integer> ll = new LinkedList<>();
            index++;
            int len = q.size();
            for (int i = 0; i < len; i++) {
                TreeNode curr = q.poll();
                if (index % 2 != 0)
                    ll.add(curr.val);
                else
                    ll.addFirst(curr.val);
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
            list.add(ll);
        }
        return list;
    }
}
