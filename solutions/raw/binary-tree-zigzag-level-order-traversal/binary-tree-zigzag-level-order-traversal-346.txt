/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        Queue<TreeNode> nodeq = new LinkedList<TreeNode>();
        if (root == null)
            return res;
        nodeq.add(root);
        int level = 0;
        while (!nodeq.isEmpty()) {
            int size = nodeq.size();
            level++;
            LinkedList<Integer> row = new LinkedList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = nodeq.remove();
                if (level % 2 != 0)
                    row.add(node.val);
                else
                    row.addFirst(node.val);
                if (node.left != null)
                    nodeq.add(node.left);
                if (node.right != null)
                    nodeq.add(node.right);
            }
            res.add(row);
        }
        return res;
    }
}
