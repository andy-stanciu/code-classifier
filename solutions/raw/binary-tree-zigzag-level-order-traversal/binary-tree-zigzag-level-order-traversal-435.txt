/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        if (root == null)
            return res;
        helper(root, 0);
        return res;
    }

    void helper(TreeNode node, int i) {
        if (i == res.size()) {
            res.add(new LinkedList<Integer>());
        }
        if (i % 2 == 0) {
            res.get(i).add(node.val);
        } else {
            res.get(i).add(0, node.val);
        }
        if (node.left != null)
            helper(node.left, i + 1);
        if (node.right != null)
            helper(node.right, i + 1);
    }
}
