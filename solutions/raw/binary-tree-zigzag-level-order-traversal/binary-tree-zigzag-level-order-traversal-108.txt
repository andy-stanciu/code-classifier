class Solution {

    public int levels(TreeNode root) {
        if (root == null)
            return 0;
        return 1 + Math.max(levels(root.left), levels(root.right));
    }

    public void helper(TreeNode root, int level, int i, List<Integer> list, int j) {
        if (root == null)
            return;
        if (level == i)
            list.add(root.val);
        if (j % 2 == 0) {
            helper(root.left, level + 1, i, list, j);
            helper(root.right, level + 1, i, list, j);
        } else {
            helper(root.right, level + 1, i, list, j);
            helper(root.left, level + 1, i, list, j);
        }
    }

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        int n = levels(root);
        int j = 0;
        for (int i = 1; i <= n; i++) {
            List<Integer> list = new ArrayList<>();
            helper(root, 1, i, list, j++);
            ans.add(list);
        }
        return ans;
    }
}
