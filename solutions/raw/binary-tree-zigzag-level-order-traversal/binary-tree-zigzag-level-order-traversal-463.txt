/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        traverse(root, 0, res);
        return res;
    }

    public void traverse(TreeNode root, int cnt, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        if (cnt < res.size()) {
            if (cnt % 2 == 1) {
                res.get(cnt).add(0, root.val);
            } else {
                res.get(cnt).add(root.val);
            }
        } else {
            res.add(new ArrayList<>());
            res.get(res.size() - 1).add(root.val);
        }
        traverse(root.left, cnt + 1, res);
        traverse(root.right, cnt + 1, res);
    }
}
