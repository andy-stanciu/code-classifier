/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        var ans = new ArrayList<List<Integer>>();
        zigzag(ans, 0, true, root);
        return ans;
    }

    private void zigzag(ArrayList<List<Integer>> res, int level, boolean normal, TreeNode node) {
        if (node == null) {
            return;
        }
        if (res.size() < level + 1) {
            res.add(new LinkedList<>());
        }
        var currList = (LinkedList<Integer>) res.get(level);
        if (normal) {
            currList.addLast(node.val);
            zigzag(res, level + 1, false, node.left);
            zigzag(res, level + 1, false, node.right);
        } else {
            currList.addFirst(node.val);
            zigzag(res, level + 1, true, node.left);
            zigzag(res, level + 1, true, node.right);
        }
    }
}
