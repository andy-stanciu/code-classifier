/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        Queue<TreeNode> que = new LinkedList();
        que.add(root);
        int change = 0;
        while (!que.isEmpty()) {
            List<Integer> temp = new ArrayList<>();
            int x = que.size();
            for (int i = 0; i < x; i++) {
                TreeNode extra = que.remove();
                temp.add(extra.val);
                if (extra.left != null)
                    que.add(extra.left);
                if (extra.right != null)
                    que.add(extra.right);
            }
            if (change == 1) {
                Collections.reverse(temp);
                change = 0;
            } else
                change = 1;
            ans.add(temp);
        }
        return ans;
    }
}
