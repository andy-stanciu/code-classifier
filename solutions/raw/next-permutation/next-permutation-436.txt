class Solution {

    public void nextPermutation(int[] nums) {
        int index = -1;
        int n = nums.length;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        // If no such element is found, reverse the array
        if (index == -1) {
            reverse(nums, 0, n - 1);
            return;
        }
        // Find the smallest element to the right of index that is greater than nums[index]
        for (int j = n - 1; j >= index; j--) {
            if (nums[index] < nums[j]) {
                // Swap nums[index] and nums[j]
                int temp = nums[index];
                nums[index] = nums[j];
                nums[j] = temp;
                break;
            }
        }
        // Reverse the elements to the right of index
        reverse(nums, index + 1, n - 1);
    }

    private void reverse(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}
