class Solution {

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int i = n - 2;
        int pos = -1;
        if (n > 1)
            while (i >= 0) {
                if (nums[i] < nums[i + 1]) {
                    pos = i;
                    break;
                }
                i--;
            }
        if (pos != -1)
            for (int j = n - 1; j > pos; j--) {
                if (nums[pos] < nums[j]) {
                    //swap
                    int temp = nums[pos];
                    nums[pos] = nums[j];
                    nums[j] = temp;
                    break;
                }
            }
        //arrange arr[pos+1] to arr[n-1] in ascending order
        int start = pos + 1;
        /*if the array is like 5 4 3 2 1..
		then the value of \'pos\' has been 0 till now... 
		the next lexicographic permutation to this will be 1 2 3 4 5 which is the reverse of the descending array... 
		start=(-1)+1 here so start = 0...
		so we are basically reversing the array from start to end... which was desired..
		therefore we chose to initialize pos with \'-1\' */
        int end = n - 1;
        while (start <= end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}
