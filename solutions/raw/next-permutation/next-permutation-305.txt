class Solution {

    public void nextPermutation(int[] nums) {
        int dipIndex = -1;
        int nextLargerIndex = -1;
        int n = nums.length;
        if (n == 1) {
            return;
        }
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                dipIndex = i;
                break;
            }
        }
        if (dipIndex == -1) {
            reverse(nums, dipIndex + 1);
        } else {
            for (int i = n - 1; i >= 0; i--) {
                if (nums[i] > nums[dipIndex]) {
                    nextLargerIndex = i;
                    break;
                }
            }
            swap(nums, dipIndex, nextLargerIndex);
            reverse(nums, dipIndex + 1);
        }
    }

    public void swap(int[] nums, int ind1, int ind2) {
        int temp = nums[ind1];
        nums[ind1] = nums[ind2];
        nums[ind2] = temp;
    }

    public void reverse(int[] nums, int startIndex) {
        int i = startIndex;
        int j = nums.length - 1;
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
        }
    }
}
