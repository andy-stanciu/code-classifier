class Solution {

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int ind = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                ind = i;
                break;
            }
        }
        if (ind != -1) {
            for (int j = n - 1; j > ind; j--) {
                if (nums[j] > nums[ind]) {
                    swap(nums, ind, j);
                    break;
                }
            }
        }
        reversed(nums, ind + 1, n - 1);
        return;
    }

    public static void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    public static void reversed(int[] nums, int start, int end) {
        while (start < end) {
            swap(nums, start, end);
            start++;
            end--;
        }
        return;
    }
}
