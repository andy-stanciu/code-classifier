class Solution {

    public void nextPermutation(int[] nums) {
        int idx = -1;
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i] > nums[i - 1]) {
                idx = i - 1;
                break;
            }
        }
        if (idx != -1) {
            for (int i = nums.length - 1; i >= idx + 1; i--) {
                if (nums[i] > nums[idx]) {
                    swap(i, idx, nums);
                    break;
                }
            }
        }
        reverse(idx + 1, nums.length - 1, nums);
    }

    void reverse(int idx, int n, int[] nums) {
        while (idx < n) {
            swap(idx, n, nums);
            idx++;
            n--;
        }
    }

    void swap(int i, int j, int[] nums) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
