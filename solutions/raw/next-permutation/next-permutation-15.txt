class Solution {

    public void nextPermutation(int[] nums) {
        int swapInd = -1;
        int swapNo = -1;
        List<Integer> list = new ArrayList<>();
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i - 1] < nums[i]) {
                swapInd = i - 1;
                swapNo = nums[i - 1];
                break;
            }
        }
        if (swapInd != -1) {
            for (int i = swapInd + 1; i < nums.length; i++) {
                list.add(nums[i]);
            }
            Collections.sort(list);
            for (int i = 0; i < list.size(); i++) {
                if (list.get(i) > swapNo) {
                    nums[swapInd] = list.get(i);
                    list.set(i, swapNo);
                    break;
                }
            }
            int k = 0;
            for (int i = swapInd + 1; i < nums.length; i++) {
                nums[i] = list.get(k++);
            }
        } else {
            Arrays.sort(nums);
        }
    }
}
