class Solution {

    public void nextPermutation(int[] nums) {
        int l = nums.length - 1, r = nums.length - 1;
        // after this loop, l and r are 2 pointers
        // corresponding to the boundaries of the
        // sub-array.
        while (l > 0 && nums[l - 1] >= nums[l]) {
            l--;
        }
        // here we attempt to swap a suitable element
        // inside of the subarray with the one to the
        // left of it.
        if (l > 0) {
            int tmpR = r;
            while (nums[tmpR] <= nums[l - 1]) tmpR--;
            int tmp = nums[tmpR];
            nums[tmpR] = nums[l - 1];
            nums[l - 1] = tmp;
        }
        // Swap all elements in the sub-array.
        while (l <= r) {
            int tmp = nums[r];
            nums[r] = nums[l];
            nums[l] = tmp;
            r--;
            l++;
        }
    }
}
