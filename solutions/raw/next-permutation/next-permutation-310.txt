class Solution {

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        pq.add(nums[n - 1]);
        int i = n - 2;
        for (; i >= 0; i--) {
            if (nums[i] < nums[i + 1])
                break;
            else
                pq.add(nums[i]);
        }
        if (i == -1) {
            Arrays.sort(nums);
            return;
        } else {
            int temp = nums[i];
            int index = i;
            pq.add(nums[i]);
            i++;
            while (!pq.isEmpty()) {
                if (nums[index] == temp && pq.peek() > temp) {
                    nums[index] = pq.poll();
                } else {
                    nums[i] = pq.poll();
                    i++;
                }
            }
        }
    }
}
