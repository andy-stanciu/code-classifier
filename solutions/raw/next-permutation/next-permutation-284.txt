class Solution {

    static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    static void reverse(int[] arr, int i, int j) {
        while (i <= j) {
            swap(arr, i, j);
            i++;
            j--;
        }
    }

    public void nextPermutation(int[] arr) {
        int point = -1;
        for (int i = arr.length - 2; i >= 0; i--) {
            if (arr[i] < arr[i + 1]) {
                point = i;
                break;
            }
        }
        if (point == -1) {
            reverse(arr, 0, arr.length - 1);
        } else {
            for (int i = arr.length - 1; i >= point; i--) {
                if (arr[point] < arr[i]) {
                    swap(arr, point, i);
                    break;
                }
            }
            reverse(arr, point + 1, arr.length - 1);
        }
    }
}
