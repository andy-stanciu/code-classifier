class Solution {

    public void swap(int[] nums, int start, int end) {
        int temp = nums[start];
        nums[start] = nums[end];
        nums[end] = temp;
    }

    public void nextPermutation(int[] nums) {
        int n = nums.length, index = -1;
        if (n == 1)
            return;
        for (int i = n - 1; i > 0; i--) {
            if (nums[i] > nums[i - 1]) {
                index = i - 1;
                break;
            }
        }
        if (index != -1) {
            int j = n - 1;
            int greater_min_index = j;
            while (true) {
                if (nums[j] > nums[index]) {
                    greater_min_index = j;
                    break;
                }
                j--;
            }
            swap(nums, index, greater_min_index);
        }
        int a = index + 1;
        int b = n - 1;
        while (a < b) {
            swap(nums, a, b);
            a++;
            b--;
        }
    }
}
