class Solution {

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int index = -1;
        for (int i = n - 1; i > 0; i--) {
            if (nums[i - 1] < nums[i]) {
                index = i - 1;
                break;
            }
        }
        if (index != -1) {
            int swapi = index;
            for (int j = n - 1; j > index; j--) {
                if (nums[j] > nums[index]) {
                    swapi = j;
                    break;
                }
            }
            swap(nums, index, swapi);
        }
        reverse(nums, index + 1, n);
    }

    public static void reverse(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end - 1];
            nums[end - 1] = temp;
            start++;
            end--;
        }
    }

    public static void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
