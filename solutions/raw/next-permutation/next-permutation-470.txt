class Solution {

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int index = -1;
        // find the number which have next element greater.
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        // if the array is decreasing then index will not change
        if (index == -1) {
            reverse(nums, 0);
            return;
        }
        // find the number which is greater than index element but not greatest.
        for (int i = n - 1; i > index; i--) {
            if (nums[i] > nums[index]) {
                swap(nums, i, index);
                break;
            }
        }
        // sort(reverse) the remaining elements from index+1 to get rhe sorted half as we want lowest number possible.
        reverse(nums, index + 1);
    }

    void reverse(int[] nums, int index) {
        int start = index;
        int end = nums.length - 1;
        while (start < end) {
            swap(nums, start, end);
            start++;
            end--;
        }
    }

    void swap(int[] nums, int i1, int i2) {
        int temp = nums[i1];
        nums[i1] = nums[i2];
        nums[i2] = temp;
    }
}
