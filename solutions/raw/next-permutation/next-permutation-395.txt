class Solution {

    public void swap(int position, int[] nums) {
        for (int i = nums.length - 1; i >= 0; i--) {
            if (nums[i] > nums[position]) {
                int temp = nums[i];
                nums[i] = nums[position];
                nums[position] = temp;
                break;
            }
        }
    }

    public void reverse(int[] nums, int position) {
        int n = nums.length;
        for (int i = position, j = n - 1; i < j; i++, j--) {
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
        }
    }

    public void nextPermutation(int[] nums) {
        int index = -1, n = nums.length;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        if (index != -1) {
            swap(index, nums);
        }
        reverse(nums, index + 1);
    }
}
