class Solution {

    public static void reverse(int[] arr) {
        int i = 0;
        int j = arr.length - 1;
        while (i < j) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
    }

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int ind = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                ind = i;
                break;
            }
        }
        if (ind == -1) {
            reverse(nums);
            return;
        }
        // Step 2: Find the next greater element
        //         and swap it with arr[ind]:
        for (int i = n - 1; i > ind; i--) {
            if (nums[i] > nums[ind]) {
                int tmp = nums[i];
                nums[i] = nums[ind];
                nums[ind] = tmp;
                break;
            }
        }
        // Step 3: reverse the right half:
        for (int k = ind + 1; k < nums.length - 1; k++) {
            for (int j = k + 1; j < nums.length; j++) {
                if (nums[k] > nums[j]) {
                    int tmp = nums[k];
                    nums[k] = nums[j];
                    nums[j] = tmp;
                }
            }
        }
        return;
    }
}
