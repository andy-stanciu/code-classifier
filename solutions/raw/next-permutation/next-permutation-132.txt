class Solution {

    public void rev(int[] nums, int i, int j) {
        while (i < j) {
            int x = nums[i];
            nums[i] = nums[j];
            nums[j] = x;
            j--;
            i++;
        }
    }

    public void nextPermutation(int[] nums) {
        //if(nums==null || nums.length=1) return;
        int n = nums.length;
        int ind1 = 0, ind2 = 0;
        int q = 0;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                ind1 = i;
                q = 1;
                break;
            }
        }
        if (q == 1) {
            for (int i = n - 1; i >= 0; i--) {
                if (nums[i] > nums[ind1]) {
                    ind2 = i;
                    break;
                }
            }
            //swap
            int x = nums[ind1];
            nums[ind1] = nums[ind2];
            nums[ind2] = x;
            //reverse
            rev(nums, ind1 + 1, n - 1);
        }
        if (q == 0) {
            rev(nums, 0, n - 1);
        }
    }
}
