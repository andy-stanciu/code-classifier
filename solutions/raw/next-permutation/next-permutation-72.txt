class Solution {

    public void nextPermutation(int[] nums) {
        int index = -1;
        for (int i = nums.length - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        if (index == -1) {
            reverse(nums, 0, nums.length - 1);
            return;
        }
        int smallNumIndex = -1;
        int small = Integer.MAX_VALUE;
        for (int i = nums.length - 1; i >= index; i--) {
            if (nums[i] > nums[index] && nums[i] < small) {
                small = nums[i];
                smallNumIndex = i;
            }
        }
        swap(nums, index, smallNumIndex);
        reverse(nums, index + 1, nums.length - 1);
    }

    public void reverse(int[] arr, int left, int right) {
        while (left <= right) {
            swap(arr, left, right);
            left++;
            right--;
        }
    }

    public static void swap(int[] nums, int left, int right) {
        int tmp = nums[left];
        nums[left] = nums[right];
        nums[right] = tmp;
    }
}
