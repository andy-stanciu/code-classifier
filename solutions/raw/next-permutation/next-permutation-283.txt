class Solution {

    public void swap(int[] nums, int s, int e) {
        int temp = nums[s];
        nums[s] = nums[e];
        nums[e] = temp;
    }

    public void rev(int[] nums, int s, int e) {
        while (s <= e) {
            swap(nums, s, e);
            s++;
            e--;
        }
    }

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int ind = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                ind = i;
                break;
            }
        }
        if (ind == -1) {
            rev(nums, 0, n - 1);
            return;
        }
        for (int i = n - 1; i > ind; i--) {
            if (nums[ind] < nums[i]) {
                swap(nums, ind, i);
                break;
            }
        }
        rev(nums, ind + 1, n - 1);
    }
}
