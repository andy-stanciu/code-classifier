//  example 2 1 5 4 3 0 0
class Solution {

    public void nextPermutation(int[] nums) {
        int index = -1;
        int index2 = -1;
        // find break point i.e 2 1 (breakpoint) 5 4 3 0 0
        for (int i = nums.length - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        if (index == -1) {
            // if break point is at index 0 then reverse it eg 5 4 3 2 1 next permutation will be 1 2 3 4 5
            reverse(nums, 0);
        } else {
            // find just next greater then index // 3 is next greater number so swap it  like 2 3 / 5 4 1 0 0
            for (int i = nums.length - 1; i >= 0; i--) {
                if (nums[i] > nums[index]) {
                    index2 = i;
                    break;
                }
            }
            swap(nums, index, index2);
            reverse(nums, index + 1);
        }
    }

    // swap
    public void swap(int[] nums, int first, int sec) {
        int temp = nums[first];
        nums[first] = nums[sec];
        nums[sec] = temp;
    }

    public void reverse(int[] nums, int start) {
        int i = start;
        int j = nums.length - 1;
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
        }
    }
}
