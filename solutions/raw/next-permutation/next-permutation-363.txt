class Solution {

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        int ind = -1;
        int i;
        for (i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                ind = i;
                break;
            }
        }
        if (ind == -1) {
            reverse(nums, 0);
        } else {
            for (i = n - 1; i >= 0; i--) {
                if (nums[i] > nums[ind]) {
                    break;
                }
            }
            swap(nums, ind, i);
            reverse(nums, ind + 1);
        }
    }

    void swap(int[] a, int n, int m) {
        a[n] = a[n] ^ a[m];
        a[m] = a[n] ^ a[m];
        a[n] = a[n] ^ a[m];
    }

    void reverse(int[] b, int m) {
        int i, j;
        i = m;
        j = b.length - 1;
        while (i < j) {
            swap(b, i, j);
            j--;
            i++;
        }
    }
}
