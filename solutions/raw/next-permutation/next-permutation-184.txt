class Solution {

    //Function to reverse
    private void rev(int[] arr, int low, int high) {
        int i = low, j = high;
        while (i < j) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
    }

    public void nextPermutation(int[] nums) {
        int n = nums.length;
        ///break point
        int idx = -1;
        for (int i = n - 2; i >= 0; i--) {
            //from end
            if (nums[i] < nums[i + 1]) {
                //i < i+1
                idx = i;
                //idx = i
                break;
            }
        }
        //break point does not exist reverse the array
        if (idx == -1) {
            rev(nums, 0, n - 1);
            return;
        }
        //swap idx with the next greater element
        for (int i = n - 1; i > idx; i--) {
            if (nums[i] > nums[idx]) {
                int temp = nums[i];
                nums[i] = nums[idx];
                nums[idx] = temp;
                break;
            }
        }
        //Then reverse idx+1 to n-1
        rev(nums, idx + 1, n - 1);
        return;
    }
}
