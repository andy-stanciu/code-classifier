class Solution {

    public void nextPermutation(int[] nums) {
        if (nums.length <= 1) {
            return;
        }
        int left = nums.length - 2;
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i] <= nums[left]) {
                left--;
            } else {
                break;
            }
        }
        if (left >= 0) {
            int right = nums.length - 1;
            for (int i = right; i > left; i--) {
                if (nums[i] <= nums[left]) {
                    right--;
                } else {
                    break;
                }
            }
            swap(nums, left, right);
        }
        reverse(nums, left + 1);
    }

    public static void swap(int[] nums, int left, int right) {
        int temp = nums[left];
        nums[left] = nums[right];
        nums[right] = temp;
    }

    public static void reverse(int[] nums, int left) {
        for (int i = left, j = nums.length - 1; i < j; i++, j--) {
            swap(nums, i, j);
        }
    }
}
