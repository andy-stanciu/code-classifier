class Solution {

    public void find(int[] arr, List<List<Integer>> ans, boolean[] freq, ArrayList<Integer> ds) {
        if (ds.size() == arr.length) {
            if (!ans.contains(ds))
                ans.add(new ArrayList<>(ds));
            return;
        }
        for (int i = 0; i < arr.length; i++) {
            if (!freq[i]) {
                freq[i] = true;
                ds.add(arr[i]);
                find(arr, ans, freq, ds);
                ds.remove(ds.size() - 1);
                freq[i] = false;
            }
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        boolean[] freq = new boolean[nums.length];
        find(nums, ans, freq, new ArrayList<>());
        return ans;
    }
}
