class Solution {

    List<List<Integer>> res = new ArrayList<>();

    private void helper(int[] nums, boolean[] vis, List<Integer> list) {
        if (list.size() == nums.length && !res.contains(list)) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (vis[i]) {
                continue;
            }
            vis[i] = true;
            list.add(nums[i]);
            helper(nums, vis, list);
            vis[i] = false;
            list.remove(list.size() - 1);
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        int n = nums.length;
        Arrays.sort(nums);
        helper(nums, new boolean[n], new ArrayList<>());
        return res;
    }
}
