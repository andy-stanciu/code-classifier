class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<Integer> l = new ArrayList<>();
        Set<List<Integer>> res = new HashSet<>();
        int[] vis = new int[nums.length];
        per(nums, l, res, vis);
        return new ArrayList<>(res);
    }

    void per(int[] nums, List<Integer> l, Set<List<Integer>> res, int[] vis) {
        if (l.size() == nums.length) {
            res.add(new ArrayList<>(l));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (vis[i] == 0) {
                vis[i] = 1;
                l.add(nums[i]);
                per(nums, l, res, vis);
                l.remove(l.size() - 1);
                vis[i] = 0;
            }
        }
    }
}
