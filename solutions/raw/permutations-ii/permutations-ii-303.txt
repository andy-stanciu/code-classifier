class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        ArrayList<List<Integer>> ans = new ArrayList<>();
        permutationII(nums, ans, new ArrayList<>(), new HashSet<>());
        return ans;
    }

    public static void permutationII(int[] nums, ArrayList<List<Integer>> ans, ArrayList<Integer> list, HashSet<Integer> set) {
        if (list.size() == nums.length) {
            ArrayList<Integer> temp = new ArrayList<>(list);
            if (ans.contains(temp)) {
                return;
            }
            ans.add(temp);
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (set.contains(i))
                continue;
            set.add(i);
            list.add(nums[i]);
            permutationII(nums, ans, list, set);
            list.remove(list.size() - 1);
            set.remove(i);
        }
    }
}
