class Solution {

    private void comb(List<List<Integer>> list, int[] nums, int i) {
        if (i == nums.length) {
            ArrayList<Integer> arr = new ArrayList<Integer>();
            for (int j = 0; j < i; j++) arr.add(nums[j]);
            list.add(arr);
            return;
        }
        HashSet<Integer> set = new HashSet<>();
        for (int j = i, temp; j < nums.length; j++) {
            if (!set.contains(nums[j])) {
                set.add(nums[j]);
                temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
                comb(list, nums, i + 1);
                temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
            }
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        comb(list, nums, 0);
        return list;
    }
}
