class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public void helper(int[] arr, boolean[] val, List<Integer> temp) {
        if (temp.size() == arr.length) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int i = 0; i < arr.length; i++) {
            if (val[i])
                continue;
            if (i > 0 && !val[i - 1] && arr[i] == arr[i - 1])
                continue;
            val[i] = true;
            temp.add(arr[i]);
            helper(arr, val, temp);
            temp.remove(temp.size() - 1);
            val[i] = false;
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        boolean[] val = new boolean[nums.length];
        helper(nums, val, new ArrayList<>());
        return ans;
    }
}
