class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        ArrayList<Integer> nums_list = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length; i++) {
            nums_list.add(nums[i]);
        }
        ArrayList<Integer> list = new ArrayList<>();
        fun(nums_list, list, result);
        return result;
    }

    public void fun(ArrayList<Integer> nums_list, ArrayList<Integer> list, List<List<Integer>> result) {
        if (nums_list.size() == 0) {
            result.add(new ArrayList<Integer>(list));
            return;
        }
        for (int i = 0; i < nums_list.size(); i++) {
            if (i == 0 || (i != 0 && nums_list.get(i) != nums_list.get(i - 1))) {
                list.add(nums_list.get(i));
                int removed = nums_list.remove(i);
                fun(nums_list, list, result);
                list.remove(list.size() - 1);
                nums_list.add(i, removed);
            }
        }
    }
}
