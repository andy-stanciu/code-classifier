class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        helper(new boolean[nums.length], nums, new ArrayList<>());
        return ans;
    }

    private void helper(boolean[] vis, int[] nums, List<Integer> list) {
        if (list.size() == nums.length) {
            ans.add(new ArrayList<>(list));
        }
        for (int i = 0; i < nums.length; i++) {
            if (!vis[i]) {
                vis[i] = true;
                list.add(nums[i]);
                helper(vis, nums, list);
                list.remove(list.size() - 1);
                vis[i] = false;
                while (i + 1 < nums.length && nums[i] == nums[i + 1]) i++;
            }
        }
    }
}
