class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        helper(result, new ArrayList<>(), nums, new ArrayList<>());
        return result;
    }

    public void helper(List<List<Integer>> result, List<Integer> temp, int[] nums, List<Integer> index) {
        if (temp.size() == nums.length && !result.contains(temp)) {
            result.add(new ArrayList<>(temp));
        } else {
            for (int i = 0; i < nums.length; i++) {
                if (!index.contains(i)) {
                    index.add(i);
                    temp.add(nums[i]);
                    helper(result, temp, nums, index);
                    temp.remove(temp.size() - 1);
                    index.remove(index.size() - 1);
                }
            }
        }
    }
}
