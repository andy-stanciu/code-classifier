class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public void permutation(int n, int[] nums, List<Integer> li, boolean[] freq) {
        if (li.size() == n) {
            if (!result.contains(li)) {
                result.add(new ArrayList<>(li));
            }
            return;
        }
        for (int i = 0; i < n; i++) {
            if (freq[i] == false) {
                freq[i] = true;
                li.add(nums[i]);
                permutation(n, nums, li, freq);
                li.remove(li.size() - 1);
                freq[i] = false;
            }
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        permutation(nums.length, nums, new ArrayList<>(), new boolean[nums.length]);
        return result;
    }
}
