class Solution {

    public static void solve(int[] nums, ArrayList<Integer> ans, boolean[] vis, List<List<Integer>> result) {
        if (ans.size() == nums.length) {
            result.add(new ArrayList<>(ans));
            return;
        } else {
            for (int i = 0; i < nums.length; i++) {
                if (vis[i] || i > 0 && nums[i] == nums[i - 1] && !vis[i - 1])
                    continue;
                vis[i] = true;
                ans.add(nums[i]);
                solve(nums, ans, vis, result);
                vis[i] = false;
                ans.remove(ans.size() - 1);
            }
            return;
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(nums);
        boolean[] vis = new boolean[nums.length];
        solve(nums, new ArrayList<Integer>(), vis, result);
        return result;
    }
}
