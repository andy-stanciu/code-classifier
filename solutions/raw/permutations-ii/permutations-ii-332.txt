class Solution {

    List<List<Integer>> answer = new ArrayList<>();

    List<Integer> list = new ArrayList<>();

    public List<List<Integer>> permuteUnique(int[] arr) {
        Arrays.sort(arr);
        function(0, arr);
        return answer;
    }

    public void function(int index, int[] arr) {
        if (list.size() == arr.length) {
            List<Integer> temp = new ArrayList<>();
            for (int val : list) temp.add(val);
            answer.add(temp);
            return;
        }
        int val = 11;
        for (int i = index; i < arr.length; i++) {
            if (val != arr[i]) {
                val = arr[i];
                list.add(val);
                for (int j = i; j > index; j--) arr[j] = arr[j - 1];
                arr[index] = val;
                ;
                function(index + 1, arr);
                for (int j = index; j < i; j++) arr[j] = arr[j + 1];
                arr[i] = val;
                list.remove(list.size() - 1);
            }
        }
    }
}
