class Solution {

    public List<List<Integer>> permuteUnique(int[] arr) {
        ArrayList<Integer> ans = new ArrayList<>();
        boolean[] a = new boolean[arr.length];
        List<List<Integer>> res = new ArrayList<>();
        print1(res, arr, ans, a);
        return res;
    }

    public void print1(List<List<Integer>> res, int[] arr, ArrayList<Integer> ans, boolean[] a) {
        if (ans.size() == arr.length) {
            if (res.contains(ans))
                return;
            res.add(new ArrayList<>(ans));
            return;
        }
        for (int i = 0; i < arr.length; i++) {
            if (a[i] == true)
                continue;
            a[i] = true;
            ans.add(arr[i]);
            print1(res, arr, ans, a);
            a[i] = false;
            ans.remove(ans.size() - 1);
        }
    }
}
