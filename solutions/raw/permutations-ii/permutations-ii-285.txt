class Solution {

    public List<List<Integer>> permute(int[] nums) {
        return helper(nums, 0, new ArrayList<Integer>());
    }

    private List<List<Integer>> helper(int[] unProcessed, int index, List<Integer> processed) {
        List<List<Integer>> ans = new ArrayList<>();
        if (index >= unProcessed.length) {
            ans.add(processed);
            return ans;
        }
        for (int i = 0; i <= processed.size(); i++) {
            List<Integer> newProcessed = new ArrayList<>(processed);
            newProcessed.add(i, unProcessed[index]);
            ans.addAll(helper(unProcessed, index + 1, newProcessed));
        }
        return ans;
    }
}
