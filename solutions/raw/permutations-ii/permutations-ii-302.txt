class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        fun(nums, 0, ans);
        return ans;
    }

    public static void fun(int[] nums, int p, List<List<Integer>> ans) {
        if (p == nums.length) {
            List<Integer> ta = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                ta.add(nums[i]);
            }
            for (int i = 0; i < ans.size(); i++) {
                if (ta.equals(ans.get(i))) {
                    return;
                }
            }
            ans.add(ta);
            return;
        }
        for (int i = p; i < nums.length; i++) {
            swap(nums, p, i);
            fun(nums, p + 1, ans);
            swap(nums, i, p);
        }
    }

    public static void swap(int[] nums, int a, int b) {
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }
}
