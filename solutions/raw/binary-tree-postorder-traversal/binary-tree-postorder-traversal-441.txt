/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void postorder(TreeNode root, List<Integer> arr) {
        if (root == null)
            return;
        postorder(root.left, arr);
        postorder(root.right, arr);
        arr.add(root.val);
    }

    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> arr = new ArrayList<>();
        // Iterative:
        // Stack<TreeNode> st1=new Stack<>();
        // Stack<TreeNode> st2=new Stack<>();
        // if(root==null)return arr;
        // st1.push(root);
        // while(!st1.isEmpty()){
        //     root=st1.pop();
        //     st2.add(root);
        //     if(root.left!=null)st1.push(root.left);
        //     if(root.right!=null)st1.push(root.right);
        // }
        // while(!st2.isEmpty()){
        //     arr.add(st2.pop().val);
        // }
        postorder(root, arr);
        return arr;
    }
}
