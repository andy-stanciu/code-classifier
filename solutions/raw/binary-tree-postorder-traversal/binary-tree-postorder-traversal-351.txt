class Solution {

    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Stack<TreeNode> main = new Stack<>();
        Stack<TreeNode> postorderValReversed = new Stack<>();
        main.push(root);
        while (!main.isEmpty()) {
            TreeNode node = main.pop();
            postorderValReversed.push(node);
            if (node.left != null) {
                main.push(node.left);
            }
            if (node.right != null) {
                main.push(node.right);
            }
        }
        while (!postorderValReversed.isEmpty()) {
            result.add(postorderValReversed.pop().val);
        }
        return result;
    }
}
