/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> resultList = new ArrayList<>();
        processNode(root, resultList);
        return resultList;
    }

    private static void processNode(TreeNode node, List<Integer> resultList) {
        if (node == null) {
            return;
        }
        if (node.left != null) {
            processNode(node.left, resultList);
        }
        if (node.right != null) {
            processNode(node.right, resultList);
        }
        resultList.add(node.val);
    }
}
