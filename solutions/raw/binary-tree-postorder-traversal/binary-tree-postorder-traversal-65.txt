/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> postorderTraversal(TreeNode root) {
        ArrayList<Integer> list1 = new ArrayList<>();
        if (root == null) {
            return list1;
        }
        return postorder(root, list1);
    }

    public List<Integer> postorder(TreeNode root, ArrayList<Integer> list1) {
        if (root == null) {
            return null;
        }
        postorder(root.left, list1);
        postorder(root.right, list1);
        list1.add(root.val);
        return list1;
    }
}
