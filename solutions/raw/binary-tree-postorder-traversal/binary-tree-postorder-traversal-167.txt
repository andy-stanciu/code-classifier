/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    /*
Runtime: 0 ms, faster than 100.00% of Java online submissions for Binary Tree Postorder Traversal.
Memory Usage: 41.6 MB, less than 52.21% of Java online submissions for Binary Tree Postorder Traversal.
*/
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<Integer>();
        if (root == null) {
            return result;
        }
        helperMethod(result, root);
        return result;
    }

    public void helperMethod(List<Integer> result, TreeNode root) {
        if (root == null)
            return;
        if (root.left != null)
            helperMethod(result, root.left);
        if (root.right != null)
            helperMethod(result, root.right);
        result.add(root.val);
    }
}
