// Definition for a binary tree node.
public class TreeNode {

    int val;

    TreeNode left;

    TreeNode right;

    TreeNode() {
    }

    TreeNode(int val) {
        this.val = val;
    }

    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

class Solution {

    // Preorder Traversal
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        traversePreorder(root, result);
        return result;
    }

    private void traversePreorder(TreeNode node, List<Integer> result) {
        if (node == null) {
            return;
        }
        result.add(node.val);
        traversePreorder(node.left, result);
        traversePreorder(node.right, result);
    }

    // Postorder Traversal
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        traversePostorder(root, result);
        return result;
    }

    private void traversePostorder(TreeNode node, List<Integer> result) {
        if (node == null) {
            return;
        }
        traversePostorder(node.left, result);
        traversePostorder(node.right, result);
        // Add the root value after traversing left and right
        result.add(node.val);
    }
}
