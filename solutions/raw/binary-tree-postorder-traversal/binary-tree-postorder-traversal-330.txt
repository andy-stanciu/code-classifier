/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> postorderTraversal(TreeNode node) {
        List<Integer> output = new ArrayList<>();
        traverse(node, output);
        return output;
    }

    private void traverse(TreeNode node, List<Integer> output) {
        if (node == null) {
            return;
        }
        traverse(node.left, output);
        traverse(node.right, output);
        output.add(node.val);
    }

    public static void main(String[] args) {
        TreeNode root = new TreeNode(1);
        root.right = new TreeNode(2);
        root.right.left = new TreeNode(3);
        Solution sol = new Solution();
        List<Integer> result = sol.postorderTraversal(root);
        // Output: [3, 2, 1]
        System.out.println(result);
    }
}

class TreeNode {

    int val;

    TreeNode left;

    TreeNode right;

    TreeNode(int x) {
        val = x;
    }
}
