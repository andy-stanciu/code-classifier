class Solution {

    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> postOrder = new ArrayList<>();
        if (root == null)
            return postOrder;
        Stack<TreeNode> stack = new Stack<>();
        TreeNode cur = root;
        TreeNode lastVisited = null;
        while (cur != null || !stack.isEmpty()) {
            if (cur != null) {
                stack.push(cur);
                cur = cur.left;
            } else {
                TreeNode temp = stack.peek();
                if (temp.right != null && temp.right != lastVisited) {
                    cur = temp.right;
                } else {
                    stack.pop();
                    postOrder.add(temp.val);
                    lastVisited = temp;
                }
            }
        }
        return postOrder;
    }
}
