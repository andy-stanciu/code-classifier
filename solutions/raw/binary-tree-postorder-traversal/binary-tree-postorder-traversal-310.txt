/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> postorderTraversal(TreeNode root) {
        Stack<TreeNode> stack = new Stack<TreeNode>();
        List<Integer> result = new LinkedList();
        //stack.push(root);
        if (root == null) {
            return result;
        }
        Stack<TreeNode> queue = new Stack<>();
        queue.add(root);
        TreeNode temp = root;
        while (!queue.isEmpty()) {
            if (temp != null) {
                queue.push(temp);
                stack.push(temp);
                temp = temp.right;
            } else {
                temp = queue.pop();
                temp = temp.left;
            }
        }
        while (!stack.isEmpty()) {
            result.add(stack.pop().val);
        }
        return result;
    }
}
