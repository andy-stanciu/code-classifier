/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static List<Integer> postorderTraversal(TreeNode root) {
        if (root == null) {
            return new ArrayList<>();
        }
        return helper(root, new ArrayList<>(), new ArrayDeque<>());
    }

    public static List<Integer> helper(TreeNode root, List<Integer> nums, Deque<Integer> stack) {
        stack.addLast(root.val);
        if (root.left != null) {
            helper(root.left, nums, stack);
        }
        if (root.right != null) {
            helper(root.right, nums, stack);
        }
        nums.add(stack.pollLast());
        return nums;
    }
}
