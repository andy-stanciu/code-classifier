class Solution {

    public List<Integer> postorderTraversal(TreeNode root) {
        TreeNode current = root;
        ArrayList<Integer> list = new ArrayList<Integer>();
        Stack<TreeNode> st = new Stack<>();
        while (!st.isEmpty() || current != null) {
            if (current != null) {
                st.push(current);
                current = current.left;
            } else {
                TreeNode temp = st.peek().right;
                if (temp == null) {
                    temp = st.pop();
                    list.add(temp.val);
                    while (!st.isEmpty() && temp == st.peek().right) {
                        temp = st.pop();
                        list.add(temp.val);
                    }
                } else {
                    current = temp;
                }
            }
        }
        return list;
    }
}
