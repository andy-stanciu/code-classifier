/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        Stack<TreeNode> first = new Stack<>();
        Stack<TreeNode> second = new Stack<>();
        if (root == null)
            return ans;
        first.push(root);
        while (!first.isEmpty()) {
            root = first.pop();
            second.push(root);
            if (root.left != null)
                first.push(root.left);
            if (root.right != null)
                first.push(root.right);
        }
        while (!second.isEmpty()) {
            ans.add(second.pop().val);
        }
        return ans;
    }
}
