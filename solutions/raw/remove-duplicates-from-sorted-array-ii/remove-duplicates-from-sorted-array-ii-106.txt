/*the intitution is very simple just check and place the element 
  NOTE :- count is the actual index in which we are going to place values
  count is the correct index to store value
  
  1.intially count = 2 because we are allowed to have each element at most two time and the array is 
  sorted also , so two element of same type or of different type are allowed 
  
  example [0, 0,1] is allowed and [0, 1,1] is also allowed  so we can start count = 2
 
 if you are thinking of [0,0,0] here also count = 2 because in the below checks when we find the correct 
 element we will store it in the count index means last 0 will be replaced by the correct element 
  
  2.then we will run the loop which will start from 2 till the last index 
  
  3.if the current value(i) is not equal to the previos two value(count-2) that means we have another uniqe element 
  just store int in count index 
  
  4. if we find any duplicate element no worry because when we found the correct element we will be store 
  it in the count index by this all the duplicate element will be replaced by correct value
  
  
  */
class Solution {

    public int removeDuplicates(int[] nums) {
        if (nums.length < 3) {
            return nums.length;
        }
        int len = nums.length;
        //count is the actual index in which we will be storing value
        int count = 2;
        for (int i = 2; i < len; i++) {
            if (//that means unique value found so place it in correct index
            nums[i] != nums[count - 2]) {
                nums[count++] = nums[i];
            }
        }
        return count;
    }
}
