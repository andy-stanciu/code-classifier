class Solution {

    public static int removeDuplicates(int[] nums) {
        // Handle edge case for arrays with fewer than 2 elements
        if (nums.length < 3) {
            // No need to remove any duplicates, array is already valid
            return nums.length;
        }
        // Start with k = 2, assuming the first two elements are valid
        int k = 2;
        // Iterate through the array starting from the third element
        for (int i = 2; i < nums.length; i++) {
            // Only modify the array if the current element is not the same as the one at k - 2
            if (nums[i] != nums[k - 2]) {
                // Place the element at position k
                nums[k] = nums[i];
                // Move the pointer k forward
                k++;
            }
        }
        // k is the new length of the array with at most two duplicates
        return k;
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int[] ar = new int[n];
        for (int i = 0; i < ar.length; i++) {
            ar[i] = scan.nextInt();
        }
        int res = removeDuplicates(ar);
        for (int i = 0; i < res; i++) {
            System.out.print(ar[i]);
        }
    }
}
