class Solution {

    //two pointers
    //one fixed and another moving
    //if sliding-fixed less than or eq to 1 and both index having equal nos that means
    //we  need to keep that entry as duplicates are allowed twice
    //else we dont require that value as its repeating  more than twice .
    //we also have to maintain currInd to keep track of original arr index values
    //Also in the case if we move to next item which is not equal to fixed index item
    //that refers we need to reset that fixed ptr as array is sorted and comparsion
    //need to be done on same index values
    // UPVOTE if like it .
    public int removeDuplicates(int[] nums) {
        int currInd = 0;
        int fx = 0;
        int sl = 0;
        while (sl < nums.length) {
            if (nums[fx] != nums[sl])
                fx = sl;
            if (sl - fx <= 1 && nums[sl] == nums[fx])
                nums[currInd++] = nums[sl];
            sl++;
        }
        return currInd;
    }
}
