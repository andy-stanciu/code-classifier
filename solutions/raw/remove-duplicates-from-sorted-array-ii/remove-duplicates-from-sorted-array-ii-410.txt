class Solution {

    public int removeDuplicates(int[] nums) {
        if (nums.length <= 2) {
            return nums.length;
        }
        int j = 0;
        int i = 1;
        int count = 1;
        while (i < nums.length) {
            //if ith and jth element are not equal
            if (nums[j] != nums[i]) {
                count = 1;
                j++;
                nums[j] = nums[i];
                i++;
            } else //if ith and jth index are equal and count is less than 2
            if (nums[j] == nums[i] && count != 2) {
                j++;
                nums[j] = nums[i];
                i++;
                count++;
            } else //if ith and jth index are equal and count is greater than 2
            {
                count = 1;
                //increase ith index till we found ith and jth element to be non-equal
                while (i < nums.length && nums[j] == nums[i]) {
                    i++;
                }
                //edge case :
                //what if we reach the end of line in above while loop
                if (i == nums.length) {
                    break;
                }
                j++;
                nums[j] = nums[i];
                i++;
            }
        }
        return j + 1;
    }
}
