class Solution {

    /*
    Brute Force:
    Optimal: use the same solution as before but just check if not equal the one before it and the one before that
    Time: O()
    Space: O()
    */
    public int removeDuplicates(int[] nums) {
        if (nums.length < 3) {
            return nums.length;
        }
        int firstOpen = 2;
        for (int i = 2; i < nums.length; i++) {
            if (nums[i] != nums[firstOpen - 1] || nums[i] != nums[firstOpen - 2]) {
                nums[firstOpen++] = nums[i];
            }
        }
        return firstOpen;
    }
}
