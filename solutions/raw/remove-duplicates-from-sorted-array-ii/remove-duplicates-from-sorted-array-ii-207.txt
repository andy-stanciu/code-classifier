class Solution {

    public int removeDuplicates(int[] nums) {
        // Using LinkedHashMap to maintain the order of elements
        HashMap<Integer, Integer> mp = new LinkedHashMap<>();
        // Traverse the array and count the frequency of each element
        for (int i = 0; i < nums.length; i++) {
            mp.put(nums[i], mp.getOrDefault(nums[i], 0) + 1);
        }
        int i = 0;
        // Update the original array based on the frequency
        for (Map.Entry<Integer, Integer> e : mp.entrySet()) {
            int key = e.getKey();
            int count = e.getValue();
            // If the element appears twice or more, insert it twice
            if (count >= 2) {
                nums[i++] = key;
                nums[i++] = key;
            } else {
                // If it appears once, insert it once
                nums[i++] = key;
            }
        }
        // Return the new length of the array
        return i;
    }
}
