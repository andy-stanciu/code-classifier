class Solution {

    public int[][] dp;

    public int getway(int[][] arr, int i, int j) {
        if (i >= arr.length || j >= arr[0].length)
            return 0;
        if (arr[i][j] == 1)
            return dp[i][j] = 0;
        if (i == arr.length - 1 && j == arr[0].length - 1)
            return dp[i][j] = 1;
        if (dp[i][j] != -1)
            return dp[i][j];
        int right = getway(arr, i, j + 1);
        int down = getway(arr, i + 1, j);
        return dp[i][j] = right + down;
    }

    public int uniquePathsWithObstacles(int[][] grid) {
        dp = new int[grid.length + 1][grid[0].length + 1];
        for (int[] is : dp) Arrays.fill(is, -1);
        return getway(grid, 0, 0);
    }
}
