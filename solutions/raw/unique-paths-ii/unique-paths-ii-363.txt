class Solution {

    public int uniquePathsWithObstacles(int[][] grid) {
        if (grid[0][0] == 1)
            return 0;
        int[][] dp = new int[grid.length][grid[0].length];
        dp[0][0] = 1;
        for (int i = 0; i < grid.length; i++) {
            if (grid[i][0] == 1) {
                dp[i][0] = -1;
                break;
            } else
                dp[i][0] = 1;
        }
        for (int j = 0; j < grid[0].length; j++) {
            if (grid[0][j] == 1) {
                dp[0][j] = -1;
                break;
            } else
                dp[0][j] = 1;
        }
        for (int i = 1; i < grid.length; i++) {
            for (int j = 1; j < grid[0].length; j++) {
                if (grid[i][j] == 1)
                    dp[i][j] = -1;
                else {
                    if (dp[i - 1][j] == -1)
                        dp[i][j] = dp[i][j - 1];
                    else if (dp[i][j - 1] == -1)
                        dp[i][j] = dp[i - 1][j];
                    else
                        dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
                }
            }
        }
        return dp[grid.length - 1][grid[0].length - 1] == -1 ? 0 : dp[grid.length - 1][grid[0].length - 1];
    }
}
