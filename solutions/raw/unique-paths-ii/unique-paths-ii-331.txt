class Solution {

    public int uniquePathsWithObstacles(int[][] nums) {
        int r = nums.length;
        int c = nums[0].length;
        int[][] memo = new int[r][c];
        for (int[] i : memo) {
            Arrays.fill(i, -1);
        }
        return uniquePath(nums, r - 1, c - 1, 0, 0, memo);
    }

    private int uniquePath(int[][] nums, int row, int col, int r, int c, int[][] memo) {
        if (r > row || c > col || c < 0 || r < 0 || nums[r][c] == 1) {
            return 0;
        }
        if (r == row && c == col) {
            return 1;
        }
        if (memo[r][c] != -1)
            return memo[r][c];
        memo[r][c] = uniquePath(nums, row, col, r, c + 1, memo) + uniquePath(nums, row, col, r + 1, c, memo);
        return memo[r][c];
    }
}
