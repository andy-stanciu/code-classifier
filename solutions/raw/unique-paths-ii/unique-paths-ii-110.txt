class Solution {

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        m = obstacleGrid.length;
        n = obstacleGrid[0].length;
        paths = new Integer[m][n];
        return getUniquePaths(0, 0, obstacleGrid);
    }

    private int m;

    private int n;

    private Integer[][] paths;

    private int getUniquePaths(int x, int y, int[][] obstacleGrid) {
        if (x >= m || y >= n || obstacleGrid[x][y] == 1)
            return 0;
        else if (x == m - 1 && y == n - 1)
            return 1;
        else
            return paths[x][y] == null ? paths[x][y] = getUniquePaths(x + 1, y, obstacleGrid) + getUniquePaths(x, y + 1, obstacleGrid) : paths[x][y];
    }
}
