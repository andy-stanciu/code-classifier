class Solution {

    public int uniquePathsWithObstacles(int[][] m) {
        if (m[0][0] == 1 || m[m.length - 1][m[0].length - 1] == 1)
            return 0;
        int[][] dp = new int[m.length][m[0].length];
        for (int i = 0; i < m.length; i++) {
            if (m[i][0] == 0)
                dp[i][0] = 1;
            else
                break;
        }
        for (int i = 0; i < m[0].length; i++) {
            if (m[0][i] == 0)
                dp[0][i] = 1;
            else
                break;
        }
        for (int i = 1; i < m.length; i++) {
            for (int j = 1; j < m[0].length; j++) {
                if (m[i - 1][j] == 1 && m[i][j - 1] == 1)
                    dp[i][j] = 0;
                else if (m[i - 1][j] == 1)
                    dp[i][j] = dp[i][j - 1];
                else if (m[i][j - 1] == 1)
                    dp[i][j] = dp[i - 1][j];
                else
                    dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
            }
        }
        return dp[m.length - 1][m[0].length - 1];
    }
}
