class Solution {

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        int[][] arr = new int[m][n];
        return findPath(m - 1, n - 1, obstacleGrid, arr);
    }

    int findPath(int m, int n, int[][] obstacleGrid, int[][] arr) {
        if (m < 0 || n < 0)
            return 0;
        if (obstacleGrid[m][n] == 1)
            return 0;
        if (m == 0 && n == 0)
            return 1;
        if (arr[m][n] != 0)
            return arr[m][n];
        return arr[m][n] = findPath(m - 1, n, obstacleGrid, arr) + findPath(m, n - 1, obstacleGrid, arr);
    }
}
