class Solution {

    int[][] dp;

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if (obstacleGrid[0][0] == 1)
            return 0;
        dp = new int[obstacleGrid.length + 1][obstacleGrid[0].length + 1];
        for (int i = 0; i < obstacleGrid.length; i++) {
            Arrays.fill(dp[i], -1);
        }
        int res = moveRec(obstacleGrid, 0, 0);
        return res;
    }

    int moveRec(int[][] mat, int i, int j) {
        if (i == (mat.length - 1) && j == (mat[0].length - 1) && mat[i][j] != 1) {
            return 1;
        }
        if (i > mat.length || j > mat[0].length) {
            return 0;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        int res = 0;
        if (i < mat.length && j < mat[0].length && mat[i][j] != 1) {
            res = res + moveRec(mat, i + 1, j);
            if (i < mat.length && j < mat[0].length && mat[i][j] != 1)
                res = res + moveRec(mat, i, j + 1);
        }
        dp[i][j] = res;
        return res;
    }
}
