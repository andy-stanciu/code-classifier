class Solution {

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int rows = obstacleGrid.length, cols = obstacleGrid[0].length;
        if (obstacleGrid[0][0] == 1 || obstacleGrid[rows - 1][cols - 1] == 1) {
            return 0;
        }
        int[][] numPaths = new int[rows][cols];
        for (int i = 0; i < rows; i++) {
            if (obstacleGrid[i][0] == 0) {
                numPaths[i][0] = 1;
            } else {
                break;
            }
        }
        for (int j = 0; j < cols; j++) {
            if (obstacleGrid[0][j] == 0) {
                numPaths[0][j] = 1;
            } else {
                break;
            }
        }
        for (int i = 1; i < rows; i++) {
            for (int j = 1; j < cols; j++) {
                if (obstacleGrid[i][j] == 0) {
                    numPaths[i][j] = numPaths[i - 1][j] + numPaths[i][j - 1];
                }
            }
        }
        return numPaths[rows - 1][cols - 1];
    }
}
