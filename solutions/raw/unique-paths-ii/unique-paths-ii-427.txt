class Solution {

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        int[][] numPaths = new int[m][n];
        if (obstacleGrid[0][0] == 1)
            return 0;
        numPaths[0][0] = 1;
        for (int i = 1; i < m; i++) {
            if (obstacleGrid[i][0] == 1)
                break;
            numPaths[i][0] = 1;
        }
        for (int j = 1; j < n; j++) {
            if (obstacleGrid[0][j] == 1)
                break;
            numPaths[0][j] = 1;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (obstacleGrid[i][j] == 1)
                    numPaths[i][j] = 0;
                else
                    numPaths[i][j] = numPaths[i - 1][j] + numPaths[i][j - 1];
            }
        }
        return numPaths[m - 1][n - 1];
    }
}
