class Solution {

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        int[][] dp = new int[m + 1][n + 1];
        for (int i = m - 1; i >= 0; i--) {
            for (int j = n - 1; j >= 0; j--) {
                if (i == m - 1 && j == n - 1) {
                    if (obstacleGrid[i][j] == 1) {
                        return 0;
                    }
                    dp[i][j] = 1;
                    continue;
                }
                if (obstacleGrid[i][j] == 1) {
                    continue;
                }
                int ans1 = dp[i][j + 1];
                int ans2 = dp[i + 1][j];
                //  int ans3= dp[i+1][j+1];
                dp[i][j] = ans1 + ans2;
            }
        }
        return dp[0][0];
    }
}
