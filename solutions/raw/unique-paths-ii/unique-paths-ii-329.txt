class Solution {

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int[][] matrix = new int[obstacleGrid.length][obstacleGrid[0].length];
        for (int i = matrix.length - 1; i > -1; i--) {
            for (int j = matrix[0].length - 1; j > -1; j--) {
                if (obstacleGrid[i][j] != 1) {
                    updateMatrix(matrix, obstacleGrid, i, j);
                }
            }
        }
        return matrix[0][0];
    }

    private void updateMatrix(int[][] matrix, int[][] obstacleGrid, int i, int j) {
        if (i == matrix.length - 1 && j == matrix[0].length - 1) {
            matrix[i][j] = 1;
            return;
        } else if (i == matrix.length - 1) {
            matrix[i][j] = matrix[i][j + 1];
            return;
        } else if (j == matrix[0].length - 1) {
            matrix[i][j] = matrix[i + 1][j];
            return;
        } else {
            matrix[i][j] = matrix[i][j + 1] + matrix[i + 1][j];
        }
    }
}
