class Solution {

    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int n = obstacleGrid.length, m = obstacleGrid[0].length;
        if (obstacleGrid[n - 1][m - 1] == 1 || obstacleGrid[0][0] == 1)
            return 0;
        if (n == 1 || m == 1)
            return 1;
        for (int i = n - 1; i >= 0; i--) {
            for (int j = m - 1; j >= 0; j--) {
                if (i == n - 1 && j == m - 1)
                    obstacleGrid[n - 1][m - 1] = 1;
                else if (obstacleGrid[i][j] == 1)
                    obstacleGrid[i][j] = 0;
                else if (j == m - 1)
                    obstacleGrid[i][j] = obstacleGrid[i + 1][j];
                else if (i == n - 1)
                    obstacleGrid[i][j] = obstacleGrid[i][j + 1];
                else
                    obstacleGrid[i][j] = obstacleGrid[i + 1][j] + obstacleGrid[i][j + 1];
            }
        }
        return obstacleGrid[0][0];
    }
}
