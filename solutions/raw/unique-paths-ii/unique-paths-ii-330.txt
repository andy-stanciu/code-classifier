class Solution {

    public int uniquePathsWithObstacles(int[][] a) {
        int m = a.length;
        int n = a[0].length;
        if (a[0][0] == 1) {
            return 0;
        }
        if (m == 1 && n == 1 && a[0][0] == 1) {
            return 0;
        }
        if (m == 1 && n == 1 && a[0][0] == 0) {
            return 1;
        }
        if (m == 1 && n == 1) {
            return 1;
        }
        int[][] dp = new int[m][n];
        dp[0][0] = a[0][0];
        for (int i = 1; i < n; i++) {
            if (a[0][i] == 1) {
                break;
            }
            dp[0][i] = 1;
        }
        for (int i = 1; i < m; i++) {
            if (a[i][0] == 1) {
                break;
            }
            dp[i][0] = 1;
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (a[i][j] == 1) {
                    dp[i][j] = 0;
                    continue;
                }
                dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
            }
        }
        return dp[m - 1][n - 1];
    }
}
