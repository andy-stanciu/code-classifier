class Solution {

    public int maxSubArray(int[] nums) {
        int currSum = 0;
        int maxSum = Integer.MIN_VALUE;
        for (int x : nums) {
            currSum = currSum + x;
            // if currSum is actually greater then max, just update it.
            if (maxSum < currSum) {
                maxSum = currSum;
            }
            if (currSum < 0) {
                // since currentSum is negative, why to include in the answer subArray ? Since adding a negative value to a number will always decrease it. Thus, make currSum 0 and start connsidering a new subArray.
                currSum = 0;
            }
        }
        return maxSum;
    }
}
