class Solution {

    public int maxSubArray(int[] nums) {
        int largestSum = nums[0];
        // Iterate over nums and greedly pick starting position using sum.
        int sum = nums[0];
        for (int i = 1; i < nums.length; i++) {
            // If the previous sum not including number at i is negitive, we may
            // be able tio find a larger by starting at the number at i.
            // Using all the numbers that sum to a negitive number before i
            // would just reduce the psotential largest sum we can make by starting at
            // i.
            if (sum < 0) {
                sum = nums[i];
            } else {
                sum += nums[i];
            }
            // Record if this subarray is the largest or not.
            largestSum = Math.max(largestSum, sum);
        }
        return largestSum;
    }
}
