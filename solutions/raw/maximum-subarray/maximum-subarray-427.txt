class Solution {

    //Kadane\'s Algorithm
    public int maxSubArray(int[] nums) {
        // Initialize the current sum with zero and maximum sum with the first element
        int currentSum = 0;
        int maxSum = nums[0];
        /*Instead of nums[0]:-if we take maxSum=0 then maxSum updation will not occur,
                    if array has all elements negative value or single element array has negative value.*/
        for (int i = 0; i < nums.length; i++) {
            // Update current sum
            currentSum = currentSum + nums[i];
            // Update maxSum: if currentSum is greater than maxSum
            if (currentSum > maxSum) {
                maxSum = currentSum;
            }
            // If currentSum < 0: discard the currentSum calculated
            if (currentSum < 0) {
                currentSum = 0;
            }
        }
        return maxSum;
    }
}
