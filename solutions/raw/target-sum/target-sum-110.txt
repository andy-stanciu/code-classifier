class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for (int i = 0; i < nums.length; i++) {
            sum += nums[i];
        }
        if (Math.abs(target) > sum) {
            return 0;
        }
        if ((sum + target) % 2 != 0) {
            return 0;
        }
        if (target > sum) {
            return 0;
        }
        int n = nums.length;
        int sum2 = (sum + target) / 2;
        int[][] t = new int[n + 1][sum2 + 1];
        t[0][0] = 1;
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < sum2 + 1; j++) {
                if (nums[i - 1] <= j) {
                    t[i][j] = (t[i - 1][j - nums[i - 1]] + t[i - 1][j]);
                } else {
                    t[i][j] = t[i - 1][j];
                }
            }
        }
        return t[n][sum2];
    }
}
