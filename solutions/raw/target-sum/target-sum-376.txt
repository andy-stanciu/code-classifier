class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        //step 1
        int sum = 0;
        for (int num : nums) {
            sum += num;
        }
        if ((target > sum) || (sum - target) % 2 == 1) {
            return 0;
        }
        //step 2
        int targetSum = (sum - target) / 2;
        int n = nums.length;
        int[][] dp = new int[n + 1][targetSum + 1];
        //step 3
        dp[0][0] = 1;
        //step 4 + 5
        for (int k = 1; k <= n; k++) {
            for (int j = 0; j <= targetSum; j++) {
                if (j >= nums[k - 1]) {
                    dp[k][j] = dp[k - 1][j] + dp[k - 1][j - nums[k - 1]];
                } else {
                    dp[k][j] = dp[k - 1][j];
                }
            }
        }
        //step 6
        return dp[n][targetSum];
    }
}
