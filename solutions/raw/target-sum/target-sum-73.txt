class Solution {

    public int solve(int[] nums, int n, int tar) {
        if (n == 0) {
            if (tar == 0 && nums[0] == 0)
                return 2;
            // Check if the target is equal to the first element or 0
            if (tar == 0 || tar == nums[0])
                return 1;
            return 0;
        }
        if (tar < 0 || n < 0)
            return 0;
        int take = 0;
        if (nums[n] <= tar) {
            take = solve(nums, n - 1, tar - nums[n]);
        }
        int nottake = solve(nums, n - 1, tar);
        return take + nottake;
    }

    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for (int i = 0; i < nums.length; i++) {
            sum = sum + nums[i];
        }
        if (sum < target) {
            return 0;
        }
        if ((sum - target) % 2 == 1)
            return 0;
        int tar = (sum - target) / 2;
        return solve(nums, nums.length - 1, tar);
    }
}
