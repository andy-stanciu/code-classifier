class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int total = 0;
        for (int i : nums) {
            total += i;
        }
        if ((total - target) < 0 || (total - target) % 2 == 1)
            return 0;
        int tar = (total - target) / 2;
        int[] ans = new int[tar + 1];
        if (nums[0] == 0) {
            ans[0] = 2;
        } else {
            ans[0] = 1;
        }
        if (nums[0] != 0 && nums[0] <= tar) {
            ans[nums[0]] = 1;
        }
        int n = nums.length;
        for (int ind = 1; ind < n; ind++) {
            int[] curr = new int[tar + 1];
            curr[0] = 0;
            for (int t = 0; t <= tar; t++) {
                int Ntake = ans[t];
                int take = 0;
                if (nums[ind] <= t) {
                    take = ans[t - nums[ind]];
                }
                curr[t] = (take + Ntake);
            }
            ans = curr;
        }
        return ans[tar];
    }
}
