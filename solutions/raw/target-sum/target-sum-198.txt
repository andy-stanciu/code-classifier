class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        int n = nums.length;
        int d = target;
        for (int i = 0; i < n; i++) {
            sum += nums[i];
        }
        if ((sum - d) % 2 != 0 || sum < d)
            return 0;
        int S1 = (sum - d) / 2;
        int[][] dp = new int[n + 1][S1 + 1];
        dp[0][0] = 1;
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < S1 + 1; j++) {
                if (nums[i - 1] <= j) {
                    dp[i][j] = (dp[i - 1][j - nums[i - 1]] + dp[i - 1][j]);
                } else
                    dp[i][j] = dp[i - 1][j];
            }
        }
        return dp[n][S1];
    }
}
