class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int tsum = 0;
        for (int i : nums) {
            tsum += i;
        }
        int[][] dp = new int[nums.length][2 * tsum + 1];
        for (int i = 0; i < nums.length; i++) {
            Arrays.fill(dp[i], -1);
        }
        int i = target(dp, nums, target, 0, 0, tsum);
        return dp[0][tsum];
    }

    int target(int[][] dp, int[] nums, int target, int sum, int index, int tsum) {
        if (index == nums.length) {
            if (sum == target) {
                return 1;
            } else
                return 0;
        }
        if (dp[index][sum + tsum] != -1)
            return dp[index][sum + tsum];
        int plus = target(dp, nums, target, sum + nums[index], index + 1, tsum);
        int minus = target(dp, nums, target, sum - nums[index], index + 1, tsum);
        return dp[index][sum + tsum] = plus + minus;
    }
}
