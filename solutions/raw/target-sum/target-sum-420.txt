class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int count = findTargetSumCount(0, 0, target, nums, new HashMap<>());
        return count;
    }

    public int findTargetSumCount(int idx, int currentSum, int target, int[] nums, Map<String, Integer> cache) {
        if (idx == nums.length) {
            if (currentSum == target) {
                return 1;
            }
            return 0;
        }
        String key = idx + ":" + currentSum;
        if (cache.containsKey(key)) {
            return cache.get(key);
        }
        int sum = findTargetSumCount(idx + 1, currentSum + nums[idx], target, nums, cache);
        int diff = findTargetSumCount(idx + 1, currentSum - nums[idx], target, nums, cache);
        int count = sum + diff;
        cache.put(key, count);
        return count;
    }
}
