class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        return calculate(nums, 0, target);
    }

    private int calculate(int[] nums, int index, int target) {
        // Base case: If all elements are processed
        if (index == nums.length) {
            // If target is 0, return 1 (valid way)
            return target == 0 ? 1 : 0;
        }
        // Recursive cases: add or subtract nums[index] to/from target
        int ways = 0;
        // Add nums[index]
        ways += calculate(nums, index + 1, target - nums[index]);
        // Subtract nums[index]
        ways += calculate(nums, index + 1, target + nums[index]);
        return ways;
    }
}
