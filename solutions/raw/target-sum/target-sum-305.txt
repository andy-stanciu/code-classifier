class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int n = nums.length;
        int totalSum = 0;
        for (int num : nums) totalSum += num;
        int d = target;
        // most important condition
        if (totalSum - d < 0 || (totalSum - d) % 2 == 1)
            return 0;
        int Target = (totalSum - d) / 2;
        int[][] dp = new int[n + 1][Target + 1];
        dp[0][0] = 1;
        for (int i = 1; i <= n; i++) {
            for (int j = 0; j <= Target; j++) {
                if (nums[i - 1] <= j)
                    dp[i][j] = (dp[i - 1][j - nums[i - 1]] + dp[i - 1][j]);
                else
                    dp[i][j] = dp[i - 1][j];
            }
        }
        return dp[n][Target];
    }
}
