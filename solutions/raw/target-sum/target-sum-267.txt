class Solution {

    int moves = 0;

    public int findTargetSumWays(int[] nums, int target) {
        if (nums.length == 1 && target == nums[0])
            return 1;
        findSum(nums, target, 0, 0, nums.length);
        return moves;
    }

    private void findSum(int[] nums, int target, int lSum, int i, int j) {
        if (i >= j)
            return;
        if ((i == j - 1) && ((lSum + nums[i] == target) || (lSum - nums[i] == target))) {
            if (lSum + nums[i] == target)
                moves += 1;
            if (lSum - nums[i] == target)
                moves += 1;
            return;
        }
        findSum(nums, target, lSum - nums[i], i + 1, j);
        findSum(nums, target, lSum + nums[i], i + 1, j);
    }
}
