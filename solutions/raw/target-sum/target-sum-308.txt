class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int n = nums.length;
        int sum = 0;
        for (int num : nums) {
            sum += num;
        }
        int[][] dp = new int[n][sum + 1];
        if (nums[0] == 0)
            dp[0][0] = 2;
        else {
            dp[0][nums[0]] = 1;
            dp[0][0] = 1;
        }
        for (int i = 1; i < n; i++) {
            for (int j = 0; j <= sum; j++) {
                if (nums[i] <= j) {
                    dp[i][j] = dp[i - 1][j] + dp[i - 1][j - nums[i]];
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        int ans = 0;
        for (int i = 0; i <= sum; i++) {
            if (sum - i - i == target) {
                ans += dp[n - 1][i];
                // System.out.println(i+"  "+dp[n-1][i]);
            }
        }
        return ans;
    }
}
