class Solution {

    int result = 0;

    public int findTargetSumWays(int[] nums, int target) {
        // Integer[][] dp = new Integer[nums.length][2001];
        backtracking(nums, 0, target, 0);
        return result;
    }

    // currentSum == target
    // dp[index][target]++
    // backtracking(nums, index + 1, target, currentSum + nums[i], dp)
    // backtracking(nums, index + 1, target, currentSum - nums[i], dp)
    public void backtracking(int[] nums, int index, int target, int currentSum) {
        if (index == nums.length) {
            if (currentSum == target)
                result++;
            return;
        }
        backtracking(nums, index + 1, target, currentSum + nums[index]);
        backtracking(nums, index + 1, target, currentSum - nums[index]);
    }
}
