class Solution {

    private int helper(int[] nums, int target, int index, int sum, Integer[][] map) {
        if (index == nums.length) {
            if (sum == target) {
                return 1;
            } else {
                return 0;
            }
        }
        if (map[index][sum + 1000] != null)
            return map[index][sum + 1000];
        map[index][sum + 1000] = helper(nums, target, index + 1, sum + nums[index], map) + helper(nums, target, index + 1, sum - nums[index], map);
        return map[index][sum + 1000];
    }

    public int findTargetSumWays(int[] nums, int target) {
        Integer[][] map = new Integer[nums.length + 1][2001];
        return helper(nums, target, 0, 0, map);
    }
}
