class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        int n = nums.length;
        for (int i : nums) sum += i;
        if (sum < target)
            return 0;
        if ((sum + target) < 0 || ((sum + target) % 2) != 0)
            return 0;
        int ans = (sum + target) / 2;
        int[][] dp = new int[n + 1][ans + 1];
        dp[0][0] = 1;
        for (int i = 1; i <= n; i++) {
            for (int j = 0; j <= ans; j++) {
                if (nums[i - 1] <= j)
                    dp[i][j] = dp[i - 1][j - nums[i - 1]] + dp[i - 1][j];
                else
                    dp[i][j] = dp[i - 1][j];
            }
        }
        return dp[n][ans];
    }
}
