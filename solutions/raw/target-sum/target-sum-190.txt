class Solution {

    public int findTargetSumWays(int[] a, int d) {
        int sum = 0;
        int n = a.length;
        for (int i = 0; i < n; i++) {
            sum += a[i];
        }
        if ((sum - d) < 0 || (sum - d) % 2 != 0) {
            return 0;
        }
        int target = (sum - d) / 2;
        int[][] dp = new int[n + 1][target + 1];
        for (int i = 0; i < n + 1; i++) {
            dp[i][0] = 1;
        }
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < target + 1; j++) {
                if (j - a[i - 1] >= 0) {
                    dp[i][j] = (dp[i - 1][j] + dp[i - 1][j - a[i - 1]]) % 1000000007;
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[n][target];
    }
}
