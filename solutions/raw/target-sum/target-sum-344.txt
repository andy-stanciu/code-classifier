class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        return DP(0, target, nums, 0);
    }

    public int DP(int index, int target, int[] nums, int myAmount) {
        //no matter what we have to consider all the elements
        //even if we get the target in middle still check for all the elements
        //basically like a grid problem, we check after reaching the destination
        //if the target can be reached or not by assinging the + or - signs
        if (index == nums.length) {
            if (myAmount == target)
                return 1;
            return 0;
        }
        int positive = DP(index + 1, target, nums, myAmount + nums[index]);
        int negative = DP(index + 1, target, nums, myAmount - nums[index]);
        return positive + negative;
    }
}
