// Recursion + Memoization
class Solution {

    static Integer[][] dp;

    public int findTargetSumWays(int[] nums, int target) {
        int n = nums.length;
        dp = new Integer[n][2001];
        return helper(n - 1, target, 0, nums);
    }

    public static int helper(int n, int target, int sum, int[] nums) {
        // actually sum, target alag lene se cheezeee thodi aaur jyada clear dikhne
        // lagti hai.
        if (n < 0) {
            return sum == target ? 1 : 0;
        }
        int adjustedSum = sum + 1000;
        if (dp[n][adjustedSum] != null) {
            return dp[n][adjustedSum];
        }
        return dp[n][adjustedSum] = helper(n - 1, target, sum + nums[n], nums) + helper(n - 1, target, sum - nums[n], nums);
    }
}
