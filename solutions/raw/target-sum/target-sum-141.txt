class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int max = 0;
        for (int i = 0; i < nums.length; ++i) {
            max += nums[i];
        }
        if (max < Math.abs(target))
            return 0;
        int[][] dp = new int[nums.length][2 * max + 1];
        for (int i = 0; i < dp.length; ++i) {
            for (int j = 0; j < dp[0].length; ++j) {
                if (i == 0) {
                    if (nums[i] == j - max || -1 * nums[i] == j - max)
                        dp[i][j] = (nums[i] == 0 ? 2 : 1);
                    continue;
                }
                if (j - nums[i] >= 0)
                    dp[i][j] += dp[i - 1][j - nums[i]];
                if (j + nums[i] < dp[0].length)
                    dp[i][j] += dp[i - 1][j + nums[i]];
            }
        }
        return dp[nums.length - 1][target + max];
    }
}
