class Solution {

    private int helper(int[] nums, int index, int target, int[][] dp) {
        if (index < 0) {
            if (target == 2000)
                return 1;
            return 0;
        }
        if (dp[index][target] != -1)
            return dp[index][target];
        int add = helper(nums, index - 1, target + nums[index], dp);
        int sub = helper(nums, index - 1, target - nums[index], dp);
        return dp[index][target] = add + sub;
    }

    public int findTargetSumWays(int[] nums, int target) {
        int n = nums.length;
        target = target + 2000;
        int[][] dp = new int[n][4001];
        for (int[] arr : dp) Arrays.fill(arr, -1);
        return helper(nums, n - 1, target, dp);
    }
}
