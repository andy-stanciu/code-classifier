class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int sum = Arrays.stream(nums).sum();
        if (target > sum || target < -sum)
            return 0;
        int[][] dp = new int[nums.length][2 * sum + 1];
        dp[0][nums[0] + sum]++;
        dp[0][-nums[0] + sum]++;
        for (int i = 1; i < nums.length; i++) {
            for (int t = -sum; t <= sum; t++) {
                if (t + nums[i] + sum < 2 * sum + 1)
                    dp[i][t + sum] += dp[i - 1][t + nums[i] + sum];
                if (t - nums[i] + sum >= 0)
                    dp[i][t + sum] += dp[i - 1][t - nums[i] + sum];
            }
        }
        return dp[nums.length - 1][target + sum];
    }
}
