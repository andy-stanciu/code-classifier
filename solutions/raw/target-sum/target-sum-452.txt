public class Solution {

    int res;

    public int findTargetSumWays(int[] nums, int target) {
        dfs(0, target, 0, nums);
        return res;
    }

    public void dfs(int start, int target, int curr, int[] nums) {
        // curr mean the sum of current digits, start mean the steps of the recursion go
        //if steps==nums.length mean the recursion should be over, At the same time if curr==target the count of result should plus one
        if (curr == target && start == nums.length) {
            res++;
            return;
        }
        if (start == nums.length)
            return;
        // calculate +- at same time;
        dfs(start + 1, target, curr + nums[start], nums);
        dfs(start + 1, target, curr - nums[start], nums);
    }
}
