class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0;
        for (int num : nums) {
            sum += num;
        }
        if ((sum - target) < 0 || (sum - target) % 2 != 0) {
            return 0;
        }
        int a = (sum - target) / 2;
        int[][] dp = new int[nums.length][a + 1];
        if (nums[0] == 0) {
            dp[0][0] = 2;
        } else {
            dp[0][0] = 1;
        }
        if (nums[0] != 0 && nums[0] <= a) {
            dp[0][nums[0]] = 1;
        }
        for (int i = 1; i < nums.length; i++) {
            for (int j = 0; j < a + 1; j++) {
                int notTake = dp[i - 1][j];
                int take = 0;
                if (nums[i] <= j) {
                    take = dp[i - 1][j - nums[i]];
                }
                dp[i][j] = notTake + take;
            }
        }
        return dp[nums.length - 1][a];
    }
}
