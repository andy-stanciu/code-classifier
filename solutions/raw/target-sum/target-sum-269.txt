class Solution {

    public static int findTargetSumWays(int[] vals, int k) {
        Map<String, Integer> dp = new HashMap<>();
        int sum = Arrays.stream(vals).sum();
        dp.put(key(0, 0), 1);
        for (int i = 1; i <= vals.length; i++) {
            for (int j = -sum; j <= sum; j++) {
                dp.put(key(i, j), get(dp, i, j) + get(dp, i - 1, j + vals[i - 1]));
                dp.put(key(i, j), get(dp, i, j) + get(dp, i - 1, j - vals[i - 1]));
            }
        }
        return get(dp, vals.length, k);
    }

    static String key(int i, int j) {
        return i + "," + j;
    }

    static int get(Map<String, Integer> dp, int i, int j) {
        return dp.getOrDefault(key(i, j), 0);
    }
}
