// This is count of subset sum with given diff question in fancy language
class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        int n = nums.length;
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += nums[i];
        }
        if ((sum - target) % 2 == 1 || (target > sum))
            return 0;
        int sum1 = (sum + target) / 2;
        if (sum1 < 0)
            return 0;
        int[][] dp = new int[n + 1][sum1 + 1];
        for (int i = 0; i < n + 1; i++) {
            for (int j = 0; j < sum1 + 1; j++) {
                if (i == 0)
                    dp[i][j] = 0;
                if (j == 0)
                    dp[i][j] = 1;
            }
        }
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < sum1 + 1; j++) {
                if (j >= nums[i - 1]) {
                    dp[i][j] = dp[i - 1][j - nums[i - 1]] + dp[i - 1][j];
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[n][sum1];
    }
}
