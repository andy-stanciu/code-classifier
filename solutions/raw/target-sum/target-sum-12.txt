class Solution {

    public int findTargetSumWays(int[] nums, int target) {
        if (nums.length == 1) {
            if (nums[0] == target || nums[0] == -target)
                return 1;
            else
                return 0;
        }
        int sum = 0;
        for (int x : nums) {
            sum += x;
        }
        int tar = sum + target;
        if (tar < 0)
            return 0;
        if (tar % 2 != 0)
            return 0;
        tar = tar / 2;
        int[][] dp = new int[nums.length + 1][tar + 1];
        dp[0][0] = 1;
        for (int i = 1; i < nums.length + 1; i++) {
            for (int j = 0; j < tar + 1; j++) {
                if (nums[i - 1] <= j) {
                    dp[i][j] = dp[i - 1][j - nums[i - 1]] + dp[i - 1][j];
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[nums.length][tar];
    }
}
