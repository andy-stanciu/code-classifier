class Solution {

    int result = 0;

    int[][] memo;

    public int findTargetSumWays(int[] nums, int target) {
        result = target;
        memo = new int[nums.length + 1][2002];
        for (int i = 0; i <= nums.length; i++) {
            for (int j = 0; j < 2002; j++) {
                memo[i][j] = -1;
            }
        }
        return count(nums, nums.length, 0);
    }

    int count(int[] nums, int n, int sum) {
        if (n == 0) {
            if (sum == result) {
                return 1;
            } else {
                return 0;
            }
        }
        if (memo[n][1000 + sum] != -1) {
            return memo[n][1000 + sum];
        }
        return memo[n][1000 + sum] = count(nums, n - 1, sum + nums[n - 1]) + count(nums, n - 1, sum - nums[n - 1]);
    }
}
