class Solution {

    public int findTargetSumWays(int[] arr, int d) {
        int n = arr.length;
        int sum = 0;
        for (int i = 0; i < n; i++) sum += arr[i];
        int mod = (int) Math.pow(10, 9) + 7;
        if ((sum - d) % 2 != 0 || sum < d)
            return 0;
        int s = (sum - d) / 2;
        int[][] dp = new int[n + 1][s + 1];
        for (int i = 0; i < n + 1; i++) {
            for (int j = 0; j < s + 1; j++) {
                if (i == 0)
                    dp[i][j] = 0;
                if (j == 0)
                    dp[i][j] = 1;
            }
        }
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < s + 1; j++) {
                if (arr[i - 1] > j) {
                    dp[i][j] = dp[i - 1][j] % mod;
                } else {
                    dp[i][j] = (dp[i - 1][j - arr[i - 1]] % mod + dp[i - 1][j] % mod);
                }
            }
        }
        return dp[n][s] % mod;
    }
}
