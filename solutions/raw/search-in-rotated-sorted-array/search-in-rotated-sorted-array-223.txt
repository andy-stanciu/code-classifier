class Solution {

    public int search(int[] nums, int target) {
        int low = 0, high = nums.length - 1, mid;
        while (low <= high) {
            mid = low + ((high - low) / 2);
            if (target == nums[mid])
                return mid;
            boolean isLeftPartSorted = nums[low] <= nums[mid];
            if (isLeftPartSorted) {
                boolean isTargetInLeftPart = target >= nums[low] && target < nums[mid];
                if (isTargetInLeftPart) {
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            } else {
                boolean isTargetInRightPart = target > nums[mid] && target <= nums[high];
                if (isTargetInRightPart) {
                    low = mid + 1;
                } else {
                    high = mid - 1;
                }
            }
        }
        return -1;
    }
}
