class Solution {

    public int search(int[] nums, int target) {
        int n = nums.length;
        int s = 0, e = n - 1, m = -1;
        while (s <= e) {
            m = (s + e) / 2;
            if (nums[m] == target)
                return m;
            // since there are 2 sorted sub arrays within the array
            // if m lies in first sorted array I\'ll check condition for target to move my e or s pointer
            if (nums[s] <= nums[m]) {
                if (nums[s] <= target && target < nums[m])
                    e = m - 1;
                else
                    s = m + 1;
            } else // similarly as above if my m lies in 2 part of sorted array, I\'ll check for target condition & accordingly move my pointers.
            {
                if (nums[m] < target && target <= nums[e])
                    s = m + 1;
                else
                    e = m - 1;
            }
        }
        return -1;
    }
}
