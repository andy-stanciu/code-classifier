class Solution {

    public int search(int[] nums, int target) {
        int l = 0, r = nums.length - 1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] == target)
                return mid;
            if (nums[l] == nums[mid] && nums[mid] == nums[r]) {
                l++;
                r--;
                continue;
            }
            if (nums[l] <= nums[mid]) {
                //if left part is sorted
                if (nums[l] <= target && target <= nums[mid]) {
                    //target exists between left to mid
                    r = mid - 1;
                } else {
                    //target does not exist
                    l = mid + 1;
                }
            } else {
                //if right part is sorted
                if (nums[mid] <= target && target <= nums[r]) {
                    //target exists between mid to right
                    l = mid + 1;
                } else {
                    //target does not exist
                    r = mid - 1;
                }
            }
        }
        return -1;
    }
}
