class Solution {

    public int search(int[] nums, int target) {
        int n = nums.length;
        int low = 0;
        int high = n - 1;
        while (low <= high) {
            int mid = (low + high) / 2;
            //mid points to target
            if (nums[mid] == target) {
                return mid;
            }
            //if left part is sorted
            if (nums[low] <= nums[mid]) {
                if (nums[low] <= target && target <= nums[mid]) {
                    //element exist with above range
                    high = mid - 1;
                } else {
                    //element doesnt exist
                    low = mid + 1;
                }
            } else {
                //right part is sorted
                if (nums[mid] <= target && target <= nums[high]) {
                    //element exist with above range
                    low = mid + 1;
                } else {
                    //element doesnt exist
                    high = mid - 1;
                }
            }
        }
        //element not in the loop
        return -1;
    }
}
