class Solution {

    public int search(int[] nums, int target) {
        return find(nums, 0, nums.length - 1, target);
    }

    public int find(int[] nums, int left, int right, int target) {
        if ((right - left) == 1 || left == right) {
            if (nums[left] == target) {
                return left;
            } else if (nums[right] == target) {
                return right;
            } else {
                return -1;
            }
        }
        int mid = (left + right) / 2;
        if (nums[left] <= nums[mid]) {
            if (target >= nums[left] && target <= nums[mid]) {
                return find(nums, left, mid, target);
            } else {
                return find(nums, mid, right, target);
            }
        } else {
            if (target >= nums[left] || target <= nums[mid]) {
                return find(nums, left, mid, target);
            } else {
                return find(nums, mid, right, target);
            }
        }
    }
}
