class Solution {

    public int search(int[] nums, int target) {
        //search for index where the rotated sequence must start
        int index = -1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i - 1] > nums[i]) {
                index = i;
            }
        }
        //if the array is not rotated
        if (index == -1) {
            //then just find the target
            int res = Arrays.binarySearch(nums, target);
            return Math.max(res, -1);
        } else {
            //if the array is rotated
            //then search in both sorted sequences for target
            //and find its index (if it exists)
            int left = Arrays.binarySearch(nums, 0, index, target);
            int right = Arrays.binarySearch(nums, index, nums.length, target);
            if (left < 0 && right < 0) {
                return -1;
            } else
                return Math.max(left, right);
        }
    }
}
