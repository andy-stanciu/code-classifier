class Solution {

    public int search(int[] nums, int target) {
        // Fix: high should be nums.length - 1
        int low = 0, high = nums.length - 1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (nums[mid] == target) {
                return mid;
            }
            // Check if the left side is sorted
            if (nums[low] <= nums[mid]) {
                // If target is in the left sorted portion
                if (nums[low] <= target && target < nums[mid]) {
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            } else // If the right side is sorted
            {
                // If target is in the right sorted portion
                if (nums[mid] < target && target <= nums[high]) {
                    low = mid + 1;
                } else {
                    high = mid - 1;
                }
            }
        }
        // Fix: return -1 when the target is not found
        return -1;
    }
}
