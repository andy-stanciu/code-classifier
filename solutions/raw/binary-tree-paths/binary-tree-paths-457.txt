/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> paths;

    private void solve(String result, TreeNode root) {
        if (root == null)
            return;
        result = result + root.val;
        if (root.left == null && root.right == null) {
            paths.add(result);
            return;
        }
        solve(result + "->", root.left);
        solve(result + "->", root.right);
    }

    public List<String> binaryTreePaths(TreeNode root) {
        paths = new ArrayList<>();
        String ret = "";
        solve(ret, root);
        return paths;
    }
}
