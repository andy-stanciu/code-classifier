/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> li = new ArrayList<>();
        String s = "";
        rec(root, li, s);
        return li;
    }

    public void rec(TreeNode root, List<String> li, String path) {
        path += root.val;
        path += "->";
        if (root.left == null && root.right == null) {
            path = path.substring(0, path.length() - 2);
            li.add(path);
            return;
        }
        if (root.left != null)
            rec(root.left, li, path);
        if (root.right != null)
            rec(root.right, li, path);
    }
}
