/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<String> l = new LinkedList<>();

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> y = helper(root, "");
        return y;
    }

    private List<String> helper(TreeNode root, String s) {
        if (root == null) {
            return l;
        }
        if (root.left == null && root.right == null) {
            l.add(s + root.val);
            return l;
        }
        helper(root.left, s + root.val + "->");
        helper(root.right, s + root.val + "->");
        return l;
    }
}
