/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<>();
        if (root == null)
            return res;
        find(root, new StringBuilder(), res);
        return res;
    }

    void find(TreeNode root, StringBuilder cur, List<String> res) {
        if (root == null)
            return;
        int l = cur.length();
        cur.append(root.val);
        if (root.left == null && root.right == null) {
            res.add(cur.toString());
        }
        cur.append("->");
        find(root.left, cur, res);
        find(root.right, cur, res);
        cur.setLength(l);
    }
}
