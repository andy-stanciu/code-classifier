class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> lst = new ArrayList<>();
        binaryPath(root, lst, new ArrayList<>());
        return lst;
    }

    public void binaryPath(TreeNode root, List<String> lst, List<TreeNode> keeper) {
        if (root == null) {
            return;
        }
        keeper.add(root);
        if (root.left == null && root.right == null) {
            String s = "";
            if (keeper.size() == 1) {
                s += keeper.get(0).val;
            } else {
                for (int i = 0; i < keeper.size() - 1; i++) {
                    s += (keeper.get(i).val + "->");
                }
                //if(keeper.size()>1)
                s += keeper.get(keeper.size() - 1).val;
            }
            lst.add(s);
        }
        binaryPath(root.left, lst, keeper);
        binaryPath(root.right, lst, keeper);
        keeper.remove(keeper.size() - 1);
    }
}
