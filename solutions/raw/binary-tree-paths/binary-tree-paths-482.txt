class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        if (root == null)
            return new ArrayList<>();
        List<String> list = new ArrayList<>();
        StringBuilder sb = new StringBuilder("");
        return PathFinder(root, list, sb);
    }

    public List<String> PathFinder(TreeNode root, List<String> paths, StringBuilder sb) {
        sb.append(root.val);
        if (root.left == null && root.right == null) {
            // if it is a "Leaf Node" then add the path in the list.
            paths.add(sb.toString());
            return paths;
        } else
            // if it is not a leaf node then there must be a path which exists further so append the arrow "->".
            sb.append("->");
        if (root.left != null)
            PathFinder(root.left, paths, new StringBuilder(sb));
        if (root.right != null)
            PathFinder(root.right, paths, new StringBuilder(sb));
        return paths;
    }
}
