/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        if (root == null)
            return null;
        List<String> answer = new ArrayList<>();
        if (root.left == null && root.right == null) {
            String str = "" + root.val;
            answer.add(str);
            return answer;
        }
        List<String> left = binaryTreePaths(root.left);
        List<String> right = binaryTreePaths(root.right);
        if (left != null) {
            for (int i = 0; i < left.size(); i++) {
                String temp = left.get(i);
                temp = root.val + "->" + temp;
                answer.add(temp);
            }
        }
        if (right != null) {
            for (int i = 0; i < right.size(); i++) {
                String temp = right.get(i);
                temp = root.val + "->" + temp;
                answer.add(temp);
            }
        }
        return answer;
    }
}
