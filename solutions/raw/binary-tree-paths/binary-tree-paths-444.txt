/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<String> list = new ArrayList();

    public List<String> binaryTreePaths(TreeNode root) {
        helper(root, "", true);
        return list;
    }

    private void helper(TreeNode root, String s, boolean isRoot) {
        if (root == null)
            return;
        if (isRoot)
            s += root.val;
        else
            s += "->" + root.val;
        if (root.left == null && root.right == null) {
            list.add(s);
        } else {
            helper(root.left, s, false);
            helper(root.right, s, false);
        }
    }
}
