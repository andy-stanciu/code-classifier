/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> lst = new ArrayList<>();
        fun(root, lst, "");
        return lst;
    }

    public void fun(TreeNode r, List<String> lst, String s) {
        if (r == null) {
            return;
        }
        if (r.left == null && r.right == null) {
            s = s + "" + r.val;
            lst.add(s);
            return;
        }
        fun(r.left, lst, s + "" + r.val + "->");
        fun(r.right, lst, s + "" + r.val + "->");
    }
}
