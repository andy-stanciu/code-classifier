/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    void solve(TreeNode root, List<String> a, String temp) {
        if (root == null) {
            return;
        }
        temp += root.val;
        if (root.left != null || root.right != null) {
            temp += "->";
        }
        solve(root.left, a, temp);
        solve(root.right, a, temp);
        if (root.left == null && root.right == null) {
            a.add(temp);
        }
        return;
    }

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> a = new ArrayList<>();
        String temp = "";
        solve(root, a, temp);
        return a;
    }
}
