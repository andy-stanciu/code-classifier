/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        String path = "";
        List<String> ans = new ArrayList<String>();
        helper(root, path, ans);
        return ans;
    }

    public void helper(TreeNode root, String path, List<String> ans) {
        if (root == null)
            return;
        path += Integer.toString(root.val) + "->";
        if (root.left == null && root.right == null) {
            String str = path.substring(0, path.length() - 2);
            ans.add(str);
        }
        helper(root.left, path, ans);
        helper(root.right, path, ans);
        path = path.substring(0, path.length() - 1);
        return;
    }
}
