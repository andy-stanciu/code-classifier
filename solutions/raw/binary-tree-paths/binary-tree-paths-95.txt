/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private List<String> result = new ArrayList<>();

    public List<String> binaryTreePaths(TreeNode root) {
        StringBuilder path = new StringBuilder();
        addPaths(root, path);
        return result;
    }

    public void addPaths(TreeNode root, StringBuilder path) {
        if (root == null) {
            return;
        }
        int len = path.length();
        if (path.length() > 0) {
            path.append("->");
        }
        path.append(root.val);
        if (root.left == null && root.right == null) {
            result.add(path.toString());
        } else {
            addPaths(root.left, path);
            addPaths(root.right, path);
        }
        path.setLength(len);
    }
}
