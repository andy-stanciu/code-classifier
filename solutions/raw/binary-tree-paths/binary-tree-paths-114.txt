/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        if (root.left == null && root.right == null) {
            List<String> st = new ArrayList<>();
            st.add(root.val + "");
            return st;
        }
        List<String> res = new ArrayList<>();
        if (root.left != null) {
            List<String> left = binaryTreePaths(root.left);
            for (String s : left) {
                res.add(root.val + "->" + s);
            }
        }
        if (root.right != null) {
            List<String> right = binaryTreePaths(root.right);
            for (String s : right) {
                res.add(root.val + "->" + s);
            }
        }
        return res;
    }
}
