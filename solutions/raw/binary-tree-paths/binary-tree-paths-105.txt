/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> v = new ArrayList<>();
        if (root != null) {
            RootToLeafPath(root, "", v);
        }
        return v;
    }

    private void RootToLeafPath(TreeNode root, String path, List<String> arr) {
        if (root == null)
            return;
        path += root.val;
        if (root.left == null && root.right == null)
            arr.add(path);
        path += "->";
        RootToLeafPath(root.left, path, arr);
        RootToLeafPath(root.right, path, arr);
    }
}
