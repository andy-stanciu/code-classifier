/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void helper(TreeNode root, String str, List<String> res) {
        if (root.left == null && root.right == null) {
            str += root.val;
            res.add(str);
            return;
        }
        str += root.val + "->";
        if (root.left != null)
            helper(root.left, str, res);
        if (root.right != null)
            helper(root.right, str, res);
    }

    public List<String> binaryTreePaths(TreeNode root) {
        ArrayList<String> res = new ArrayList<String>();
        String str = "";
        helper(root, str, res);
        return res;
    }
}
