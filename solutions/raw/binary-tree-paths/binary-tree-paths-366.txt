/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<String> ans = new ArrayList();

    public void preOrder(TreeNode root, StringBuilder sb) {
        if (root != null) {
            sb.append(root.val);
            if (root.left == null && root.right == null) {
                ans.add(sb.toString());
            } else {
                sb.append("->");
                preOrder(root.left, new StringBuilder(sb));
                preOrder(root.right, new StringBuilder(sb));
            }
        }
    }

    public List<String> binaryTreePaths(TreeNode root) {
        preOrder(root, new StringBuilder());
        return ans;
    }
}
