/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<String> ans = new ArrayList<>();

    public List<String> binaryTreePaths(TreeNode root) {
        helper(root, "");
        return ans;
    }

    private void helper(TreeNode root, String s) {
        if (root.left == null && root.right == null) {
            s += root.val;
            ans.add(s);
            s = s.substring(0, s.length() - 1);
        }
        s += root.val + "->";
        if (root.left != null) {
            helper(root.left, s);
        }
        if (root.right != null) {
            helper(root.right, s);
        }
        s = s.substring(0, s.length() - 1);
    }
}
