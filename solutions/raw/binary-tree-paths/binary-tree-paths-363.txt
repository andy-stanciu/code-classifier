/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private List<String> result = new ArrayList<>();

    public List<String> binaryTreePaths(TreeNode root) {
        getPathRec(root, new StringBuilder());
        return result;
    }

    private void getPathRec(TreeNode next, StringBuilder sb) {
        sb.append(next.val);
        if (next.left == null && next.right == null) {
            result.add(sb.toString());
            return;
        }
        sb.append("->");
        if (next.left == null) {
            getPathRec(next.right, new StringBuilder(sb));
        } else if (next.right == null) {
            getPathRec(next.left, new StringBuilder(sb));
        } else {
            getPathRec(next.right, new StringBuilder(sb));
            getPathRec(next.left, new StringBuilder(sb));
        }
    }
}
