class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> paths = new ArrayList<>();
        if (root == null) {
            return paths;
        }
        dfs(root, "", paths);
        return paths;
    }

    private void dfs(TreeNode node, String path, List<String> paths) {
        if (node != null) {
            path += node.val;
            if (node.left == null && node.right == null) {
                // Reached a leaf, add the path
                paths.add(path);
            } else {
                // Add the arrow to continue the path
                path += "->";
                dfs(node.left, path, paths);
                dfs(node.right, path, paths);
            }
        }
    }
}
