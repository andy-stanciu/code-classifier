/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> l = new ArrayList<>();
        ino(root, "", l);
        return l;
    }

    public void ino(TreeNode root, String s, List<String> l) {
        if (root == null) {
            return;
        }
        s += root.val + "->";
        if (root.left == null && root.right == null) {
            l.add(s.substring(0, s.length() - 2));
        }
        ino(root.left, s, l);
        ino(root.right, s, l);
    }
}
