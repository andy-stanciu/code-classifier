/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<>();
        String curr = "";
        if (root == null)
            return list;
        paths(root, list, curr);
        return list;
    }

    private void paths(TreeNode root, List<String> list, String curr) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            if (curr == "") {
                curr += root.val;
                list.add(curr);
            } else {
                curr = curr + "->" + root.val;
                list.add(curr);
            }
        } else if (curr != "") {
            paths(root.left, list, curr + "->" + root.val);
            paths(root.right, list, curr + "->" + root.val);
        } else {
            paths(root.left, list, curr + root.val);
            paths(root.right, list, curr + root.val);
        }
    }
}
