class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result = new ArrayList<>();
        dfs(root, new StringBuilder(), result);
        return result;
    }

    private void dfs(TreeNode node, StringBuilder currPath, List<String> result) {
        if (node == null)
            return;
        int len = currPath.length();
        currPath.append(node.val);
        if (node.left == null && node.right == null) {
            result.add(currPath.toString());
            currPath.setLength(len);
            return;
        }
        currPath.append("->");
        dfs(node.left, currPath, result);
        dfs(node.right, currPath, result);
        currPath.setLength(len);
    }
}
