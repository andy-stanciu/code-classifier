/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<>();
        helper(root, res, new ArrayList<String>());
        return res;
    }

    private void helper(TreeNode root, List<String> res, List<String> str) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            String string = "";
            for (String s : str) string += s;
            res.add(string + root.val);
        } else {
            str.add(Integer.toString(root.val) + "->");
            helper(root.left, res, str);
            helper(root.right, res, str);
            str.remove(str.size() - 1);
        }
    }
}
