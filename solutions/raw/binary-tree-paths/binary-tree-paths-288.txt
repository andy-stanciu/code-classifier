/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> l = new ArrayList<>();
        find(root, l, "");
        return l;
    }

    public void find(TreeNode root, List<String> l, String s) {
        if (root == null) {
            return;
        }
        s += (root.val) + "->";
        find(root.left, l, s);
        find(root.right, l, s);
        if (root.right == null && root.left == null) {
            l.add(s.substring(0, s.length() - 2));
        }
        // s=s.substring(0,s.length()-2);
    }
}
