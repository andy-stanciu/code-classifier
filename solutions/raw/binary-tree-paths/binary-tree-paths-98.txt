/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    List<String> list = new ArrayList<>();

    StringBuilder str = new StringBuilder();

    private void helper(TreeNode root) {
        if (root == null) {
            return;
        }
        int len = str.length();
        str.append(root.val);
        if (root.left == null && root.right == null) {
            list.add(str.toString());
        } else {
            str.append("->");
            helper(root.left);
            helper(root.right);
        }
        str.setLength(len);
    }

    public List<String> binaryTreePaths(TreeNode root) {
        helper(root);
        return list;
    }
}
