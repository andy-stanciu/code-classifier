/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> sol = new ArrayList<String>();
        String cur = String.format("%d", root.val);
        if (root.left == null && root.right == null) {
            sol.add(cur);
        }
        if (root.left != null) {
            for (String path : binaryTreePaths(root.left)) {
                sol.add(new String(cur + "->" + path));
            }
        }
        if (root.right != null) {
            for (String path : binaryTreePaths(root.right)) {
                sol.add(new String(cur + "->" + path));
            }
        }
        return sol;
    }
}
