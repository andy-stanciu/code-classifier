/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<String> help(TreeNode root, String s, List<String> l) {
        if (root == null)
            return l;
        String string = Integer.toString(root.val);
        if (root.left != null || root.right != null) {
            string = s + string + "->";
            help(root.left, string, l);
            help(root.right, string, l);
        } else {
            string = s + string;
            l.add(string);
        }
        return l;
    }

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<>();
        return help(root, "", list);
    }
}
