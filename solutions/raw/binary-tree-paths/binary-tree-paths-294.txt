/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void eachPath(TreeNode node, List<String> ans, String s) {
        if (node == null)
            return;
        s += node.val;
        if (node.left == null && node.right == null) {
            ans.add(s);
        } else {
            s += "->";
            eachPath(node.left, ans, s);
            eachPath(node.right, ans, s);
        }
    }

    public List<String> binaryTreePaths(TreeNode root) {
        List<String> ans = new ArrayList();
        String s = "";
        if (root == null)
            return ans;
        eachPath(root, ans, s);
        return ans;
    }
}
