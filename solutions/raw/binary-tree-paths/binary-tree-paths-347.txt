/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> binaryTreePaths(TreeNode root) {
        ArrayList<String> list = new ArrayList<>();
        if (root == null)
            return list;
        if (root.left == null && root.right == null) {
            list.add("" + root.val);
            return list;
        }
        btp(root, "", list);
        return list;
    }

    public void btp(TreeNode root, String ans, ArrayList<String> list) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            list.add(ans + root.val);
        }
        btp(root.left, ans + root.val + "->", list);
        btp(root.right, ans + root.val + "->", list);
    }
}
