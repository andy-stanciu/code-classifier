/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
// \u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386 (\u9012\u5F52)
class Solution {

    //\u7528\u4E8E\u5B58\u50A8\u6570\u636E
    List<Integer> list = new ArrayList<>();

    public List<Integer> preorderTraversal(TreeNode root) {
        // \u9012\u5F52\u7684\u9000\u51FA\u6761\u4EF6
        if (root == null) {
            return list;
        }
        //\u5148\u628A\u8BBF\u95EE\u5230\u7684\u503C\u5B58\u53BB\u6570\u7EC4\u91CC \u5C31\u53EF\u4EE5\u5B9E\u73B0\u524D\u5E8F\u904D\u5386
        list.add(root.val);
        //\u5224\u65AD\u5DE6\u548C\u53F3\u6709\u6CA1\u6709\u8282\u70B9
        preorderTraversal(root.left);
        preorderTraversal(root.right);
        return list;
    }
}
