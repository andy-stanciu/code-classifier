/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> arr = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        TreeNode node;
        while (!stack.isEmpty()) {
            node = stack.pop();
            if (node == null)
                continue;
            arr.add(node.val);
            stack.add(node.right);
            stack.add(node.left);
        }
        return arr;
    }

    private void helper(ArrayList<Integer> arr, TreeNode node) {
        if (node == null)
            return;
        arr.add(node.val);
        helper(arr, node.left);
        helper(arr, node.right);
    }
}
