class Solution {

    List<Integer> preOrderList = new ArrayList<>();

    public List<Integer> preorderTraversal(TreeNode root) {
        preOrderIterative(root);
        return preOrderList;
    }

    // Follow up: The iterative solution
    private void preOrderIterative(TreeNode root) {
        if (root == null)
            return;
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        while (!stack.isEmpty()) {
            TreeNode currentNode = stack.pop();
            if (currentNode.right != null)
                stack.push(currentNode.right);
            if (currentNode.left != null)
                stack.push(currentNode.left);
            preOrderList.add(currentNode.val);
        }
    }
}
