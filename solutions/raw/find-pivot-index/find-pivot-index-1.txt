// Runtime: 1 ms, faster than 92.94% of Java online submissions for Find Pivot Index.
// Time Complexity : O(n)
class Solution {

    public int pivotIndex(int[] nums) {
        // Initialize total sum of the given array...
        int totalSum = 0;
        // Initialize \'leftsum\' as sum of first i numbers, not including nums[i]...
        int leftsum = 0;
        // Traverse the elements and add them to store the totalSum...
        for (int ele : nums) totalSum += ele;
        // Again traverse all the elements through the for loop and store the sum of i numbers from left to right...
        for (// sum to the left == leftsum.
        // sum to the left == leftsum.
        int i = 0; // sum to the left == leftsum.
        i < nums.length; // sum to the right === totalSum - leftsum - nums[i]..
        leftsum += nums[i++]) // check if leftsum == totalSum - leftsum - nums[i]...
        if (leftsum * 2 == totalSum - nums[i])
            // Return the pivot index...
            return i;
        // If there is no index that satisfies the conditions in the problem statement...
        return -1;
    }
}
