class Solution {

    public int pivotIndex(int[] nums) {
        int start = 0;
        int end = nums.length - 1;
        int tempS = 0;
        int tempE = 0;
        //Conditions checking #1
        for (int l = 0; l < end; l++) {
            //checks if rightside ==0
            tempE += nums[l + 1];
        }
        if (tempE == 0) {
            return 0;
        } else {
            tempE = 0;
        }
        //Bulk of code
        for (int k = 1; k < end; k++) {
            for (int j = k; j > start; j--) {
                //numbers left of k
                tempS += nums[j - 1];
            }
            for (int i = k; i < end; i++) {
                //numbers right of k
                tempE += nums[i + 1];
            }
            if (tempS == tempE) {
                return k;
            }
            tempS = 0;
            tempE = 0;
        }
        //conditions checking #2
        for (int h = end; h > start; h--) {
            //checks if left side ==0
            tempS += nums[h - 1];
        }
        if (tempS == 0) {
            return end;
        } else {
            tempS = 0;
        }
        return -1;
    }
}
