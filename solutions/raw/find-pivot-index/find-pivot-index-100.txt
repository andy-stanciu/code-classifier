class Solution {

    public int pivotIndex(int[] nums) {
        int[] prefixSum = new int[nums.length];
        prefixSum[0] = nums[0];
        if (nums.length == 1)
            return 0;
        // Calculate prefix sum
        for (int i = 1; i < nums.length; i++) {
            prefixSum[i] = nums[i] + prefixSum[i - 1];
        }
        // Check if the pivot index is at the first element
        if (prefixSum[0] - prefixSum[nums.length - 1] == 0) {
            return 0;
        }
        // Find the pivot index by comparing sum of elements on left and right
        for (int i = 1; i < nums.length; i++) {
            int sumLeft = prefixSum[i - 1];
            int sumRight = prefixSum[nums.length - 1] - prefixSum[i];
            if (sumLeft == sumRight) {
                return i;
            }
        }
        // If no pivot index found, return -1
        return -1;
    }
}
