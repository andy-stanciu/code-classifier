class Solution {

    /**
     *        1,7,3,6,5,6
     *
     *       right ==  1,8,11,17,22,28
     *
     *       left == 28,27,20,17,11,6
     *
     *        1 3 6
     *        6 5 3
     *
     *        2,3,2
     *        2,0,-1
     *
     *        [-1,-1,0,1,1,0]
     *        -1,-2,-2,-1,0,0
     *         0, 1, 2, 2,1,0
     */
    public int pivotIndex(int[] nums) {
        if (nums.length == 0)
            return -1;
        int[] leftSum = new int[nums.length];
        leftSum[0] = nums[0];
        for (int i = 1; i < nums.length; i++) {
            leftSum[i] = nums[i] + leftSum[i - 1];
        }
        int[] rightSum = new int[nums.length];
        rightSum[nums.length - 1] = nums[nums.length - 1];
        for (int i = nums.length - 2; i >= 0; i--) {
            rightSum[i] = nums[i] + rightSum[i + 1];
        }
        int left = 0;
        for (int i = 0; i < nums.length; i++) {
            if (i + 1 < nums.length && left == rightSum[i + 1]) {
                return i;
            }
            if (i + 1 == nums.length) {
                if (left == 0)
                    return i;
            }
            left = leftSum[i];
        }
        /*int right = 0;
        for(int i=nums.length-1;i>=0;i--){
            if(i-1>=0 && right==leftSum[i-1]){
                return i;
            }
            right=leftSum[i];
        } */
        return -1;
    }
}
