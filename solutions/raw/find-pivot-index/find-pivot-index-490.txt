// class Solution {
//     public int pivotIndex(int[] nums) {
//         int prefix = 0;
//         int suffix = 0;
//         int[] p = new int[nums.length];
//         int[] s = new int[nums.length];
//         for(int i = 0 ; i < nums.length ; i++)
//         {
//             prefix = prefix + nums[i];
//             p[i] = prefix;
//         }
//         for(int i = nums.length - 1; i > -1 ; i--)
//         {
//             suffix = suffix + nums[i];
//             s[i] = suffix;
//         }
//         System.out.println(Arrays.toString(p));
//         System.out.println(Arrays.toString(s));
//         for(int i = 0 ; i < p.length ; i++)
//         {
//             if(p[i] == s[i])
//             {
//                 return i;
//             }
//         }
//         return -1;
//     }
// }
////////////////////   BRUTE FORCE (ABOVE ONE)/////////////////////////
///////////////////    OPTIMIZED   ////////////////////////////////////
class Solution {

    public int pivotIndex(int[] nums) {
        //cumulative or prefix sum
        int cs = 0;
        int totalSum = 0;
        for (int elements : nums) {
            totalSum += elements;
        }
        for (int i = 0; i < nums.length; i++) {
            if (cs == totalSum - cs - nums[i])
                return i;
            cs = cs + nums[i];
        }
        return -1;
    }
}
