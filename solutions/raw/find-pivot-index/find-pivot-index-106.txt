class Solution {

    public int pivotIndex(int[] nums) {
        //First we collect sum of left to right and right to left elements  for checking faster
        //sums contains sum of elements which situated left to right
        int[] sums = new int[nums.length + 1];
        //sumsB contains sum of elements which situated right to left
        int[] sumsB = new int[nums.length + 1];
        //initial values of arrays
        sums[0] = nums[0];
        sumsB[nums.length] = nums[nums.length - 1];
        //collect all elements\' sum into arrays
        for (int i = 1, j = nums.length - 1; i < nums.length; i++, j--) {
            sums[i] = sums[i - 1] + nums[i];
            sumsB[j] = sumsB[j + 1] + nums[j - 1];
        }
        //checking index that is pivot. If left and right sums are equal, so returns index
        for (int i = 0; i < sums.length - 1; i++) {
            if (sums[i] == sumsB[i + 1])
                return i;
        }
        //if there is no equality left and right sums, returns -1
        return -1;
    }
}
