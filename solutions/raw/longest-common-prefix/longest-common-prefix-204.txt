class Solution {

    public String longestCommonPrefix(String[] strs) {
        List<String> commonPrefix = Arrays.asList(strs);
        while (commonPrefix.size() > 1) {
            commonPrefix = findCommonPrefix(commonPrefix);
        }
        return !commonPrefix.isEmpty() ? commonPrefix.get(0) : "";
    }

    public List<String> findCommonPrefix(List<String> strs) {
        List<String> commonPrefix = new ArrayList<>();
        for (int i = 0; i < strs.size() - 1; i++) {
            String common = compareTwoStrings(strs.get(i), strs.get(i + 1));
            if (common.isEmpty())
                return new ArrayList<>();
            if (!commonPrefix.contains(common))
                commonPrefix.add(common);
        }
        // comparing last string with first.
        if (strs.size() > 1) {
            String common = compareTwoStrings(strs.get(strs.size() - 1), strs.get(0));
            if (common.isEmpty())
                return new ArrayList<>();
            if (!commonPrefix.contains(common))
                commonPrefix.add(common);
        }
        return commonPrefix;
    }

    public String compareTwoStrings(String str1, String str2) {
        String res = "";
        for (int i = str1.length(); i >= 0; i--) {
            str1 = str1.substring(0, i);
            if (str2.contains(str1)) {
                res = str1;
                break;
            }
        }
        return res;
    }
}
