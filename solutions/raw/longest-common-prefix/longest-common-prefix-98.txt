class Solution {

    public String longestCommonPrefix(String[] strs) {
        if (strs.length == 0)
            return "";
        // In JVM 8 Sorting algorithm is a Dual-Pivot Quicksort. So, T.C will be O(N) to O(NlogN)
        Arrays.sort(strs);
        String first = strs[0];
        String last = strs[strs.length - 1];
        int common = 0;
        while (common < first.length()) {
            if (first.charAt(common) == last.charAt(common)) {
                common++;
            } else {
                break;
            }
        }
        return common == 0 ? "" : first.substring(0, common);
    }
}
// Time Complexity : O(NlogN)
// Space Complexity : O(1)
