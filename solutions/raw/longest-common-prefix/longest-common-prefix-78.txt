class Solution {

    public String longestCommonPrefix(String[] strs) {
        // Check if the input array is empty
        if (strs.length == 0) {
            return "";
        }
        // Initialize the prefix with the first string in the array
        String prefix = strs[0];
        // Iterate through the array starting from the second string
        for (int i = 1; i < strs.length; i++) {
            // Get the current string to compare with the prefix
            String compare = strs[i];
            // Initialize an index to track the common prefix characters
            int index = 0;
            // Compare characters at the same index in the prefix and current string
            // Continue until the end of either the prefix or the current string
            // or until a mismatch is found
            while (index < prefix.length() && index < compare.length() && prefix.charAt(index) == compare.charAt(index)) {
                index++;
            }
            // Update the prefix to include only the common characters found so far
            prefix = prefix.substring(0, index);
        }
        // Return the final common prefix
        return prefix;
    }
}
