class Solution {

    public String longestCommonPrefix(String[] strs) {
        // Check for empty input
        if (strs == null || strs.length == 0)
            return "";
        // Check if the first string is empty
        if (strs[0].length() == 0)
            return "";
        StringBuilder prefix = new StringBuilder();
        for (int i = 0; i < strs[0].length(); i++) {
            // Character to check at current position
            char curr = strs[0].charAt(i);
            for (int j = 1; j < strs.length; j++) {
                // Start from the second string
                if (i >= strs[j].length() || strs[j].charAt(i) != curr) {
                    // Return if no match or string is shorter
                    return prefix.toString();
                }
            }
            // Append matching character to prefix
            prefix.append(curr);
        }
        // Return the common prefix
        return prefix.toString();
    }
}
