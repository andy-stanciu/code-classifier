class Solution {

    class Node {

        HashMap<Character, Node> child = new HashMap<>();

        boolean isEnd = false;
    }

    public Node insert(String[] s) {
        Node root = new Node();
        for (String a : s) {
            Node temp = root;
            for (char c : a.toCharArray()) {
                temp = temp.child.computeIfAbsent(c, k -> new Node());
            }
            temp.isEnd = true;
        }
        return root;
    }

    public String count(Node root, String s) {
        String ans = "";
        Node temp = root;
        for (char c : s.toCharArray()) {
            if (temp.isEnd) {
                return ans;
            }
            if (temp.child.size() > 1) {
                return ans;
            }
            temp = temp.child.get(c);
            ans += String.valueOf(c);
        }
        return ans;
    }

    public String longestCommonPrefix(String[] strs) {
        Node root = insert(strs);
        if (strs.length == 0) {
            return "";
        }
        return count(root, strs[0]);
    }
}
