class Solution {

    public int thirdMax(int[] nums) {
        // Use a set to remove duplicates
        Set<Integer> set = new HashSet<>();
        for (int num : nums) {
            set.add(num);
        }
        // If the set contains less than 3 elements, return the maximum element
        if (set.size() < 3) {
            int max = Collections.max(set);
            return max;
        }
        // Otherwise, find the third maximum element
        int firstMax = Integer.MIN_VALUE;
        int secondMax = Integer.MIN_VALUE;
        int thirdMax = Integer.MIN_VALUE;
        for (int num : set) {
            if (num > firstMax) {
                thirdMax = secondMax;
                secondMax = firstMax;
                firstMax = num;
            } else if (num > secondMax && num < firstMax) {
                thirdMax = secondMax;
                secondMax = num;
            } else if (num > thirdMax && num < secondMax) {
                thirdMax = num;
            }
        }
        return thirdMax;
    }
}
