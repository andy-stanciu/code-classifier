class Solution {

    public int thirdMax(int[] nums) {
        // Use a TreeSet to store the numbers in sorted order and remove duplicates
        Set<Integer> sortedSet = new TreeSet<>();
        for (int num : nums) {
            sortedSet.add(num);
        }
        // Convert the set to an array
        Integer[] sortedArray = sortedSet.toArray(new Integer[0]);
        // Check the length of the sorted distinct elements array
        if (sortedArray.length < 3) {
            // If there are less than 3 distinct elements, return the maximum
            return sortedArray[sortedArray.length - 1];
        } else {
            // Return the third maximum
            return sortedArray[sortedArray.length - 3];
        }
    }
}
