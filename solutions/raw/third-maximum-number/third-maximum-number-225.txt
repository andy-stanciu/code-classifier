class Solution {

    public int thirdMax(int[] nums) {
        //Solution 1
        // if (nums == null)
        //     return 0;
        // Set<Long> set = new HashSet<>();
        // for (long i : nums)
        //     set.add(i);
        // long[] result = new long[set.size()];
        // int k = 0;
        // for(long i: set)
        //     result[k++] = i;
        // for(int i = 0;i < result.length - 1;i++){
        //     for(int j = i + 1;j < result.length;j++){
        //         if(result[i] < result[j])
        //         {
        //             long temp = result[i];
        //             result[i] = result[j];
        //             result[j] = temp;
        //         }
        //     }
        // }
        // if (result.length <= 2)
        //     return (int)result[0];
        // return (int)result[2];
        //Solution 2
        long max1 = Long.MIN_VALUE;
        long max2 = Long.MIN_VALUE;
        long max3 = Long.MIN_VALUE;
        for (int i : nums) {
            if (i == max1 || i == max2 || i == max3)
                continue;
            if (i > max1) {
                max3 = max2;
                max2 = max1;
                max1 = i;
            } else if (i > max2) {
                max3 = max2;
                max2 = i;
            } else if (i > max3) {
                max3 = i;
            }
        }
        return max3 == Long.MIN_VALUE ? (int) max1 : (int) max3;
    }
}
