class Solution {

    public int thirdMax(int[] nums) {
        if (nums == null || nums.length == 0)
            return 0;
        // Initialize first, second, and third to null to handle negative numbers as well
        long first = Long.MIN_VALUE, second = Long.MIN_VALUE, third = Long.MIN_VALUE;
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            // Update first, second, and third max values accordingly
            if (num > first) {
                third = second;
                second = first;
                first = num;
            } else if (num > second && num != first) {
                third = second;
                second = num;
            } else if (num > third && num != second && num != first) {
                third = num;
            }
        }
        // Return third if it exists, else return first
        return (third == Long.MIN_VALUE) ? (int) first : (int) third;
    }
}
