class Solution {

    public int thirdMax(int[] nums) {
        int firstMax = Integer.MIN_VALUE;
        int secondMax = Integer.MIN_VALUE;
        int thirdMax = Integer.MIN_VALUE;
        // Finding first maximum number
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > firstMax) {
                firstMax = nums[i];
            }
        }
        // If length is less then 3, That measn there is no possible to exist 3rd max, so retuning 1st max.
        if (nums.length < 3) {
            return firstMax;
        }
        //if not, Finding second max number
        //Here we adding another condition num != 1st max, to find 2nd max
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > secondMax && nums[i] != firstMax) {
                secondMax = nums[i];
            }
        }
        //why boolean ? for this test case = [1,2,Integer.MINVALUE].
        // In this case the number itself is min value. So we are using flag, if the number doesn\'t go in to the if condition, that means there is no third max exist(i.e  [1,2,1] ) so we had to return 1st max only.
        boolean flag = true;
        for (int num : nums) {
            if (num >= thirdMax && num != firstMax && num != secondMax) {
                thirdMax = num;
                flag = false;
            }
        }
        if (flag) {
            return firstMax;
        }
        return thirdMax;
    }
}
