class Solution {

    public int thirdMax(int[] nums) {
        if (nums.length == 1)
            return nums[0];
        //taking long to pass the edge cases
        long first = Long.MIN_VALUE, second = Long.MIN_VALUE, third = Long.MIN_VALUE;
        for (int n : nums) {
            if (n > first) {
                third = second;
                second = first;
                first = n;
            } else if (n > second && n < first) {
                //avoid duplication- i dont want to take something equal to first
                third = second;
                second = n;
            } else if (n > third && n < second && n < first) {
                //avoid duplication - just like the above condition but here i am including first and second both.
                third = n;
            }
        }
        // for specific test case
        if (third == Long.MIN_VALUE)
            return (int) first;
        return (int) third;
    }
}
