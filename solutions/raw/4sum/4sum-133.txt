class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();
        for (int i = 0; i < nums.length - 3; i++) {
            if (i > 0 && nums[i - 1] == nums[i]) {
                continue;
            }
            for (int j = i + 1; j < nums.length; j++) {
                if (j > i + 1 && nums[j - 1] == nums[j]) {
                    continue;
                }
                long tar = target - (long) (nums[i] + nums[j]);
                // now it will be targeted for other two value
                int l = j + 1;
                int r = nums.length - 1;
                while (l < r) {
                    long a = nums[l] + nums[r];
                    if (a == tar) {
                        System.out.println(tar);
                        // skipping thre duplicates
                        while (l + 1 < nums.length && nums[l] == nums[l + 1]) {
                            l++;
                        }
                        while (r > 0 && nums[r - 1] == nums[r]) {
                            r--;
                        }
                        List<Integer> list = new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[j]);
                        list.add(nums[l]);
                        list.add(nums[r]);
                        ans.add(list);
                        l++;
                        r--;
                    }
                    if (l < nums.length && r > 0 && nums[l] + nums[r] < tar) {
                        l++;
                    }
                    if (l < nums.length && r > 0 && nums[l] + nums[r] > tar) {
                        r--;
                    }
                }
            }
        }
        return ans;
    }
}
