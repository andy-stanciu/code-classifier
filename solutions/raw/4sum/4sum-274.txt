class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new ArrayList<>();
        Set<List<Integer>> hs = new HashSet<>();
        int n = nums.length;
        Arrays.sort(nums);
        for (int i = 0; i < n - 3; i++) {
            for (int j = i + 1; j < n - 2; j++) {
                int k = n - 1;
                int l = j + 1;
                while (l < k) {
                    long sum = (long) nums[i] + nums[j] + nums[k] + nums[l];
                    if (sum == target) {
                        List<List<Integer>> ans = new ArrayList<>();
                        ans.add(Arrays.asList(nums[i], nums[j], nums[l], nums[k]));
                        if (!hs.contains(ans)) {
                            hs.add(Arrays.asList(nums[i], nums[j], nums[l], nums[k]));
                        }
                        k--;
                        l++;
                    } else if (sum > target) {
                        k--;
                    } else {
                        l++;
                    }
                }
            }
        }
        res.addAll(hs);
        return res;
    }
}
