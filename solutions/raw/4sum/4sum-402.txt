class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        Set<List<Integer>> s = new HashSet<>();
        List<List<Integer>> output = new ArrayList<>();
        int k = 0;
        for (int i = 0; i < nums.length - 3; i++) {
            for (k = nums.length - 1; k > i + 2; k--) {
                int j = i + 1;
                int l = k - 1;
                while (j < l) {
                    long sum = nums[i];
                    sum = sum + nums[j];
                    sum = sum + nums[k];
                    sum = sum + nums[l];
                    if (sum > target) {
                        l--;
                    } else if (sum < target) {
                        j++;
                    } else {
                        s.add(Arrays.asList(nums[i], nums[j], nums[l], nums[k]));
                        j++;
                        l--;
                    }
                }
            }
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i++;
            }
            while (k > 0 && nums[k] == nums[k - 1]) {
                k--;
            }
        }
        output.addAll(s);
        return output;
    }
}
