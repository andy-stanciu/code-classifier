class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        int n = nums.length;
        List<List<Integer>> result = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                long diff = target - (Long.sum(nums[i], nums[j]));
                int start = j + 1;
                int end = n - 1;
                while (start < end) {
                    long sum = nums[start] + nums[end];
                    if (sum == diff) {
                        List<Integer> list = new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[j]);
                        list.add(nums[start]);
                        list.add(nums[end]);
                        result.add(list);
                        while (start + 1 < n && nums[start] == nums[start + 1]) {
                            start++;
                        }
                        start++;
                    } else if (sum < diff) {
                        start++;
                    } else {
                        end--;
                    }
                }
                while (j + 1 < n && nums[j] == nums[j + 1]) {
                    j++;
                }
            }
            while (i + 1 < n && nums[i] == nums[i + 1]) {
                i++;
            }
        }
        return result;
    }
}
