class Solution {

    public List<List<Integer>> fourSum(int[] arr, int target) {
        Arrays.sort(arr);
        int n = arr.length;
        List<List<Integer>> ans = new ArrayList<>();
        for (int a = 0; a < n - 3; a++) {
            if (a != 0 && arr[a] == arr[a - 1])
                continue;
            for (int b = a + 1; b < n - 2; b++) {
                if (b != a + 1 && arr[b] == arr[b - 1])
                    continue;
                int c = b + 1;
                int d = n - 1;
                while (c < d) {
                    long sum = (long) arr[a] + arr[b] + arr[c] + arr[d];
                    if (sum < target) {
                        c++;
                    } else if (sum > target) {
                        d--;
                    } else {
                        List<Integer> li = Arrays.asList(arr[a], arr[b], arr[c], arr[d]);
                        ans.add(li);
                        c++;
                        d--;
                        while (c < d && arr[c] == arr[c - 1]) c++;
                        while (c < d && arr[d] == arr[d + 1]) d--;
                    }
                }
            }
        }
        return ans;
    }
}
