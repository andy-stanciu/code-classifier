class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList<>();
        for (int a = 0; a <= nums.length - 4; a++) {
            //Pruning
            if (nums[a] > target && nums[a] >= 0) {
                break;
            }
            //Deduplicate for nums[a]
            if (a > 0 && nums[a] == nums[a - 1]) {
                continue;
            }
            int b = a + 1;
            int d = nums.length - 1;
            while (b <= nums.length - 2) {
                //Pruning
                if (nums[a] + nums[b] > target && nums[a] + nums[b] >= 0) {
                    break;
                }
                //Deduplicate for nums[b]
                if (b > a + 1 && nums[b] == nums[b - 1]) {
                    b++;
                    continue;
                }
                int c = b + 1;
                d = nums.length - 1;
                while (c < d) {
                    if (nums[a] + nums[b] + nums[c] + nums[d] < target)
                        c++;
                    else if (nums[a] + nums[b] + nums[c] + nums[d] > target) {
                        d--;
                    } else {
                        // == target
                        result.add(Arrays.asList(nums[a], nums[b], nums[c], nums[d]));
                        // Deduplicate nums[c] and nums[d]
                        while (c < d && nums[c] == nums[c + 1]) c++;
                        while (c < d && nums[d] == nums[d - 1]) d--;
                        c++;
                        d--;
                    }
                }
                b++;
            }
        }
        return result;
    }
}
