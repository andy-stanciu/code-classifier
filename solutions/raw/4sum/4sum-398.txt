class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList<>();
        int n = nums.length;
        for (int i = 0; i < n - 3; i++) {
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j < n - 2; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1])
                    continue;
                long sum = (long) target - ((long) nums[i] + (long) nums[j]);
                int start = j + 1;
                int end = n - 1;
                while (start < end) {
                    long t = (long) nums[start] + (long) nums[end];
                    if (t == sum) {
                        result.add(Arrays.asList(nums[start], nums[end], nums[i], nums[j]));
                        while (start < end && (nums[end] == nums[end - 1])) {
                            end--;
                        }
                        while (start < end && (nums[start] == nums[start + 1])) {
                            start++;
                        }
                        start++;
                        end--;
                    } else if (t < sum) {
                        start++;
                    } else {
                        end--;
                    }
                }
            }
        }
        return result;
    }
}
