class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        int n = nums.length;
        Arrays.sort(nums);
        // -2 -1 0 0 1 2
        List<List<Integer>> ls = new ArrayList<>();
        for (int i = 0; i < n - 3; i++) {
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j < n - 2; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1])
                    continue;
                int st = j + 1;
                int en = n - 1;
                while (st < en) {
                    long sum = (long) nums[i] + nums[j] + nums[st] + nums[en];
                    if (sum == target) {
                        ls.add(Arrays.asList(nums[i], nums[j], nums[st], nums[en]));
                        st++;
                        en--;
                        while ((st < en) && (nums[st] == nums[st - 1])) st++;
                        while ((st < en) && (nums[en] == nums[en + 1])) en--;
                    } else if (sum > target) {
                        en--;
                    } else {
                        st++;
                    }
                }
            }
        }
        return ls;
    }
}
