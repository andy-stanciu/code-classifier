class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        HashSet<List> set = new HashSet<>();
        int n = nums.length;
        Arrays.sort(nums);
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int k = j + 1;
                int l = n - 1;
                while (k < l) {
                    long val = (long) nums[i] + nums[j] + nums[k] + nums[l];
                    if (val == (long) target) {
                        ArrayList<Integer> list = new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[j]);
                        list.add(nums[k]);
                        list.add(nums[l]);
                        set.add(list);
                        k++;
                    } else if (val < (long) target)
                        k++;
                    else
                        l--;
                }
            }
        }
        if (set.size() == 0)
            return ans;
        for (List p : set) {
            ans.add(p);
        }
        return ans;
    }
}
