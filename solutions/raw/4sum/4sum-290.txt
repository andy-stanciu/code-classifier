class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> listOflist = new ArrayList<>();
        int n = nums.length;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                Set<Long> map = new HashSet<>();
                // int[4] arr;
                for (int k = j + 1; k < n; k++) {
                    long sum = (long) nums[i] + nums[j];
                    sum += nums[k];
                    long val = target - sum;
                    if (map.contains(val)) {
                        List<Integer> list = Arrays.asList(nums[i], nums[j], nums[k], (int) val);
                        Collections.sort(list);
                        if (!listOflist.contains(list)) {
                            listOflist.add(list);
                        }
                    }
                    map.add((long) nums[k]);
                }
            }
        }
        return listOflist;
    }
}
