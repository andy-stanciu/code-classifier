public class Solution {

    public ListNode detectCycle(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        if (head == null)
            return null;
        if (head.next == null)
            return null;
        //before first meet of slow and fast paointer slow take one move at a time and fast make 2 move at a time.
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            if (slow == fast)
                break;
        }
        //if slow and fast didn\'t meet than there is no cycle.
        if (slow != fast)
            return null;
        //after first meet slow start again from head and fast continue from there only and now both will take one move at a time.And this time they meet at the starting node of cycle.
        slow = head;
        if (slow == fast)
            return slow;
        while (slow.next != fast.next) {
            slow = slow.next;
            fast = fast.next;
        }
        return slow.next;
    }
}
