/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public static int solve(ListNode head, ArrayList<ListNode> vis) {
        if (vis.contains(head))
            return vis.indexOf(head);
        if (head == null)
            return -1;
        vis.add(head);
        return solve(head.next, vis);
    }

    public ListNode detectCycle(ListNode head) {
        ArrayList<ListNode> vis = new ArrayList<>();
        ListNode temp = head;
        int index = solve(head, vis);
        if (index == -1)
            return null;
        for (int i = 0; i < index; i++) temp = temp.next;
        return temp;
    }
}
