/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        return helper(head);
    }

    public ListNode helper(ListNode head) {
        HashMap<ListNode, Integer> map = new HashMap<>();
        ArrayList<ListNode> list = new ArrayList<>();
        int count = 0;
        while (head != null) {
            list.add(head);
            if (!map.containsKey(head)) {
                map.put(head, count++);
            } else {
                int index = map.get(head);
                return list.get(index);
            }
            head = head.next;
        }
        return null;
    }
}
