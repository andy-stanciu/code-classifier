/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        if (head == null || head.next == null)
            return null;
        Set<ListNode> set = new HashSet<>();
        ListNode root = head;
        while (root.next != null) {
            if (set.contains(root.next))
                return root.next;
            else
                set.add(root);
            root = root.next;
        }
        return null;
    }
}
