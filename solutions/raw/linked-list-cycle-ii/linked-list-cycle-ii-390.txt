/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        ListNode j = hasCycle(head);
        if (j == null) {
            return null;
        } else {
            ListNode i = head;
            while (j != i) {
                i = i.next;
                j = j.next;
            }
        }
        return j;
    }

    public ListNode hasCycle(ListNode head) {
        if (head == null || head.next == null) {
            return null;
        }
        ListNode i = head;
        ListNode j = head;
        while (j != null && j.next != null) {
            i = i.next;
            j = j.next.next;
            if (i == j) {
                return i;
            }
        }
        return null;
    }
}
