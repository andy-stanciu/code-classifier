/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    //  Time Complexity = O(N)
    //  Space Complexity = O(1)
    public ListNode detectCycle(ListNode head) {
        if (head == null || head.next == null)
            // no circle
            return null;
        ListNode slow = head, fast = head, target = head;
        while (fast != null && fast.next != null) {
            fast = fast.next.next;
            slow = slow.next;
            if (fast == slow) {
                // circle detected
                while (target != slow) {
                    slow = slow.next;
                    target = target.next;
                }
                return target;
            }
        }
        // no circle
        return null;
    }
}
