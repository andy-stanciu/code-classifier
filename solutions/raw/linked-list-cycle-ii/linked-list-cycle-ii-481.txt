/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        if (head == null)
            return null;
        // if(head.next==null) return null;
        ListNode slow = head;
        ListNode fast = head;
        // if(fast==null) return null;
        while (fast != null) {
            slow = slow.next;
            if (fast.next == null)
                return null;
            fast = fast.next.next;
            if (fast == slow)
                break;
        }
        ListNode temp = head;
        while (temp != slow) {
            temp = temp.next;
            if (slow.next == null)
                return null;
            slow = slow.next;
        }
        return slow;
    }
}
