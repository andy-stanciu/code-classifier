/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        // make temp nodes f and s
        ListNode f = head;
        ListNode s = head;
        while (f != null && f.next != null) {
            //  if fand f next is  not null
            // s pt to its s next
            s = s.next;
            // f pts to its next of f next.
            f = f.next.next;
            if (f == s) {
                // if f same to s
                // make new temp node t helps to return index or pos
                ListNode t = head;
                while (t != s) {
                    // if t not to s
                    // s pts to s next
                    s = s.next;
                    // t pts to t next
                    t = t.next;
                }
                // return s gives answer
                return s;
            }
        }
        return null;
    }
}
