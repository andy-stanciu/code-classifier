/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    static ListNode start(ListNode s, ListNode head) {
        ListNode t = head;
        while (t != s) {
            t = t.next;
            s = s.next;
        }
        return s;
    }

    public ListNode detectCycle(ListNode head) {
        ListNode one = head;
        ListNode two = head;
        while (two != null && two.next != null) {
            two = two.next.next;
            one = one.next;
            if (one == two)
                return start(one, head);
        }
        return null;
    }
}
