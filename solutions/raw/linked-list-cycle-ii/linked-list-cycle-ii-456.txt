/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        if (head == null || head.next == null) {
            return null;
        }
        ListNode fastptr = head;
        ListNode slwptr = head;
        ListNode position;
        while (fastptr != null && fastptr.next != null) {
            fastptr = fastptr.next.next;
            slwptr = slwptr.next;
            if (fastptr == slwptr) {
                ListNode ptr = head;
                while (ptr != slwptr) {
                    ptr = ptr.next;
                    slwptr = slwptr.next;
                }
                return ptr;
            }
        }
        return null;
    }
}
