/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        ListNode fast = head;
        ListNode slow = head;
        ListNode temp = null;
        int i = 1;
        while (fast != null) {
            fast = fast.next;
            if (fast != null) {
                fast = fast.next;
                slow = slow.next;
            }
            if (slow == fast) {
                if (i == 1) {
                    temp = head;
                    i++;
                } else {
                    temp = temp.next;
                }
            }
            if (slow == temp) {
                return temp;
            }
        }
        return temp;
    }
}
