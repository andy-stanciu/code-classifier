/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        if (head == null) {
            return null;
        }
        if (head.next == null) {
            return null;
        }
        if (head.next == head) {
            return head;
        }
        ListNode slow_p = head, fast_p = head;
        while (fast_p != null && fast_p.next != null) {
            slow_p = slow_p.next;
            fast_p = fast_p.next.next;
            if (slow_p == fast_p) {
                break;
            }
        }
        if (slow_p != fast_p) {
            return null;
        }
        slow_p = head;
        while (slow_p != fast_p) {
            slow_p = slow_p.next;
            fast_p = fast_p.next;
        }
        return slow_p;
    }
}
