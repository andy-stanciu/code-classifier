/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode detectCycle(ListNode head) {
        HashSet<ListNode> visitedNodes = new HashSet<>();
        ListNode currNode = head;
        while (currNode != null) {
            if (visitedNodes.contains(currNode)) {
                return currNode;
            } else {
                visitedNodes.add(currNode);
            }
            currNode = currNode.next;
        }
        return null;
    }
}
