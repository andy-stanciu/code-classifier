class Solution {

    public int compress(char[] chars) {
        int length = chars.length;
        if (length == 0)
            return 0;
        // Index where we write the characters
        int writeIndex = 0;
        // Start of the current character group
        int left = 0;
        while (left < length) {
            // Current character
            char currentChar = chars[left];
            // Count of occurrences
            int count = 0;
            // Count how many times the `currentChar` is occurring
            while (left < length && chars[left] == currentChar) {
                count++;
                left++;
            }
            // Write the character to the output
            chars[writeIndex++] = currentChar;
            // If the count is more than 1, we need to store the count
            if (count > 1) {
                // Convert the count into characters and store them
                for (char digit : Integer.toString(count).toCharArray()) {
                    chars[writeIndex++] = digit;
                }
            }
        }
        // return the new length of the compressed array
        return writeIndex;
    }
}
