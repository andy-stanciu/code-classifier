class Solution {

    public int compress(char[] chars) {
        //Optimized apporoach;
        if (chars.length < 2)
            return 1;
        int count = 1;
        int index = 0;
        for (int i = 0; i < chars.length - 1; i++) {
            if (chars[i] == chars[i + 1]) {
                count++;
                if (i + 1 == chars.length - 1) {
                    chars[index++] = chars[i];
                    if (count > 1) {
                        String s = String.valueOf(count);
                        char[] res = s.toCharArray();
                        for (char ch : res) {
                            chars[index++] = ch;
                        }
                    }
                }
            } else {
                chars[index++] = chars[i];
                if (count > 1) {
                    String s = String.valueOf(count);
                    char[] res = s.toCharArray();
                    for (char ch : res) {
                        chars[index++] = ch;
                    }
                }
                if (i + 1 == chars.length - 1) {
                    chars[index++] = chars[i + 1];
                }
                count = 1;
            }
        }
        return index;
        /*
    String s="";

    if(chars.length<2) return 1;

    int i=0;
    int j=i+1;
    int n=chars.length;
    int k=1;
    while(i<j && j<n){
        if(chars[i]==chars[j]){
            i++;
            k++;
            if(j==n-1){
                if(k>=10){
                        s+=chars[i];
                        int temp=k%10;
                        s+=k/10;
                        s+=temp;
                        break;
                    } else if(k==1){
                        s+=chars[i];
                        break;
                    } 
                    else {
                        s+=chars[i];
                        s+=k;
                        break;
                    } 
                }
                j++;
            } else {
                    if(k>=10){
                        s+=chars[i];
                        int temp=k%10;
                        s+=k/10;
                        s+=temp;
                    } else if(k==1){
                        s+=chars[i];
                        if(j==chars.length-1){
                            s+=chars[j];
                        }
                    } else if(j==chars.length-1){
                        if(k!=1){
                             s+=chars[i];
                             s+=k; 
                             s+=chars[j]; 
                        } else s+=chars[j];
                    }
                    else {
                        s+=chars[i];
                        s+=k;
                    } 
                    k=1;
                    i++;
                    j++;
                }

    }
           for(int t=0;t<s.length();t++){
            chars[t]= s.charAt(t);
            }
        return s.length();      
    

    
    
    /*
    for(int i=0;i<chars.length;i++){
        int k=1;
        int j=i+1;
        if(j==chars.length){
            s+=chars[i];
        }
        while(j<chars.length){
            if(chars[i]==chars[j]){
                    i++;
                    k++;
                    if(j==chars.length-1){
                        if(k>=10){
                        s+=chars[i];
                        int temp=k%10;
                        s+=k/10;
                        s+=temp;
                    } else if(k==1){
                        s+=chars[i];
                    } 
                    else {
                        s+=chars[i];
                        s+=k;
                    } 
                    }
                    j++;
            } else {
                    if(k>=10){
                        s+=chars[i];
                        int temp=k%10;
                        s+=k/10;
                        s+=temp;
                    } else if(k==1){
                        s+=chars[i];
                    } else if(j==chars.length-1){
                        if(k!=1){
                             s+=chars[i];
                             s+=k;  
                        } else s+=chars[j];
                    }
                    else {
                        s+=chars[i];
                        s+=k;
                    } 
                    j++;
                    break;
                }

        }
    }

    for(int i=0;i<s.length();i++){
            chars[i]= s.charAt(i);
        }
        return s.length();

    */
        /* 
        String s="";
        int res[] = new int[234];
        if(chars.length<2) return 1; 
        for(int i=0;i<chars.length;i++){
            res[chars[i]]++;
        } 
        for(int i=0;i<234;i++){
            if(res[i]>=1){
                if(res[i]>=10){
                        s+= (char)i;
                        s+=res[i]/10;
                        s+=res[i]%10;   
                } else if(res[i]==1){
                    s+= (char)i;
                } else{
                    s+= (char)i;
                    s+=res[i];
                }
            }
        }
        for(int i=0;i<s.length();i++){
            chars[i]= s.charAt(i);
        }
        return s.length();
        */
    }
}
