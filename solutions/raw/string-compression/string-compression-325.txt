class Solution {

    public int compress(char[] chars) {
        // take pointer which will iterate through entire input array
        int i = 0;
        // take another pointer which will keep track of compressed array
        // here modifying same input array chars
        int index = 0;
        while (i < chars.length) {
            char currChar = chars[i];
            int count = 0;
            // first count the consecutive occurrences of current char
            while (i < chars.length && chars[i] == currChar) {
                i++;
                count++;
            }
            // update input compressed array with current char and its count with the help
            // of
            // index pointer
            // this line is suitable for char occurrences with 1 count
            chars[index++] = currChar;
            // we have to store only char not its count
            // if the count is greater than 1 here condition of group length >= 10 then split into
            //multiple character
            if (count > 1) {
                String countStr = String.valueOf(count);
                for (char ch : countStr.toCharArray()) {
                    chars[index++] = ch;
                }
            }
        }
        return index;
    }
}
