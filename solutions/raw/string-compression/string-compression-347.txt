class Solution {

    public int compress(char[] chars) {
        int len = chars.length;
        char c = chars[0];
        int count = 0;
        int pos = 0;
        int saved = 0;
        for (int i = 0; i < len; i++) {
            if (chars[i] == c) {
                count++;
                if (count > 1) {
                    chars[i] = 0x0;
                }
            } else if (count == 1) {
                c = chars[i];
                pos = i;
            } else {
                if (count < 10) {
                    chars[pos + 1] = Character.forDigit(count, 10);
                } else if (count < 100) {
                    chars[pos + 1] = Character.forDigit(count / 10, 10);
                    chars[pos + 2] = Character.forDigit(count % 10, 10);
                    saved++;
                } else if (count < 1000) {
                    chars[pos + 1] = Character.forDigit(count / 100, 10);
                    chars[pos + 2] = Character.forDigit(count % 100, 10);
                    chars[pos + 3] = Character.forDigit(count % 10, 10);
                    saved += 2;
                } else {
                    chars[pos + 1] = Character.forDigit(count / 1000, 10);
                    chars[pos + 2] = Character.forDigit(count % 1000, 10);
                    chars[pos + 3] = Character.forDigit(count % 100, 10);
                    chars[pos + 4] = Character.forDigit(count % 10, 10);
                    saved += 3;
                }
                pos = i;
                saved += count - 2;
                count = 1;
                c = chars[i];
            }
        }
        if (count > 1) {
            if (count < 10) {
                chars[pos + 1] = Character.forDigit(count, 10);
            } else if (count < 100) {
                chars[pos + 1] = Character.forDigit(count / 10, 10);
                chars[pos + 2] = Character.forDigit(count % 10, 10);
                saved++;
            } else if (count < 1000) {
                chars[pos + 1] = Character.forDigit(count / 100, 10);
                chars[pos + 2] = Character.forDigit(count % 100, 10);
                chars[pos + 3] = Character.forDigit(count % 10, 10);
                saved += 2;
            } else {
                chars[pos + 1] = Character.forDigit(count / 1000, 10);
                chars[pos + 2] = Character.forDigit(count % 1000, 10);
                chars[pos + 3] = Character.forDigit(count % 100, 10);
                chars[pos + 4] = Character.forDigit(count % 10, 10);
                saved += 3;
            }
            saved += count - 2;
        }
        count = 0;
        for (int i = 0; i < len; i++) {
            if (chars[i] != 0x0 && count == i) {
                count++;
            } else if (chars[i] != 0x0) {
                chars[count] = chars[i];
                count++;
            }
        }
        return count;
    }
}
