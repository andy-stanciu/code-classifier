class Solution {

    public int compress(char[] chars) {
        // for chars iteration
        int i = 0;
        // for modifying original chars array
        int index = 0;
        while (i < chars.length) {
            char currentChar = chars[i];
            // for counting group char
            int count = 1;
            while (i + count < chars.length && currentChar == chars[i + count]) {
                count++;
            }
            // add current index character and increase index for adding number after it
            chars[index++] = chars[i];
            // modify chars array to make new adjustments
            if (count > 1) {
                for (char c : Integer.toString(count).toCharArray()) {
                    // add grounCount number
                    chars[index++] = c;
                }
            }
            // update the chars iteration from where the grounCount is end
            i += count;
        }
        return index;
    }
}
