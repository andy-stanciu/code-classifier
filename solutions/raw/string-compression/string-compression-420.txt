class Solution {

    public int compress(char[] chars) {
        int len = 0;
        int counter = 0;
        int j = 0;
        int i = 0;
        while (i < chars.length) {
            counter = check(chars, chars[i], i);
            if (counter == 1) {
                len = len + 1;
                chars[j] = chars[i];
                j = j + 1;
            } else {
                char[] temp = ("" + counter).toCharArray();
                len = len + temp.length + 1;
                chars[j] = chars[i];
                j = j + 1;
                for (char c : temp) {
                    chars[j] = c;
                    j = j + 1;
                }
            }
            i = i + counter;
            counter = 0;
        }
        return len;
    }

    private int check(char[] chars, char c, int itr) {
        int count = 1;
        for (int i = itr + 1; i < chars.length; i++) {
            if (c == chars[i]) {
                count = count + 1;
            } else {
                return count;
            }
        }
        return count;
    }
}
