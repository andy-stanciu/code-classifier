class Solution {

    public int compress(char[] chars) {
        // Initialize a StringBuilder to store the compressed string
        StringBuilder sb = new StringBuilder();
        // Initialize count to 1 as we start with the first character
        int count = 1;
        // Append the first character to the StringBuilder
        sb.append(chars[0]);
        // Start iterating from the second character
        int i = 1;
        while (i < chars.length) {
            // If the current character is the same as the previous one, increase the count
            if (chars[i] == chars[i - 1]) {
                count++;
            } else {
                // If the characters are different:
                // If count is greater than 1, append the count to the StringBuilder
                if (count > 1) {
                    sb.append(count);
                }
                // Append the current character to the StringBuilder
                sb.append(chars[i]);
                // Reset count to 1 for the new character
                count = 1;
            }
            i++;
        }
        // After the loop, if count is greater than 1, append it to the StringBuilder
        if (count > 1) {
            sb.append(count);
        }
        // Copy the compressed string back to the original array
        for (int j = 0; j < sb.length(); j++) {
            chars[j] = sb.charAt(j);
        }
        // Return the length of the compressed string
        return sb.length();
    }
}
