class Solution {

    public int compress(char[] chars) {
        // variables to keep track of current index and counter of how many of that char there has been
        int index = 0;
        int counter = 1;
        // loop starting second element
        for (int i = 1; i < chars.length; i++) {
            // check if the character is same as prev, if so then counter
            if (chars[i] == chars[i - 1]) {
                counter++;
            } else // if we have a new character
            {
                // if the counter is greater than 1, then we add to array
                if (counter > 1) {
                    // convert the value of counter to a char array. we ensure every digit is a different character.
                    char[] tempArray = String.valueOf(counter).toCharArray();
                    for (char temp : tempArray) {
                        index++;
                        chars[index] = temp;
                    }
                }
                // reset counter since its new char
                counter = 1;
                // register and write new char
                index++;
                chars[index] = chars[i];
            }
            // if its last element, then add counter to array
            if (i == chars.length - 1) {
                if (counter != 1) {
                    char[] tempArray = String.valueOf(counter).toCharArray();
                    for (char temp : tempArray) {
                        index++;
                        chars[index] = temp;
                    }
                }
            }
        }
        return index + 1;
    }
}
