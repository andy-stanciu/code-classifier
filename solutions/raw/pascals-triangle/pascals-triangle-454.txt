class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> pascalTrianlge = new ArrayList();
        List<Integer> row1 = new ArrayList();
        row1.add(1);
        pascalTrianlge.add(row1);
        if (numRows == 1) {
            return pascalTrianlge;
        }
        for (int i = 2; i <= numRows; i++) {
            List<Integer> prevRow = pascalTrianlge.get(i - 2);
            List<Integer> row = new ArrayList();
            // first element
            row.add(0, prevRow.get(0));
            // middle elements
            for (int j = 1; j < i - 1; j++) {
                row.add(j, prevRow.get(j - 1) + prevRow.get(j));
            }
            // second element
            row.add(i - 1, prevRow.get(i - 2));
            pascalTrianlge.add(row);
        }
        return pascalTrianlge;
    }
}
