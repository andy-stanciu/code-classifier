class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> rows = new ArrayList();
        // add first row
        List<Integer> row = new ArrayList();
        row.add(1);
        rows.add(row);
        // start at row num 2 and create each row
        for (int i = 2; i <= numRows; i++) {
            List<Integer> prevRow = row;
            row = new ArrayList();
            rows.add(row);
            // fill the row
            // start at index 0 and iterate till less than number of items in the row
            for (int j = 0; j < i; j++) {
                int n = 0;
                int n1 = 0;
                // get the n item, make sure not to exceed row size
                if (j < prevRow.size())
                    n = prevRow.get(j);
                // get the n-1 item, make sure not to be outside of index
                if (j > 0)
                    n1 = prevRow.get(j - 1);
                row.add(n + n1);
            }
        }
        return rows;
    }
}
