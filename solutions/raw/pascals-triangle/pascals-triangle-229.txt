class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> res = new ArrayList<>();
        if (numRows == 0) {
            return res;
        }
        List<Integer> fRow = new ArrayList<>();
        fRow.add(1);
        res.add(fRow);
        for (int i = 1; i < numRows; i++) {
            List<Integer> prevR = res.get(i - 1);
            List<Integer> currR = new ArrayList<>();
            // The first element of each row is always 1
            currR.add(1);
            // Fill the middle elements by summing elements from the previous row
            for (int j = 1; j < i; j++) {
                currR.add(prevR.get(j - 1) + prevR.get(j));
            }
            // The last element of each row is always 1
            currR.add(1);
            // Add the current row to the result
            res.add(currR);
        }
        return res;
    }
}
