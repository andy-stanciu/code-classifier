class Solution {

    public List<List<Integer>> generate(int numRows) {
        //declare first result list
        List<List<Integer>> result = new ArrayList<>();
        //we need to know how many number is inside the specific row to track
        int counter = 1;
        //now we have to  iterate numRows time
        for (int i = 0; i < numRows; i++) {
            //each row we need new ArrayList
            List<Integer> currentRow = new ArrayList<>();
            //now we have to add the number in currenRow and the loops run counter times
            for (int j = 0; j < counter; j++) {
                //we know the first and last of the row is 1
                if (j == 0 || j == counter - 1) {
                    currentRow.add(1);
                } else {
                    //and else all are the sum of previous row element
                    // so we need to think about some kind of mapping for previous row element
                    // if we are at row 2 index 1, we have to add these two numbers: (row1:index 0 and 1)
                    //index 0 and 1 -> (j-1) & j
                    //fisrt we have to get the previous last row from the list result
                    //then get the j-1 and j
                    /* 
                    result.get(i-1).get(j-1);
                    result.get(i-1).get(j);
                     */
                    //now we have add it ad put it into our currentRow
                    currentRow.add(result.get(i - 1).get(j - 1) + result.get(i - 1).get(j));
                }
            }
            //now we have to add currentRow into our result
            result.add(currentRow);
            //in last we have to increment our counter
            counter++;
        }
        return result;
    }
}
