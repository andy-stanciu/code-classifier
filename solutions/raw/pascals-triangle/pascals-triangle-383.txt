class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> triangle = new ArrayList<>();
        // Edge case for numRows = 0
        if (numRows == 0) {
            return triangle;
        }
        // Initialize the first row with {1}
        List<Integer> firstRow = new ArrayList<>();
        firstRow.add(1);
        triangle.add(firstRow);
        // Generate each subsequent row
        for (int i = 1; i < numRows; ++i) {
            List<Integer> currentRow = new ArrayList<>();
            // Add the first element of each row
            currentRow.add(1);
            // Calculate each element of the current row
            for (int j = 1; j < i; ++j) {
                int num = triangle.get(i - 1).get(j - 1) + triangle.get(i - 1).get(j);
                currentRow.add(num);
            }
            // Add the last element of each row
            currentRow.add(1);
            triangle.add(currentRow);
        }
        return triangle;
    }

    // Helper function to print the 2D list
    private void print2DList(List<List<Integer>> list) {
        System.out.print("[");
        for (List<Integer> row : list) {
            System.out.print("[");
            for (int num : row) {
                System.out.print(num + " ");
            }
            System.out.print("]");
        }
        System.out.println("]");
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int numRows = 5;
        List<List<Integer>> result = solution.generate(numRows);
        // Print the result
        solution.print2DList(result);
    }
}
