class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> pascalTriangle = new ArrayList();
        List<Integer> prevList = new ArrayList(Arrays.asList(1));
        pascalTriangle.add(prevList);
        if (numRows == 1) {
            return pascalTriangle;
        }
        prevList = new ArrayList(Arrays.asList(1, 1));
        pascalTriangle.add(prevList);
        for (int currRow = 3; currRow <= numRows; currRow++) {
            List<Integer> currList = new ArrayList();
            currList.add(1);
            for (int i = 0; i < prevList.size() - 1; i++) {
                currList.add(prevList.get(i) + prevList.get(i + 1));
            }
            currList.add(1);
            pascalTriangle.add(currList);
            prevList = currList;
        }
        return pascalTriangle;
    }
}
