class Solution {

    public int findMinArrowShots(int[][] points) {
        // sorting based on start times
        Arrays.sort(points, (a, b) -> a[0] - b[0]);
        // start and end will denote the overlap window
        int start = points[0][0];
        int end = points[0][1];
        int count = 0;
        for (int i = 1; i < points.length; i++) {
            // find the overlaps with current window
            start = Math.max(start, points[i][0]);
            end = Math.min(end, points[i][1]);
            // no overlapping, hence increase arrow count and initialize with new overlap window
            if (start > end) {
                count++;
                start = points[i][0];
                end = points[i][1];
            }
        }
        return count + 1;
    }
}
