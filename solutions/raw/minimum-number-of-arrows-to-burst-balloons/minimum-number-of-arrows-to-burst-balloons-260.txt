class Solution {

    public int findMinArrowShots(int[][] points) {
        // sort 2D array
        Arrays.sort(points, (a, b) -> {
            if (a[0] == b[0])
                return Integer.compare(a[1], b[1]);
            return Integer.compare(a[0], b[0]);
        });
        int maxStartIndex = points[0][0];
        int minEndIndex = points[0][1];
        int count = 0;
        for (int i = 1; i < points.length; i++) {
            if (// current one lies in previous range
            points[i][0] <= minEndIndex) {
                maxStartIndex = Math.max(points[i][0], maxStartIndex);
                minEndIndex = Math.min(points[i][1], minEndIndex);
            } else {
                // update range
                maxStartIndex = points[i][0];
                minEndIndex = points[i][1];
                // and increment counter
                count++;
            }
        }
        return count + 1;
    }
}
