class Solution {

    public int findMinArrowShots(int[][] points) {
        //TC-O(n log n), SC-O(1)
        //Sorting function to sort array by the col.used
        Arrays.sort(points, (a, b) -> Integer.compare(a[1], b[1]));
        //this as well "(a, b)->(a[1] - b[1])" but was giving error for negative values so used the other one
        int end = points[0][1];
        //constraint atleast one element
        int count = 1;
        for (int i = 1; i < points.length; i++) {
            if (points[i][0] > end) {
                //if my next start is greater then only i will need new arrow other if it is less my existing arrow will burst ballons.
                count++;
                end = points[i][1];
            }
        }
        return count;
    }
}
