class Solution {

    public int findMinArrowShots(int[][] points) {
        Arrays.sort(points, (a, b) -> {
            long diff = (long) a[0] - (long) b[0];
            return diff < 0 ? -1 : (diff > 0 ? 1 : 0);
        });
        int prev_s = points[0][0];
        int prev_e = points[0][1];
        int n = points.length;
        int cnt = 1;
        for (int i = 1; i < n; i++) {
            int curr_s = points[i][0];
            int curr_e = points[i][1];
            if (curr_s <= prev_e)
                prev_e = Math.min(prev_e, curr_e);
            else {
                prev_s = curr_s;
                prev_e = curr_e;
                cnt++;
            }
        }
        return cnt;
    }
}
// Time complexity : O(n*logn)
