class Solution {

    public int findMinArrowShots(int[][] points) {
        if (points.length == 0)
            return 0;
        // Sort the points in ascending order based on \'end\' position
        Arrays.sort(points, (a, b) -> Integer.compare(a[1], b[1]));
        int count = 1;
        int end = points[0][1];
        for (int i = 1; i < points.length; i++) {
            // If the current balloon starts after the end of the previous one, then we need another arrow
            if (points[i][0] > end) {
                count++;
                end = points[i][1];
            }
        }
        return count;
    }
}
