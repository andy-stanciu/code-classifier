class Solution {

    // 1. Sort the balloon list in increasing order of start index
    // 2. Starting at index 1 compare the start index with end index of balloon earlier baloon.
    // if smaller , one arrow can hit both balloons.
    // if greater, need another arrow. Increment arrow count. New comparison point is end index of current baloon.
    // Repeat for entire list.
    public int findMinArrowShots(int[][] points) {
        if (points.length == 1) {
            return 1;
        }
        Arrays.sort(points, new java.util.Comparator<int[]>() {

            public int compare(int[] a, int[] b) {
                return Integer.compare(a[0], b[0]);
            }
        });
        // Arrow count
        int count = 1;
        int tempEnd = points[0][1];
        for (int j = 1; j < points.length; j++) {
            if (points[j][0] <= tempEnd) {
                tempEnd = Math.min(tempEnd, points[j][1]);
                continue;
            } else {
                tempEnd = points[j][1];
                count++;
            }
        }
        return count;
    }
}
