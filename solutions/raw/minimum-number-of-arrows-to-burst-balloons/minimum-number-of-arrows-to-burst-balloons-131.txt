class Solution {

    public int findMinArrowShots(int[][] points) {
        // Sort points by their end time
        Arrays.sort(points, (a, b) -> Integer.compare(a[1], b[1]));
        // Initialize the number of arrows and the position of the first arrow
        int arrows = 1;
        int end = points[0][1];
        for (int[] point : points) {
            // If the current balloon starts after the last arrow\'s end, we need a new arrow
            if (point[0] > end) {
                arrows++;
                end = point[1];
            }
        }
        return arrows;
    }
}
