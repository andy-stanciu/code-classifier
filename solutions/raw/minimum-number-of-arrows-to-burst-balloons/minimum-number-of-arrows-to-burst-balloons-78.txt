class Solution {

    class Activity {

        int start;

        int finish;

        Activity(int s, int f) {
            this.start = s;
            this.finish = f;
        }
    }

    public int findMinArrowShots(int[][] points) {
        Arrays.sort(points, new Comparator<int[]>() {

            @Override
            public int compare(int[] l, int[] r) {
                return l[1] < r[1] ? -1 : 1;
            }
        });
        //         we are by default including the first activity
        ArrayList<ArrayList<Integer>> list = new ArrayList<>();
        ArrayList<Integer> list2 = new ArrayList<>();
        list2.add(points[0][0]);
        list2.add(points[0][1]);
        list.add(list2);
        int prev = 0;
        for (int curr = 0; curr < points.length; curr++) {
            if (points[curr][0] > points[prev][1]) {
                ArrayList<Integer> list1 = new ArrayList<>();
                list1.add(points[curr][0]);
                list1.add(points[curr][1]);
                list.add(list1);
                prev = curr;
            }
        }
        System.out.println(list);
        return list.size();
    }
}
