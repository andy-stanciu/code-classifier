class Solution {

    public int[] intersection(int[] nums1, int[] nums2) {
        int count = 0;
        int[] tempArr = new int[Math.min(nums1.length, nums2.length)];
        // Determining the shorter array and iterating over it
        if (nums1.length <= nums2.length) {
            for (int i = 0; i < nums1.length; i++) {
                boolean alreadyInTempArr = false;
                // Checking if the current element is already in the tempArr to avoid duplicates
                for (int k = 0; k < count; k++) {
                    if (tempArr[k] == nums1[i]) {
                        alreadyInTempArr = true;
                        break;
                    }
                }
                if (alreadyInTempArr)
                    continue;
                for (int j = 0; j < nums2.length; j++) {
                    if (nums1[i] == nums2[j]) {
                        tempArr[count++] = nums1[i];
                        // Break to avoid adding the same element multiple times
                        break;
                    }
                }
            }
        } else {
            for (int i = 0; i < nums2.length; i++) {
                boolean alreadyInTempArr = false;
                // Checking if the current element is already in the tempArr to avoid duplicates
                for (int k = 0; k < count; k++) {
                    if (tempArr[k] == nums2[i]) {
                        alreadyInTempArr = true;
                        break;
                    }
                }
                if (alreadyInTempArr)
                    continue;
                for (int j = 0; j < nums1.length; j++) {
                    if (nums2[i] == nums1[j]) {
                        tempArr[count++] = nums2[i];
                        // Break to avoid adding the same element multiple times
                        break;
                    }
                }
            }
        }
        // Creating the result array of the appropriate size
        int[] result = new int[count];
        for (int i = 0; i < count; i++) {
            result[i] = tempArr[i];
        }
        return result;
    }
}
