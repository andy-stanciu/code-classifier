class Solution {

    public int[] intersection(int[] nums1, int[] nums2) {
        //    Arrays.sort(nums1);
        //    Arrays.sort(nums2);
        //    int i=0;int j=0;
        //     Set<Integer> res = new HashSet<>();
        //    //1 1 2 2       2 2
        //     while(j<nums1.length && i<nums2.length){
        //         if(nums1[j]!=nums2[i]){
        //            if(nums1[j]<nums2[i]){
        //             j++;
        //            }
        //            else{
        //             i++;
        //            }
        //         }
        //         else{
        //             res.add(nums1[j]);
        //             i++;
        //             j++;
        //         }
        //    }
        //    int[] resultArray=new int[res.size()];
        //    int index=0;
        //    for(int k:res){
        //     resultArray[index++]=k;
        //    }
        //    return resultArray;
        HashSet<Integer> map = new HashSet<>();
        for (int k : nums1) {
            map.add(k);
        }
        HashSet<Integer> res = new HashSet<>();
        for (int i : nums2) {
            if (map.contains(i)) {
                res.add(i);
            }
        }
        int[] resultArray = new int[res.size()];
        int index = 0;
        for (int k : res) {
            resultArray[index++] = k;
        }
        return resultArray;
    }
}
