class Solution {

    public static int removeElement(int[] nums, int val) {
        int n = nums.length;
        int count = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] == val) {
                count++;
                if (count == 1) {
                    continue;
                }
                for (int j = i; j < n - 1; j++) {
                    int temp = nums[j];
                    nums[j] = nums[j + 1];
                    nums[j + 1] = temp;
                }
                n--;
            }
            if (nums[i] == val) {
                i--;
            }
        }
        return n;
    }

    public static int count(int[] arr, int val) {
        int n = arr.length;
        int co = 0;
        for (int i = 0; i < n; i++) {
            if (arr[i] == val) {
                co++;
            }
        }
        return co;
    }

    public int removeDuplicates(int[] nums) {
        int n = nums.length;
        int x = 0, sum = 0;
        for (int i = 0; i < n; i++) {
            int c = count(nums, nums[i]);
            if (c > 1) {
                sum = sum + (c - 1);
                x = removeElement(nums, nums[i]);
            }
            n = n - (c - 1);
        }
        return n;
    }

    public int[] intersection(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        int len = n1;
        if (n2 > n1) {
            len = n2;
        }
        int[] arr2 = new int[len];
        int k = 0;
        for (int i = 0; i < n1; i++) {
            int flag = 0;
            for (int j = 0; j < n2; j++) {
                if (nums2[j] == -1) {
                    continue;
                }
                if (nums1[i] == nums2[j]) {
                    nums2[j] = -1;
                    flag = 1;
                    break;
                }
            }
            if (flag == 1) {
                arr2[k++] = nums1[i];
                nums1[i] = -1;
            }
        }
        int[] arr = new int[k];
        for (int i = 0; i < k; i++) {
            arr[i] = arr2[i];
            System.out.print(arr2[i] + " ");
        }
        Arrays.sort(arr);
        int x = removeDuplicates(arr);
        int[] arr3 = new int[x];
        for (int i = 0; i < x; i++) {
            arr3[i] = arr[i];
        }
        return arr3;
    }
}
