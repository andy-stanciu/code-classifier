class Solution {

    public int[] intersection(int[] nums1, int[] nums2) {
        //base cases
        if (nums1 == null && nums2 == null) {
            //null is the intersection
            return nums1;
        }
        if (nums1 == null || nums2 == null) {
            //no intersection, return null
            return null;
        }
        List<Integer> result = new ArrayList<>();
        //store any array elements into HashMap
        Map<Integer, Boolean> map = new HashMap<>();
        for (int number : nums1) {
            if (!map.containsKey(number)) {
                map.put(number, true);
            }
        }
        //check nums2 elements now
        for (int number : nums2) {
            if (map.containsKey(number)) {
                result.add(number);
                //remove the key from Map so that we don\'t add the same number into the result
                //We can use a set here. If we use Set, we don\'t need to delete numbers from Map
                map.remove(number);
            }
        }
        int[] resultArray = new int[result.size()];
        int index = 0;
        for (int number : result) {
            resultArray[index++] = number;
        }
        return resultArray;
    }
}
