class Solution {

    public int[] intersection(int[] nums1, int[] nums2) {
        final int N = 1001;
        int[] set = new int[N];
        for (int i : nums1) {
            set[i] = 1;
        }
        int resCount = 0;
        for (int i : nums2) {
            if (set[i] == 1) {
                set[i] = 2;
                ++resCount;
            }
        }
        int[] res = new int[resCount];
        int i = 0;
        int[] nums = nums2.length > nums1.length ? nums1 : nums2;
        for (int v : nums) {
            if (set[v] == 2) {
                res[i++] = v;
                set[v] = 1;
            }
        }
        return res;
    }

    public int[] intersectionOnSet(int[] nums1, int[] nums2) {
        HashSet<Integer> set1 = new HashSet<>(nums1.length);
        for (int i : nums1) {
            set1.add(i);
        }
        HashSet<Integer> set2 = new HashSet<>(nums2.length);
        for (int i : nums2) {
            if (set1.contains(i)) {
                set2.add(i);
            }
        }
        int[] res = new int[set2.size()];
        int j = 0;
        for (int i : set2) {
            System.out.println("v: " + res[j]);
            res[j++] = i;
        }
        return res;
    }
}
