class Solution {

    public boolean isHappy(int n) {
        int slow = n, fast = n;
        do {
            // Move slow pointer one step
            slow = sumSq(slow);
            // Move fast pointer two steps
            fast = sumSq(sumSq(fast));
            // Early exit if either pointer reaches 1
            if (slow == 1 || fast == 1) {
                return true;
            }
        } while (// Cycle detected
        slow != fast);
        // If cycle detected and 1 is not reached
        return false;
    }

    private int sumSq(int n) {
        int sum = 0;
        while (n > 0) {
            int digit = n % 10;
            sum += digit * digit;
            n /= 10;
        }
        return sum;
    }
}
