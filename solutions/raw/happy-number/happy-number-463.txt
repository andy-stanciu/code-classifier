class Solution {

    public boolean isHappy(int n) {
        // 19
        //create a set to detect cycle
        HashSet<Integer> set = new HashSet<>();
        while (n != 1) {
            // loop while n dont converge to 1
            int temp = n;
            // to hold the sum of squared digits of current number
            int sum = 0;
            while (temp != 0) {
                // find the sum of each number
                int rem = temp % 10;
                sum = sum + rem * rem;
                temp = temp / 10;
            }
            if (set.contains(sum)) {
                // check if the sum is already present
                // return false if present
                return false;
            } else {
                // otherwise add the sum to set
                set.add(sum);
            }
            // assign the new number i.e sum of squared digites of previous number
            n = sum;
        }
        //  return true if it converges
        return true;
    }
}
