class Solution {

    public boolean isHappy(int n) {
        //since it is given that number will always be positive so no need to add
        // edge case
        //This set will help us storing all visited solutions for sums
        Set<Integer> set = new HashSet<>();
        //understand this first, this loop runs until we reach a value of n which is 1 and      not present in set already
        while (n != 1 && !set.contains(n)) {
            //first we add the number to set
            set.add(n);
            //now we update the value of number returned by the function which sums the suquare of digits
            n = getSumOfDigits(n);
        }
        //retrun true if final value of n is 1 else false
        return n == 1;
    }

    //now lets write the method to compute the sum of digits of number as follows
    public int getSumOfDigits(int n) {
        int sum = 0;
        while (n > 0) {
            //stores the last digit of number
            int digit = n % 10;
            //updates the number for next itteration
            n = n / 10;
            sum += digit * digit;
        }
        return sum;
    }
    //lets run the final code and check!
}
