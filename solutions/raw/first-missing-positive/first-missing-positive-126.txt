/**
 * time complexity O(N) where N is the number of elements in the array
 * space complexity O(1)
 */
class Solution {

    public int firstMissingPositive(int[] nums) {
        // make all numbers negatve
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > 0)
                nums[i] = -1 * nums[i];
            else
                nums[i] = Integer.MIN_VALUE;
        }
        // iterate all the values
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != Integer.MIN_VALUE && nums[i] != Integer.MAX_VALUE) {
                int value = Math.abs(nums[i]);
                if (value <= nums.length) {
                    if (nums[value - 1] == Integer.MIN_VALUE)
                        nums[value - 1] = Integer.MAX_VALUE;
                    else {
                        nums[value - 1] = Math.abs(nums[value - 1]);
                    }
                }
            }
        }
        // find the first index which has negative value
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == Integer.MIN_VALUE || nums[i] < 0)
                return i + 1;
        }
        return nums.length + 1;
    }
}
