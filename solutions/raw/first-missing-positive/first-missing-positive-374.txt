class Solution {

    public int firstMissingPositive(int[] nums) {
        int currentIndex = 0;
        while (currentIndex < nums.length) {
            if (nums[currentIndex] > 0 && nums[currentIndex] < nums.length && nums[currentIndex] != nums[nums[currentIndex] - 1]) {
                swap(nums, currentIndex, nums[currentIndex] - 1);
            } else
                currentIndex++;
        }
        for (currentIndex = 0; currentIndex < nums.length; currentIndex++) {
            if (nums[currentIndex] != currentIndex + 1)
                return currentIndex + 1;
        }
        return currentIndex + 1;
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
