class Solution {

    public int firstMissingPositive(int[] nums) {
        int n = nums.length;
        // 1. perform cyclic sort on +ve nums array:
        for (int i = 0; i < nums.length; i++) {
            while (nums[i] > 0 && nums[i] <= n && nums[i] != nums[nums[i] - 1]) {
                // swap
                int temp = nums[nums[i] - 1];
                nums[nums[i] - 1] = nums[i];
                nums[i] = temp;
            }
        }
        // 2. iterate and find the +ve num that is not in correct index
        //    starting from 1 to length of nums array, coz if all the elements
        //    are in correct index then all positive numbers from 1 to the max +ve num in array are in the array
        //    and (n+1) will be the first +ve num that is missing.
        for (int i = 0; i < n; i++) {
            if (nums[i] != i + 1) {
                return i + 1;
            }
        }
        return n + 1;
    }
}
