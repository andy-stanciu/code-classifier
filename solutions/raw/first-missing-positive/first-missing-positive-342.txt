class Solution {

    public static int firstMissingPositive(int[] arr) {
        cyclicSort(arr);
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] != i + 1) {
                return i + 1;
            }
        }
        return arr.length + 1;
    }

    public static void cyclicSort(int[] arr) {
        for (int i = 0; i < arr.length; ) {
            if (arr[i] == i + 1) {
                i++;
            } else if (arr[i] <= arr.length && arr[i] > 0 && arr[i] == arr[arr[i] - 1]) {
                i++;
            } else {
                if (arr[i] > arr.length || arr[i] <= 0) {
                    i++;
                } else {
                    // (arr, 1, 2) // [2, 4, 1, 5]
                    swap(arr, arr[i], i);
                }
            }
        }
    }

    public static void swap(int[] arr, int actual, int indexOg) {
        int temp = arr[indexOg];
        arr[indexOg] = arr[actual - 1];
        arr[actual - 1] = temp;
    }
}
