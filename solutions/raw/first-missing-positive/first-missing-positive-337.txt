class Solution {

    public int firstMissingPositive(int[] nums) {
        /**
         * 1, 2,-3, 0, 4, 10, 3
         *
         * -1,-2,-1, -4, -5, 10
         */
        /**
         * Input:
         * 3, 4, -1, 1
         * or
         * 3, 4, 0, 1
         *
         * 3, 4, 1000000, 1 <- negative/0 is marked as really big number
         * 3, 4,-1000000, 1 <- mark subsequent indexes as negative
         * 3, 4,-1000000,-1
         * 3, 4,-1000000,-1
         * -3,4,-1000000,-1
         */
        // mark all negative numbers and 0 as really negative
        for (int x = 0; x < nums.length; x++) {
            if (nums[x] <= 0) {
                nums[x] = Integer.MAX_VALUE;
            }
        }
        for (int x = 0; x < nums.length; x++) {
            int indexToMark = Math.abs(nums[x]) - 1;
            if (0 <= indexToMark && indexToMark < nums.length) {
                if (nums[indexToMark] > 0) {
                    nums[indexToMark] *= -1;
                }
            }
        }
        // get first non-negative number
        for (int x = 0; x < nums.length; x++) {
            if (nums[x] > 0) {
                return x + 1;
            }
        }
        return nums.length + 1;
    }
}
