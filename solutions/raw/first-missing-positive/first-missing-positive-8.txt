class Solution {

    public int firstMissingPositive(int[] nums) {
        int n = nums.length;
        // remove unnecessary elements
        for (int i = 0; i < n; i++) {
            if (nums[i] <= 0 || nums[i] > n) {
                nums[i] = n + 1;
            }
        }
        // place the number at right index
        for (int i = 0; i < n; i++) {
            int num = nums[i];
            if (num > n || num <= 0 || Math.abs(num) == i + 1) {
                // ignoring uneeded and alreday placed
                continue;
            }
            if (num == i + 1) {
                // marking visited the already right placed numbers
                nums[i] = num * -1;
            }
            // swapping to right place
            int existing = nums[num - 1];
            nums[num - 1] = -1 * num;
            //re check the new number  i--;
            nums[i] = existing;
        }
        for (int i = 0; i < n; i++) {
            if (Math.abs(nums[i]) != i + 1) {
                // first unknown number
                return i + 1;
            }
        }
        return n + 1;
    }
}
