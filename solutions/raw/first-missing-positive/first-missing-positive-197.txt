class Solution {

    public int firstMissingPositive(int[] nums) {
        cycle_sort(nums);
        return findMissingNumber(nums);
    }

    public static int findMissingNumber(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] != i + 1) {
                return i + 1;
            }
        }
        return arr.length + 1;
    }

    static void cycle_sort(int[] arr) {
        int i = 0;
        while (i < arr.length) {
            int correctIndex = arr[i] - 1;
            if (arr[i] > 0 && arr[i] < arr.length && arr[i] != arr[correctIndex]) {
                swap(i, arr, correctIndex);
            } else {
                i++;
            }
        }
    }

    private static void swap(int i, int[] arr, int correctIndex) {
        int temp = arr[i];
        arr[i] = arr[correctIndex];
        arr[correctIndex] = temp;
    }
}
