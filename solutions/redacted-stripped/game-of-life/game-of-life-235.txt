class Solution {

    public void method1(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int nNumber = neighbourNumber(board, i, j);
                int currValue = board[i][j];
                if (nNumber == 3 && (currValue & 1) == 0 || nNumber >= 2 && nNumber <= 3 && (currValue & 1) == 1) {
                    board[i][j] += 2;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                board[i][j] >>= 1;
            }
        }
    }

    private int neighbourNumber(int[][] board, int x, int y) {
        int sum = 0;
        for (int i = -1; i <= 1; i++) {
            for (int j = -1; j <= 1; j++) {
                if (i != 0 || j != 0) {
                    sum += value(board, x + i, y + j);
                }
            }
        }
        return sum;
    }

    private int value(int[][] board, int i, int j) {
        if (i < 0 || j < 0 || i >= board.length || j >= board[0].length) {
            return 0;
        }
        return board[i][j] & 1;
    }
}
