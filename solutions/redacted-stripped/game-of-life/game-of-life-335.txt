class Solution {

    public void method1(int[][] board) {
        int[][] temp = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int count = 0;
                count += check(board, i + 1, j);
                count += check(board, i - 1, j);
                count += check(board, i, j - 1);
                count += check(board, i, j + 1);
                count += check(board, i - 1, j + 1);
                count += check(board, i - 1, j - 1);
                count += check(board, i + 1, j - 1);
                count += check(board, i + 1, j + 1);
                if (board[i][j] == 1) {
                    if (count == 2 || count == 3) {
                        temp[i][j] = 1;
                    } else {
                        temp[i][j] = 0;
                    }
                } else {
                    if (count == 3)
                        temp[i][j] = 1;
                }
            }
        }
        for (int i = 0; i < temp.length; i++) {
            board[i] = temp[i];
        }
    }

    private int check(int[][] board, int x, int y) {
        if (x < 0 || y < 0 || x >= board.length || y >= board[0].length)
            return 0;
        if (board[x][y] == 1)
            return 1;
        return 0;
    }
}
