class Solution {

    public int[] calculate(int[][] board, int row, int col) {
        int one = 0;
        int zero = 0;
        if (row + 1 < board.length && board[row + 1][col] == 1) {
            one++;
        }
        if (row + 1 < board.length && board[row + 1][col] == 0) {
            zero++;
        }
        if (col + 1 < board[0].length && board[row][col + 1] == 0) {
            zero++;
        }
        if (col + 1 < board[0].length && board[row][col + 1] == 1) {
            one++;
        }
        if (col - 1 >= 0 && board[row][col - 1] == 0) {
            zero++;
        }
        if (col - 1 >= 0 && board[row][col - 1] == 1) {
            one++;
        }
        if (row - 1 >= 0 && board[row - 1][col] == 1) {
            one++;
        }
        if (row - 1 >= 0 && board[row - 1][col] == 0) {
            zero++;
        }
        if (row - 1 >= 0 && col + 1 < board[0].length && board[row - 1][col + 1] == 0) {
            zero++;
        }
        if (row - 1 >= 0 && col + 1 < board[0].length && board[row - 1][col + 1] == 1) {
            one++;
        }
        if (row - 1 >= 0 && col - 1 >= 0 && board[row - 1][col - 1] == 1) {
            one++;
        }
        if (row - 1 >= 0 && col - 1 >= 0 && board[row - 1][col - 1] == 0) {
            zero++;
        }
        if (row + 1 < board.length && col + 1 < board[0].length && board[row + 1][col + 1] == 0) {
            zero++;
        }
        if (row + 1 < board.length && col + 1 < board[0].length && board[row + 1][col + 1] == 1) {
            one++;
        }
        if (row + 1 < board.length && col - 1 >= 0 && board[row + 1][col - 1] == 0) {
            zero++;
        }
        if (row + 1 < board.length && col - 1 >= 0 && board[row + 1][col - 1] == 1) {
            one++;
        }
        return new int[] { one, zero };
    }

    public void method1(int[][] board) {
        int[][] board2 = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int[] temp = calculate(board, i, j);
                int one = temp[0];
                int zero = temp[1];
                if (board[i][j] == 1) {
                    board2[i][j] = 1;
                    if (one < 2) {
                        board2[i][j] = 0;
                    } else if (one == 2 || one == 3) {
                        continue;
                    } else if (one > 3) {
                        board2[i][j] = 0;
                    }
                } else {
                    if (one == 3) {
                        board2[i][j] = 1;
                    }
                }
            }
        }
        for (int i = 0; i < board2.length; i++) {
            for (int j = 0; j < board2[0].length; j++) {
                board[i][j] = board2[i][j];
            }
        }
    }
}
