class Solution {

    public void method1(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int[][] arr = new int[m][n];
        int[][] moves = { { -1, -1 }, { 0, -1 }, { 1, -1 }, { 1, 0 }, { 1, 1 }, { 0, 1 }, { -1, 1 }, { -1, 0 } };
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < n; j++) {
                int cnt = 0;
                for (int p = 0; p < moves.length; p++) {
                    int k = i + moves[p][0];
                    int l = j + moves[p][1];
                    if (k >= 0 && k < m && l >= 0 && l < n) {
                        if (board[k][l] == 1)
                            cnt++;
                    }
                }
                if (board[i][j] == 1 && (cnt == 2 || cnt == 3)) {
                    arr[i][j] = 1;
                }
                if (board[i][j] == 0 && (cnt == 3)) {
                    arr[i][j] = 1;
                }
            }
        }
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[0].length; j++) {
                board[i][j] = arr[i][j];
            }
        }
    }
}
