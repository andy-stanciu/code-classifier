class Solution {

    public void method1(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        int[][] ans = new int[n][m];
        int count1 = 0;
        int count2 = 0;
        int[] dr = { -1, -1, 0, 1, 1, 1, 0, -1 };
        int[] dc = { 0, 1, 1, 1, 0, -1, -1, -1 };
        int delrow = 0;
        int delcol = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == 1) {
                    count1 = 0;
                    for (int k = 0; k < 8; k++) {
                        delrow = i + dr[k];
                        delcol = j + dc[k];
                        if (delrow >= 0 && delrow < n && delcol >= 0 && delcol < m) {
                            if (board[delrow][delcol] == 1) {
                                count1++;
                            }
                        }
                    }
                    if (count1 >= 2 && count1 <= 3) {
                        ans[i][j] = 1;
                    } else {
                        ans[i][j] = 0;
                    }
                } else {
                    count2 = 0;
                    for (int k = 0; k < 8; k++) {
                        delrow = i + dr[k];
                        delcol = j + dc[k];
                        if (delrow >= 0 && delrow < n && delcol >= 0 && delcol < m) {
                            if (board[delrow][delcol] == 1) {
                                count2++;
                            }
                        }
                    }
                    if (count2 == 3) {
                        ans[i][j] = 1;
                    } else {
                        ans[i][j] = 0;
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }
}
