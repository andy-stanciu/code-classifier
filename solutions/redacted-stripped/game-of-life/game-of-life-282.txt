class Solution {

    static int[][] ans;

    public void method1(int[][] board) {
        ans = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int count = check(board, i, j);
                if (board[i][j] == 1) {
                    if (count < 2 || count > 3) {
                        ans[i][j] = 0;
                    } else {
                        ans[i][j] = 1;
                    }
                } else {
                    if (count == 3) {
                        ans[i][j] = 1;
                    } else {
                        ans[i][j] = 0;
                    }
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }

    private static int check(int[][] board, int i, int j) {
        int count = 0;
        if (j > 0) {
            count += board[i][j - 1];
        }
        if (j < board[0].length - 1) {
            count += board[i][j + 1];
        }
        if (i < board.length - 1) {
            count += board[i + 1][j];
        }
        if (i > 0) {
            count += board[i - 1][j];
        }
        if (j > 0 && i > 0) {
            count += board[i - 1][j - 1];
        }
        if (j < board[0].length - 1 && i > 0) {
            count += board[i - 1][j + 1];
        }
        if (j < board[0].length - 1 && i < board.length - 1) {
            count += board[i + 1][j + 1];
        }
        if (j > 0 && i < board.length - 1) {
            count += board[i + 1][j - 1];
        }
        return count;
    }
}
