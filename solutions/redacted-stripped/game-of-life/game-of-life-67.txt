class Solution {

    public void method1(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int c = 0;
                c += j + 1 < n ? (board[i][j + 1] == 1 || board[i][j + 1] == 3) ? 1 : 0 : 0;
                c += i + 1 < m ? (board[i + 1][j] == 1 || board[i + 1][j] == 3) ? 1 : 0 : 0;
                c += j - 1 >= 0 ? (board[i][j - 1] == 1 || board[i][j - 1] == 3) ? 1 : 0 : 0;
                c += i - 1 >= 0 ? (board[i - 1][j] == 1 || board[i - 1][j] == 3) ? 1 : 0 : 0;
                c += i + 1 < m && j + 1 < n ? (board[i + 1][j + 1] == 1 || board[i + 1][j + 1] == 3) ? 1 : 0 : 0;
                c += i + 1 < m && j - 1 >= 0 ? (board[i + 1][j - 1] == 1 || board[i + 1][j - 1] == 3) ? 1 : 0 : 0;
                c += i - 1 >= 0 && j - 1 >= 0 ? (board[i - 1][j - 1] == 1 || board[i - 1][j - 1] == 3) ? 1 : 0 : 0;
                c += i - 1 >= 0 && j + 1 < n ? (board[i - 1][j + 1] == 1 || board[i - 1][j + 1] == 3) ? 1 : 0 : 0;
                if ((board[i][j] == 1 || board[i][j] == 3) && c < 2) {
                    board[i][j] = 3;
                } else if ((board[i][j] == 1 || board[i][j] == 3) && (c == 2 || c == 3)) {
                    board[i][j] = 1;
                } else if ((board[i][j] == 1 || board[i][j] == 3) && c > 3) {
                    board[i][j] = 3;
                } else if ((board[i][j] == 0 || board[i][j] == 2) && c == 3) {
                    board[i][j] = 2;
                } else {
                    board[i][j] = board[i][j];
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] == 2) {
                    board[i][j] = 1;
                } else if (board[i][j] == 3) {
                    board[i][j] = 0;
                }
            }
        }
    }
}
