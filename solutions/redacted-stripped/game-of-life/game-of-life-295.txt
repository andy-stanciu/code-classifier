class Solution {

    public void method1(int[][] board) {
        int col = board[0].length;
        int row = board.length;
        int[][] tem = new int[row][col];
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                tem[i][j] = countNeighbours(i, j, board);
            }
        }
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if (board[i][j] == 0 && tem[i][j] == 3) {
                    board[i][j] = 1;
                } else if (board[i][j] == 1 && (tem[i][j] == 2 || tem[i][j] == 3)) {
                    board[i][j] = 1;
                } else {
                    board[i][j] = 0;
                }
            }
        }
    }

    public int countNeighbours(int row, int col, int[][] board) {
        int col_len = board[0].length;
        int row_len = board.length;
        int index = 0;
        for (int i = row - 1; i < row + 2; i++) {
            for (int j = col - 1; j < col + 2; j++) {
                if (i < 0 || i > row_len - 1 || j < 0 || j > col_len - 1) {
                    continue;
                } else if (i == row && j == col) {
                    continue;
                } else if (board[i][j] == 1) {
                    index++;
                }
            }
        }
        return index;
    }
}
