class Solution {

    public int getNeighbors(int[][] board, int i, int j) {
        int neig = 0;
        for (int r = i - 1; r <= i + 1; r++) {
            for (int c = j - 1; c <= j + 1; c++) {
                if (r == i && c == j)
                    continue;
                if (r < 0 || r >= board.length || c < 0 || c >= board[0].length)
                    continue;
                if (board[r][c] == 1 || board[r][c] == 3)
                    neig++;
            }
        }
        return neig;
    }

    public void method1(int[][] board) {
        int row = board.length, col = board[0].length;
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                int neig = getNeighbors(board, i, j);
                if (board[i][j] == 0 && neig == 3)
                    board[i][j] = 2;
                if (board[i][j] == 1) {
                    if (neig == 2 || neig == 3)
                        board[i][j] = 3;
                    else
                        board[i][j] = 1;
                }
            }
        }
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                board[i][j] = board[i][j] < 2 ? 0 : 1;
            }
        }
    }
}
