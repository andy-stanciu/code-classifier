class Solution {

    public void method1(int[][] board) {
        int m = board.length, n = board[0].length;
        int[][] dirs = { { 1, 0 }, { -1, 0 }, { 0, 1 }, { 0, -1 }, { 1, 1 }, { 1, -1 }, { -1, 1 }, { -1, -1 } };
        int[][] copy = Arrays.copyOf(board, m);
        for (int i = 0; i < m; i++) copy[i] = Arrays.copyOf(board[i], n);
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int count = 0;
                for (int[] dir : dirs) {
                    int I = i + dir[0];
                    int J = j + dir[1];
                    if (I < 0 || J < 0 || I >= m || J >= n)
                        continue;
                    if (copy[I][J] == 1)
                        count++;
                }
                if (board[i][j] == 0) {
                    if (count == 3)
                        board[i][j] = 1;
                } else {
                    if (count < 2 || count > 3)
                        board[i][j] = 0;
                }
            }
        }
    }
}
