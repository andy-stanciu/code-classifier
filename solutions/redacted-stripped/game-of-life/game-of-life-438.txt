class Solution {

    public void method1(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int[][] res = new int[m][n];
        int[][] dir = new int[][] { { -1, -1 }, { -1, 0 }, { -1, +1 }, { 0, -1 }, { 0, +1 }, { +1, -1 }, { +1, 0 }, { +1, +1 } };
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int live = 0;
                for (int k = 0; k < 8; k++) {
                    if (i + dir[k][0] >= 0 && i + dir[k][0] < m && j + dir[k][1] >= 0 && j + dir[k][1] < n && board[i + dir[k][0]][j + dir[k][1]] == 1)
                        live++;
                }
                if (live == 3)
                    res[i][j] = 1;
                else if (live < 2 || live > 3)
                    res[i][j] = 0;
                else
                    res[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < m; i++) for (int j = 0; j < n; j++) board[i][j] = res[i][j];
    }
}
