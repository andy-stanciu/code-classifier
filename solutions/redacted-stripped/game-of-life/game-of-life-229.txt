class Solution {

    public void method1(int[][] board) {
        int[] dx = { 1, 1, -1, -1, 1, -1, 0, 0 };
        int[] dy = { 1, 0, 0, -1, -1, 1, 1, -1 };
        int[][] copyboard = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                copyboard[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int sum = 0;
                for (int k = 0; k < dx.length; k++) {
                    int newi = dx[k] + i;
                    int newj = dy[k] + j;
                    if (newi >= 0 && newi <= board.length - 1 && newj >= 0 && newj <= board[0].length - 1) {
                        sum += copyboard[newi][newj];
                    }
                }
                if (copyboard[i][j] == 0) {
                    if (sum == 3)
                        board[i][j] = 1;
                }
                if (copyboard[i][j] == 1) {
                    if (sum < 2 || sum > 3)
                        board[i][j] = 0;
                }
            }
        }
    }
}
