class Solution {

    public void method1(int[][] board) {
        int[][] newBoard = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            newBoard[i] = Arrays.copyOf(board[i], board[i].length);
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == newBoard[i][j]) {
                    if (board[i][j] == 1) {
                        int count = 0;
                        if (i - 1 >= 0) {
                            if (board[i - 1][j] == 1) {
                                count++;
                            }
                            if (j + 1 < board[i].length && board[i - 1][j + 1] == 1) {
                                count++;
                            }
                        }
                        if (i + 1 < board.length) {
                            if (board[i + 1][j] == 1) {
                                count++;
                            }
                            if (j - 1 >= 0 && board[i + 1][j - 1] == 1) {
                                count++;
                            }
                        }
                        if (j - 1 >= 0) {
                            if (board[i][j - 1] == 1) {
                                count++;
                            }
                            if (i - 1 >= 0 && board[i - 1][j - 1] == 1) {
                                count++;
                            }
                        }
                        if (j + 1 < board[i].length) {
                            if (board[i][j + 1] == 1) {
                                count++;
                            }
                            if (i + 1 < board.length && board[i + 1][j + 1] == 1) {
                                count++;
                            }
                        }
                        if (count > 3 || count < 2) {
                            newBoard[i][j] = 0;
                        }
                    } else {
                        int count = 0;
                        if (i - 1 >= 0) {
                            if (board[i - 1][j] == 1) {
                                count++;
                            }
                            if (j + 1 < board[i].length && board[i - 1][j + 1] == 1) {
                                count++;
                            }
                        }
                        if (i + 1 < board.length) {
                            if (board[i + 1][j] == 1) {
                                count++;
                            }
                            if (j - 1 >= 0 && board[i + 1][j - 1] == 1) {
                                count++;
                            }
                        }
                        if (j - 1 >= 0) {
                            if (board[i][j - 1] == 1) {
                                count++;
                            }
                            if (i - 1 >= 0 && board[i - 1][j - 1] == 1) {
                                count++;
                            }
                        }
                        if (j + 1 < board[i].length) {
                            if (board[i][j + 1] == 1) {
                                count++;
                            }
                            if (i + 1 < board.length && board[i + 1][j + 1] == 1) {
                                count++;
                            }
                        }
                        if (count == 3) {
                            newBoard[i][j] = 1;
                        }
                    }
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                board[i][j] = newBoard[i][j];
            }
        }
    }
}
