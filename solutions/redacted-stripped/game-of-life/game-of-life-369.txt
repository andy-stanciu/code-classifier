class Solution {

    public void method1(int[][] board) {
        int[][] result = new int[board.length][board[0].length];
        int count;
        for (int r = 0; r < board.length; r++) {
            for (int c = 0; c < board[0].length; c++) {
                count = 0;
                if (r - 1 >= 0 && c - 1 >= 0 && board[r - 1][c - 1] == 1)
                    count++;
                if (r - 1 >= 0 && board[r - 1][c] == 1)
                    count++;
                if (r - 1 >= 0 && c + 1 < board[0].length && board[r - 1][c + 1] == 1)
                    count++;
                if (c - 1 >= 0 && board[r][c - 1] == 1)
                    count++;
                if (c + 1 < board[0].length && board[r][c + 1] == 1)
                    count++;
                if (r + 1 < board.length && c - 1 >= 0 && board[r + 1][c - 1] == 1)
                    count++;
                if (r + 1 < board.length && board[r + 1][c] == 1)
                    count++;
                if (r + 1 < board.length && c + 1 < board[0].length && board[r + 1][c + 1] == 1)
                    count++;
                if (board[r][c] == 1) {
                    if (count == 2 || count == 3)
                        result[r][c] = 1;
                } else {
                    if (count == 3)
                        result[r][c] = 1;
                }
            }
        }
        for (int r = 0; r < board.length; r++) {
            for (int c = 0; c < board[0].length; c++) {
                board[r][c] = result[r][c];
            }
        }
    }
}
