class Solution {

    public void increaseValue(int i, int j, int n, int m, int[][] neighbour) {
        if (i < 0 || j < 0 || i >= n || j >= m)
            return;
        neighbour[i][j]++;
    }

    public void method1(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        int[][] neighbour = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == 1) {
                    increaseValue(i, j - 1, n, m, neighbour);
                    increaseValue(i, j + 1, n, m, neighbour);
                    increaseValue(i - 1, j, n, m, neighbour);
                    increaseValue(i - 1, j - 1, n, m, neighbour);
                    increaseValue(i - 1, j + 1, n, m, neighbour);
                    increaseValue(i + 1, j, n, m, neighbour);
                    increaseValue(i + 1, j - 1, n, m, neighbour);
                    increaseValue(i + 1, j + 1, n, m, neighbour);
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == 1 && (neighbour[i][j] < 2 || neighbour[i][j] > 3)) {
                    board[i][j] = 0;
                } else {
                    if (neighbour[i][j] == 3)
                        board[i][j] = 1;
                }
            }
        }
    }
}
