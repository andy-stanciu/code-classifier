class Solution {

    public void method1(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] == 1) {
                    board[i][j] = 10;
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int neigbhours = 0;
                int l = i - 1;
                for (int k = j - 1; k <= j + 1; k++) {
                    if (l != -1 && k != -1 && k != n) {
                        if (board[l][k] >= 10) {
                            neigbhours++;
                        }
                    }
                }
                l = i + 1;
                for (int k = j - 1; k <= j + 1; k++) {
                    if (l != m && k != -1 && k != n) {
                        if (board[l][k] >= 10) {
                            neigbhours++;
                        }
                    }
                }
                if (j - 1 != -1 && board[i][j - 1] >= 10)
                    neigbhours++;
                if (j + 1 != n && board[i][j + 1] >= 10)
                    neigbhours++;
                board[i][j] += neigbhours;
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] < 10) {
                    if (board[i][j] == 3) {
                        board[i][j] = 1;
                    } else {
                        board[i][j] = 0;
                    }
                } else {
                    int neighbours = board[i][j] - 10;
                    if (neighbours < 2) {
                        board[i][j] = 0;
                    } else if (neighbours > 3) {
                        board[i][j] = 0;
                    } else {
                        board[i][j] = 1;
                    }
                }
            }
        }
    }
}
