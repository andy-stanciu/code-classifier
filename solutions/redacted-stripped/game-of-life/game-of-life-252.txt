class Solution {

    public void method1(int[][] board) {
        if (board == null || board.length == 0)
            return;
        int m = board.length, n = board[0].length;
        int[][] copy = new int[m][n];
        int[][] directions = { { 0, 1 }, { 0, -1 }, { 1, -1 }, { -1, 1 }, { 1, 1 }, { -1, -1 }, { 1, 0 }, { -1, 0 } };
        for (int row = 0; row < m; row++) {
            for (int col = 0; col < n; col++) {
                copy[row][col] = board[row][col];
            }
        }
        for (int row = 0; row < m; row++) {
            for (int col = 0; col < n; col++) {
                int liveNeighbors = 0;
                for (int[] direction : directions) {
                    int r = row + direction[0];
                    int c = col + direction[1];
                    if ((r < m && r >= 0) && (c < n && c >= 0) && (copy[r][c] == 1)) {
                        liveNeighbors += 1;
                    }
                }
                if ((copy[row][col] == 1) && (liveNeighbors < 2 || liveNeighbors > 3)) {
                    board[row][col] = 0;
                }
                if (copy[row][col] == 0 && liveNeighbors == 3) {
                    board[row][col] = 1;
                }
            }
        }
    }
}
