class Solution {

    public void method1(int[][] board) {
        int[][] directions = { { 0, 1 }, { 0, -1 }, { 1, 0 }, { 1, -1 }, { 1, 1 }, { -1, 0 }, { -1, -1 }, { -1, 1 } };
        int m = board.length;
        int n = board[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int live = 0;
                for (int[] dir : directions) {
                    if (dir[0] + i < 0 || dir[1] + j < 0 || dir[0] + i > m || dir[1] + j > n)
                        continue;
                    if (dir[0] + i < m && dir[1] + j < n && (board[dir[0] + i][dir[1] + j] == 1 || board[dir[0] + i][dir[1] + j] == 2))
                        live++;
                }
                if (board[i][j] == 0 && live == 3)
                    board[i][j] = 3;
                if (board[i][j] == 1 && (live > 3 || live < 2))
                    board[i][j] = 2;
            }
        }
        for (int i = 0; i < m; i++) for (int j = 0; j < n; j++) board[i][j] = board[i][j] % 2;
    }
}
