class Solution {

    int getNeighbourLiveCells(int[][] board, int x, int y) {
        int[][] moves = { { -1, 0 }, { 0, -1 }, { 1, 0 }, { 0, 1 }, { -1, 1 }, { 1, -1 }, { -1, -1 }, { 1, 1 } };
        int cnt = 0;
        for (var m : moves) {
            int nx = x + m[0];
            int ny = y + m[1];
            if (nx < 0 || nx >= board.length || ny < 0 || ny >= board[0].length)
                continue;
            cnt += board[nx][ny] == 1 || board[nx][ny] == 2 ? 1 : 0;
        }
        return cnt;
    }

    public void method1(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int neighbourLiveCells = getNeighbourLiveCells(board, i, j);
                if (board[i][j] == 1) {
                    if (neighbourLiveCells < 2 || neighbourLiveCells > 3)
                        board[i][j] = 2;
                } else {
                    if (neighbourLiveCells == 3)
                        board[i][j] = 3;
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                board[i][j] %= 2;
            }
        }
    }
}
