class Solution {

    public void method1(int[][] board) {
        int n = board.length, m = board[0].length;
        int[][] v = new int[n][m];
        int[][] d = { { 0, 1 }, { 0, -1 }, { 1, 1 }, { 1, -1 }, { -1, 1 }, { -1, -1 }, { 1, 0 }, { -1, 0 } };
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int c = 0;
                for (int[] a : d) {
                    int l = i + a[0];
                    int r = j + a[1];
                    if (l < 0 || r < 0 || l >= n || r >= m)
                        continue;
                    if (board[l][r] == 1)
                        c++;
                }
                if (board[i][j] == 1) {
                    if (c < 2 || c > 3)
                        v[i][j] = 1;
                } else
                    v[i][j] = c == 3 ? 1 : 0;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (v[i][j] == 1) {
                    board[i][j] ^= 1;
                }
            }
        }
        return;
    }
}
