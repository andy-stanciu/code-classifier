class Solution {

    public void method1(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        int[][] dir = { { 0, 1 }, { 0, -1 }, { -1, 0 }, { 1, 0 }, { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 } };
        int count = 0;
        List<List<Integer>> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                count = 0;
                for (int[] arr : dir) {
                    int I = arr[0] + i;
                    int J = arr[1] + j;
                    if (I >= 0 && J >= 0 && I < n && J < m && board[I][J] == 1) {
                        count++;
                    }
                }
                if (board[i][j] == 1 && count < 2)
                    list.add(Arrays.asList(i, j, 0));
                else if (board[i][j] == 1 && count > 3)
                    list.add(Arrays.asList(i, j, 0));
                else if (board[i][j] == 0 && count == 3)
                    list.add(Arrays.asList(i, j, 1));
            }
        }
        for (int k = 0; k < list.size(); k++) {
            int i = list.get(k).get(0);
            int j = list.get(k).get(1);
            int value = list.get(k).get(2);
            board[i][j] = value;
        }
    }
}
