class Solution {

    public void method1(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        int[][] ans = new int[n][m];
        int[] drow = { 0, 0, -1, 1, -1, -1, 1, 1 };
        int[] dcol = { -1, 1, 0, 0, -1, 1, -1, 1 };
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int row = i;
                int col = j;
                int liveNbr = 0;
                for (int k = 0; k < 8; k++) {
                    int delrow = row + drow[k];
                    int delcol = col + dcol[k];
                    if (delrow >= 0 && delrow < n && delcol >= 0 && delcol < m && board[delrow][delcol] == 1) {
                        liveNbr++;
                    }
                }
                if (liveNbr < 2 && board[i][j] == 1) {
                    ans[i][j] = 0;
                } else if (liveNbr >= 2 && liveNbr <= 3 && board[i][j] == 1) {
                    ans[i][j] = 1;
                } else if (liveNbr > 3 && board[i][j] == 1) {
                    ans[i][j] = 0;
                } else if (liveNbr == 3 && board[i][j] == 0) {
                    ans[i][j] = 1;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }
}
