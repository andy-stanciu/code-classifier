class Solution {

    public void method1(int[][] board) {
        int[][] next = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                method2(i, j, board, next);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = next[i][j];
            }
        }
    }

    public static void method2(int i, int j, int[][] board, int[][] next) {
        int count = 0;
        if (i - 1 >= 0) {
            int start = (j - 1 >= 0) ? j - 1 : j;
            for (int l = start; l < j - 1 + 3 && l < board[0].length; l++) {
                if (board[i - 1][l] == 1) {
                    count++;
                }
            }
        }
        int start = (j - 1 >= 0) ? j - 1 : j;
        for (int l = start; l < j - 1 + 3 && l < board[0].length; l++) {
            if (board[i][l] == 1 && l != j) {
                count++;
            }
        }
        if (i + 1 < board.length) {
            int s = (j - 1 >= 0) ? j - 1 : j;
            for (int l = s; l < j - 1 + 3 && l < board[0].length; l++) {
                if (board[i + 1][l] == 1) {
                    count++;
                }
            }
        }
        if (board[i][j] == 1) {
            if (count < 2) {
                next[i][j] = 0;
            } else if (count == 2 || count == 3) {
                next[i][j] = 1;
            } else {
                next[i][j] = 0;
            }
        } else {
            if (count == 3) {
                next[i][j] = 1;
            }
        }
    }
}
