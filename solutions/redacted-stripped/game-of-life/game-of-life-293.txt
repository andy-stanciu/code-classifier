class Solution {

    public void method1(int[][] board) {
        int yEnd = board.length - 1, xEnd = board[0].length - 1;
        for (int y = 0; y <= yEnd; y++) {
            for (int x = 0; x <= xEnd; x++) {
                int currCell = board[y][x];
                int liveCells = checkLiveNeighbors(board, x, y);
                if ((currCell & 1) == 1) {
                    if (liveCells < 2 || liveCells > 3) {
                        board[y][x] = 1;
                    } else if (liveCells <= 3) {
                        board[y][x] = 3;
                    }
                } else {
                    if (liveCells == 3) {
                        board[y][x] = 2;
                    } else {
                        board[y][x] = 0;
                    }
                }
            }
        }
        for (int y = 0; y <= yEnd; y++) {
            for (int x = 0; x <= xEnd; x++) {
                board[y][x] = board[y][x] >> 1;
            }
        }
    }

    public int checkLiveNeighbors(int[][] board, int xPos, int yPos) {
        int liveCells = 0;
        for (int y = yPos - 1; y <= yPos + 1; y++) {
            for (int x = xPos - 1; x <= xPos + 1; x++) {
                if (x == xPos && y == yPos)
                    continue;
                if (y >= 0 && y < board.length && x >= 0 && x < board[0].length) {
                    if ((board[y][x] & 1) == 1)
                        liveCells++;
                }
            }
        }
        return liveCells;
    }
}
