class Solution {

    public void method1(int[][] board) {
        int row = board.length;
        int col = board[0].length;
        boolean[][] check = new boolean[row][col];
        int[][] directions = new int[][] { { 1, 0 }, { 0, 1 }, { -1, 0 }, { 0, -1 }, { 1, 1 }, { 1, -1 }, { -1, 1 }, { -1, -1 } };
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if (board[i][j] == 1) {
                    int count1 = 0;
                    for (int[] dir : directions) {
                        int newX = i + dir[0];
                        int newY = j + dir[1];
                        if (newX >= 0 && newY >= 0 && newX < row && newY < col) {
                            if (board[newX][newY] == 1)
                                count1++;
                        }
                    }
                    if (count1 == 2 || count1 == 3)
                        check[i][j] = true;
                } else {
                    int count1 = 0;
                    for (int[] dir : directions) {
                        int newX = i + dir[0];
                        int newY = j + dir[1];
                        if (newX >= 0 && newY >= 0 && newX < row && newY < col) {
                            if (board[newX][newY] == 1)
                                count1++;
                        }
                    }
                    if (count1 == 3)
                        check[i][j] = true;
                }
            }
        }
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if (check[i][j] == true)
                    board[i][j] = 1;
                else
                    board[i][j] = 0;
            }
        }
    }
}
