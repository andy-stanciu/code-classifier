class Solution {

    public void method1(int[][] board) {
        int[] status = new int[2];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                status = getTotalLiveCell(board, i, j);
                if (board[i][j] == 1) {
                    if (status[1] < 2 || status[1] > 3)
                        board[i][j] = 2;
                } else {
                    if (status[1] == 3) {
                        board[i][j] = -1;
                    }
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == 2) {
                    board[i][j] = 0;
                } else if (board[i][j] == -1) {
                    board[i][j] = 1;
                }
            }
        }
    }

    public int[] getTotalLiveCell(int[][] board, int i, int j) {
        int i1 = i - 1, j1 = j - 1, i2 = i + 1, j2 = j + 1, count1 = 0, count0 = 0;
        if (i1 >= 0 && j1 >= 0 && board[i1][j1] > 0)
            count1++;
        if (i1 >= 0 && board[i1][j] > 0)
            count1++;
        if (i1 >= 0 && j2 < board[0].length && board[i1][j2] > 0)
            count1++;
        if (j2 < board[0].length && board[i][j2] > 0)
            count1++;
        if (i2 < board.length && j2 < board[0].length && board[i2][j2] > 0)
            count1++;
        if (i2 < board.length && board[i2][j] > 0)
            count1++;
        if (i2 < board.length && j1 >= 0 && board[i2][j1] > 0)
            count1++;
        if (j1 >= 0 && board[i][j1] > 0)
            count1++;
        if (i1 >= 0 && j1 >= 0 && board[i1][j1] <= 0)
            count0++;
        if (i1 >= 0 && board[i1][j] <= 0)
            count0++;
        if (i1 >= 0 && j2 < board[0].length && board[i1][j2] <= 0)
            count0++;
        if (j2 < board[0].length && board[i][j2] <= 0)
            count0++;
        if (i2 < board.length && j2 < board[0].length && board[i2][j2] <= 0)
            count0++;
        if (i2 < board.length && board[i2][j] <= 0)
            count0++;
        if (i2 < board.length && j1 >= 0 && board[i2][j1] <= 0)
            count0++;
        if (j1 >= 0 && board[i][j1] <= 0)
            count0++;
        return new int[] { count0, count1 };
    }
}
