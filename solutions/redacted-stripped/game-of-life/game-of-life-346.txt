class Solution {

    public void method1(int[][] board) {
        int[][] duplicateBoard = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) for (int j = 0; j < board[0].length; j++) duplicateBoard[i][j] = board[i][j];
        int[][] steps = { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, -1 }, { 1, 0 }, { 1, 1 } };
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int nbri, nbrj;
                int liveCount = 0;
                for (int[] step : steps) {
                    nbri = i + step[0];
                    nbrj = j + step[1];
                    if (nbri < 0 || nbri >= board.length || nbrj < 0 || nbrj >= board[0].length)
                        continue;
                    if (duplicateBoard[nbri][nbrj] == 1)
                        liveCount++;
                }
                if (duplicateBoard[i][j] == 1) {
                    if (liveCount < 2 || liveCount > 3)
                        board[i][j] = 0;
                } else if (liveCount == 3) {
                    board[i][j] = 1;
                }
            }
        }
    }
}
