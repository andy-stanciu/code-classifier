class Solution {

    public void method1(int[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                check(board, i, j);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] /= 2;
            }
        }
    }

    public void check(int[][] board, int ind1, int ind2) {
        int count = 0;
        boolean c1 = ind2 - 1 >= 0;
        boolean c2 = ind2 + 1 < board[0].length;
        if (ind1 - 1 >= 0) {
            if (board[ind1 - 1][ind2] % 2 == 1) {
                count++;
            }
            if (c1) {
                if (board[ind1 - 1][ind2 - 1] % 2 == 1) {
                    count++;
                }
            }
            if (c2) {
                if (board[ind1 - 1][ind2 + 1] % 2 == 1) {
                    count++;
                }
            }
        }
        if (ind1 + 1 < board.length) {
            if (board[ind1 + 1][ind2] % 2 == 1) {
                count++;
            }
            if (c1) {
                if (board[ind1 + 1][ind2 - 1] % 2 == 1) {
                    count++;
                }
            }
            if (c2) {
                if (board[ind1 + 1][ind2 + 1] % 2 == 1) {
                    count++;
                }
            }
        }
        if (c1) {
            if (board[ind1][ind2 - 1] % 2 == 1) {
                count++;
            }
        }
        if (c2) {
            if (board[ind1][ind2 + 1] % 2 == 1) {
                count++;
            }
        }
        if (board[ind1][ind2] % 2 == 1) {
            if (count == 2 || count == 3) {
                board[ind1][ind2] = 3;
            } else {
                board[ind1][ind2] = 1;
            }
        } else {
            if (count == 3) {
                board[ind1][ind2] = 2;
            } else {
                board[ind1][ind2] = 0;
            }
        }
    }
}
