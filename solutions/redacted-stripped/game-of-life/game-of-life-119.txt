class Solution {

    public void method1(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int[][] nextState = new int[m][n];
        int[][] directions = { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, -1 }, { 1, 0 }, { 1, 1 } };
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int liveNeighbors = 0;
                for (int[] direction : directions) {
                    int ni = i + direction[0];
                    int nj = j + direction[1];
                    if (ni >= 0 && ni < m && nj >= 0 && nj < n && board[ni][nj] == 1) {
                        liveNeighbors++;
                    }
                }
                if (board[i][j] == 1) {
                    if (liveNeighbors < 2 || liveNeighbors > 3) {
                        nextState[i][j] = 0;
                    } else {
                        nextState[i][j] = 1;
                    }
                } else {
                    if (liveNeighbors == 3) {
                        nextState[i][j] = 1;
                    }
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                board[i][j] = nextState[i][j];
            }
        }
    }
}
