class Solution {

    public void method1(int[][] board) {
        int x = board.length;
        int y = board[0].length;
        int[] tempRes = new int[y];
        int[] tempNums = new int[y];
        for (int i = 0; i < x; i++) {
            int[] newArr = new int[y];
            for (int j = 0; j < y; j++) {
                int n = 0, s = 0, e = 0, w = 0, nw = 0, sw = 0, se = 0, ne = 0;
                n = tempNums[j];
                s = i < x - 1 ? board[i + 1][j] : 0;
                e = j > 0 ? board[i][j - 1] : 0;
                w = j < y - 1 ? board[i][j + 1] : 0;
                nw = j > 0 ? tempNums[j - 1] : 0;
                ne = j < y - 1 ? tempNums[j + 1] : 0;
                sw = i < x - 1 && j > 0 ? board[i + 1][j - 1] : 0;
                se = i < x - 1 && j < y - 1 ? board[i + 1][j + 1] : 0;
                int total = n + s + e + w + nw + ne + sw + se;
                int r = 0;
                if (board[i][j] == 1) {
                    if (total == 2 || total == 3)
                        r = 1;
                } else {
                    if (total == 3)
                        r = 1;
                }
                tempRes[j] = r;
                newArr[j] = board[i][j];
            }
            tempNums = newArr;
            for (int j = 0; j < y; j++) {
                board[i][j] = tempRes[j];
            }
        }
    }
}
