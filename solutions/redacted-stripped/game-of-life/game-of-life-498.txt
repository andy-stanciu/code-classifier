class Solution {

    public void method1(int[][] board) {
        int[][] a = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == 1) {
                    int count = method2(board, i, j, 0);
                    if (count < 2)
                        a[i][j] = 0;
                    else if (count > 3)
                        a[i][j] = 0;
                    else
                        a[i][j] = 1;
                } else {
                    int count = method2(board, i, j, 0);
                    if (count == 3)
                        a[i][j] = 1;
                    else
                        a[i][j] = 0;
                }
            }
        }
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a[0].length; j++) {
                board[i][j] = a[i][j];
            }
        }
    }

    public static int method2(int[][] a, int cr, int cc, int flag) {
        if (cr < 0 || cc < 0 || cc >= a[0].length || cr >= a.length || (a[cr][cc] == 0 && flag != 0))
            return 0;
        if (a[cr][cc] == 1 && flag != 0)
            return 1;
        int[] r = { -1, -1, 0, 1, 1, 1, 0, -1 };
        int[] c = { 0, 1, 1, 1, 0, -1, -1, -1 };
        int count = 0;
        for (int i = 0; i < r.length; i++) {
            count += method2(a, cr + r[i], cc + c[i], 1);
        }
        return count;
    }
}
