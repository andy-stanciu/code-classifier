class Solution {

    public int method1(int[] nums, int k) {
        k = nums.length - k;
        return quickSelect(nums, 0, nums.length - 1, k);
    }

    public int quickSelect(int[] nums, int l, int r, int k) {
        if (r - l + 1 <= 1) {
            return nums[l];
        }
        int pivot = nums[r];
        int i = l;
        for (int j = l; j < r; j++) {
            if (nums[j] < pivot) {
                int temp = nums[j];
                nums[j] = nums[i];
                nums[i] = temp;
                i++;
            }
        }
        int temp = nums[i];
        nums[i] = nums[r];
        nums[r] = temp;
        if (k == i) {
            return nums[k];
        } else if (k < i) {
            return quickSelect(nums, l, i - 1, k);
        } else {
            return quickSelect(nums, i + 1, r, k);
        }
    }
}
