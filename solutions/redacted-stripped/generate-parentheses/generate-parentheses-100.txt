class Solution {

    public void foo(List<String> ans, StringBuilder sb, int open, int close, int n) {
        if (close == n) {
            ans.add(sb.toString());
            return;
        }
        if (open < n) {
            foo(ans, sb.append("("), open + 1, close, n);
            sb.deleteCharAt(sb.length() - 1);
        }
        if (open > close) {
            foo(ans, sb.append(")"), open, close + 1, n);
            sb.deleteCharAt(sb.length() - 1);
        }
    }

    public List<String> method1(int n) {
        int open = 0, close = 0;
        List<String> ans = new ArrayList<>();
        StringBuilder sb = new StringBuilder("");
        foo(ans, sb, 0, 0, n);
        return ans;
    }

    public List<String> method2(int n) {
        List<String> ans = method1(n);
        return ans;
    }
}
