class Solution {

    private List<String> ans = new ArrayList<>();

    private int n;

    private int n2;

    public List<String> method1(int n) {
        this.n = n;
        this.n2 = 2 * n;
        combination(new StringBuilder(), 0, 0);
        return ans;
    }

    private void combination(StringBuilder sb, int open, int close) {
        if (sb.length() == n2) {
            ans.add(sb.toString());
            return;
        }
        if (open < n) {
            sb.append("(");
            combination(sb, open + 1, close);
            sb.deleteCharAt(sb.length() - 1);
        }
        if (close < open) {
            sb.append(")");
            combination(sb, open, close + 1);
            sb.deleteCharAt(sb.length() - 1);
        }
    }
}
