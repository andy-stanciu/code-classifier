class Solution {

    public List<String> method1(int n) {
        List<String> res = new ArrayList<>();
        method2(0, 0, n, new StringBuilder(), res);
        return res;
    }

    void method2(int open, int close, int n, StringBuilder sb, List<String> res) {
        if (open > n || close > n)
            return;
        if (open == n && close == n) {
            res.add(sb.toString());
            return;
        }
        if (open < close)
            return;
        if (open == close) {
            method2(open + 1, close, n, sb.append("("), res);
            sb.deleteCharAt(sb.length() - 1);
        } else {
            method2(open + 1, close, n, sb.append("("), res);
            sb.deleteCharAt(sb.length() - 1);
            method2(open, close + 1, n, sb.append(")"), res);
            sb.deleteCharAt(sb.length() - 1);
        }
    }
}
