class Solution {

    static ArrayList<String> result;

    static String s;

    public static void findAllCombination(StringBuilder str, int openingP, int closingP, int n) {
        if (str.length() == n * 2) {
            s = str.toString();
            result.add(s);
            return;
        }
        if (openingP < n) {
            findAllCombination(str.append("("), openingP + 1, closingP, n);
            str.deleteCharAt(str.length() - 1);
        }
        if (closingP < openingP) {
            findAllCombination(str.append(")"), openingP, closingP + 1, n);
            str.deleteCharAt(str.length() - 1);
        }
    }

    public List<String> method1(int n) {
        result = new ArrayList<>();
        findAllCombination(new StringBuilder(""), 0, 0, n);
        return result;
    }
}
