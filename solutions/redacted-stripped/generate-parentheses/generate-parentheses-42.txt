class Solution {

    public List<String> method1(int n) {
        List<String> result = new ArrayList<>();
        if (n < 0) {
            return result;
        }
        method2(result, n, n, new StringBuilder());
        return result;
    }

    private void method2(List<String> result, int open, int close, StringBuilder sb) {
        if (open == 0 && close == 0) {
            result.add(sb.toString());
            return;
        }
        if (open > 0) {
            sb.append("(");
            method2(result, open - 1, close, sb);
            sb.setLength(sb.length() - 1);
        }
        if (open < close) {
            sb.append(")");
            method2(result, open, close - 1, sb);
            sb.setLength(sb.length() - 1);
        }
    }
}
