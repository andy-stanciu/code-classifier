class Solution {

    private static class Class1 {

        int openCount;

        int closeCount;

        String str;

        Class1(String str, int openCount, int closeCount) {
            this.str = str;
            this.openCount = openCount;
            this.closeCount = closeCount;
        }
    }

    public List<String> method1(int num) {
        List<String> result = new ArrayList<String>();
        Queue<Class1> queue = new LinkedList<>();
        queue.add(new Class1("", 0, 0));
        while (!queue.isEmpty()) {
            Class1 ps = queue.poll();
            if (ps.openCount == num && ps.closeCount == num) {
                result.add(ps.str);
            } else {
                if (ps.openCount < num)
                    queue.add(new Class1(ps.str + "(", ps.openCount + 1, ps.closeCount));
                if (ps.openCount > ps.closeCount)
                    queue.add(new Class1(ps.str + ")", ps.openCount, ps.closeCount + 1));
            }
        }
        return result;
    }
}
