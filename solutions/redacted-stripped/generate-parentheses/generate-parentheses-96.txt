class Solution {

    public List<String> method1(int open, int close, int n) {
        List<String> newOutput = new ArrayList<>();
        if (open == close) {
            if (close == n) {
                return List.of("");
            }
            List<String> output = method1(open + 1, close, n);
            for (String out : output) {
                newOutput.add("(" + out);
            }
            return newOutput;
        }
        if (open < n) {
            List<String> outputOpen = method1(open + 1, close, n);
            for (String out : outputOpen) {
                newOutput.add("(" + out);
            }
        }
        List<String> outputClose = method1(open, close + 1, n);
        for (String out : outputClose) {
            newOutput.add(")" + out);
        }
        return newOutput;
    }

    public List<String> method1(int n) {
        return method1(0, 0, n);
    }
}
