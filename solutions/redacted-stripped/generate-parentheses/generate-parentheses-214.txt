class Solution {

    List<String> ans;

    public List<String> method1(int n) {
        ans = new ArrayList<>();
        helper(new StringBuilder("("), 1, 0, n);
        return ans;
    }

    public void helper(StringBuilder currentString, int leftCount, int rightCount, int n) {
        if (leftCount == n && leftCount == rightCount) {
            ans.add(currentString.toString());
            return;
        }
        if (leftCount > n || rightCount > n)
            return;
        if (leftCount < n) {
            currentString.append("(");
            helper(currentString, leftCount + 1, rightCount, n);
            currentString.deleteCharAt(currentString.length() - 1);
        }
        if (leftCount > rightCount && rightCount < n) {
            currentString.append(")");
            helper(currentString, leftCount, rightCount + 1, n);
            currentString.deleteCharAt(currentString.length() - 1);
        }
    }
}
