class Solution {

    public List<String> method1(int n) {
        List<String> allCombinations = new ArrayList<>();
        method2("", 0, 0, n, allCombinations);
        return allCombinations;
    }

    private static void method2(String current, int open, int close, int max, List<String> result) {
        if (current.length() == max * 2) {
            result.add(current);
            return;
        }
        if (open < max) {
            method2(current + "(", open + 1, close, max, result);
        }
        if (close < max && close < open) {
            method2(current + ")", open, close + 1, max, result);
        }
    }
}
