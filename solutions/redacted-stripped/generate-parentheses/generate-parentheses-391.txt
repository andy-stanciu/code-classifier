class Solution {

    public List<String> method1(int n) {
        ArrayList<String> res = new ArrayList<>();
        backtrack("(", 1, 0, res, n);
        return res;
    }

    public static void backtrack(String curr, int open, int close, ArrayList<String> res, int n) {
        if (curr.length() == 2 * n) {
            res.add(curr);
            return;
        }
        if (open < n) {
            backtrack(curr + "(", open + 1, close, res, n);
        }
        if (close < open) {
            backtrack(curr + ")", open, close + 1, res, n);
        }
    }
}
