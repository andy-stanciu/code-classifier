class Solution {

    public List<String> method1(int n) {
        List<String> combs = new ArrayList<>();
        method2(n, n, new StringBuilder(), combs);
        return combs;
    }

    public void method2(int open, int close, StringBuilder sb, List<String> combs) {
        if (open == 0 && close == 0) {
            combs.add(sb.toString());
            return;
        }
        if (open > 0) {
            sb.append("(");
            method2(open - 1, close, sb, combs);
            sb.delete(sb.length() - 1, sb.length());
        }
        if (close > 0 && open < close) {
            sb.append(")");
            method2(open, close - 1, sb, combs);
            sb.delete(sb.length() - 1, sb.length());
        }
    }
}
