class Solution {

    public List<String> method1(int n) {
        List<String> result = new ArrayList<String>();
        getPranethesis("(", 1, 0, result, n);
        return result;
    }

    void getPranethesis(String current, int open, int close, List<String> result, int k) {
        if (current.length() == 2 * k) {
            result.add(current);
            return;
        }
        if (open < k) {
            getPranethesis(current + "(", open + 1, close, result, k);
        }
        if (close < open) {
            getPranethesis(current + ")", open, close + 1, result, k);
        }
    }
}
