public class Solution {

    public List<String> method1(int n) {
        List<String> result = new ArrayList<>();
        backtrack(result, new StringBuilder(2 * n), 0, 0, n);
        return result;
    }

    private void backtrack(List<String> result, StringBuilder current, int open, int close, int max) {
        int length = current.length();
        if (length == max * 2) {
            result.add(current.toString());
            return;
        }
        if (open < max) {
            current.append("(");
            backtrack(result, current, open + 1, close, max);
            current.setLength(length);
        }
        if (close < open) {
            current.append(")");
            backtrack(result, current, open, close + 1, max);
            current.setLength(length);
        }
    }
}
