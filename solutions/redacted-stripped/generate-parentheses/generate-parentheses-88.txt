class Solution {

    public List<String> method1(int n) {
        List<String> result = new ArrayList<>();
        backtrack(result, "", 0, 0, n);
        return result;
    }

    private void backtrack(List<String> result, String current, int open, int close, int max) {
        if (current.length() == max * 2) {
            result.add(current);
            return;
        }
        if (open < max) {
            backtrack(result, current + "(", open + 1, close, max);
        }
        if (close < open) {
            backtrack(result, current + ")", open, close + 1, max);
        }
    }
}

public class Main {

    public static void main(String[] args) {
        Solution solution = new Solution();
        int n1 = 3;
        System.out.println("Test Case 1: " + solution.method1(n1));
        int n2 = 1;
        System.out.println("Test Case 2: " + solution.method1(n2));
        int n3 = 2;
        System.out.println("Additional Test Case 3: " + solution.method1(n3));
    }
}
