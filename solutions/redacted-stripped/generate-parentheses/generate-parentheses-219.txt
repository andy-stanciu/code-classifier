class Solution {

    public List<String> method1(int n) {
        String[] arr = new String[n * 2];
        List<String> list = new ArrayList<>();
        recursive(list, new StringBuilder(), 0, 0, n);
        return list;
    }

    public static void recursive(List<String> list, StringBuilder str, int leftCount, int rightCount, int n) {
        if (str.length() == n * 2) {
            list.add(str.toString());
        }
        if (leftCount < n) {
            str.append("(");
            recursive(list, str, leftCount + 1, rightCount, n);
            str.deleteCharAt(str.length() - 1);
        }
        if (rightCount < leftCount) {
            recursive(list, str.append(")"), leftCount, rightCount + 1, n);
            str.deleteCharAt(str.length() - 1);
        }
    }
}
