class Solution {

    public void dfs(int openP, int closeP, String s, int n, List<String> result) {
        if (openP == closeP && openP + closeP == n * 2) {
            result.add(s);
            return;
        }
        if (openP < n)
            dfs(openP + 1, closeP, s + "(", n, result);
        if (closeP < openP)
            dfs(openP, closeP + 1, s + ")", n, result);
    }

    public List<String> method1(int n) {
        List<String> result = new ArrayList<>();
        dfs(0, 0, "", n, result);
        return result;
    }
}
