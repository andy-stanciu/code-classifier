class Solution {

    public int method1(int[] param1, int amount) {
        int[][] dp = new int[param1.length + 1][amount + 1];
        for (int i = 1; i < dp[0].length; i++) {
            dp[0][i] = -1;
        }
        for (int i = 1; i < dp.length; i++) {
            for (int j = 1; j < dp[0].length; j++) {
                int val = param1[i - 1];
                if (val <= j) {
                    if (dp[i][j - val] == -1) {
                        if (dp[i - 1][j] != -1) {
                            dp[i][j] = dp[i - 1][j];
                        } else {
                            dp[i][j] = -1;
                        }
                    } else {
                        int include = 1 + dp[i][j - val];
                        int exclude = dp[i - 1][j];
                        if (exclude > 0) {
                            dp[i][j] = Math.min(include, exclude);
                        } else {
                            dp[i][j] = include;
                        }
                    }
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[param1.length][amount];
    }
}
