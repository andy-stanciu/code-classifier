class Solution {

    public int method1(int[] param1, int amount) {
        int[][] t = new int[param1.length][amount + 1];
        for (int[] rows : t) Arrays.fill(rows, -1);
        int ans = method2(amount, param1, param1.length - 1, t);
        return ans == (int) Math.pow(10, 9) ? -1 : ans;
    }

    public int method2(int amount, int[] param1, int i, int[][] t) {
        if (i == 0) {
            if (amount % param1[0] == 0)
                return amount / param1[0];
            return (int) Math.pow(10, 9);
        }
        if (t[i][amount] != -1)
            return t[i][amount];
        int taken = (int) Math.pow(10, 9);
        if (param1[i] <= amount)
            taken = 1 + method2(amount - param1[i], param1, i, t);
        int not_taken = method2(amount, param1, i - 1, t);
        return t[i][amount] = Math.min(taken, not_taken);
    }
}
