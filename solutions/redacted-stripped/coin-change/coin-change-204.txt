class Solution {

    public int method1(int[] param1, int amount) {
        int n = param1.length;
        int[][] dp = new int[n + 1][amount + 1];
        for (int i = 0; i < (n + 1); i++) {
            dp[i][0] = 0;
        }
        for (int i = 1; i < (amount + 1); i++) {
            dp[0][i] = -1;
        }
        for (int i = 1; i < (n + 1); i++) {
            for (int j = 1; j < (amount + 1); j++) {
                if (param1[i - 1] <= j) {
                    int include = dp[i][j - param1[i - 1]];
                    int exclude = dp[i - 1][j];
                    if (include == -1 && exclude == -1) {
                        dp[i][j] = -1;
                    } else if (include == -1) {
                        dp[i][j] = exclude;
                    } else if (exclude == -1) {
                        dp[i][j] = include + 1;
                    } else {
                        dp[i][j] = Math.min(include + 1, exclude);
                    }
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[n][amount];
    }
}
