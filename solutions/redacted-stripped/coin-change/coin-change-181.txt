class Solution {

    static long[][] dp = new long[13][10002];

    public int method1(int[] param1, int amount) {
        for (long[] a : dp) {
            Arrays.fill(a, -1);
        }
        int n = param1.length;
        long ans = solve(param1, amount, n, dp);
        if (ans == Integer.MAX_VALUE)
            return -1;
        return (int) ans;
    }

    static long solve(int[] arr, int sum, int n, long[][] dp) {
        if (sum == 0) {
            return 0;
        }
        if (n == 0) {
            return Integer.MAX_VALUE;
        }
        if (dp[n - 1][sum] != -1) {
            return dp[n - 1][sum];
        }
        if (arr[n - 1] <= sum) {
            return dp[n - 1][sum] = Math.min(solve(arr, sum, n - 1, dp), 1 + solve(arr, sum - arr[n - 1], n, dp));
        } else
            return dp[n - 1][sum] = solve(arr, sum, n - 1, dp);
    }
}
