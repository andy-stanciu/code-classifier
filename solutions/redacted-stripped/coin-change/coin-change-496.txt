class Solution {

    public int method1(int[] param1, int amount) {
        HashSet<Integer> visAmt = new HashSet<Integer>();
        if (amount == 0) {
            return 0;
        }
        List<Integer> queue = new ArrayList<Integer>();
        Arrays.sort(param1);
        for (int i = 0; i < param1.length; i++) {
            if (param1[i] > amount) {
                break;
            }
            if (param1[i] == amount) {
                return 1;
            }
            queue.add(param1[i]);
        }
        queue.add(-1);
        int cnt = 1;
        while (!queue.isEmpty()) {
            int first = queue.remove(0);
            if (first == -1) {
                cnt++;
                if (queue.isEmpty()) {
                    break;
                }
                queue.add(-1);
            } else {
                int remAmount = amount - first;
                if (visAmt.contains(remAmount)) {
                    continue;
                }
                visAmt.add(remAmount);
                if (remAmount == 0) {
                    return cnt;
                }
                for (int i = 0; i < param1.length; i++) {
                    if (param1[i] > remAmount) {
                        break;
                    }
                    if (param1[i] == remAmount) {
                        return cnt + 1;
                    }
                    queue.add(first + param1[i]);
                }
            }
        }
        return -1;
    }
}
