class Solution {

    public int[] method1(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        HashSet<Integer> set = new HashSet<>();
        int n2 = nums2.length;
        for (int i = 0; i < n2; i++) {
            if (binarysearch(nums1, nums2[i])) {
                set.add(nums2[i]);
            }
        }
        return set.stream().mapToInt(i -> i).toArray();
    }

    private boolean binarysearch(int[] nums1, int val) {
        int low = 0;
        int high = nums1.length - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (nums1[mid] == val)
                return true;
            if (nums1[mid] < val)
                low = mid + 1;
            else
                high = mid - 1;
        }
        return false;
    }
}
