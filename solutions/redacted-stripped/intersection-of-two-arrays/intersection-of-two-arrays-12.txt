class Solution {

    public int[] method1(int[] nums1, int[] nums2) {
        int n = nums1.length;
        int m = nums2.length;
        HashSet<Integer> set1 = new HashSet<>();
        HashSet<Integer> set2 = new HashSet<>();
        for (int val : nums1) {
            set1.add(val);
        }
        for (int val : nums2) {
            set2.add(val);
        }
        HashSet<Integer> ans = new HashSet<>();
        if (n > m && n == m) {
            for (int val : nums1) {
                if (set2.contains(val) == true) {
                    ans.add(val);
                }
            }
        }
        for (int val : nums2) {
            if (set1.contains(val) == true) {
                ans.add(val);
            }
        }
        int[] method1 = new int[ans.size()];
        int index = 0;
        for (int val : ans) {
            method1[index++] = val;
        }
        return method1;
    }
}
