class Solution {

    public int[] method1(int[] nums1, int[] nums2) {
        if (nums1 == null || nums1.length == 0 || nums2 == null || nums2.length == 0) {
            return null;
        }
        int[] numsTillMax = new int[1001];
        Set<Integer> commonNums = new HashSet<>();
        int i = 0;
        int j = 0;
        while (i < nums1.length || j < nums2.length) {
            if (i < nums1.length) {
                int val = nums1[i++];
                if (numsTillMax[val] == -1) {
                    commonNums.add(val);
                }
                numsTillMax[val] = 1;
            }
            if (j < nums2.length) {
                int val = nums2[j++];
                if (numsTillMax[val] == 1) {
                    commonNums.add(val);
                }
                numsTillMax[val] = -1;
            }
        }
        return commonNums.stream().mapToInt(Integer::intValue).toArray();
    }
}
