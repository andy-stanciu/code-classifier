class Solution {

    public static int method1(int[] nums) {
        nums = removeDuplicates(nums);
        boolean[] arr = new boolean[nums.length + 1];
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            if (num > 0 && num <= nums.length)
                arr[num] = true;
        }
        for (int i = 1; i < arr.length; i++) {
            if (!arr[i])
                return i;
        }
        return arr.length;
    }

    public static int[] removeDuplicates(int[] nums) {
        if (nums.length == 0)
            return new int[0];
        Arrays.sort(nums);
        int j = 0;
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] != nums[i + 1])
                nums[j++] = nums[i];
        }
        nums[j++] = nums[nums.length - 1];
        int[] result = new int[j];
        for (int k = 0; k < j; k++) result[k] = nums[k];
        return result;
    }

    public static int biggestNumPos(int[] arr) {
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max && arr[i] > 0)
                max = arr[i];
        }
        return max;
    }
}
