class Solution {

    public int method1(int[] nums) {
        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > 0) {
                count++;
            } else {
                nums[i] = 0;
            }
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > count) {
                nums[i] = 0;
            }
        }
        int spaceOne;
        int n = 1;
        while (n <= nums.length) {
            if (nums[n - 1] == 0) {
                n++;
                continue;
            }
            if (nums[n - 1] == n) {
                n++;
            } else {
                spaceOne = nums[n - 1];
                if (nums[spaceOne - 1] == spaceOne) {
                    nums[n - 1] = 0;
                } else {
                    while (spaceOne != 0 && nums[spaceOne - 1] != spaceOne) {
                        int temp = nums[spaceOne - 1];
                        nums[spaceOne - 1] = spaceOne;
                        spaceOne = temp;
                    }
                }
            }
        }
        int maxNumber = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                return i + 1;
            }
            if (maxNumber < nums[i]) {
                maxNumber = nums[i];
            }
        }
        return maxNumber + 1;
    }
}
