class Solution {

    public int method1(int[] nums) {
        int min = 0;
        int n = nums.length;
        int pos = 0;
        Arrays.sort(nums);
        if (nums[n - 1] <= 0) {
            return 1;
        }
        if (nums[0] >= 0) {
            pos = 0;
        } else {
            pos = method2(nums, 0, n - 2);
        }
        for (int i = pos; i < n; i++) {
            if (nums[i] == min || nums[i] == min + 1) {
                min = nums[i];
            } else {
                return min + 1;
            }
        }
        return min + 1;
    }

    public int method2(int[] A, int left, int right) {
        if (left <= right) {
            int mid = left + (right - left) / 2;
            if (A[mid] <= 0 && A[mid + 1] >= 0) {
                return mid + 1;
            } else if (A[mid] <= 0 && A[mid + 1] <= 0) {
                return method2(A, mid + 1, right);
            } else {
                return method2(A, left, mid - 1);
            }
        } else {
            return 0;
        }
    }
}
