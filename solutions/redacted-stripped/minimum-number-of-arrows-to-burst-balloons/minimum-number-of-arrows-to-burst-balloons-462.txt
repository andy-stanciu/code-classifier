class Solution {

    public static class Balloon {

        int start;

        int end;

        Balloon(int start, int end) {
            this.start = start;
            this.end = end;
        }
    }

    public static class Class1 implements Comparator<Balloon> {

        public int compare(Balloon m1, Balloon m2) {
            if (m1.end > m2.end)
                return 1;
            else if (m1.end < m2.end)
                return -1;
            else {
                if (m1.start > m2.start)
                    return 1;
                else if (m1.start < m2.start)
                    return -1;
                else
                    return 0;
            }
        }
    }

    static int helper(int[][] pt) {
        List<Balloon> arr = new ArrayList<>();
        for (int i = 0; i < pt.length; i++) {
            Balloon m = new Balloon(pt[i][0], pt[i][1]);
            arr.add(m);
        }
        arr.sort(new Class1());
        Balloon prev = arr.get(0);
        int ans = 1;
        for (int i = 1; i < arr.size(); i++) {
            Balloon m = arr.get(i);
            if (prev.end >= m.start && prev.end <= m.end) {
                continue;
            } else {
                prev = m;
                ans++;
            }
        }
        return ans;
    }

    public int method1(int[][] points) {
        return helper(points);
    }
}
