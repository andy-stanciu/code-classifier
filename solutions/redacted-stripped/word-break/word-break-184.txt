class Solution {

    public boolean method1(String s, HashSet<String> hs, int i, Boolean[] dp) {
        if (i == s.length())
            return true;
        if (dp[i] != null)
            return dp[i];
        for (int j = i + 1; j <= s.length(); j++) {
            if (hs.contains(s.substring(i, j)) && method1(s, hs, j, dp)) {
                dp[i] = true;
                return true;
            }
        }
        dp[i] = false;
        return false;
    }

    public boolean method2(String s, List<String> param1) {
        HashSet<String> hs = new HashSet<>(param1);
        boolean[] dp = new boolean[s.length() + 1];
        dp[0] = true;
        for (int i = 1; i <= s.length(); i++) {
            for (int j = 0; j < i; j++) {
                if (dp[j] && hs.contains(s.substring(j, i))) {
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[s.length()];
    }
}
