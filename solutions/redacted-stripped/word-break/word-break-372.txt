class Solution {

    public boolean method1(String s, List<String> param1) {
        int n = s.length();
        Boolean[] dp = new Boolean[n];
        HashSet<String> set = new HashSet<>(param1);
        return method2(0, n, s, set, dp);
    }

    private boolean method2(int ind, int n, String s, HashSet<String> set, Boolean[] dp) {
        if (ind == n)
            return true;
        if (dp[ind] != null)
            return dp[ind];
        for (int i = ind; i < n; i++) {
            if (set.contains(s.substring(ind, i + 1))) {
                if (method2(i + 1, n, s, set, dp))
                    return dp[ind] = true;
            }
        }
        return dp[ind] = false;
    }
}
