class Solution {

    public boolean method1(String s, List<String> param1) {
        Set<String> var1 = new HashSet<>();
        int var2 = 0;
        for (String var3 : param1) {
            var1.add(var3);
            var2 = Math.max(var2, var3.length());
        }
        return dp(s, 0, new HashSet<>(param1), new Boolean[s.length()], var2);
    }

    private boolean dp(String s, int i, Set<String> var1, Boolean[] memo, int var2) {
        if (i == s.length())
            return true;
        if (memo[i] != null)
            return memo[i];
        int maxlen = Math.min(i + var2, s.length());
        for (int j = i; j < maxlen; ++j) {
            if (var1.contains(s.substring(i, j + 1)) && dp(s, j + 1, var1, memo, var2))
                return true;
        }
        return memo[i] = false;
    }
}
