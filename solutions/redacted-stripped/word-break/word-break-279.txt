class Solution {

    public boolean method1(String s, List<String> param1) {
        return checkIfCouldBeSegmented(s, 0, new HashSet<>(param1), new HashMap<>());
    }

    private boolean checkIfCouldBeSegmented(String s, int index, Set<String> dict, Map<Integer, Boolean> cache) {
        if (cache.containsKey(index))
            return cache.get(index);
        if (index == s.length())
            return true;
        for (int end = index + 1; end <= s.length(); end++) {
            if (dict.contains(s.substring(index, end)) && checkIfCouldBeSegmented(s, end, dict, cache)) {
                cache.put(index, true);
                return true;
            }
        }
        cache.put(index, false);
        return false;
    }
}
