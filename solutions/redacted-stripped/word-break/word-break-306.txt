class Solution {

    public boolean method1(String s, List<String> param1) {
        Set<String> set = new HashSet<>();
        for (int i = 0; i < param1.size(); i++) set.add(param1.get(i));
        int[] dp = new int[s.length() + 1];
        return helper(0, s, set, dp);
    }

    public static boolean helper(int ind, String s, Set<String> set, int[] dp) {
        if (ind == s.length())
            return true;
        if (dp[ind] != 0)
            return dp[ind] == 1;
        String temp = "";
        boolean ans = false;
        for (int i = ind; i < s.length(); i++) {
            temp += s.charAt(i);
            if (set.contains(temp)) {
                if (helper(i + 1, s, set, dp))
                    ans = true;
            }
        }
        if (ans == true)
            dp[ind] = 1;
        else
            dp[ind] = -1;
        return ans;
    }
}
