class Solution {

    public boolean method1(String s, List<String> param1) {
        boolean[] dp = new boolean[s.length() + 1];
        dp[0] = true;
        for (int i = 1; i <= s.length(); i++) {
            for (int j = 0; j < i; j++) {
                if (dp[j] && param1.contains(s.substring(j, i))) {
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[s.length()];
    }

    private boolean backtrack(String s, List<String> param1, int start) {
        if (start == s.length()) {
            return true;
        }
        for (int end = start + 1; end <= s.length(); end++) {
            if (param1.contains(s.substring(start, end)) && backtrack(s, param1, end)) {
                return true;
            }
        }
        return false;
    }
}
