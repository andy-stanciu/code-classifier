class Solution {

    public boolean method1(String s, List<String> param1) {
        int[] dp = new int[s.length()];
        Arrays.fill(dp, -1);
        Set<String> set = new HashSet<>();
        for (int i = 0; i < param1.size(); i++) {
            set.add(param1.get(i));
        }
        return helper(s, 0, set, dp);
    }

    private boolean helper(String s, int index, Set<String> set, int[] dp) {
        if (index == s.length())
            return true;
        if (dp[index] != -1)
            return dp[index] == 1 ? true : false;
        for (int i = index; i < s.length(); i++) {
            String var1 = s.substring(index, i + 1);
            if (!set.contains(var1))
                continue;
            if (helper(s, i + 1, set, dp)) {
                dp[index] = 1;
                return true;
            }
        }
        dp[index] = 0;
        return false;
    }
}
