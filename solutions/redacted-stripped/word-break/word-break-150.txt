class Solution {

    public boolean method1(String s, List<String> param1) {
        HashMap<String, Boolean> hash = new HashMap<>();
        return f("", s, param1, hash);
    }

    public boolean f(String cur, String target, List<String> param1, HashMap<String, Boolean> hash) {
        if (cur.length() == target.length()) {
            if (cur.equals(target)) {
                return true;
            }
        }
        if (hash.containsKey(cur)) {
            return hash.get(cur);
        }
        for (int i = 0; i < param1.size(); i++) {
            String j = param1.get(i);
            String u = cur + j;
            if (u.length() <= target.length()) {
                String y = target.substring(0, u.length());
                if (u.equals(y)) {
                    if (f(cur + param1.get(i), target, param1, hash)) {
                        hash.put(cur, true);
                        return true;
                    }
                }
            }
        }
        hash.put(cur, false);
        return false;
    }
}
