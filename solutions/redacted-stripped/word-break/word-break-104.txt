class Solution {

    public boolean method1(String s, List<String> param1) {
        Map<String, Boolean> memo = new HashMap<>();
        return dfs(s, new HashSet<>(param1), memo);
    }

    private boolean dfs(String str, Set<String> param1, Map<String, Boolean> memo) {
        if (memo.containsKey(str)) {
            return memo.get(str);
        }
        if (param1.contains(str)) {
            return true;
        }
        for (int i = 0; i < str.length(); i++) {
            String prefix = str.substring(0, i);
            if (param1.contains(prefix) && dfs(str.substring(i), param1, memo)) {
                memo.put(str, true);
                return true;
            }
        }
        memo.put(str, false);
        return false;
    }
}
