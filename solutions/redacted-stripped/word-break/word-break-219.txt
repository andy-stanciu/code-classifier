class Solution {

    public boolean method1(String s, List<String> param1) {
        Boolean[][] memo = new Boolean[s.length() + 1][s.length() + 1];
        Set<String> var1 = new HashSet<String>();
        for (String var2 : param1) {
            var1.add(var2);
        }
        for (int i = 1; i <= s.length(); i++) {
            if (method1(s, var1, 0, i, memo)) {
                return true;
            }
        }
        return false;
    }

    private boolean method1(String s, Set<String> var1, int start, int end, Boolean[][] memo) {
        if (memo[start][end] != null) {
            return memo[start][end];
        }
        String subS = s.substring(start, end);
        if (var1.contains(subS)) {
            if (end == s.length()) {
                return true;
            }
            for (int i = end + 1; i <= s.length(); i++) {
                if (method1(s, var1, end, i, memo)) {
                    return true;
                }
            }
        }
        memo[start][end] = false;
        return false;
    }
}
