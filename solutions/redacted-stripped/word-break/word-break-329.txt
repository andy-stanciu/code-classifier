class Solution {

    private final Map<String, Boolean> cache = new HashMap<>();

    private Set<String> dictionary;

    public boolean method1(String s, List<String> param1) {
        dictionary = new HashSet<>(param1);
        return isStringFromDictionary(s);
    }

    private boolean isStringFromDictionary(String stringRest) {
        if (stringRest == null || stringRest.length() == 0) {
            return true;
        }
        if (cache.containsKey(stringRest)) {
            return cache.get(stringRest);
        }
        for (int endIdx = 1; endIdx <= stringRest.length(); endIdx++) {
            String leftStringRest = stringRest.substring(0, endIdx);
            String rightStringRest = stringRest.substring(endIdx, stringRest.length());
            if (dictionary.contains(leftStringRest) && isStringFromDictionary(rightStringRest)) {
                cache.put(stringRest, true);
                return true;
            }
        }
        cache.put(stringRest, false);
        return false;
    }
}
