class Solution {

    public boolean method1(String s, List<String> param1) {
        Set<String> var1 = new HashSet<>(param1);
        Boolean[] dp = new Boolean[s.length() + 1];
        return method2(s, 0, var1, param1, dp);
    }

    private boolean method2(String s, int startIndex, Set<String> var1, List<String> param1, Boolean[] dp) {
        int endIndex = 0;
        if (dp[startIndex] != null) {
            return dp[startIndex];
        }
        if (startIndex == s.length()) {
            dp[startIndex] = true;
            return true;
        }
        for (String var2 : param1) {
            endIndex = startIndex + var2.length();
            if (endIndex <= s.length()) {
                if (var1.contains(s.substring(startIndex, endIndex))) {
                    if (method2(s, endIndex, var1, param1, dp)) {
                        dp[startIndex] = true;
                        return true;
                    }
                }
            }
        }
        dp[startIndex] = false;
        return false;
    }
}
