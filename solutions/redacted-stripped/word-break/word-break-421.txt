class Solution {

    public boolean method1(String s, List<String> w) {
        Set<String> set = new HashSet<>();
        for (int i = 0; i < w.size(); i++) set.add(w.get(i));
        int[] dp = new int[301];
        Arrays.fill(dp, -1);
        return (f(s, s.length(), 0, set, dp) == 1) ? true : false;
    }

    public int f(String s, int n, int ind, Set<String> set, int[] dp) {
        if (ind == n) {
            return 1;
        }
        if (dp[ind] != -1)
            return dp[ind];
        String temp = "";
        for (int i = ind; i < s.length(); i++) {
            temp += s.charAt(i);
            if (set.contains(temp)) {
                if (f(s, n, i + 1, set, dp) == 1)
                    return dp[ind] = 1;
            }
        }
        return dp[ind] = 0;
    }
}
