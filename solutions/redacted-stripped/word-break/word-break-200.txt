class Solution {

    public boolean method1(String s, List<String> param1) {
        final int n = s.length();
        final int maxLength = getMaxLength(param1);
        Set<String> var1 = new HashSet<>(param1);
        boolean[] dp = new boolean[n + 1];
        dp[0] = true;
        for (int i = 1; i <= n; ++i) for (int j = i - 1; j >= 0; --j) {
            if (i - j > maxLength)
                break;
            if (dp[j] && var1.contains(s.substring(j, i))) {
                dp[i] = true;
                break;
            }
        }
        return dp[n];
    }

    private int getMaxLength(List<String> param1) {
        return param1.stream().mapToInt(String::length).max().getAsInt();
    }
}
