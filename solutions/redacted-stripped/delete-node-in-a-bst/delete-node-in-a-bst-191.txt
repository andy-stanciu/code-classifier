class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null) {
            return null;
        }
        if (root.val == key) {
            return root = method2(root);
        } else {
            if (root.val > key) {
                root.left = method1(root.left, key);
                return root;
            } else {
                root.right = method1(root.right, key);
                return root;
            }
        }
    }

    public TreeNode method2(TreeNode root) {
        if (root.right != null) {
            TreeNode temp = root.right;
            TreeNode prev = root;
            while (temp.left != null) {
                prev = temp;
                temp = temp.left;
            }
            root.val = temp.val;
            if (prev != root) {
                prev.left = temp.right;
            } else {
                prev.right = temp.right;
            }
            return root;
        } else if (root.left != null) {
            TreeNode temp = root.left;
            TreeNode prev = root;
            while (temp.right != null) {
                prev = temp;
                temp = temp.right;
            }
            root.val = temp.val;
            if (prev != root) {
                prev.right = temp.left;
            } else {
                prev.left = temp.left;
            }
            return root;
        } else {
            return null;
        }
    }
}
