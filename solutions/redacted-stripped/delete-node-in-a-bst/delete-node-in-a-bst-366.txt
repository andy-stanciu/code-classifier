class Solution {

    public TreeNode method1(TreeNode root, int key) {
        ArrayList<Integer> al = new ArrayList<>();
        pre(root, al, key);
        Collections.sort(al);
        System.out.println(al);
        TreeNode ans = solve(al, 0, al.size() - 1);
        return ans;
    }

    public static TreeNode solve(ArrayList<Integer> al, int s, int e) {
        if (s > e) {
            return null;
        }
        int mid = (s + e) / 2;
        TreeNode ans = new TreeNode(al.get(mid));
        ans.left = solve(al, s, mid - 1);
        ans.right = solve(al, mid + 1, e);
        return ans;
    }

    public static void pre(TreeNode root, ArrayList<Integer> al, int key) {
        if (root == null) {
            return;
        }
        if (root.val != key) {
            al.add(root.val);
        }
        pre(root.left, al, key);
        pre(root.right, al, key);
    }
}
