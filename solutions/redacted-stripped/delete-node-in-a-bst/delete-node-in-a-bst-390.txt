class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return root;
        else if (root.val == key && root.left == null & root.right == null) {
            return null;
        } else if (root.val == key) {
            TreeNode toSwap = null;
            if (root.right != null) {
                toSwap = root.right;
                while (toSwap.left != null) {
                    toSwap = toSwap.left;
                }
                swapVal(root, toSwap);
                root.right = method1(root.right, key);
            } else {
                toSwap = root.left;
                while (toSwap.right != null) {
                    toSwap = toSwap.right;
                }
                swapVal(root, toSwap);
                root.left = method1(root.left, key);
            }
        } else if (key > root.val) {
            root.right = method1(root.right, key);
        } else {
            root.left = method1(root.left, key);
        }
        return root;
    }

    void swapVal(TreeNode a, TreeNode b) {
        if (a == null || b == null)
            return;
        int temp = a.val;
        a.val = b.val;
        b.val = temp;
    }
}
