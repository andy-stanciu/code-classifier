class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return root;
        if (root.val == key)
            return helper(root);
        TreeNode temp = root;
        while (root != null) {
            if (root.val > key) {
                if (root.left != null && root.left.val == key) {
                    root.left = helper(root.left);
                    break;
                }
                root = root.left;
            } else {
                if (root.right != null && root.right.val == key) {
                    root.right = helper(root.right);
                    break;
                }
                root = root.right;
            }
        }
        return temp;
    }

    public TreeNode helper(TreeNode root) {
        if (root.left == null) {
            return root.right;
        } else if (root.right == null)
            return root.left;
        else {
            TreeNode lastright = root.right;
            TreeNode var1 = method2(root.left);
            var1.right = lastright;
            return root.left;
        }
    }

    public TreeNode method2(TreeNode root) {
        if (root.right == null)
            return root;
        return method2(root.right);
    }
}
