class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null) {
            return null;
        }
        TreeNode curr = root;
        TreeNode par = null;
        while (curr != null) {
            if (curr.val == key) {
                break;
            }
            par = curr;
            if (key > curr.val) {
                curr = curr.right;
            } else {
                curr = curr.left;
            }
        }
        if (curr == null) {
            return root;
        }
        TreeNode temp = null;
        if (curr.right == null && curr.left == null) {
            temp = null;
        } else if (curr.right != null && curr.left == null) {
            temp = curr.right;
        } else if (curr.left != null && curr.right == null) {
            temp = curr.left;
        } else {
            TreeNode p = null;
            temp = curr.left;
            while (temp.right != null) {
                p = temp;
                temp = temp.right;
            }
            if (p == null) {
                curr.left = temp.left;
            } else {
                p.right = temp.left;
            }
            temp.right = curr.right;
            temp.left = curr.left;
        }
        if (par != null) {
            if (par.left == curr) {
                par.left = temp;
            } else {
                par.right = temp;
            }
        } else {
            root = temp;
        }
        return root;
    }
}
