class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null) {
            return null;
        }
        if (root.val == key) {
            return helper(root);
        }
        TreeNode cur = root;
        while (cur != null) {
            if (key < cur.val) {
                if (cur.left != null && cur.left.val == key) {
                    cur.left = helper(cur.left);
                    break;
                } else {
                    cur = cur.left;
                }
            } else {
                if (cur.right != null && cur.right.val == key) {
                    cur.right = helper(cur.right);
                    break;
                } else {
                    cur = cur.right;
                }
            }
        }
        return root;
    }

    public TreeNode helper(TreeNode param1) {
        if (param1.left == null) {
            return param1.right;
        } else if (param1.right == null) {
            return param1.left;
        } else {
            TreeNode extremeRight = fn(param1.left);
            extremeRight.right = param1.right;
            return param1.left;
        }
    }

    public TreeNode fn(TreeNode n) {
        while (n.right != null) {
            n = n.right;
        }
        return n;
    }
}
