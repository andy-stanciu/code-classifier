class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null) {
            return null;
        }
        if (root.val == key) {
            return help(root);
        }
        TreeNode ans = root;
        while (root != null) {
            if (root.val > key) {
                if (root.left != null && root.left.val == key) {
                    root.left = help(root.left);
                    break;
                } else {
                    root = root.left;
                }
            } else {
                if (root.right != null && root.right.val == key) {
                    root.right = help(root.right);
                    break;
                } else {
                    root = root.right;
                }
            }
        }
        return ans;
    }

    public TreeNode help(TreeNode root) {
        if (root.left == null) {
            return root.right;
        } else if (root.right == null) {
            return root.left;
        } else {
            TreeNode rightone = root.right;
            TreeNode lastright = method2(root.left);
            lastright.right = rightone;
            return root.left;
        }
    }

    public TreeNode method2(TreeNode root) {
        if (root.right == null) {
            return root;
        }
        return method2(root.right);
    }
}
