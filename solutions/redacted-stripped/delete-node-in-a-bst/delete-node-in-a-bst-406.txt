class Solution {

    public TreeNode method1(TreeNode root, int data) {
        if (root == null) {
            return null;
        }
        if (root.val == data) {
            if (root.left == null && root.right == null) {
                root = null;
            } else if (root.right != null) {
                TreeNode successor = method2(root.right);
                root.val = successor.val;
                root.right = method1(root.right, successor.val);
            } else {
                TreeNode predecessor = method3(root.left);
                root.val = predecessor.val;
                root.left = method1(root.left, predecessor.val);
            }
        } else if (data < root.val) {
            root.left = method1(root.left, data);
        } else {
            root.right = method1(root.right, data);
        }
        return root;
    }

    TreeNode method2(TreeNode root) {
        if (root == null) {
            return null;
        }
        TreeNode left = method2(root.left);
        if (left == null) {
            return root;
        } else {
            return left;
        }
    }

    TreeNode method3(TreeNode root) {
        if (root == null) {
            return null;
        }
        TreeNode right = method2(root.right);
        if (right == null) {
            return root;
        } else {
            return right;
        }
    }
}
