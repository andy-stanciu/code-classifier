class Solution {

    public TreeNode method1(TreeNode root, int key) {
        TreeNode newRoot = new TreeNode();
        newRoot.left = root;
        helper(newRoot, key);
        return newRoot.left;
    }

    private void helper(TreeNode param1, int key) {
        if (param1 == null) {
            return;
        }
        if (param1.left != null && param1.left.val == key) {
            TreeNode var1 = param1.left;
            if (var1.right != null) {
                param1.left = var1.right;
                if (var1.left != null) {
                    TreeNode temp = var1.right;
                    while (temp.left != null) {
                        temp = temp.left;
                    }
                    temp.left = var1.left;
                }
            } else if (var1.left != null) {
                param1.left = var1.left;
            } else {
                param1.left = null;
            }
        } else if (param1.right != null && param1.right.val == key) {
            TreeNode var1 = param1.right;
            if (var1.right != null) {
                param1.right = var1.right;
                if (var1.left != null) {
                    TreeNode temp = var1.right;
                    while (temp.left != null) {
                        temp = temp.left;
                    }
                    temp.left = var1.left;
                }
            } else if (var1.left != null) {
                param1.right = var1.left;
            } else {
                param1.right = null;
            }
        }
        helper(param1.left, key);
        helper(param1.right, key);
    }
}
