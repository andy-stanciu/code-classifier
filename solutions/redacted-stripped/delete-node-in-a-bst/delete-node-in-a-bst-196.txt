class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return null;
        if (root.val == key)
            return help(root);
        TreeNode cur = root;
        while (cur != null) {
            if (cur.val > key) {
                if (cur.left != null && cur.left.val == key) {
                    cur.left = help(cur.left);
                    break;
                } else {
                    cur = cur.left;
                }
            } else {
                if (cur.right != null && cur.right.val == key) {
                    cur.right = help(cur.right);
                    break;
                } else {
                    cur = cur.right;
                }
            }
        }
        return root;
    }

    public TreeNode help(TreeNode root) {
        if (root.left == null)
            return root.right;
        else if (root.right == null)
            return root.left;
        else {
            TreeNode right = root.right;
            TreeNode leftestRight = method2(root.left);
            leftestRight.right = right;
            return root.left;
        }
    }

    public TreeNode method2(TreeNode root) {
        if (root.right == null)
            return root;
        return method2(root.right);
    }
}
