class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null) {
            return root;
        }
        if (root.val == key) {
            if (root.left == null && root.right == null) {
                return null;
            } else if (root.left == null && root.right != null) {
                return root.right;
            } else if (root.left != null && root.right == null) {
                return root.left;
            } else {
                TreeNode var1 = search(root.right);
                if (var1 == null) {
                    root.right.left = root.left;
                    return root.right;
                } else {
                    TreeNode updatedroot = method1(root, var1.val);
                    root.val = var1.val;
                    return root;
                }
            }
        } else if (key < root.val) {
            root.left = method1(root.left, key);
            return root;
        } else {
            root.right = method1(root.right, key);
            return root;
        }
    }

    public TreeNode search(TreeNode root) {
        if (root == null) {
            return root;
        }
        if (root.left == null)
            return root;
        return search(root.left);
    }
}
