class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return root;
        return method2(root, key);
    }

    private TreeNode method2(TreeNode root, int key) {
        if (root == null)
            return root;
        if (root.val == key) {
            if (root.left == null && root.right == null)
                return null;
            else if (root.left != null && root.right != null) {
                TreeNode temp1 = root.right;
                TreeNode temp2 = root.left;
                TreeNode temp3 = temp1;
                root.right = null;
                root.left = null;
                while (temp3.left != null) temp3 = temp3.left;
                temp3.left = temp2;
                return temp1;
            } else if (root.left == null && root.right != null) {
                TreeNode temp1 = root.right;
                root.right = null;
                return temp1;
            } else {
                TreeNode temp1 = root.left;
                root.left = null;
                return temp1;
            }
        } else if (root.val > key) {
            root.left = method2(root.left, key);
            return root;
        } else {
            root.right = method2(root.right, key);
            return root;
        }
    }
}
