class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return null;
        if (root.val == key)
            return helper(root);
        TreeNode d = root;
        while (root != null) {
            if (root.val > key) {
                if (root.left != null && root.left.val == key) {
                    root.left = helper(root.left);
                    break;
                } else
                    root = root.left;
            } else {
                if (root.right != null && root.right.val == key) {
                    root.right = helper(root.right);
                    break;
                } else
                    root = root.right;
            }
        }
        return d;
    }

    public TreeNode helper(TreeNode r) {
        if (r.left == null)
            return r.right;
        if (r.right == null)
            return r.left;
        TreeNode rc = r.right;
        TreeNode lr = lastRight(r.left);
        lr.right = rc;
        return r.left;
    }

    public TreeNode lastRight(TreeNode r) {
        while (r.right != null) r = r.right;
        return r;
    }
}
