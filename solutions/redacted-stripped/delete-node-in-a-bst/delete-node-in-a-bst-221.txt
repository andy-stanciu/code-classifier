class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return null;
        if (root.val == key) {
            if (root.left == null && root.right == null)
                return null;
            else if (root.left == null || root.right == null) {
                if (root.left == null)
                    return root.right;
                else
                    return root.left;
            } else {
                TreeNode pred = iop(root);
                TreeNode predParent = parent(root, pred);
                if (root == predParent) {
                    pred.right = root.right;
                    return pred;
                }
                predParent.right = pred.left;
                pred.left = root.left;
                pred.right = root.right;
                root.left = null;
                root.right = null;
                return pred;
            }
        } else if (root.val < key)
            root.right = method1(root.right, key);
        else
            root.left = method1(root.left, key);
        return root;
    }

    private TreeNode iop(TreeNode root) {
        TreeNode temp = root.left;
        while (temp.right != null) temp = temp.right;
        return temp;
    }

    private TreeNode parent(TreeNode root, TreeNode pred) {
        if (root.left == pred || root.right == pred)
            return root;
        TreeNode temp = root.left;
        while (temp.right != pred) temp = temp.right;
        return temp;
    }
}
