class Solution {

    private TreeNode method1(TreeNode root) {
        while (root.left != null) root = root.left;
        return root;
    }

    private TreeNode helper(TreeNode root) {
        if (root.left == null && root.right == null)
            return null;
        if (root.left == null)
            return root.right;
        if (root.right == null)
            return root.left;
        TreeNode dummy = root.right;
        TreeNode leftOfDummy = method1(dummy);
        leftOfDummy.left = root.left;
        return dummy;
    }

    public TreeNode method2(TreeNode root, int key) {
        if (root == null)
            return null;
        if (root.val == key) {
            return helper(root);
        }
        TreeNode dummy = root;
        while (root != null) {
            if (key > root.val) {
                if (root.right != null && root.right.val == key) {
                    root.right = helper(root.right);
                    break;
                }
                root = root.right;
            } else {
                if (root.left != null && root.left.val == key) {
                    root.left = helper(root.left);
                    break;
                }
                root = root.left;
            }
        }
        return dummy;
    }
}
