class Solution {

    public TreeNode xe(ArrayList<Integer> arrayList) {
        if (arrayList == null || arrayList.isEmpty()) {
            return null;
        }
        TreeNode root = new TreeNode(arrayList.get(0));
        for (int i = 1; i < arrayList.size(); i++) {
            method1(root, arrayList.get(i));
        }
        return root;
    }

    private void method1(TreeNode root, int value) {
        if (value < root.val) {
            if (root.left == null) {
                root.left = new TreeNode(value);
            } else {
                method1(root.left, value);
            }
        } else {
            if (root.right == null) {
                root.right = new TreeNode(value);
            } else {
                method1(root.right, value);
            }
        }
    }

    public ArrayList<Integer> ok(ArrayList<Integer> arr, TreeNode root, int key) {
        if (root == null) {
            return arr;
        }
        if (key != root.val) {
            arr.add(root.val);
        }
        ok(arr, root.left, key);
        ok(arr, root.right, key);
        return arr;
    }

    public TreeNode method2(TreeNode root, int key) {
        ArrayList<Integer> arr = new ArrayList<>();
        if (root == null) {
            return root;
        }
        if (root.val == key) {
            arr = ok(arr, root, key);
            TreeNode temp = xe(arr);
            return temp;
        }
        if (key > root.val) {
            arr = ok(arr, root.right, key);
            TreeNode temp = xe(arr);
            root.right = temp;
        } else {
            arr = ok(arr, root.left, key);
            TreeNode temp = xe(arr);
            root.left = temp;
        }
        return root;
    }
}
