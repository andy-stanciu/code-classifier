class Solution {

    public TreeNode method1(TreeNode root, int key) {
        parent = null;
        TreeNode searched = search(root, key);
        if (searched == null)
            return root;
        if (searched == root && root.left == null && root.right == null)
            return null;
        method2(searched);
        return root;
    }

    TreeNode parent;

    public void method2(TreeNode root) {
        TreeNode var1 = root;
        if (root.right != null) {
            parent = root;
            root = root.right;
            while (root.left != null) {
                parent = root;
                root = root.left;
            }
            var1.val = root.val;
            if (parent != var1)
                parent.left = root.right;
            else
                parent.right = root.right;
        } else if (root.left != null) {
            parent = root;
            root = root.left;
            while (root.right != null) {
                parent = root;
                root = root.right;
            }
            var1.val = root.val;
            if (parent != var1)
                parent.right = root.left;
            else
                parent.left = root.left;
        } else {
            if (parent.left == root)
                parent.left = null;
            else
                parent.right = null;
        }
    }

    public TreeNode search(TreeNode root, int val) {
        while (root != null) {
            if (root.val == val)
                break;
            else if (val < root.val) {
                parent = root;
                root = root.left;
            } else {
                parent = root;
                root = root.right;
            }
        }
        return root;
    }
}
