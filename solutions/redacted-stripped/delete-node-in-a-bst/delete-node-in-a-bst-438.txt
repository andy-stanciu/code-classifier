class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return root;
        if (root.val == key) {
            TreeNode temp = root;
            if (temp.left == null && temp.right == null) {
                return null;
            } else if (temp.left != null && temp.right == null) {
                return temp.left;
            } else if (temp.left == null && temp.right != null) {
                return temp.right;
            } else {
                if (temp.left != null) {
                }
                int replacement = method2(temp.left);
                root.left = method1(temp.left, replacement);
                root.val = replacement;
                return root;
            }
        } else {
            if (root.val > key) {
                root.left = method1(root.left, key);
            } else {
                root.right = method1(root.right, key);
            }
        }
        return root;
    }

    private int method2(TreeNode root) {
        TreeNode t = root;
        while (t != null) {
            if (t.right == null) {
                return t.val;
            } else {
                t = t.right;
            }
        }
        return 0;
    }
}
