class Solution {

    public boolean method1(int[] nums, int k) {
        int n = nums.length;
        HashMap<Integer, ArrayList<Integer>> map = new HashMap<>();
        for (int i = 0; i < n; i++) {
            if (!map.containsKey(nums[i])) {
                map.put(nums[i], new ArrayList<Integer>());
                ArrayList<Integer> arr = map.get(nums[i]);
                arr.add(i);
            } else {
                ArrayList<Integer> arr = map.get(nums[i]);
                arr.add(i);
            }
        }
        ArrayList<Integer> keys = new ArrayList<>(map.keySet());
        for (Integer key : keys) {
            ArrayList<Integer> curr = map.get(key);
            int sz = curr.size();
            int l = 0;
            for (int r = 1; r < sz; r++) {
                if (Math.abs(curr.get(r) - curr.get(l)) <= k) {
                    return true;
                }
                while (Math.abs(curr.get(r) - curr.get(l)) > k && l < r) {
                    l++;
                }
            }
        }
        return false;
    }
}
