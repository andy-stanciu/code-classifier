class Solution {

    public int method1(int[] piles, int h) {
        int n = piles.length;
        int start = 1;
        int end = 0;
        for (int i = 0; i < n; i++) {
            end = Math.max(end, piles[i]);
        }
        if (h == piles.length)
            return end;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            int tempH = 0;
            int k = mid;
            for (int i = 0; i < n; i++) {
                tempH += piles[i] / k;
                if (piles[i] % k > 0) {
                    tempH++;
                }
            }
            if (tempH <= h && tempH > 0) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return start;
    }
}
