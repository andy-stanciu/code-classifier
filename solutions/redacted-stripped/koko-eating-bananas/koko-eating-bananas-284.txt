class Solution {

    public int method1(int[] piles, int h) {
        int start = 1, end = Integer.MAX_VALUE;
        int kSpeed = Integer.MAX_VALUE;
        while (start <= end) {
            int mid = start + ((end - start) / 2);
            int currHour = calculateHour(mid, piles);
            if (currHour > h) {
                start = mid + 1;
            } else {
                end = mid - 1;
                kSpeed = Math.min(kSpeed, mid);
            }
        }
        return kSpeed;
    }

    private int calculateHour(int speed, int[] piles) {
        int hours = 0;
        for (int p : piles) {
            hours += p / speed;
            if (p % speed > 0)
                hours++;
        }
        return hours;
    }
}
