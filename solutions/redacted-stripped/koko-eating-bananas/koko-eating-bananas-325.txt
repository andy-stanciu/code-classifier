class Solution {

    public int method1(int[] piles, int h) {
        int start = 1;
        int end = findMax(piles);
        while (start <= end) {
            int mid = (start + end) / 2;
            int to = reqTime(piles, mid);
            if (to <= h) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return start;
    }

    public static int reqTime(int[] arr, int h) {
        int totalHour = 0;
        for (int i = 0; i < arr.length; i++) {
            totalHour += Math.ceil((double) arr[i] / (double) h);
        }
        return totalHour;
    }

    public static int findMax(int[] arr) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < arr.length; i++) {
            max = Math.max(arr[i], max);
        }
        return max;
    }
}
