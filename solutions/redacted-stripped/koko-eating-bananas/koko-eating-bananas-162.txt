class Solution {

    public boolean check(int mid, int[] piles, int h) {
        int hour = 0;
        for (int pile : piles) {
            hour += (pile + mid - 1) / mid;
        }
        return hour <= h;
    }

    public int getMaxpile(int[] piles) {
        int max = 0;
        for (int pile : piles) {
            max = Math.max(max, pile);
        }
        return max;
    }

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = getMaxpile(piles);
        int ans = high;
        while (low <= high) {
            int mid = high - (high - low) / 2;
            if (check(mid, piles, h)) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
}
