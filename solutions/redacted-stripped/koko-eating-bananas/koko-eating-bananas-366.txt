class Solution {

    private static int max(int[] piles) {
        int maxi = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            maxi = Math.max(maxi, piles[i]);
        }
        return maxi;
    }

    private static int solve(int[] piles, int hourly) {
        int total = 0;
        for (int i = 0; i < piles.length; i++) {
            total += Math.ceil((double) piles[i] / (double) hourly);
        }
        return total;
    }

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = max(piles);
        while (low <= high) {
            int mid = (low + high) / 2;
            int tothours = solve(piles, mid);
            if (tothours <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
