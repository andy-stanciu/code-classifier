class Solution {

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = findMax(piles);
        int ans = 0;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            int totalhours = calculateTH(piles, mid);
            if (totalhours <= h) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }

    public int calculateTH(int[] arr, int t) {
        int th = 0;
        for (int i = 0; i < arr.length; i++) {
            th += Math.ceil((double) arr[i] / (double) (t));
        }
        return th;
    }

    public int findMax(int[] arr) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < arr.length; i++) {
            max = Math.max(arr[i], max);
        }
        return max;
    }
}
