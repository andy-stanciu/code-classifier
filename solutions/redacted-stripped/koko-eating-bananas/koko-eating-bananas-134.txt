class Solution {

    public int numberOfHoursTaken(int param1, int[] piles) {
        int hours = 0;
        int numberOfPiles = piles.length;
        for (int pile = 0; pile < numberOfPiles; pile++) {
            hours += Math.ceil((double) piles[pile] / (double) param1);
        }
        return hours;
    }

    public int method1(int[] piles, int h) {
        if (piles.length == 0)
            return 0;
        int var1 = Arrays.stream(piles).max().orElse(Integer.MIN_VALUE);
        int low = 1;
        int high = var1;
        int ans = 0;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (numberOfHoursTaken(mid, piles) <= h) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
}
