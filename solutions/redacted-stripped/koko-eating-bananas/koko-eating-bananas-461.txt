class Solution {

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = Arrays.stream(piles).max().orElse(0);
        int optimalSpeed = high;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            long numberOfHoursAtMidSpeed = 0;
            for (int pile : piles) {
                numberOfHoursAtMidSpeed += (pile + mid - 1) / mid;
            }
            if (numberOfHoursAtMidSpeed <= h) {
                optimalSpeed = Math.min(mid, optimalSpeed);
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return optimalSpeed;
    }
}
