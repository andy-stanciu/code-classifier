class Solution {

    public int method1(int[] piles, int h) {
        int sum = 0;
        int max = -1;
        for (int i = 0; i < piles.length; i++) {
            sum += piles[i];
            if (piles[i] > max)
                max = piles[i];
        }
        int min = (int) Math.ceil((double) sum / h);
        int mid = -1;
        while (min < max) {
            int actualTime = 0;
            mid = min + (max - min) / 2;
            for (int i = 0; i < piles.length; i++) {
                actualTime += Math.ceil((double) piles[i] / mid);
            }
            if (actualTime > h)
                min = mid + 1;
            if (actualTime <= h)
                max = mid;
        }
        return min;
    }
}
