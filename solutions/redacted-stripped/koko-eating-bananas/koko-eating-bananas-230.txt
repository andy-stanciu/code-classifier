class Solution {

    public int method1(int[] piles, int h) {
        Arrays.sort(piles);
        int l = 1;
        int r = piles[piles.length - 1];
        while (l < r) {
            int k = l + (r - l) / 2;
            if (method2(piles, k, h)) {
                r = k;
            } else {
                l = k + 1;
            }
        }
        return l;
    }

    private int findMax(int[] piles) {
        int max = piles[0];
        int i = 1;
        while (i < piles.length) {
            max = (max < piles[i] ? piles[i] : max);
        }
        return max;
    }

    private boolean method2(int[] piles, int k, int h) {
        int sum = 0;
        for (int i = 0; i < piles.length; i++) sum += (piles[i] + k - 1) / k;
        return (sum <= h);
    }
}
