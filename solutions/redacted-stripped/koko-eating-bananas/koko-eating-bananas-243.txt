class Solution {

    public boolean isPossibleToEat(int[] piles, int speed, int h) {
        int hours = 0;
        for (int i = 0; i < piles.length; i++) {
            hours += Math.ceil((double) piles[i] / (double) speed);
        }
        if (hours <= h)
            return true;
        return false;
    }

    public int method1(int[] piles, int h) {
        int var1 = 0;
        for (int i : piles) var1 = Math.max(i, var1);
        int min = 1, max = var1;
        int minSpeed = Integer.MAX_VALUE;
        while (min <= max) {
            int avg = (min + max) / 2;
            if (isPossibleToEat(piles, avg, h))
                max = avg - 1;
            else
                min = avg + 1;
        }
        return min;
    }
}
