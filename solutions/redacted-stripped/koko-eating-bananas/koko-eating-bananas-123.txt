class Solution {

    public int method1(int[] piles, int h) {
        int start = 1;
        int end = max(piles);
        int res = end;
        while (end >= start) {
            int mid = (start + end) / 2;
            int hours = 0;
            for (int i = 0; i < piles.length; i++) {
                hours += Math.ceil((double) piles[i] / mid);
            }
            if (hours > h) {
                start = mid + 1;
            } else {
                res = Math.min(res, mid);
                end = mid - 1;
            }
        }
        return res;
    }

    public int max(int[] arr) {
        int number = 0;
        for (int n : arr) {
            if (n > number)
                number = n;
        }
        return number;
    }
}
