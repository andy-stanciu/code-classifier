class Solution {

    public int method1(int[] v, int h) {
        int low = 1;
        int high = findMax(v);
        while (low <= high) {
            int mid = low + (high - low) / 2;
            int reqTime = timeReq(v, mid);
            if (reqTime <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }

    static int findMax(int[] a) {
        int n = a.length, max = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            if (a[i] > max) {
                max = a[i];
            }
        }
        return max;
    }

    static int timeReq(int[] a, int h) {
        int n = a.length, totalH = 0;
        for (int i = 0; i < n; i++) {
            totalH += Math.ceil((double) a[i] / (double) h);
        }
        return totalH;
    }
}
