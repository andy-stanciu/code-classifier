class Solution {

    public int method1(int[] piles, int h) {
        int left = 1;
        int right = 1;
        for (int i = 0; i < piles.length; i++) {
            right = Math.max(right, piles[i]);
        }
        while (left < right) {
            int possibleSpeed = left + (right - left) / 2;
            if (areBananaFinished(piles, possibleSpeed, h)) {
                right = possibleSpeed;
            } else {
                left = possibleSpeed + 1;
            }
        }
        return right;
    }

    public boolean areBananaFinished(int[] piles, double speed, int h) {
        double currHrs = 0;
        for (int pile : piles) {
            currHrs += Math.ceil(pile / speed);
            if (currHrs > h)
                return false;
        }
        return true;
    }
}
