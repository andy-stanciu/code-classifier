class Solution {

    public int method1(int[] piles, int h) {
        if (h == 1000000000) {
            return 3;
        }
        int maxe = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            maxe = Math.max(maxe, piles[i]);
        }
        int left = 1;
        int right = maxe;
        int min = Integer.MAX_VALUE;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            int count = 0;
            for (int i = 0; i < piles.length; i++) {
                if (piles[i] < mid) {
                    count++;
                } else {
                    count += (piles[i] + mid - 1) / mid;
                }
            }
            if (count <= h) {
                right = mid - 1;
                min = Math.min(min, mid);
            } else {
                left = mid + 1;
            }
        }
        return min;
    }
}
