class Solution {

    public int method1(int[] piles, int h) {
        int n = piles.length;
        int low = 0;
        int high = max(piles);
        int ans = -1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (totalBanana(piles, mid, h)) {
                ans = mid;
                high = mid - 1;
            } else
                low = mid + 1;
        }
        return ans;
    }

    private static boolean totalBanana(int[] arr, int x, int h) {
        int sum = 0;
        int n = arr.length;
        for (int i = 0; i < n; i++) sum += Math.ceil((double) arr[i] / x);
        return (sum <= h);
    }

    private static int max(int[] arr) {
        int n = arr.length;
        int max = arr[0];
        for (int i = 1; i < n; i++) max = Math.max(arr[i], max);
        return max;
    }
}
