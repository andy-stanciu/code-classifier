class Solution {

    public int method1(int[] piles, int h) {
        int low = 1, high = Arrays.stream(piles).max().getAsInt();
        while (low <= high) {
            int mid_i = (low + high) / 2;
            int totalH = method2(piles, mid_i);
            if (totalH <= h) {
                high = mid_i - 1;
            } else {
                low = mid_i + 1;
            }
        }
        return low;
    }

    public int method2(int[] piles, int param1) {
        int totalHrs = 0;
        for (int i = 0; i < piles.length; i++) {
            totalHrs += Math.ceil(((double) piles[i]) / (double) param1);
        }
        return totalHrs;
    }
}
