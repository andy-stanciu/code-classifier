class Solution {

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = 0;
        int total = 0;
        for (int num : piles) {
            total += num;
            high = Math.max(high, num);
        }
        high = Math.max(high, (int) Math.ceil((double) total / h));
        while (low < high) {
            int mid = low + (high - low) / 2;
            if (isPossible(piles, h, mid)) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }

    public boolean isPossible(int[] piles, int h, int mid) {
        int hours = 0;
        for (int pile : piles) {
            hours += (int) Math.ceil((double) pile / mid);
        }
        return hours <= h;
    }
}
