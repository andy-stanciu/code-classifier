class Solution {

    public int method1(int[] piles, int h) {
        int min = 1, max = Arrays.stream(piles).max().getAsInt();
        while (min <= max) {
            int mid = (min + max) / 2;
            int possibleHrs = method2(piles, mid);
            if (possibleHrs <= h && possibleHrs >= 0) {
                max = mid - 1;
            } else {
                min = mid + 1;
            }
        }
        return min;
    }

    private int method2(int[] piles, int h) {
        int hrs = 0;
        for (int pile : piles) {
            hrs += Math.ceilDiv(pile, h);
        }
        return hrs;
    }
}
