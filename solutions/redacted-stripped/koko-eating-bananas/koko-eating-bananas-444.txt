class Solution {

    public int method1(int[] piles, int h) {
        int max = Integer.MIN_VALUE;
        for (int i : piles) {
            max = Math.max(max, i);
        }
        int start = 1;
        int end = max;
        int ans = max;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (eatable(mid, piles, h)) {
                ans = mid;
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return ans;
    }

    public boolean eatable(int mid, int[] piles, int h) {
        int count = 0;
        for (int i : piles) {
            count += Math.ceil((double) i / mid);
        }
        return h >= count;
    }
}
