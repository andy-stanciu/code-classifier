class Solution {

    public boolean isAbleToEat(int[] piles, int h, int k) {
        long acc = 0;
        for (int pile : piles) {
            acc += Math.ceilDiv(pile, k);
        }
        return acc <= (long) h;
    }

    public int method1(int[] piles, int ho) {
        int l = 1;
        int h = 0;
        for (int pile : piles) {
            h = Math.max(h, pile);
        }
        int ans = h;
        while (l <= h) {
            int m = l + (h - l) / 2;
            if (isAbleToEat(piles, ho, m)) {
                ans = m;
                h = m - 1;
            } else {
                l = m + 1;
            }
        }
        return ans;
    }
}
