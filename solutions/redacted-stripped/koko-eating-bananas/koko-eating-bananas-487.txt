class Solution {

    public int method1(int[] piles, int h) {
        int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;
        for (int pile : piles) {
            max = Math.max(max, pile);
            min = Math.min(min, pile);
        }
        int start = 1;
        int end = max;
        while (start < end) {
            int mid = (start + end) / 2;
            int sum = binary(mid, piles);
            if (sum <= h) {
                end = mid;
            } else {
                start = mid + 1;
            }
        }
        return start;
    }

    public int binary(int mid, int[] piles) {
        int sum = 0;
        for (int i = 0; i < piles.length; i++) {
            sum += Math.ceil((double) piles[i] / mid);
        }
        return sum;
    }
}
