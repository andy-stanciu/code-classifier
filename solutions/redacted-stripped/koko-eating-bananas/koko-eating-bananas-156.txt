class Solution {

    public int method1(int[] piles, int h) {
        int low = 1, high = piles[0];
        for (int i = 1; i < piles.length; i++) {
            if (high < piles[i])
                high = piles[i];
        }
        int k = 0;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (check(piles, mid, h))
                high = mid - 1;
            else
                low = mid + 1;
        }
        return low;
    }

    boolean check(int[] piles, int k, int h) {
        int c = 0;
        for (int i = 0; i < piles.length; i++) {
            c += Math.ceil((double) piles[i] / (double) k);
        }
        if (c > h)
            return false;
        else
            return true;
    }
}
