class Solution {

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = getMaxPile(piles);
        while (low <= high) {
            int mid = (high + low) / 2;
            if (hourtook(piles, mid) <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }

    private int hourtook(int[] piles, int speed) {
        int totalHour = 0;
        for (int pile : piles) {
            totalHour += Math.ceil((double) pile / speed);
        }
        return totalHour;
    }

    private int getMaxPile(int[] piles) {
        int max = 0;
        for (int pile : piles) {
            if (pile > max) {
                max = pile;
            }
        }
        return max;
    }
}
