class Solution {

    public int method1(int[] piles, int h) {
        TreeSet<Integer> set = new TreeSet<>();
        for (int i = 0; i < piles.length; i++) {
            set.add(piles[i]);
        }
        int hi = set.pollLast();
        return binarySearch(piles, h, 1, hi);
    }

    int binarySearch(int[] nums, int h, int lo, int hi) {
        int ans = -1;
        while (lo <= hi) {
            int mid = lo + (hi - lo) / 2;
            if (check(nums, mid, h)) {
                ans = mid;
                hi = mid - 1;
            } else
                lo = mid + 1;
        }
        return ans;
    }

    boolean check(int[] nums, int mid, int h) {
        int i = 0;
        while (i < nums.length) {
            if (nums[i] < mid) {
                h--;
            } else {
                h -= (nums[i] + mid - 1) / mid;
            }
            i++;
        }
        return h >= 0;
    }
}
