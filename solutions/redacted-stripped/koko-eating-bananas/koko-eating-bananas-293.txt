class Solution {

    public int method1(int[] piles, int h) {
        int res = 0;
        int max = 0;
        for (int i : piles) {
            max = Math.max(max, i);
        }
        int left = 0, right = max;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (check(piles, h, mid)) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return left;
    }

    private boolean check(int[] piles, int h, int n) {
        int hour = 0;
        if (n == 0)
            return false;
        for (int i = 0; i < piles.length; i++) {
            int k = piles[i] / n;
            if (n * k < piles[i])
                k++;
            hour += k;
        }
        return hour <= h;
    }
}
