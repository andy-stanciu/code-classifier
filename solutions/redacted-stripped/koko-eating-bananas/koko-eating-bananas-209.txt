class Solution {

    public int method1(int[] piles, int h) {
        int mins = 1;
        int maxs = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            if (piles[i] > maxs) {
                maxs = piles[i];
            }
        }
        int ans = -1;
        while (mins <= maxs) {
            int mid = mins + (maxs - mins) / 2;
            if (canEat(piles, mid, h)) {
                ans = mid;
                maxs = mid - 1;
            } else {
                mins = mid + 1;
            }
        }
        return ans;
    }

    boolean canEat(int[] piles, int param1, int hours) {
        int hoursSpend = 0;
        for (int i = 0; i < piles.length; i++) {
            hoursSpend += piles[i] / param1;
            if (piles[i] % param1 != 0) {
                hoursSpend += 1;
            }
            if (hoursSpend > hours)
                return false;
        }
        return true;
    }
}
