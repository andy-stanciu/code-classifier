class Solution {

    public int method1(int[] arr, int h) {
        int maxEle = getMax(arr);
        return bs(arr, h, maxEle);
    }

    private static int getMax(int[] arr) {
        int ans = 0;
        for (int i = 0; i < arr.length; i++) {
            ans = Math.max(ans, arr[i]);
        }
        return ans;
    }

    private static int getTotalTimeRequired(int[] arr, int mid) {
        int totalHrs = 0;
        for (int i = 0; i < arr.length; i++) {
            totalHrs += Math.ceil((double) arr[i] / (double) mid);
        }
        return totalHrs;
    }

    private static int bs(int[] arr, int h, int maxEle) {
        int low = 1;
        int high = maxEle;
        while (low <= high) {
            int mid = (low + high) / 2;
            int totalHrs = getTotalTimeRequired(arr, mid);
            if (totalHrs <= h) {
                high = mid - 1;
            } else
                low = mid + 1;
        }
        return low;
    }
}
