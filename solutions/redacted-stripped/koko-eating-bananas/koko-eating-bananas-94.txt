class Solution {

    public int method1(int[] piles, int h) {
        int si = 1, end = 0, res = Integer.MAX_VALUE;
        for (int i = 0; i < piles.length; i++) {
            if (piles[i] > end) {
                end = piles[i];
            }
        }
        while (si <= end) {
            int mid = si + (end - si) / 2;
            if (isValid(mid, h, piles)) {
                res = Math.min(res, mid);
                end = mid - 1;
            } else {
                si = mid + 1;
            }
        }
        return res;
    }

    public boolean isValid(int mid, int h, int[] piles) {
        for (int i = 0; i < piles.length; i++) {
            int x = piles[i];
            if (x >= mid) {
                int val = x % mid;
                if (val == 0) {
                    h -= x / mid;
                } else {
                    h -= (x / mid + 1);
                }
            } else {
                h -= 1;
            }
            if (h < 0) {
                return false;
            }
        }
        if (h >= 0) {
            return true;
        } else {
            return false;
        }
    }
}
