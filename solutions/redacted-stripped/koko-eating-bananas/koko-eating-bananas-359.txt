public class Solution {

    public int findMax(int[] arr) {
        int n = arr.length;
        int max = arr[0];
        for (int i = 0; i < n; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }

    public int calculate(int[] arr, int hourly) {
        int n = arr.length;
        int total = 0;
        for (int i = 0; i < n; i++) {
            total += Math.ceil((double) (arr[i]) / (double) (hourly));
        }
        return total;
    }

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = findMax(piles);
        while (low <= high) {
            int mid = (low + high) / 2;
            int totalH = calculate(piles, mid);
            if (totalH <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
