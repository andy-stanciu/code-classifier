class Solution {

    public int findMax(int[] arr) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < arr.length; i++) {
            max = Math.max(max, arr[i]);
        }
        return max;
    }

    public int CaculateHours(int[] arr, int h) {
        int totalHrs = 0;
        int n = arr.length;
        for (int i = 0; i < n; i++) {
            totalHrs += Math.ceil((double) (arr[i]) / (double) (h));
        }
        return totalHrs;
    }

    public int method1(int[] piles, int h) {
        int low = 0;
        int high = findMax(piles);
        while (low <= high) {
            int mid = (low + high) / 2;
            int th = CaculateHours(piles, mid);
            if (th <= h)
                high = mid - 1;
            else
                low = mid + 1;
        }
        return low;
    }
}
