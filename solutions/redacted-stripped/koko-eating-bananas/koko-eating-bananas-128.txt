class Solution {

    int ans = Integer.MAX_VALUE;

    public int method1(int[] piles, int h) {
        int max = Arrays.stream(piles).max().getAsInt();
        this.ans = max;
        this.binaryFind(piles, max, h);
        return this.ans;
    }

    public void binaryFind(int[] piles, int val, int h) {
        int left = 0;
        int right = val;
        int mid = (left + right) / 2;
        int temp = h;
        while (true) {
            temp = h;
            for (int pile : piles) {
                temp -= pile % mid > 0 ? ((pile / mid) + 1) : pile / mid;
                if (temp < 0)
                    break;
            }
            if (temp >= 0) {
                this.ans = Math.min(this.ans, mid);
                right = mid;
            } else
                left = mid;
            mid = (left + right) / 2;
            if (mid == left || mid == right) {
                break;
            }
        }
    }
}
