class Solution {

    public int method1(int[] piles, int h) {
        int s = 1;
        int e = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            e = Math.max(e, piles[i]);
        }
        while (s < e) {
            int mid = s + (e - s) / 2;
            if (check(piles, mid, h)) {
                e = mid;
            } else if (!check(piles, mid, h)) {
                s = mid + 1;
            }
        }
        return s;
    }

    static boolean check(int[] piles, int mid, int h) {
        int total = 0;
        for (int nums : piles) {
            total += Math.ceil((double) nums / mid);
        }
        if (total <= h) {
            return true;
        } else {
            return false;
        }
    }
}
