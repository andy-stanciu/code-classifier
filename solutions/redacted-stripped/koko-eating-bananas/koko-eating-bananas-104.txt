class Solution {

    public int method1(int[] piles, int h) {
        int n = piles.length;
        int low = 1;
        int high = Integer.MIN_VALUE;
        for (int pile : piles) high = Math.max(high, pile);
        int ans = -1;
        while (low <= high) {
            int mid = (low + high) >> 1;
            System.out.println(" mid " + mid);
            if (rightK(mid, piles, h)) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }

    public boolean rightK(int m, int[] piles, int h) {
        int sum = 0;
        for (int i = 0; i < piles.length; i++) {
            sum += piles[i] / (double) m + (piles[i] % (double) m == 0 ? 0 : 1);
        }
        System.out.println("sum " + sum);
        return sum <= h;
    }
}
