class Solution {

    public int[] method1(int[] nums) {
        int[] ans = new int[nums.length];
        int mul = nums[0];
        int mulNotZ = nums[0];
        int zeroCnt = 0;
        if (mul == 0)
            zeroCnt = 1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] == 0)
                zeroCnt++;
            mul *= nums[i];
            if (nums[i] != 0) {
                if (mulNotZ == 0)
                    mulNotZ = 1;
                mulNotZ *= nums[i];
            }
            if (zeroCnt == 2)
                break;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 0) {
                ans[i] = mul / nums[i];
            } else if (zeroCnt == 1 && nums[i] == 0) {
                ans[i] = mulNotZ;
            } else if (zeroCnt > 1) {
                Arrays.fill(ans, 0);
                break;
            }
        }
        return ans;
    }
}

class Solution {

    public int[] method1(int[] nums) {
        int n = nums.length;
        int[] ans = new int[n];
        int var1 = 1;
        for (int i = 0; i < n; i++) {
            ans[i] = var1;
            var1 *= nums[i];
        }
        int var2 = 1;
        for (int i = n - 1; i >= 0; i--) {
            ans[i] *= var2;
            var2 *= nums[i];
        }
        return ans;
    }
}
