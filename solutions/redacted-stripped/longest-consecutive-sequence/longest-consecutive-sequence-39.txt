class Solution {

    public int method1(int[] nums) {
        if (nums.length == 0 || nums.length == 1) {
            return nums.length;
        }
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for (int i = 0; i < nums.length; i++) {
            pq.add(nums[i]);
        }
        int ans = 1;
        int count = 1;
        int prev = pq.remove();
        while (!pq.isEmpty()) {
            int present = pq.remove();
            if (present == prev) {
            } else if (Math.abs(present - prev) == 1) {
                count++;
                ans = Math.max(ans, count);
                prev = present;
            } else {
                count = 1;
                prev = present;
            }
        }
        return ans;
    }
}
