class Solution {

    class Pair {

        TreeNode node;

        int visited;

        Pair(TreeNode node, int visited) {
            this.node = node;
            this.visited = visited;
        }
    }

    public List<Integer> method1(TreeNode root) {
        List<Integer> arr = new ArrayList<>();
        Stack<Pair> st = new Stack<>();
        if (root == null)
            return arr;
        st.push(new Pair(root, 0));
        while (st.size() != 0) {
            Pair pair = st.pop();
            TreeNode node = pair.node;
            if (pair.visited == 0) {
                if (node.right != null) {
                    st.push(new Pair(node.right, 0));
                }
                st.push(new Pair(node, 1));
                if (node.left != null) {
                    st.push(new Pair(node.left, 0));
                }
            } else {
                arr.add(node.val);
            }
        }
        return arr;
    }
}
