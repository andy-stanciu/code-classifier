class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        boolean[] check = new boolean[nums.length];
        prm(nums, ans, new ArrayList<>(), check);
        return ans;
    }

    void prm(int[] nums, List<List<Integer>> ans, List<Integer> curr, boolean[] check) {
        if (curr.size() == nums.length) {
            if (!ans.contains(curr))
                ans.add(new ArrayList<>(curr));
        }
        for (int i = 0; i < nums.length; i++) {
            if (check[i])
                continue;
            check[i] = true;
            curr.add(nums[i]);
            prm(nums, ans, curr, check);
            check[i] = false;
            curr.remove(curr.size() - 1);
        }
    }
}
