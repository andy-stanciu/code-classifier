class Solution {

    public void solve(int[] nums, List<List<Integer>> sol, List<Integer> temp, boolean[] used) {
        if (temp.size() == nums.length) {
            sol.add(new ArrayList<>(temp));
        } else {
            for (int i = 0; i < nums.length; i++) {
                if (used[i] || i > 0 && nums[i] == nums[i - 1] && !used[i - 1])
                    continue;
                used[i] = true;
                temp.add(nums[i]);
                solve(nums, sol, temp, used);
                used[i] = false;
                temp.remove(temp.size() - 1);
            }
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> sol = new ArrayList<>();
        Arrays.sort(nums);
        solve(nums, sol, new ArrayList<>(), new boolean[nums.length]);
        return sol;
    }
}
