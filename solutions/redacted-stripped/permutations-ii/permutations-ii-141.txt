class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        Arrays.sort(nums);
        ArrayList<Integer> ans = new ArrayList<>();
        boolean[] isValid = new boolean[nums.length];
        print(list, ans, nums, isValid);
        return list;
    }

    public static void print(List<List<Integer>> list, ArrayList<Integer> ans, int[] nums, boolean[] isValid) {
        if (ans.size() == nums.length) {
            list.add(new ArrayList<>(ans));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!isValid[i]) {
                if (i > 0 && nums[i] == nums[i - 1] && !isValid[i - 1]) {
                    continue;
                }
                isValid[i] = true;
                ans.add(nums[i]);
                print(list, ans, nums, isValid);
                isValid[i] = false;
                ans.remove(ans.size() - 1);
            }
        }
    }
}
