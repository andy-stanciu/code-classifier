class Solution {

    public void helper(int[] nums, List<Integer> ds, Set<List<Integer>> ans, int[] used) {
        if (ds.size() == nums.length) {
            ans.add(new ArrayList<>(ds));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (used[i] == 1)
                continue;
            ds.add(nums[i]);
            used[i] = 1;
            helper(nums, ds, ans, used);
            ds.remove(ds.size() - 1);
            used[i] = 0;
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        Set<List<Integer>> ans = new HashSet<>();
        int[] used = new int[nums.length];
        helper(nums, new ArrayList<>(), ans, used);
        return new ArrayList<>(ans);
    }
}
