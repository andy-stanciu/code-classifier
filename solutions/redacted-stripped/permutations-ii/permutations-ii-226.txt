class Solution {

    public static void permu(List<List<Integer>> list, List<Integer> temp, int[] nums, boolean[] visi) {
        if (temp.size() == nums.length) {
            list.add(new ArrayList(temp));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if ((visi[i] == true) || (i > 0 && nums[i] == nums[i - 1] && !visi[i - 1])) {
                continue;
            }
            temp.add(nums[i]);
            visi[i] = true;
            permu(list, temp, nums, visi);
            temp.remove(temp.size() - 1);
            visi[i] = false;
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        List<Integer> temp = new ArrayList<>();
        List<List<Integer>> list = new ArrayList<>();
        boolean[] visi = new boolean[nums.length];
        permu(list, temp, nums, visi);
        return list;
    }
}
