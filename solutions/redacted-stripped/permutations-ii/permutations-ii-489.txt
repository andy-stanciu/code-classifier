class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public void func(int k, int[] arr) {
        if (k == arr.length) {
            List<Integer> a = new ArrayList<>();
            for (int x : arr) a.add(x);
            ans.add(a);
            return;
        }
        HashSet<Integer> s = new HashSet<>();
        for (int i = k; i < arr.length; i++) {
            if (s.contains(arr[i]))
                continue;
            s.add(arr[i]);
            swap(arr, i, k);
            func(k + 1, arr);
            swap(arr, i, k);
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        func(0, nums);
        return ans;
    }
}
