class Solution {

    List<List<Integer>> ans = new ArrayList();

    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        add(nums);
        nextPermute(nums);
        return ans;
    }

    public void nextPermute(int[] nums) {
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i] > nums[i - 1]) {
                for (int j = nums.length - 1; j >= i; j--) {
                    if (nums[j] > nums[i - 1]) {
                        int replace = nums[j];
                        nums[j] = nums[i - 1];
                        nums[i - 1] = replace;
                        Arrays.sort(nums, i, nums.length);
                        add(nums);
                        nextPermute(nums);
                    }
                }
            }
        }
    }

    public void add(int[] nums) {
        List<Integer> res = new ArrayList();
        for (int i = 0; i < nums.length; i++) {
            res.add(nums[i]);
        }
        ans.add(res);
    }
}
