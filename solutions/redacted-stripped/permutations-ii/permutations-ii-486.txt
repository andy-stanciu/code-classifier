public class Solution {

    Map<Integer, Integer> frequency = new HashMap<>();

    List<List<Integer>> var1 = new ArrayList<>();

    public List<List<Integer>> permuteUnique(int[] nums) {
        for (int n : nums) {
            frequency.put(n, frequency.getOrDefault(n, 0) + 1);
        }
        method1(new ArrayList<>(), nums.length);
        return var1;
    }

    private void method1(List<Integer> current, int param1) {
        if (current.size() == param1) {
            var1.add(new ArrayList<>(current));
            return;
        }
        for (int n : frequency.keySet()) {
            if (frequency.get(n) > 0) {
                frequency.put(n, frequency.get(n) - 1);
                current.add(n);
                method1(current, param1);
                frequency.put(n, frequency.get(n) + 1);
                current.remove(current.size() - 1);
            }
        }
    }
}
