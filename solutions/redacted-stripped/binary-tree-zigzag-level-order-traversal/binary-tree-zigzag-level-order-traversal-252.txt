class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null) {
            return new ArrayList<List<Integer>>();
        }
        List<List<Integer>> results = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList();
        queue.add(root);
        int index = 0;
        while (!queue.isEmpty()) {
            int currNodes = queue.size();
            List<Integer> list = new ArrayList<>();
            for (int i = 0; i < currNodes; i++) {
                TreeNode node = queue.remove();
                list.add(node.val);
                if (node.left != null) {
                    queue.add(node.left);
                }
                if (node.right != null) {
                    queue.add(node.right);
                }
            }
            if (index % 2 == 0) {
                results.add(list);
            } else {
                Collections.reverse(list);
                results.add(list);
            }
            index++;
        }
        return results;
    }
}
