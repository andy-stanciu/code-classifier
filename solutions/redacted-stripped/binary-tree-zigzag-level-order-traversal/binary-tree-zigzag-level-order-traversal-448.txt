class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> set = new ArrayList<>();
        if (root == null)
            return set;
        List<TreeNode> curr = new ArrayList<>();
        curr.add(root);
        boolean left_to_right = true;
        while (!curr.isEmpty()) {
            List<Integer> vals = new ArrayList<>();
            if (left_to_right) {
                for (int i = 0; i < curr.size(); i++) {
                    vals.add(curr.get(i).val);
                }
            } else {
                for (int i = curr.size() - 1; i >= 0; i--) {
                    vals.add(curr.get(i).val);
                }
            }
            set.add(vals);
            List<TreeNode> temp = new ArrayList<>();
            for (TreeNode n : curr) {
                if (n.left != null)
                    temp.add(n.left);
                if (n.right != null)
                    temp.add(n.right);
            }
            curr = temp;
            left_to_right = !left_to_right;
        }
        return set;
    }
}
