class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        queue.offer(root);
        boolean leftToRight = true;
        while (!queue.isEmpty()) {
            int var1 = queue.size();
            List<Integer> row = new ArrayList<>();
            for (int i = 0; i < var1; i++) {
                TreeNode currNode = queue.poll();
                row.add(currNode.val);
                if (currNode.left != null)
                    queue.offer(currNode.left);
                if (currNode.right != null)
                    queue.offer(currNode.right);
            }
            if (!leftToRight)
                Collections.reverse(row);
            leftToRight = !leftToRight;
            result.add(row);
        }
        return result;
    }
}
