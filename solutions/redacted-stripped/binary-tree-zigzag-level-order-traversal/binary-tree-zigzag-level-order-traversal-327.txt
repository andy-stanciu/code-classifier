class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        Deque<TreeNode> var1 = new LinkedList<>();
        var1.offer(root);
        boolean rev = false;
        while (!var1.isEmpty()) {
            int var2 = var1.size();
            List<Integer> inner = new ArrayList<>(var2);
            for (int i = 0; i < var2; i++) {
                if (!rev) {
                    TreeNode node = var1.pollFirst();
                    inner.add(node.val);
                    if (node.left != null) {
                        var1.addLast(node.left);
                    }
                    if (node.right != null) {
                        var1.addLast(node.right);
                    }
                } else {
                    TreeNode node = var1.pollLast();
                    inner.add(node.val);
                    if (node.right != null) {
                        var1.addFirst(node.right);
                    }
                    if (node.left != null) {
                        var1.addFirst(node.left);
                    }
                }
            }
            rev = !rev;
            ans.add(inner);
        }
        return ans;
    }
}
