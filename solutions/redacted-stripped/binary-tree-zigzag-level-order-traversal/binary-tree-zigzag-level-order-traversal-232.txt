class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null)
            return new ArrayList<>();
        List<List<Integer>> result = new ArrayList<>();
        Queue<TreeNode> que = new ArrayDeque<>();
        que.add(root);
        int var1 = 0;
        while (que.size() > 0) {
            int size = que.size();
            List<Integer> tempList = new ArrayList<>();
            while (size > 0) {
                TreeNode rnode = que.remove();
                tempList.add(rnode.val);
                if (rnode.left != null) {
                    que.add(rnode.left);
                }
                if (rnode.right != null) {
                    que.add(rnode.right);
                }
                size--;
            }
            if (var1 % 2 == 0) {
                result.add(tempList);
            }
            if (var1 % 2 != 0) {
                Collections.reverse(tempList);
                result.add(tempList);
            }
            var1 = var1 + 1;
        }
        return result;
    }
}
