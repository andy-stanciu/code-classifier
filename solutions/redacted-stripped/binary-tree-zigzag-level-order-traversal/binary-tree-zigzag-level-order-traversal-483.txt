class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        dfs(root, 0, result);
        return result;
    }

    private void dfs(TreeNode node, int param1, List<List<Integer>> result) {
        if (node == null) {
            return;
        }
        if (param1 >= result.size()) {
            result.add(new ArrayList<>());
        }
        if (param1 % 2 == 0) {
            result.get(param1).add(node.val);
        } else {
            result.get(param1).add(0, node.val);
        }
        dfs(node.left, param1 + 1, result);
        dfs(node.right, param1 + 1, result);
    }
}
