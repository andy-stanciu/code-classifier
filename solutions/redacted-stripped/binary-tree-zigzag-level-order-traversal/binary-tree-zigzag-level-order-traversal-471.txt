class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> l = new ArrayList<>();
        if (root == null) {
            return l;
        }
        q.add(root);
        while (q.size() > 0) {
            List<Integer> a = new ArrayList<>();
            int n = q.size();
            for (int i = 0; i < n; i++) {
                TreeNode temp = q.remove();
                a.add(temp.val);
                if (temp.left != null) {
                    q.add(temp.left);
                }
                if (temp.right != null) {
                    q.add(temp.right);
                }
            }
            l.add(a);
        }
        for (int i = 1; i < l.size(); i += 2) {
            Collections.reverse(l.get(i));
        }
        return l;
    }
}
