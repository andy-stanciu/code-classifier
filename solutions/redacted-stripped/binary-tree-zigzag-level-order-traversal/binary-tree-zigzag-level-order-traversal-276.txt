class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> var1 = new ArrayList<>();
        if (root == null)
            return var1;
        boolean fromLeft = true;
        Deque<TreeNode> q = new LinkedList<>();
        q.add(root);
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> subList = new ArrayList<>();
            for (int i = 0; i < size && fromLeft; i++) {
                TreeNode curr = q.pollFirst();
                subList.add(curr.val);
                if (curr.left != null)
                    q.addLast(curr.left);
                if (curr.right != null)
                    q.addLast(curr.right);
            }
            for (int i = 0; i < size && !fromLeft; i++) {
                TreeNode curr = q.pollLast();
                subList.add(curr.val);
                if (curr.right != null)
                    q.addFirst(curr.right);
                if (curr.left != null)
                    q.addFirst(curr.left);
            }
            var1.add(subList);
            fromLeft = !fromLeft;
        }
        return var1;
    }
}
