class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<List<Integer>> outer = new ArrayList<>();
        if (root == null) {
            return outer;
        }
        queue.add(root);
        boolean flag = true;
        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> internal = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                if (queue.peek().left != null) {
                    queue.add(queue.peek().left);
                }
                if (queue.peek().right != null) {
                    queue.add(queue.peek().right);
                }
                if (flag) {
                    internal.add(queue.remove().val);
                } else {
                    internal.add(0, queue.remove().val);
                }
            }
            outer.add(internal);
            flag = !flag;
        }
        return outer;
    }
}
