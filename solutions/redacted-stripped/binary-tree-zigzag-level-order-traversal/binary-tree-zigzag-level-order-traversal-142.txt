class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> output = new ArrayList<>();
        if (root == null)
            return output;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        q.add(null);
        boolean ltr = true;
        TreeNode temp;
        List<Integer> current = new ArrayList<>();
        while (!q.isEmpty()) {
            temp = q.poll();
            if (temp == null) {
                output.add(new ArrayList<>(current));
                current.clear();
                if (!q.isEmpty())
                    q.add(null);
                ltr = !ltr;
            } else {
                if (ltr == true)
                    current.add(temp.val);
                else
                    current.add(0, temp.val);
                if (temp.left != null)
                    q.add(temp.left);
                if (temp.right != null)
                    q.add(temp.right);
            }
        }
        return output;
    }
}
