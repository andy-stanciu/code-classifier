class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        boolean leftToright = true;
        while (!queue.isEmpty()) {
            int var1 = queue.size();
            List<Integer> path = new ArrayList<>();
            for (int i = 0; i < var1; i++) {
                TreeNode curr = queue.poll();
                if (leftToright) {
                    path.add(curr.val);
                } else {
                    path.add(0, curr.val);
                }
                if (curr.left != null) {
                    queue.add(curr.left);
                }
                if (curr.right != null) {
                    queue.add(curr.right);
                }
            }
            result.add(path);
            leftToright = !leftToright;
        }
        return result;
    }
}
