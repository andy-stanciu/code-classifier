class Solution {

    List<List<Integer>> resList;

    public List<List<Integer>> method1(TreeNode root) {
        resList = new ArrayList<>();
        if (root == null) {
            return resList;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        boolean isleftstart = false;
        queue.add(root);
        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> list = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = queue.remove();
                if (isleftstart) {
                    list.addFirst(node.val);
                } else {
                    list.add(node.val);
                }
                if (node.left != null) {
                    queue.add(node.left);
                }
                if (node.right != null) {
                    queue.add(node.right);
                }
            }
            resList.add(list);
            isleftstart = !isleftstart;
        }
        return resList;
    }
}
