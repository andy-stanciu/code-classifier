class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> var1 = new ArrayList<>();
        if (root == null)
            return var1;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        boolean flag = false;
        while (!queue.isEmpty()) {
            int var2 = queue.size();
            List<Integer> var3 = new ArrayList<>();
            Stack<Integer> reversedStack = new Stack<>();
            for (int i = 0; i < var2; i++) {
                TreeNode curr = queue.poll();
                if (flag)
                    reversedStack.push(curr.val);
                else
                    var3.add(curr.val);
                if (curr.left != null)
                    queue.add(curr.left);
                if (curr.right != null)
                    queue.add(curr.right);
            }
            flag = !flag;
            while (!reversedStack.isEmpty()) {
                var3.add(reversedStack.pop());
            }
            var1.add(var3);
        }
        return var1;
    }
}
