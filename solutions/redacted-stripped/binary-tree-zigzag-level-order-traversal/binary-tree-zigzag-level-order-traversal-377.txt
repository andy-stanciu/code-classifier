class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        Deque<TreeNode> q = new LinkedList<>();
        q.offer(root);
        boolean reverse = false;
        while (!q.isEmpty()) {
            int var1 = q.size();
            List<Integer> sublist = new ArrayList<>(var1);
            for (int i = 0; i < var1; i++) {
                if (!reverse) {
                    TreeNode curr = q.pollFirst();
                    sublist.add(curr.val);
                    if (curr.left != null)
                        q.addLast(curr.left);
                    if (curr.right != null)
                        q.addLast(curr.right);
                } else if (reverse) {
                    TreeNode curr = q.pollLast();
                    sublist.add(curr.val);
                    if (curr.right != null)
                        q.addFirst(curr.right);
                    if (curr.left != null)
                        q.addFirst(curr.left);
                }
            }
            reverse = !reverse;
            result.add(sublist);
        }
        return result;
    }
}
