class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Queue<Pair> queue = new LinkedList<>();
        queue.offer(new Pair(root, 1));
        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> var1 = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                Pair element = queue.poll();
                TreeNode node = element.node;
                int var2 = element.var1;
                if (var2 % 2 == 1) {
                    var1.add(node.val);
                } else {
                    var1.add(0, node.val);
                }
                if (node.left != null) {
                    queue.offer(new Pair(node.left, var2 + 1));
                }
                if (node.right != null) {
                    queue.offer(new Pair(node.right, var2 + 1));
                }
            }
            result.add(var1);
        }
        return result;
    }

    static class Pair {

        TreeNode node;

        int var1;

        public Pair(TreeNode node, int var1) {
            this.node = node;
            this.var1 = var1;
        }
    }
}
