class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> var1 = new ArrayList<>();
        if (root == null)
            return var1;
        Deque<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        boolean popFromBack = true;
        while (!queue.isEmpty()) {
            int var2 = queue.size();
            List<Integer> list = new ArrayList<>();
            while (var2 > 0) {
                if (popFromBack) {
                    TreeNode node = queue.pollLast();
                    list.add(node.val);
                    if (node.left != null)
                        queue.addFirst(node.left);
                    if (node.right != null)
                        queue.addFirst(node.right);
                } else {
                    TreeNode node = queue.pollFirst();
                    list.add(node.val);
                    if (node.right != null)
                        queue.addLast(node.right);
                    if (node.left != null)
                        queue.addLast(node.left);
                }
                var2--;
            }
            var1.add(list);
            popFromBack = !popFromBack;
        }
        return var1;
    }
}
