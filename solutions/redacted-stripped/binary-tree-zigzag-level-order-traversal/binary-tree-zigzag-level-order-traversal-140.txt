class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Stack<TreeNode> stack = new Stack<>();
        boolean flag = false;
        stack.push(root);
        while (!stack.isEmpty()) {
            Stack<TreeNode> tempStack = new Stack<>();
            List<Integer> curResult = new ArrayList<>();
            int size = stack.size();
            for (int i = 0; i < size; i++) {
                TreeNode cur = stack.pop();
                curResult.add(cur.val);
                if (!flag) {
                    if (cur.left != null) {
                        tempStack.push(cur.left);
                    }
                    if (cur.right != null) {
                        tempStack.push(cur.right);
                    }
                } else {
                    if (cur.right != null) {
                        tempStack.push(cur.right);
                    }
                    if (cur.left != null) {
                        tempStack.push(cur.left);
                    }
                }
            }
            flag = !flag;
            stack = tempStack;
            result.add(curResult);
        }
        return result;
    }
}
