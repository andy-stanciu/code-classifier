class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null)
            return new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        List<List<Integer>> ans = new ArrayList<>();
        boolean leftToRight = true;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> subList = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = q.poll();
                if (node != null) {
                    if (node.left != null)
                        q.add(node.left);
                    if (node.right != null)
                        q.add(node.right);
                    subList.add(node.val);
                }
            }
            if (!leftToRight) {
                Collections.reverse(subList);
            }
            ans.add(subList);
            leftToRight = leftToRight ? false : true;
        }
        return ans;
    }
}
