class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> mainList = new ArrayList<>();
        if (root == null)
            return mainList;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        boolean flage = false;
        while (!queue.isEmpty()) {
            List<Integer> list = new ArrayList<>();
            int size = queue.size();
            while (size-- > 0) {
                TreeNode currNode = queue.poll();
                list.add(currNode.val);
                if (currNode.left != null) {
                    queue.offer(currNode.left);
                }
                if (currNode.right != null) {
                    queue.offer(currNode.right);
                }
            }
            if (flage)
                Collections.reverse(list);
            mainList.add(list);
            flage = !flage;
        }
        return mainList;
    }
}
