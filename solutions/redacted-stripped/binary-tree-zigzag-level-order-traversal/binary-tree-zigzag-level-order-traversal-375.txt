class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null)
            return ans;
        q.offer(root);
        int sema = 0;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> list = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                if (q.peek().left != null)
                    q.offer(q.peek().left);
                if (q.peek().right != null)
                    q.offer(q.peek().right);
                if (sema == 0) {
                    list.add(q.remove().val);
                }
                if (sema == 1) {
                    list.add(0, q.remove().val);
                }
            }
            ans.add(list);
            sema = (sema == 0) ? 1 : 0;
        }
        return ans;
    }
}
