class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Deque<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        boolean isEven = true;
        while (!queue.isEmpty()) {
            int var1 = queue.size();
            List<Integer> helper = new ArrayList<>();
            for (int i = 0; i < var1; i++) {
                if (isEven) {
                    TreeNode node = queue.pollFirst();
                    helper.add(node.val);
                    if (node.left != null) {
                        queue.addLast(node.left);
                    }
                    if (node.right != null) {
                        queue.addLast(node.right);
                    }
                } else {
                    TreeNode node = queue.pollLast();
                    helper.add(node.val);
                    if (node.right != null) {
                        queue.addFirst(node.right);
                    }
                    if (node.left != null) {
                        queue.addFirst(node.left);
                    }
                }
            }
            isEven = !isEven;
            result.add(helper);
        }
        return result;
    }
}
