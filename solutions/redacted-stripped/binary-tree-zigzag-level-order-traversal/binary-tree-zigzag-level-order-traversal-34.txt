class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<List<Integer>> list = new ArrayList<List<Integer>>();
        int lvl = 0;
        if (root != null) {
            List<Integer> var1 = new ArrayList<Integer>();
            var1.add(root.val);
            list.add(var1);
            queue.add(root);
            while (!queue.isEmpty()) {
                var1 = new ArrayList<Integer>();
                int Qlength = queue.size();
                for (int i = 0; i < Qlength; i++) {
                    TreeNode current = queue.remove();
                    if (current.left != null) {
                        var1.add(current.left.val);
                        queue.add(current.left);
                    }
                    if (current.right != null) {
                        var1.add(current.right.val);
                        queue.add(current.right);
                    }
                }
                if (!var1.isEmpty()) {
                    if (lvl % 2 == 0)
                        Collections.reverse(var1);
                    list.add(var1);
                    lvl++;
                }
            }
        }
        return list;
    }
}
