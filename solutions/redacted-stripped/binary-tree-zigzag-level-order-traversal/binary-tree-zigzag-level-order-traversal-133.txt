class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        boolean flag = true;
        if (root == null) {
            return list;
        }
        q.offer(root);
        while (!q.isEmpty()) {
            int qsize = q.size();
            List<Integer> temp = new ArrayList<>();
            for (int i = 0; i < qsize; i++) {
                TreeNode currentNode = q.poll();
                if (currentNode.left != null) {
                    q.offer(currentNode.left);
                }
                if (currentNode.right != null) {
                    q.offer(currentNode.right);
                }
                temp.add(currentNode.val);
            }
            if (!flag) {
                Collections.reverse(temp);
            }
            list.add(temp);
            flag = !flag;
        }
        return list;
    }
}
