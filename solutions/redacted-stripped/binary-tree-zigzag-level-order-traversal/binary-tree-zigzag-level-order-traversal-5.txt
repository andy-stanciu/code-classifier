class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        int flag = 0;
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null)
            return ans;
        queue.offer(root);
        while (!queue.isEmpty()) {
            int var1 = queue.size();
            List<Integer> temp = new ArrayList<>();
            for (int i = 0; i < var1; i++) {
                if (queue.peek().left != null)
                    queue.offer(queue.peek().left);
                if (queue.peek().right != null)
                    queue.offer(queue.peek().right);
                temp.add(queue.poll().val);
            }
            if (flag % 2 == 0) {
                ans.add(temp);
            } else {
                Collections.reverse(temp);
                ans.add(temp);
            }
            flag++;
        }
        return ans;
    }
}
