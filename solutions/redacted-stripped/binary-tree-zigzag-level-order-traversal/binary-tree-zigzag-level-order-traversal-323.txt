class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null)
            return new ArrayList<>();
        List<List<Integer>> I = new ArrayList<>();
        Deque<TreeNode> d = new ArrayDeque<>(Arrays.asList(root));
        Boolean isLtor = true;
        while (!d.isEmpty()) {
            List<Integer> var1 = new ArrayList<>();
            for (int s = d.size(); s > 0; --s) if (isLtor) {
                TreeNode node = d.pollFirst();
                var1.add(node.val);
                if (node.left != null)
                    d.addLast(node.left);
                if (node.right != null)
                    d.addLast(node.right);
            } else {
                TreeNode node = d.pollLast();
                var1.add(node.val);
                if (node.right != null)
                    d.addFirst(node.right);
                if (node.left != null)
                    d.addFirst(node.left);
            }
            I.add(var1);
            isLtor = !isLtor;
        }
        return I;
    }
}
