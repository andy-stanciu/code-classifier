class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return result;
        }
        q.add(root);
        boolean LtoR = true;
        while (!q.isEmpty()) {
            int n = q.size();
            ArrayList<Integer> list = new ArrayList<>(Collections.nCopies(n, 0));
            for (int i = 0; i < n; i++) {
                TreeNode node = q.poll();
                int index = LtoR ? i : n - i - 1;
                list.set(index, node.val);
                if (node.left != null) {
                    q.add(node.left);
                }
                if (node.right != null) {
                    q.add(node.right);
                }
            }
            LtoR = !LtoR;
            result.add(list);
        }
        return result;
    }
}
