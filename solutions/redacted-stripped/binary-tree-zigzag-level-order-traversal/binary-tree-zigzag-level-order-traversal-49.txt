class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        List<List<Integer>> res = new LinkedList<>();
        if (root == null)
            return res;
        queue.add(root);
        boolean flag = false;
        while (queue.size() > 0) {
            int size = queue.size();
            LinkedList<Integer> subList = new LinkedList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = queue.poll();
                if (node.left != null)
                    queue.add(node.left);
                if (node.right != null)
                    queue.add(node.right);
                if (flag) {
                    subList.addFirst(node.val);
                } else {
                    subList.addLast(node.val);
                }
            }
            flag = !flag;
            res.add(subList);
        }
        return res;
    }
}
