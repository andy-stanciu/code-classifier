class Solution {

    List<List<Integer>> parent = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root) {
        helper(root);
        for (int i = 0; i < parent.size(); i++) if (i % 2 != 0)
            Collections.reverse(parent.get(i));
        System.out.println(parent);
        return parent;
    }

    private void helper(TreeNode root) {
        if (root == null) {
            return;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while (!q.isEmpty()) {
            int var1 = q.size();
            List<Integer> a = new ArrayList<>();
            for (int i = 0; i < var1; i++) {
                if (q.peek() != null) {
                    if (q.peek().left != null)
                        q.add(q.peek().left);
                    if (q.peek().right != null)
                        q.add(q.peek().right);
                    a.add(q.remove().val);
                }
            }
            parent.add(a);
        }
    }
}
