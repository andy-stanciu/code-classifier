class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> finalans = new ArrayList<>();
        Queue<TreeNode> qu = new LinkedList<>();
        if (root == null) {
            return finalans;
        }
        qu.add(root);
        int var1 = 0;
        while (!qu.isEmpty()) {
            int size = qu.size();
            ArrayList<Integer> ans = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode currNode = qu.poll();
                ans.add(currNode.val);
                if (currNode.left != null) {
                    qu.add(currNode.left);
                }
                if (currNode.right != null) {
                    qu.add(currNode.right);
                }
            }
            if (var1 % 2 == 1) {
                Collections.reverse(ans);
            }
            finalans.add(ans);
            var1++;
        }
        return finalans;
    }
}
