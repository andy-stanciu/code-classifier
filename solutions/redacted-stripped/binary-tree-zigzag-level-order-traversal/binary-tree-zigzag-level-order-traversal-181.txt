class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null)
            return ans;
        Queue<TreeNode> Q = new LinkedList<>();
        Q.add(root);
        TreeNode head;
        int c = 1;
        boolean flag = false;
        int temp;
        while (!Q.isEmpty()) {
            temp = 0;
            var var1 = new ArrayList<Integer>(c);
            for (int i = 0; i < c; i++) {
                head = Q.poll();
                var1.add(head.val);
                if (head.left != null) {
                    temp++;
                    Q.add(head.left);
                }
                if (head.right != null) {
                    temp++;
                    Q.add(head.right);
                }
            }
            if (flag == true) {
                flag = false;
                Collections.reverse(var1);
            } else {
                flag = true;
            }
            ans.add(var1);
            c = temp;
        }
        return ans;
    }
}
