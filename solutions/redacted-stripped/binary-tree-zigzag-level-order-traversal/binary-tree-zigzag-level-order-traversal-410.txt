class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        if (root == null) {
            return result;
        }
        boolean flag = true;
        queue.add(root);
        while (!queue.isEmpty()) {
            int n = queue.size();
            ArrayList<Integer> temp = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                TreeNode tempnode = queue.peek();
                temp.add(tempnode.val);
                if (tempnode.left != null) {
                    queue.add(tempnode.left);
                }
                if (tempnode.right != null) {
                    queue.add(tempnode.right);
                }
                queue.poll();
            }
            if (!flag) {
                Collections.reverse(temp);
            }
            result.add(temp);
            flag = !flag;
        }
        return result;
    }
}
