class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> biglist = new ArrayList<>();
        if (root == null) {
            return biglist;
        }
        q.add(root);
        boolean a = true;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> list = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode curr = q.remove();
                list.add(curr.val);
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
            if (a == true) {
                biglist.add(list);
                a = false;
            } else {
                Collections.reverse(list);
                biglist.add(list);
                a = true;
            }
        }
        return biglist;
    }

    public List<List<Integer>> method2(TreeNode root) {
        return method1(root);
    }
}
