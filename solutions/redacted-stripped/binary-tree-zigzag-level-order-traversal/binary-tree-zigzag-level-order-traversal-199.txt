class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null)
            return list;
        Deque<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        boolean leftToRight = false;
        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> var1 = new ArrayList<>(size);
            for (int i = 0; i < size; i++) {
                TreeNode node = null;
                if (!leftToRight) {
                    node = queue.pollFirst();
                    if (node.left != null) {
                        queue.addLast(node.left);
                    }
                    if (node.right != null) {
                        queue.addLast(node.right);
                    }
                } else {
                    node = queue.pollLast();
                    if (node.right != null) {
                        queue.addFirst(node.right);
                    }
                    if (node.left != null) {
                        queue.addFirst(node.left);
                    }
                }
                var1.add(node.val);
            }
            leftToRight = !leftToRight;
            list.add(var1);
        }
        return list;
    }
}
