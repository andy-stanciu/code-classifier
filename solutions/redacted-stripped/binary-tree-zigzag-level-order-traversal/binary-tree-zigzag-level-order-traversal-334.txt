class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        Queue<TreeNode> q = new LinkedList<>();
        int c = 0;
        if (root != null)
            q.add(root);
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> var1 = new ArrayList<Integer>();
            while (size > 0) {
                TreeNode popped = q.poll();
                if (popped.right != null)
                    q.add(popped.right);
                if (popped.left != null)
                    q.add(popped.left);
                var1.add(popped.val);
                size--;
            }
            if (c % 2 == 0)
                Collections.reverse(var1);
            ans.add(var1);
            c++;
        }
        return ans;
    }
}
