class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> mega = new LinkedList<>();
        int var1 = 0;
        if (root == null) {
            return mega;
        }
        q.offer(root);
        while (!q.isEmpty()) {
            List<Integer> list = new LinkedList<>();
            List<Integer> list1 = new LinkedList<>();
            int size = q.size();
            for (int i = 0; i < size; i++) {
                TreeNode curr = q.poll();
                if (curr.left != null) {
                    q.offer(curr.left);
                }
                if (curr.right != null) {
                    q.offer(curr.right);
                }
                list.add(curr.val);
            }
            if (var1 % 2 != 0) {
                Collections.reverse(list);
            }
            mega.add(list);
            var1++;
        }
        return mega;
    }
}
