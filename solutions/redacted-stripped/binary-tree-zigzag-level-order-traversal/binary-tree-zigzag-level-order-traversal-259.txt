class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null) {
            return new ArrayList<>();
        }
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> st = new LinkedList<>();
        st.add(root);
        int curr = 1;
        while (st.size() > 0) {
            int till = st.size();
            List<Integer> op = new ArrayList<>();
            for (int i = 0; i < till; i++) {
                TreeNode var1 = st.poll();
                if (var1 != null) {
                    op.add(var1.val);
                    if (var1.left != null)
                        st.add(var1.left);
                    if (var1.right != null)
                        st.add(var1.right);
                }
            }
            if (curr % 2 == 0) {
                Collections.reverse(op);
                ans.add(op);
            } else {
                ans.add(op);
            }
            curr++;
        }
        return ans;
    }
}
