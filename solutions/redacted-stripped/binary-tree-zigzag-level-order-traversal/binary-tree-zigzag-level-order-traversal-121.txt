class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean flag = false;
        while (!q.isEmpty()) {
            int s = q.size();
            ArrayList<Integer> list = new ArrayList<>();
            Stack<Integer> stack = new Stack<>();
            for (int i = 0; i < s; i++) {
                TreeNode curr = q.poll();
                if (flag) {
                    stack.add(curr.val);
                } else {
                    list.add(curr.val);
                }
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
            flag = !flag;
            while (!stack.isEmpty()) {
                list.add(stack.pop());
            }
            ans.add(list);
        }
        return ans;
    }
}
