class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        boolean reverse = false;
        if (root == null) {
            return result;
        }
        Deque<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int var1 = queue.size();
            List<Integer> var2 = new ArrayList<>();
            TreeNode current;
            for (int i = 0; i < var1; i++) {
                if (reverse) {
                    current = queue.pollLast();
                    var2.add(current.val);
                    if (current.right != null) {
                        queue.addFirst(current.right);
                    }
                    if (current.left != null) {
                        queue.addFirst(current.left);
                    }
                }
                if (!reverse) {
                    current = queue.pollFirst();
                    var2.add(current.val);
                    if (current.left != null) {
                        queue.addLast(current.left);
                    }
                    if (current.right != null) {
                        queue.addLast(current.right);
                    }
                }
            }
            reverse = !reverse;
            result.add(var2);
        }
        return result;
    }
}
