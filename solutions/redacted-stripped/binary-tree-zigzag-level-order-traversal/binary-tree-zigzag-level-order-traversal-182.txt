class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> var1 = new ArrayList<>();
        if (root == null) {
            return var1;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        boolean flag = false;
        while (!q.isEmpty()) {
            Stack<Integer> st = new Stack<>();
            int size = q.size();
            List<Integer> lst = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = q.poll();
                if (flag) {
                    st.push(node.val);
                } else {
                    lst.add(node.val);
                }
                if (node.left != null) {
                    q.offer(node.left);
                }
                if (node.right != null) {
                    q.offer(node.right);
                }
            }
            flag = !flag;
            while (!st.isEmpty()) {
                lst.add(st.pop());
            }
            var1.add(lst);
        }
        return var1;
    }
}
