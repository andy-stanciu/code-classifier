class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null)
            return list;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        int c = 1;
        while (!q.isEmpty()) {
            LinkedList<Integer> l = new LinkedList<>();
            int n = q.size();
            for (int i = 0; i < n; i++) {
                if (c % 2 == 0) {
                    l.addLast(q.peek().val);
                } else {
                    l.addFirst(q.peek().val);
                }
                if (q.peek().right != null)
                    q.add(q.peek().right);
                if (q.peek().left != null)
                    q.add(q.peek().left);
                q.remove();
            }
            list.add(l);
            c++;
        }
        return list;
    }
}
