class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return ans;
        }
        q.offer(root);
        boolean leftorright = true;
        while (!q.isEmpty()) {
            int len = q.size();
            List<Integer> l = new ArrayList<>();
            for (int i = 0; i < len; i++) {
                TreeNode temp = q.poll();
                l.add(temp.val);
                if (temp.left != null) {
                    q.offer(temp.left);
                }
                if (temp.right != null) {
                    q.offer(temp.right);
                }
            }
            if (!leftorright) {
                Collections.reverse(l);
                ans.add(l);
            } else
                ans.add(l);
            leftorright = !leftorright;
        }
        return ans;
    }
}
