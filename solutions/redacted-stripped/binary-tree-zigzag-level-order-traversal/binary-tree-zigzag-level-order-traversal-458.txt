class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> queue = new ArrayDeque<>();
        List<List<Integer>> res = new ArrayList<>();
        if (root == null) {
            return res;
        }
        queue.offer(root);
        boolean flag = true;
        while (!queue.isEmpty()) {
            int num = queue.size();
            List<Integer> inlist = new ArrayList<>();
            for (int i = 0; i < num; i++) {
                if (queue.peek().left != null) {
                    queue.offer(queue.peek().left);
                }
                if (queue.peek().right != null) {
                    queue.offer(queue.peek().right);
                }
                inlist.add(queue.poll().val);
            }
            if (!flag) {
                Collections.reverse(inlist);
            }
            res.add(inlist);
            flag = !flag;
        }
        return res;
    }
}
