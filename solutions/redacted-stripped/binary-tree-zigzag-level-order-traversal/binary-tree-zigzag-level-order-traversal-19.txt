class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        LinkedList<List<Integer>> ans = new LinkedList<>();
        Deque<TreeNode> deque = new LinkedList<TreeNode>();
        if (root == null)
            return ans;
        int var1 = 0;
        deque.push(root);
        while (!deque.isEmpty()) {
            int size = deque.size();
            List<Integer> app = new LinkedList<>();
            if (var1 % 2 == 0) {
                for (int i = 0; i < size; i++) {
                    TreeNode temp = deque.getFirst();
                    deque.removeFirst();
                    app.add(temp.val);
                    if (temp.left != null) {
                        deque.addLast(temp.left);
                    }
                    if (temp.right != null) {
                        deque.addLast(temp.right);
                    }
                }
            } else {
                for (int i = 0; i < size; i++) {
                    TreeNode temp = deque.getLast();
                    deque.removeLast();
                    app.add(temp.val);
                    if (temp.right != null) {
                        deque.addFirst(temp.right);
                    }
                    if (temp.left != null) {
                        deque.addFirst(temp.left);
                    }
                }
            }
            ans.add(app);
            var1++;
        }
        return ans;
    }
}
