class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list2 = new ArrayList<>();
        int height = height(root);
        for (int i = 1; i <= height; i++) {
            List<Integer> list3 = new ArrayList<>();
            if (i % 2 != 0) {
                left(root, i, list3);
            } else {
                right(root, i, list3);
            }
            list2.add(list3);
        }
        return list2;
    }

    public int height(TreeNode root) {
        if (root == null)
            return 0;
        return 1 + Math.max(height(root.left), height(root.right));
    }

    public void left(TreeNode root, int param1, List<Integer> list) {
        if (root == null)
            return;
        if (param1 == 1) {
            list.add(root.val);
        } else {
            left(root.left, param1 - 1, list);
            left(root.right, param1 - 1, list);
        }
    }

    public void right(TreeNode root, int param1, List<Integer> list) {
        if (root == null)
            return;
        if (param1 == 1) {
            list.add(root.val);
        } else {
            right(root.right, param1 - 1, list);
            right(root.left, param1 - 1, list);
        }
    }
}
