class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ll = new ArrayList<>();
        if (root == null) {
            return ll;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int flag = 0;
        while (!queue.isEmpty()) {
            int n = queue.size();
            List<Integer> ll2 = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                TreeNode current = queue.poll();
                ll2.add(current.val);
                if (current.left != null) {
                    queue.offer(current.left);
                }
                if (current.right != null) {
                    queue.offer(current.right);
                }
            }
            if (flag == 0) {
                ll.add(ll2);
                flag = 1;
            } else {
                Collections.reverse(ll2);
                ll.add(ll2);
                flag = 0;
            }
        }
        return ll;
    }
}
