class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> queueNode = new LinkedList<>();
        List<List<Integer>> listNode = new ArrayList<>();
        int var1 = 0;
        if (root == null) {
            return listNode;
        }
        queueNode.add(root);
        while (!queueNode.isEmpty()) {
            int size1 = queueNode.size();
            List<Integer> row = new ArrayList<>();
            for (int i = 0; i < size1; i++) {
                TreeNode node = queueNode.poll();
                if (var1 % 2 == 0) {
                    row.add(node.val);
                } else {
                    row.add(0, node.val);
                }
                if (node.left != null) {
                    queueNode.add(node.left);
                }
                if (node.right != null) {
                    queueNode.add(node.right);
                }
            }
            listNode.add(row);
            var1 += 1;
        }
        return listNode;
    }
}
