class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        int flag = 0;
        if (root == null)
            return ans;
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.add(root);
        while (queue.size() > 0) {
            List<Integer> list = new ArrayList<Integer>();
            int size = queue.size();
            for (int i = 0; i < size; i++) {
                list.add(queue.peek().val);
                if (queue.peek().left != null)
                    queue.add(queue.peek().left);
                if (queue.peek().right != null)
                    queue.add(queue.peek().right);
                queue.remove();
            }
            if (flag == 0) {
                ans.add(list);
                flag = 1;
            } else {
                Collections.reverse(list);
                ans.add(list);
                flag = 0;
            }
        }
        return ans;
    }
}
