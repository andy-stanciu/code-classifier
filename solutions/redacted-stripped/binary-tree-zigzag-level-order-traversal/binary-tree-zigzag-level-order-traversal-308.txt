class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Deque<TreeNode> deque = new ArrayDeque<>();
        deque.addLast(root);
        int var1 = -1;
        while (!deque.isEmpty()) {
            int var2 = deque.size();
            List<Integer> var3 = new ArrayList<>(var2);
            var1++;
            for (int i = 0; i < var2; i++) {
                TreeNode currentNode = null;
                if (var1 % 2 != 0) {
                    currentNode = deque.removeLast();
                    if (currentNode.right != null) {
                        deque.addFirst(currentNode.right);
                    }
                    if (currentNode.left != null) {
                        deque.addFirst(currentNode.left);
                    }
                } else {
                    currentNode = deque.removeFirst();
                    if (currentNode.left != null) {
                        deque.addLast(currentNode.left);
                    }
                    if (currentNode.right != null) {
                        deque.addLast(currentNode.right);
                    }
                }
                var3.add(currentNode.val);
            }
            result.add(var3);
        }
        return result;
    }
}
