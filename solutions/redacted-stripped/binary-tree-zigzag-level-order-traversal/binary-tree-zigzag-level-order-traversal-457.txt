class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int var1 = 0;
        while (!queue.isEmpty()) {
            int var2 = queue.size();
            List<Integer> var3 = new ArrayList<>(var2);
            for (int i = 0; i < var2; i++) {
                TreeNode currentnode = queue.poll();
                var3.add(currentnode.val);
                if (currentnode.left != null) {
                    queue.add(currentnode.left);
                }
                if (currentnode.right != null) {
                    queue.add(currentnode.right);
                }
            }
            if (var1 % 2 == 1) {
                Collections.reverse(var3);
            }
            result.add(var3);
            var1++;
        }
        return result;
    }
}
