class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null)
            return new ArrayList<>();
        List<List<Integer>> list = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        int var1 = 1;
        q.offer(root);
        while (!q.isEmpty()) {
            List<Integer> subList = new ArrayList<>();
            int size = q.size();
            TreeNode temp;
            for (int i = 0; i < size; i++) {
                temp = q.poll();
                if (var1 % 2 == 0)
                    subList.addFirst(temp.val);
                else
                    subList.addLast(temp.val);
                if (temp.left != null)
                    q.offer(temp.left);
                if (temp.right != null)
                    q.offer(temp.right);
            }
            list.add(subList);
            var1++;
        }
        return list;
    }
}
