class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null)
            return ans;
        Stack<TreeNode> s1 = new Stack<>();
        Stack<TreeNode> s2 = new Stack<>();
        s1.add(root);
        List<Integer> sol = new ArrayList<>();
        while ((!s1.isEmpty()) || (!s2.isEmpty())) {
            while (!s1.isEmpty()) {
                TreeNode temp = s1.pop();
                sol.add(temp.val);
                if (temp.left != null) {
                    s2.add(temp.left);
                }
                if (temp.right != null) {
                    s2.add(temp.right);
                }
            }
            if (sol.size() > 0) {
                ans.add(sol);
                sol = new ArrayList<>();
            }
            while (!s2.isEmpty()) {
                TreeNode temp = s2.pop();
                sol.add(temp.val);
                if (temp.right != null) {
                    s1.add(temp.right);
                }
                if (temp.left != null) {
                    s1.add(temp.left);
                }
            }
            if (sol.size() > 0) {
                ans.add(sol);
                sol = new ArrayList<>();
            }
        }
        return ans;
    }
}
