class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        boolean leftToRight = true;
        while (!queue.isEmpty()) {
            int var1 = queue.size();
            List<Integer> currentList = new ArrayList<>();
            for (int i = 0; i < var1; i++) {
                TreeNode curr = queue.poll();
                currentList.add(curr.val);
                if (curr.left != null) {
                    queue.offer(curr.left);
                }
                if (curr.right != null) {
                    queue.offer(curr.right);
                }
            }
            if (!leftToRight) {
                Collections.reverse(currentList);
            }
            result.add(currentList);
            leftToRight = !leftToRight;
        }
        return result;
    }
}
