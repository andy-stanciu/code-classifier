class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return new ArrayList<>();
        }
        q.add(root);
        int side = 0;
        List<List<Integer>> ans = new ArrayList<>();
        while (q.size() != 0) {
            int k = q.size();
            List<Integer> arr = new ArrayList<>();
            for (int i = 1; i <= k; i++) {
                TreeNode node = q.poll();
                arr.add(node.val);
                if (node.left != null) {
                    q.add(node.left);
                }
                if (node.right != null) {
                    q.add(node.right);
                }
            }
            if (side == 0) {
                ans.add(arr);
                side = 1;
            } else {
                Collections.reverse(arr);
                ans.add(arr);
                side = 0;
            }
        }
        return ans;
    }
}
