class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> arr2 = new ArrayList<>();
        List<Integer> arr = new ArrayList<>();
        if (root == null)
            return arr2;
        q.add(root);
        int k = 1;
        while (!q.isEmpty()) {
            int len = q.size();
            for (int i = 0; i < len; i++) {
                arr.add(q.peek().val);
                if (q.peek().left != null)
                    q.add(q.peek().left);
                if (q.peek().right != null)
                    q.add(q.peek().right);
                q.remove();
            }
            if (k % 2 == 0)
                Collections.reverse(arr);
            arr2.add(arr);
            arr = new ArrayList<>();
            k++;
        }
        return arr2;
    }
}
