class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> res = new LinkedList<>();
        if (root == null) {
            return res;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int var1 = 0;
        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> levsublist = new LinkedList<>();
            while (size > 0) {
                TreeNode node = queue.poll();
                if (var1 % 2 != 0) {
                    levsublist.addFirst(node.val);
                } else {
                    levsublist.add(node.val);
                }
                if (node.left != null) {
                    queue.offer(node.left);
                }
                if (node.right != null) {
                    queue.offer(node.right);
                }
                size--;
            }
            var1++;
            res.add(levsublist);
        }
        return res;
    }
}
