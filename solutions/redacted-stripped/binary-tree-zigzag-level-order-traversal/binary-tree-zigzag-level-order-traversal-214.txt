class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null) {
            return new ArrayList<>();
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        q.add(null);
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> ans = new ArrayList<>();
        boolean flag = false;
        while (!q.isEmpty()) {
            TreeNode curr = q.poll();
            if (curr != null) {
                list.add(curr.val);
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            } else {
                if (flag) {
                    Collections.reverse(list);
                }
                ans.add(new ArrayList<>(list));
                list.clear();
                if (!q.isEmpty()) {
                    q.add(null);
                }
                flag = !flag;
            }
        }
        return ans;
    }
}
