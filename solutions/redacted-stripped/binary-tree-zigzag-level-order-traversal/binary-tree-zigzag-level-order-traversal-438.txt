class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        int right = 0;
        List<List<Integer>> ans = new LinkedList<>();
        Stack<TreeNode> stk = new Stack<>();
        if (root == null)
            return ans;
        stk.push(root);
        while (!stk.isEmpty()) {
            List<Integer> list = new LinkedList<>();
            Stack<TreeNode> tmp = new Stack<>();
            while (!stk.isEmpty()) {
                TreeNode top = stk.peek();
                stk.pop();
                list.add(top.val);
                if (right == 1) {
                    if (top.right != null)
                        tmp.push(top.right);
                    if (top.left != null)
                        tmp.push(top.left);
                } else {
                    if (top.left != null)
                        tmp.push(top.left);
                    if (top.right != null)
                        tmp.push(top.right);
                }
            }
            stk = tmp;
            ans.add(list);
            right = 1 - right;
        }
        return ans;
    }
}
