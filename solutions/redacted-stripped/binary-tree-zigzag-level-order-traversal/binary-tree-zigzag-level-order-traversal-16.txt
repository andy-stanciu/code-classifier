class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        var ans = new ArrayList<List<Integer>>();
        method2(ans, 0, true, root);
        return ans;
    }

    private void method2(ArrayList<List<Integer>> res, int param1, boolean normal, TreeNode node) {
        if (node == null) {
            return;
        }
        if (res.size() < param1 + 1) {
            res.add(new LinkedList<>());
        }
        var currList = (LinkedList<Integer>) res.get(param1);
        if (normal) {
            currList.addLast(node.val);
            method2(res, param1 + 1, false, node.left);
            method2(res, param1 + 1, false, node.right);
        } else {
            currList.addFirst(node.val);
            method2(res, param1 + 1, true, node.left);
            method2(res, param1 + 1, true, node.right);
        }
    }
}
