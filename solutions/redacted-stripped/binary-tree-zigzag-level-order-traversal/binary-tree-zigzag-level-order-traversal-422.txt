class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Deque<TreeNode> q = new LinkedList<>();
        boolean flag = false;
        q.offer(root);
        while (!q.isEmpty()) {
            int var1 = q.size();
            List<Integer> innerList = new ArrayList<>(var1);
            for (int i = 0; i < var1; i++) {
                if (!flag) {
                    TreeNode node = q.pollFirst();
                    innerList.add(node.val);
                    if (node.left != null)
                        q.addLast(node.left);
                    if (node.right != null)
                        q.addLast(node.right);
                } else {
                    TreeNode node = q.pollLast();
                    innerList.add(node.val);
                    if (node.right != null)
                        q.addFirst(node.right);
                    if (node.left != null)
                        q.addFirst(node.left);
                }
            }
            flag = !flag;
            result.add(innerList);
        }
        return result;
    }
}
