class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> ans = new LinkedList<List<Integer>>();
        if (root == null)
            return ans;
        q.offer(root);
        boolean flag = true;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> temp = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                temp.add(0);
            }
            for (int i = 0; i < size; i++) {
                TreeNode node = q.poll();
                int index = (flag) ? i : (size - 1 - i);
                temp.set(index, node.val);
                if (node.left != null) {
                    q.offer(node.left);
                }
                if (node.right != null) {
                    q.offer(node.right);
                }
            }
            flag = !flag;
            ans.add(temp);
        }
        return ans;
    }
}
