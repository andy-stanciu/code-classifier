class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        Deque<TreeNode> q = new LinkedList<>();
        if (root == null)
            return list;
        boolean flag = false;
        q.add(root);
        flag = !flag;
        while (!q.isEmpty()) {
            int n = q.size();
            List<Integer> inner = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                if (flag) {
                    TreeNode removed = q.removeLast();
                    inner.add(removed.val);
                    if (removed.left != null) {
                        q.addFirst(removed.left);
                    }
                    if (removed.right != null) {
                        q.addFirst(removed.right);
                    }
                } else {
                    TreeNode removed = q.remove();
                    inner.add(removed.val);
                    if (removed.right != null) {
                        q.add(removed.right);
                    }
                    if (removed.left != null) {
                        q.add(removed.left);
                    }
                }
            }
            list.add(inner);
            flag = !flag;
        }
        return list;
    }
}
