class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        List<TreeNode> list = new ArrayList<>();
        if (root == null)
            return res;
        list.add(root);
        int count = 0;
        while (!list.isEmpty()) {
            int size = list.size();
            List<Integer> add = new ArrayList<>();
            List<TreeNode> tempList = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode temp = list.get(i);
                if (temp.left != null)
                    tempList.add(temp.left);
                if (temp.right != null)
                    tempList.add(temp.right);
                add.add(temp.val);
            }
            if (count % 2 == 0) {
                res.add(add);
            } else {
                Collections.reverse(add);
                res.add(add);
            }
            count++;
            list = tempList;
        }
        return res;
    }
}
