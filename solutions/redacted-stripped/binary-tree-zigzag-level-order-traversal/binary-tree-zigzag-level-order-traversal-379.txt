class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        Queue<TreeNode> visited = new LinkedList<TreeNode>();
        if (root == null) {
            return result;
        }
        Boolean leftToRight = true;
        visited.offer(root);
        while (!visited.isEmpty()) {
            int var1 = visited.size();
            List<Integer> var2 = new LinkedList<>();
            for (int i = 0; i < var1; ++i) {
                TreeNode curr = visited.poll();
                if (leftToRight) {
                    var2.add(curr.val);
                } else {
                    var2.add(0, curr.val);
                }
                if (curr.left != null) {
                    visited.add(curr.left);
                }
                if (curr.right != null) {
                    visited.add(curr.right);
                }
            }
            result.add(var2);
            leftToRight = !leftToRight;
        }
        return result;
    }
}
