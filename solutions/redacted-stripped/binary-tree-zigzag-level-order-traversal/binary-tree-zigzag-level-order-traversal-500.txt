class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> arrayList = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.add(root);
        if (root == null) {
            return arrayList;
        }
        int var1 = 1;
        while (!queue.isEmpty()) {
            int var2 = queue.size();
            List<Integer> var3 = new ArrayList<>();
            for (int i = 0; i < var2; i++) {
                TreeNode tempNode = queue.remove();
                if (tempNode.left != null) {
                    queue.add(tempNode.left);
                }
                if (tempNode.right != null) {
                    queue.add(tempNode.right);
                }
                if ((var1) % 2 == 0) {
                    var3.add(0, tempNode.val);
                }
                if ((var1) % 2 != 0) {
                    var3.add(tempNode.val);
                }
            }
            var1 += 1;
            arrayList.add(var3);
        }
        return arrayList;
    }
}
