class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null) {
            return list;
        }
        Deque<TreeNode> q = new LinkedList<>();
        q.offer(root);
        boolean reverse = false;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> l = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                if (!reverse) {
                    TreeNode cur = q.pollFirst();
                    l.add(cur.val);
                    if (cur.left != null) {
                        q.addLast(cur.left);
                    }
                    if (cur.right != null) {
                        q.addLast(cur.right);
                    }
                } else {
                    TreeNode cur = q.pollLast();
                    l.add(cur.val);
                    if (cur.right != null) {
                        q.addFirst(cur.right);
                    }
                    if (cur.left != null) {
                        q.addFirst(cur.left);
                    }
                }
            }
            reverse = !reverse;
            list.add(l);
        }
        return list;
    }
}
