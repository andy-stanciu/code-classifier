class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean LeftToRight = true;
        while (!q.isEmpty()) {
            int width = q.size();
            Deque<Integer> var1 = new LinkedList<>();
            for (int i = 0; i < width; i++) {
                TreeNode front = q.poll();
                if (LeftToRight) {
                    var1.addLast(front.val);
                } else {
                    var1.addFirst(front.val);
                }
                if (front.left != null) {
                    q.add(front.left);
                }
                if (front.right != null) {
                    q.add(front.right);
                }
            }
            LeftToRight = !LeftToRight;
            ans.add(new ArrayList(var1));
        }
        return ans;
    }
}
