class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> lll = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return lll;
        }
        q.add(root);
        q.add(null);
        List<Integer> ll = new ArrayList<>();
        while (!q.isEmpty()) {
            TreeNode curr = q.remove();
            if (curr == null) {
                if (!q.isEmpty()) {
                    q.add(null);
                }
                lll.add(ll);
                ll = new ArrayList<>();
            } else {
                ll.add(curr.val);
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
        }
        for (int i = 0; i < lll.size(); i++) {
            if (i % 2 != 0) {
                List<Integer> x = lll.get(i);
                Collections.reverse(x);
            }
        }
        return lll;
    }
}
