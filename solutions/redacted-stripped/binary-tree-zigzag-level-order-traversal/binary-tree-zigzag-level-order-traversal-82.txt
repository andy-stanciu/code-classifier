class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null)
            return res;
        Queue<TreeNode> queue = new LinkedList<>();
        boolean isLeftToRight = true;
        queue.offer(root);
        while (!queue.isEmpty()) {
            int var1 = queue.size();
            List<Integer> list = new ArrayList<>(var1);
            for (int i = 0; i < var1; i++) {
                TreeNode node = queue.poll();
                if (isLeftToRight) {
                    list.add(node.val);
                } else {
                    list.add(0, node.val);
                }
                if (node.left != null) {
                    queue.offer(node.left);
                }
                if (node.right != null) {
                    queue.offer(node.right);
                }
            }
            res.add(list);
            isLeftToRight = !isLeftToRight;
        }
        return res;
    }
}
