class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        boolean leftToRight = true;
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if (root == null) {
            return new ArrayList<List<Integer>>();
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> arrayList = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = queue.remove();
                if (node.left != null) {
                    queue.add(node.left);
                }
                if (node.right != null) {
                    queue.add(node.right);
                }
                arrayList.add(node.val);
            }
            if (!leftToRight) {
                Collections.reverse(arrayList);
            }
            leftToRight = !leftToRight;
            result.add(arrayList);
        }
        return result;
    }
}
