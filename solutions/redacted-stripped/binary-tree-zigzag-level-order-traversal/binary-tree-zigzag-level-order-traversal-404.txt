class Solution {

    public static int method1(TreeNode root) {
        if (root == null) {
            return 0;
        }
        return 1 + Math.max(method1(root.left), method1(root.right));
    }

    public static void method2(TreeNode root, int param1, int param2, List<Integer> v) {
        if (root == null) {
            return;
        }
        if (param1 == param2) {
            v.add(root.val);
            return;
        }
        method2(root.right, param1 + 1, param2, v);
        method2(root.left, param1 + 1, param2, v);
    }

    public static void method3(TreeNode root, int param1, int param2, List<Integer> v) {
        if (root == null) {
            return;
        }
        if (param1 == param2) {
            v.add(root.val);
            return;
        }
        method3(root.left, param1 + 1, param2, v);
        method3(root.right, param1 + 1, param2, v);
    }

    public static void method4(TreeNode root, List<List<Integer>> ans) {
        int n = method1(root);
        for (int i = 1; i <= n; i++) {
            List<Integer> v = new ArrayList<>();
            if (i % 2 == 0) {
                method2(root, 1, i, v);
            } else {
                method3(root, 1, i, v);
            }
            ans.add(v);
        }
    }

    public List<List<Integer>> method5(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        method4(root, ans);
        return ans;
    }
}
