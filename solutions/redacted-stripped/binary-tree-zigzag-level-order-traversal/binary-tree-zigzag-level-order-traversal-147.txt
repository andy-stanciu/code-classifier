class Solution {

    List<List<Integer>> var1 = new ArrayList<>();

    int var2 = 1;

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null)
            return var1;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> nodes = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = queue.poll();
                nodes.add(node.val);
                if (node.left != null) {
                    queue.offer(node.left);
                }
                if (node.right != null) {
                    queue.offer(node.right);
                }
            }
            if (var2 % 2 == 0) {
                Collections.reverse(nodes);
            }
            var1.add(nodes);
            var2++;
        }
        return var1;
    }
}
