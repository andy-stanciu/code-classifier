public class Class1 {

    int val;

    Class1 left;

    Class1 right;

    Class1() {
    }

    Class1(int val) {
        this.val = val;
    }

    Class1(int val, Class1 left, Class1 right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

class Solution {

    public List<List<Integer>> method1(Class1 root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null) {
            return list;
        }
        Queue<Class1> q = new LinkedList<>();
        q.add(root);
        boolean leftToRight = true;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> l = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                Class1 curr = q.poll();
                l.add(curr.val);
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
            if (!leftToRight) {
                Collections.reverse(l);
            }
            list.add(l);
            leftToRight = !leftToRight;
        }
        return list;
    }
}
