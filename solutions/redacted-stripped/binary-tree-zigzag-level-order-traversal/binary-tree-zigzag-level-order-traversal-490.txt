class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if (root == null)
            return result;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        boolean reverse = false;
        while (!queue.isEmpty()) {
            int length = queue.size();
            Integer[] temp = new Integer[length];
            for (int i = 0; i < length; i++) {
                if (queue.peek().left != null)
                    queue.offer(queue.peek().left);
                if (queue.peek().right != null)
                    queue.offer(queue.peek().right);
                if (reverse) {
                    temp[length - i - 1] = queue.poll().val;
                } else {
                    temp[i] = queue.poll().val;
                }
            }
            reverse = !reverse;
            result.add(Arrays.asList(temp));
        }
        return result;
    }
}
