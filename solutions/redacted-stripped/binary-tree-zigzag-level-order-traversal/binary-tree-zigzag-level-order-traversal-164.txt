class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Stack<TreeNode> st = new Stack<>();
        List<List<Integer>> res = new ArrayList<>();
        if (root == null)
            return new ArrayList<>();
        st.push(root);
        method2(st, 1, res);
        return res;
    }

    public void method2(Stack<TreeNode> st, int param1, List<List<Integer>> res) {
        Stack<TreeNode> temp = new Stack<>();
        List<Integer> l = new ArrayList<>();
        while (!st.isEmpty()) {
            TreeNode curr = st.pop();
            if (curr == null)
                continue;
            l.add(curr.val);
            if (param1 % 2 != 0) {
                if (curr.left != null)
                    temp.push(curr.left);
                if (curr.right != null)
                    temp.push(curr.right);
            } else {
                if (curr.right != null)
                    temp.push(curr.right);
                if (curr.left != null)
                    temp.push(curr.left);
            }
        }
        res.add(l);
        if (!temp.isEmpty())
            method2(temp, param1 + 1, res);
    }
}
