class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        Stack<TreeNode> s1 = new Stack<>();
        Stack<TreeNode> s2 = new Stack<>();
        s1.add(root);
        while (!s1.isEmpty() || !s2.isEmpty()) {
            List<Integer> list = new ArrayList<>();
            while (!s1.isEmpty()) {
                TreeNode curr = s1.pop();
                list.add(curr.val);
                if (curr.left != null) {
                    s2.add(curr.left);
                }
                if (curr.right != null) {
                    s2.add(curr.right);
                }
            }
            ans.add(new ArrayList<>(list));
            List<Integer> list2 = new ArrayList<>();
            while (!s2.isEmpty()) {
                TreeNode curr = s2.pop();
                list2.add(curr.val);
                if (curr.right != null) {
                    s1.add(curr.right);
                }
                if (curr.left != null) {
                    s1.add(curr.left);
                }
            }
            if (list2.size() != 0) {
                ans.add(new ArrayList<>(list2));
            }
        }
        return ans;
    }
}
