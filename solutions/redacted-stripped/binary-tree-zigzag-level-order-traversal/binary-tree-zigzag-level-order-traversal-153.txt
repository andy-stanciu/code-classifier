class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> lnode = new ArrayList<>();
        if (root == null) {
            return lnode;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        boolean leftToright = true;
        while (!queue.isEmpty()) {
            int quSize = queue.size();
            List<Integer> curr = new ArrayList<>();
            for (int i = 0; i < quSize; i++) {
                TreeNode var1 = queue.poll();
                if (leftToright) {
                    curr.add(var1.val);
                } else {
                    curr.add(0, var1.val);
                }
                if (var1.left != null) {
                    queue.add(var1.left);
                }
                if (var1.right != null) {
                    queue.add(var1.right);
                }
            }
            lnode.add(curr);
            leftToright = !leftToright;
        }
        return lnode;
    }
}
