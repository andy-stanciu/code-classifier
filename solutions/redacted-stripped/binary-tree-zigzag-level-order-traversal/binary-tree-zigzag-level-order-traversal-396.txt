class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        Deque<TreeNode> dq = new LinkedList<>();
        if (root == null)
            return res;
        boolean reverse = false;
        dq.add(root);
        while (dq.size() > 0) {
            int size = dq.size();
            List<Integer> var1 = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                if (!reverse) {
                    TreeNode curr = dq.removeFirst();
                    var1.add(curr.val);
                    if (curr.left != null)
                        dq.addLast(curr.left);
                    if (curr.right != null)
                        dq.addLast(curr.right);
                } else {
                    TreeNode curr = dq.removeLast();
                    var1.add(curr.val);
                    if (curr.right != null)
                        dq.addFirst(curr.right);
                    if (curr.left != null)
                        dq.addFirst(curr.left);
                }
            }
            reverse = !reverse;
            res.add(var1);
        }
        return res;
    }
}
