class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null) {
            return list;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        TreeNode temp = null;
        Boolean var1 = true;
        List<Integer> subList;
        while (!queue.isEmpty()) {
            int size = queue.size();
            subList = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                temp = queue.remove();
                subList.add(temp.val);
                if (temp.left != null) {
                    queue.add(temp.left);
                }
                if (temp.right != null) {
                    queue.add(temp.right);
                }
            }
            if (var1 == false) {
                Collections.reverse(subList);
            }
            list.add(subList);
            var1 = !var1;
        }
        return list;
    }
}
