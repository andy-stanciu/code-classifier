class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        ArrayList<Integer> arr = new ArrayList<>();
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return ans;
        }
        q.add(root);
        boolean x = true;
        while (!q.isEmpty()) {
            int n = q.size();
            List<Integer> temp = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                TreeNode curr = q.remove();
                arr.add(curr.val);
                if (curr.left != null)
                    q.add(curr.left);
                if (curr.right != null)
                    q.add(curr.right);
            }
            if (x) {
                for (int i = 0; i < n; i++) {
                    temp.add(arr.get(i));
                }
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    temp.add(arr.get(i));
                }
            }
            ans.add(temp);
            arr.clear();
            x = !x;
        }
        return ans;
    }
}
