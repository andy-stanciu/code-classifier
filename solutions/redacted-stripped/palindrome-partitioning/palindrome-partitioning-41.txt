class Solution {

    public List<List<String>> partition(String s) {
        if (s == null || s.length() == 0)
            return new ArrayList<>();
        List<List<String>> ans = new ArrayList<>();
        helper(s, ans, new ArrayList<>());
        return ans;
    }

    public void helper(String s, List<List<String>> ans, List<String> level) {
        if (s == null || s.length() == 0) {
            ans.add(new ArrayList<>(level));
            return;
        }
        for (int i = 1; i <= s.length(); i++) {
            String temp = s.substring(0, i);
            if (!method1(temp))
                continue;
            level.add(temp);
            helper(s.substring(i, s.length()), ans, level);
            level.remove(level.size() - 1);
        }
        return;
    }

    public boolean method1(String temp) {
        int left = 0, right = temp.length() - 1;
        while (left <= right) {
            if (temp.charAt(left) != temp.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}
