class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<List<String>>();
        List<String> temp = new ArrayList<String>();
        helper(0, s, ans, temp);
        return ans;
    }

    public static void helper(int idx, String str, List<List<String>> ans, List<String> temp) {
        if (idx == str.length()) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int i = idx; i < str.length(); i++) {
            if (method1(str.substring(idx, i + 1))) {
                temp.add(str.substring(idx, i + 1));
                helper(i + 1, str, ans, temp);
                temp.remove(temp.size() - 1);
            }
        }
    }

    public static boolean method1(String st) {
        StringBuilder sb = new StringBuilder(st);
        sb.reverse();
        if (st.equals(sb.toString())) {
            return true;
        } else {
            return false;
        }
    }
}
