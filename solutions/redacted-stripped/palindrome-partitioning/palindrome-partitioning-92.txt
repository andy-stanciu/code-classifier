class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> temp = new ArrayList<>();
        partiPalin(0, s, ans, temp);
        return ans;
    }

    private void partiPalin(int idx, String s, List<List<String>> ans, List<String> temp) {
        if (idx == s.length()) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            if (isPalindrom(s, idx, i)) {
                temp.add(s.substring(idx, i + 1));
                partiPalin(i + 1, s, ans, temp);
                temp.remove(temp.size() - 1);
            }
        }
    }

    private boolean isPalindrom(String s, int start, int end) {
        while (start <= end) {
            if (s.charAt(start++) != s.charAt(end--))
                return false;
        }
        return true;
    }
}
