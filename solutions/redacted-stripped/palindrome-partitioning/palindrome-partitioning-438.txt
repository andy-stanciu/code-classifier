class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList<>();
        form(s.toCharArray(), 0, new ArrayList(), result);
        return result;
    }

    private void form(char[] str, int start, List<String> list, List<List<String>> result) {
        if (start == str.length) {
            result.add(new ArrayList(list));
        }
        for (int idx = start; idx < str.length; idx++) {
            boolean var1 = method1(str, start, idx);
            if (var1) {
                list.add(new String(str, start, idx - start + 1));
                form(str, idx + 1, list, result);
                list.remove(list.size() - 1);
            }
        }
    }

    private boolean method1(char[] str, int start, int end) {
        while (start < end && str[start] == str[end]) {
            start++;
            end--;
        }
        return start >= end;
    }
}
