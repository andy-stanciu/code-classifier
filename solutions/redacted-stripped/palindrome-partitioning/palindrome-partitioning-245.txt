class Solution {

    List<List<String>> ans;

    public List<List<String>> partition(String s) {
        ans = new ArrayList<>();
        f(0, s, new ArrayList<>());
        return ans;
    }

    public void f(int idx, String s, ArrayList<String> k) {
        if (idx == s.length()) {
            ans.add(new ArrayList<>(k));
            return;
        }
        String p = "";
        for (int i = idx; i < s.length(); i++) {
            p += s.charAt(i);
            if (isPallindrome(p)) {
                k.add(p);
                f(i + 1, s, k);
                k.remove(k.size() - 1);
            }
        }
    }

    public boolean isPallindrome(String s) {
        int i = 0;
        int j = s.length() - 1;
        while (i <= j) {
            if (s.charAt(i) == s.charAt(j)) {
                i++;
                j--;
            } else
                return false;
        }
        return true;
    }
}
