class Solution {

    List<List<String>> res = new ArrayList<>();

    boolean method1(String s) {
        int i = 0;
        int j = s.length() - 1;
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

    void solve(String s, int i, ArrayList<String> al) {
        if (i >= s.length()) {
            res.add(new ArrayList(al));
        }
        for (int j = i; j < s.length(); j++) {
            if (method1(s.substring(i, j + 1))) {
                al.add(s.substring(i, j + 1));
                solve(s, j + 1, al);
                al.remove(al.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        ArrayList<String> al = new ArrayList<>();
        solve(s, 0, al);
        return res;
    }
}
