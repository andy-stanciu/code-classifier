class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList();
        int length = s.length();
        for (int i = 1; i < length; i++) {
            String s1 = s.substring(0, i);
            if (method1(s1)) {
                List<List<String>> tempResult = partition(s.substring(i));
                tempResult.stream().forEach(part -> part.add(0, s1));
                result.addAll(tempResult);
            }
        }
        if (length == 1 || method1(s)) {
            List<String> temp = new ArrayList();
            temp.add(s);
            result.add(temp);
        }
        return result;
    }

    private boolean method1(String s) {
        int length = s.length();
        for (int i = 0; i < s.length() / 2; i++) {
            if (s.charAt(i) != s.charAt(length - 1 - i))
                return false;
        }
        return true;
    }
}
