class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> fr = new ArrayList<>();
        Stack<String> temp = new Stack<>();
        slate(s, fr, temp);
        return fr;
    }

    public List<List<String>> slate(String s, List<List<String>> fr, Stack<String> temp) {
        if (s.length() == 0) {
            List<String> list = new ArrayList(temp);
            fr.add(list);
        }
        for (int i = 1; i <= s.length(); i++) {
            String tempStr = s.substring(0, i);
            StringBuilder sb = new StringBuilder(tempStr);
            if (sb.reverse().toString().equals(tempStr)) {
                temp.add(tempStr);
                String stringtoPass = s.substring(i, s.length());
                slate(stringtoPass, fr, temp);
                temp.pop();
            }
        }
        return fr;
    }
}
