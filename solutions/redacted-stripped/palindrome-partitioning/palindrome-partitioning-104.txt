class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        List<String> ls = new ArrayList<>();
        fun(0, s, res, ls);
        return res;
    }

    static void fun(int idx, String s, List<List<String>> res, List<String> ls) {
        if (idx == s.length()) {
            res.add(new ArrayList<>(ls));
        }
        for (int i = idx; i < s.length(); i++) {
            if (check(idx, i, s)) {
                ls.add(s.substring(idx, i + 1));
                fun(i + 1, s, res, ls);
                ls.remove(ls.size() - 1);
            }
        }
    }

    static boolean check(int i, int j, String s) {
        while (i <= j) {
            if (s.charAt(i++) != s.charAt(j--))
                return false;
        }
        return true;
    }
}
