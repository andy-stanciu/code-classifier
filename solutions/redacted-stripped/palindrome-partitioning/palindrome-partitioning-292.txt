class Solution {

    List<List<String>> ans;

    public List<List<String>> partition(String s) {
        ans = new ArrayList<>();
        helper(s, new ArrayList<>());
        return ans;
    }

    public void helper(String s, ArrayList<String> current) {
        if (s.length() == 0) {
            ans.add(new ArrayList<>(current));
            return;
        }
        for (int i = 1; i <= s.length(); i++) {
            String prefix = s.substring(0, i);
            if (method1(prefix)) {
                String remaining = s.substring(i);
                current.add(prefix);
                helper(remaining, current);
                current.removeLast();
            }
        }
    }

    public boolean method1(String s) {
        int l = 0, r = s.length() - 1;
        while (l < r) {
            if (s.charAt(l) != s.charAt(r))
                return false;
            l++;
            r--;
        }
        return true;
    }
}
