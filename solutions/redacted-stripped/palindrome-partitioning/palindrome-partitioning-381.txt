class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        List<String> curr = new ArrayList<>();
        method1(0, s, curr, res);
        return res;
    }

    static void method1(int index, String s, List<String> curr, List<List<String>> res) {
        if (index == s.length()) {
            res.add(new ArrayList<>(curr));
            return;
        }
        for (int i = index; i < s.length(); i++) {
            if (method2(s, index, i)) {
                curr.add(s.substring(index, i + 1));
                method1(i + 1, s, curr, res);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public static boolean method2(String s, int start, int end) {
        while (start <= end) {
            if (s.charAt(start++) != s.charAt(end--))
                return false;
        }
        return true;
    }
}
