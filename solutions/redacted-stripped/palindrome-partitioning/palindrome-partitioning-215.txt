class Solution {

    public List<List<String>> partition(String s) {
        ret = new ArrayList<>();
        util(s, 0, new ArrayList<>());
        return ret;
    }

    private List<List<String>> ret;

    private void util(String s, int i, List<String> substrings) {
        int n = s.length();
        if (i == n) {
            ret.add(new ArrayList<>(substrings));
            return;
        }
        for (int idx = i; idx < n; idx++) {
            if (method1(s, i, idx)) {
                substrings.add(s.substring(i, idx + 1));
                util(s, idx + 1, substrings);
                substrings.remove(substrings.size() - 1);
            }
        }
    }

    private boolean method1(String s, int i, int j) {
        int l = i;
        int h = j;
        while (l <= h) {
            if (s.charAt(l++) != s.charAt(h--)) {
                return false;
            }
        }
        return true;
    }
}
