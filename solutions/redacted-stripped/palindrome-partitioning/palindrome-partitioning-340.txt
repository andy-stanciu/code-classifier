class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        rec(s, 0, ans, new ArrayList<>());
        return ans;
    }

    void rec(String s, int index, List<List<String>> ans, List<String> tans) {
        if (index >= s.length()) {
            ans.add(new ArrayList<>(tans));
            return;
        }
        for (int i = index; i < s.length(); i++) {
            if (!method1(s.substring(index, i + 1)))
                continue;
            tans.add(s.substring(index, i + 1));
            rec(s, i + 1, ans, tans);
            tans.remove(tans.size() - 1);
        }
    }

    Boolean method1(String s) {
        if (s.length() <= 1)
            return true;
        int i = 0;
        int j = s.length() - 1;
        while (i < j) {
            if (s.charAt(i++) != s.charAt(j--))
                return false;
        }
        return true;
    }
}
