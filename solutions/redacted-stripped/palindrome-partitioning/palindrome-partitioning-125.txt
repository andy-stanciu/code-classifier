class Solution {

    public static boolean method1(String str) {
        int n = str.length();
        int l = 0;
        int r = n - 1;
        while (l < r) {
            if (str.charAt(l) != str.charAt(r))
                return false;
            l++;
            r--;
        }
        return true;
    }

    public static void substring(List<List<String>> res, List<String> ans, String s) {
        if (s.length() == 0) {
            res.add(new ArrayList<>(ans));
            return;
        }
        for (int i = 1; i <= s.length(); i++) {
            String str = s.substring(0, i);
            if (method1(str)) {
                ans.add(str);
                substring(res, ans, s.substring(i));
                ans.remove(ans.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<String> ans = new ArrayList<>();
        List<List<String>> res = new ArrayList<>();
        substring(res, ans, s);
        return res;
    }
}
