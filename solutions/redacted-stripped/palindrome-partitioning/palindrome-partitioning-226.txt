class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        backTrack(s, 0, res, new ArrayList<String>());
        return res;
    }

    void backTrack(String s, int start, List<List<String>> res, List<String> curr) {
        if (start == s.length()) {
            res.add(new ArrayList<>(curr));
            return;
        }
        for (int i = start + 1; i <= s.length(); i++) {
            if (method1(s.substring(start, i))) {
                curr.add(s.substring(start, i));
                backTrack(s, i, res, curr);
                curr.remove(curr.size() - 1);
            }
        }
    }

    boolean method1(String s) {
        String str = new StringBuilder(s).reverse().toString();
        if (str.equals(s)) {
            return true;
        }
        return false;
    }
}
