class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        ArrayList<String> path = new ArrayList<>();
        func(0, s, path, res);
        return res;
    }

    public static void func(int idx, String s, ArrayList<String> path, List<List<String>> res) {
        if (idx == s.length()) {
            res.add(new ArrayList<>(path));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            if (method1(s, idx, i)) {
                path.add(s.substring(idx, i + 1));
                func(i + 1, s, path, res);
                path.remove(path.size() - 1);
            }
        }
    }

    public static boolean method1(String s, int strt, int end) {
        while (strt <= end) {
            if (s.charAt(strt++) != s.charAt(end--))
                return false;
        }
        return true;
    }
}
