class Solution {

    public void helper(String s, List<List<String>> ans, List<String> temp) {
        if (s.length() == 0) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int i = 0; i < s.length(); i++) {
            String left = s.substring(0, i + 1);
            if (method1(left)) {
                temp.add(left);
                helper(s.substring(i + 1), ans, temp);
                temp.remove(temp.size() - 1);
            }
        }
    }

    public boolean method1(String s) {
        int l = 0;
        int r = s.length() - 1;
        while (l < r) {
            if (s.charAt(l) != s.charAt(r)) {
                return false;
            }
            l++;
            r--;
        }
        return true;
    }

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> temp = new ArrayList<>();
        helper(s, ans, temp);
        return ans;
    }
}
