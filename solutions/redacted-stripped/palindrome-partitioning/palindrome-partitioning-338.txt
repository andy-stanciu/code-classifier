class Solution {

    List<List<String>> res = new LinkedList<>();

    List<String> track = new LinkedList<>();

    public List<List<String>> partition(String s) {
        if (s == null || s.length() == 0)
            return res;
        helper(s);
        return res;
    }

    public void helper(String s) {
        if (s == null || s.length() == 0) {
            res.add(new LinkedList<>(track));
            return;
        }
        for (int i = 1; i <= s.length(); i++) {
            String temp = s.substring(0, i);
            if (!method1(temp))
                continue;
            track.add(temp);
            helper(s.substring(i, s.length()));
            track.remove(track.size() - 1);
        }
    }

    public boolean method1(String s) {
        int left = 0, right = s.length() - 1;
        while (left <= right) {
            if (s.charAt(left) != s.charAt(right))
                return false;
            left++;
            right--;
        }
        return true;
    }
}
