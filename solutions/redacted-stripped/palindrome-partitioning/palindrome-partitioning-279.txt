class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        partPal(0, s, new ArrayList<>(), res);
        return res;
    }

    public void partPal(int idx, String s, List<String> partition, List<List<String>> res) {
        if (idx == s.length()) {
            res.add(new ArrayList<>(partition));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            if (isPal(s, idx, i)) {
                partition.add(s.substring(idx, i + 1));
                partPal(i + 1, s, partition, res);
                partition.remove(partition.size() - 1);
            }
        }
    }

    public boolean isPal(String s, int start, int end) {
        while (start <= end) {
            if (s.charAt(start) != s.charAt(end))
                return false;
            start++;
            end--;
        }
        return true;
    }
}
