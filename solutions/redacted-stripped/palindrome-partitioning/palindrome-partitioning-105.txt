class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> res = new ArrayList<>();
        helper(0, s, res, ans);
        return ans;
    }

    public static void helper(int ind, String s, List<String> res, List<List<String>> ans) {
        if (ind == s.length()) {
            ans.add(new ArrayList<>(res));
        }
        for (int i = ind; i < s.length(); i++) {
            if (method1(ind, i, s)) {
                res.add(s.substring(ind, i + 1));
                helper(i + 1, s, res, ans);
                res.remove(res.size() - 1);
            }
        }
    }

    public static boolean method1(int start, int end, String s) {
        while (start <= end) {
            if (s.charAt(start) != s.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
