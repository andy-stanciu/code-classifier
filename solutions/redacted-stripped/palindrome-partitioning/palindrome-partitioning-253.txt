class Solution {

    List<List<String>> result = new ArrayList<>();

    public List<List<String>> partition(String s) {
        int i = 0;
        int j = s.length() - 1;
        List<String> tempAns = new ArrayList<>();
        MCM(s, i, j, tempAns);
        return result;
    }

    public void MCM(String s, int i, int j, List<String> tempAns) {
        if (i > j) {
            result.add(new ArrayList<>(tempAns));
            return;
        }
        for (int k = i; k <= j; k++) {
            if (method1(s, i, k)) {
                String str = s.substring(i, k + 1);
                tempAns.add(str);
                MCM(s, k + 1, j, tempAns);
                tempAns.remove(tempAns.size() - 1);
            }
        }
    }

    public boolean method1(String s, int i, int j) {
        if (i == j) {
            return true;
        }
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
}
