class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> l = new ArrayList<>();
        List<String> res = new ArrayList<>();
        fun(s, l, res, 0);
        return l;
    }

    static void fun(String s, List<List<String>> l, List<String> res, int ind) {
        if (ind >= s.length() && res.size() > 0) {
            l.add(new ArrayList<>(res));
            return;
        }
        for (int i = ind; i < s.length(); i++) {
            if (pal(ind, i, s)) {
                res.add(s.substring(ind, i + 1));
                fun(s, l, res, i + 1);
                res.remove(res.size() - 1);
            }
        }
    }

    static boolean pal(int l, int r, String s) {
        while (l < r) {
            if (s.charAt(l) != s.charAt(r))
                return false;
            l++;
            r--;
        }
        return true;
    }
}
