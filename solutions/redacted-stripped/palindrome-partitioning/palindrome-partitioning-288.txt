class Solution {

    boolean isPal(String s, int start, int end) {
        while (end >= start) {
            if (s.charAt(start++) != s.charAt(end--))
                return false;
        }
        return true;
    }

    void cal(String s, int ind, List<String> ds, List<List<String>> ans) {
        if (ind == s.length()) {
            ans.add(new ArrayList<>(ds));
            return;
        }
        for (int i = ind; i < s.length(); i++) {
            if (isPal(s, ind, i)) {
                ds.add(s.substring(ind, i + 1));
                cal(s, i + 1, ds, ans);
                ds.remove(ds.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> ds = new ArrayList<>();
        cal(s, 0, ds, ans);
        return ans;
    }
}
