class Solution {

    public List<List<String>> partition(String s) {
        ArrayList<String> in = new ArrayList<>();
        List<List<String>> out = new ArrayList<>();
        part(0, s, in, out);
        return out;
    }

    public static void part(int j, String s, ArrayList<String> list, List<List<String>> out) {
        if (j == s.length()) {
            out.add(new ArrayList<>(list));
            return;
        }
        for (int i = j; i < s.length(); i++) {
            if (!method1(s.substring(j, i + 1))) {
                continue;
            }
            list.add(s.substring(j, i + 1));
            part(i + 1, s, list, out);
            list.remove(list.size() - 1);
        }
    }

    public static boolean method1(String S) {
        int s = 0;
        int e = S.length() - 1;
        while (s <= e) {
            if (S.charAt(s) != S.charAt(e)) {
                return false;
            }
            s++;
            e--;
        }
        return true;
    }
}
