class Solution {

    List<List<String>> ans = new ArrayList<>();

    public List<List<String>> partition(String s) {
        List<String> ls = new ArrayList<>();
        partition(s, ls, 0);
        return ans;
    }

    public void partition(String s, List<String> ls, int idx) {
        if (idx >= s.length()) {
            ans.add(new ArrayList<>(ls));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            String ss = s.substring(idx, i + 1);
            if (method1(ss)) {
                ls.add(ss);
                partition(s, ls, i + 1);
                ls.remove(ls.size() - 1);
            }
        }
    }

    public boolean method1(String s) {
        int l = 0, r = s.length() - 1;
        while (l < r) {
            if (s.charAt(l) != s.charAt(r))
                return false;
            l++;
            r--;
        }
        return true;
    }
}
