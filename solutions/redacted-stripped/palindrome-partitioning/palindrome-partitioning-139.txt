class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList<>();
        helper(s, new ArrayList<>(), result, 0);
        return result;
    }

    public void helper(String s, List<String> temp, List<List<String>> result, int start) {
        if (start == s.length()) {
            result.add(new ArrayList<>(temp));
            return;
        }
        for (int i = start; i < s.length(); i++) {
            if (method1(s, start, i)) {
                temp.add(s.substring(start, i + 1));
                helper(s, temp, result, i + 1);
                temp.remove(temp.size() - 1);
            }
        }
    }

    boolean method1(String s, int left, int right) {
        while (left < right) {
            if (s.charAt(left) != s.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}
