class Solution {

    List<List<String>> ans;

    public static boolean method1(String str) {
        int i = 0;
        int j = str.length() - 1;
        while (i < j) {
            if (str.charAt(i) != str.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }

    public void helper(String s, int idx, List<String> temp) {
        if (idx == s.length()) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            String substring = s.substring(idx, i + 1);
            if (!method1(substring))
                continue;
            temp.add(substring);
            helper(s, i + 1, temp);
            temp.remove(temp.size() - 1);
        }
    }

    public List<List<String>> partition(String s) {
        ans = new ArrayList<>();
        helper(s, 0, new ArrayList<>());
        return ans;
    }
}
