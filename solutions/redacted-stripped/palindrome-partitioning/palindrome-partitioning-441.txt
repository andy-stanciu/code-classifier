class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> data = new ArrayList<List<String>>();
        subString(s, 0, new ArrayList<String>(), data);
        return data;
    }

    public void subString(String s, int index, List<String> curAns, List<List<String>> ans) {
        if (index == s.length()) {
            ans.add(new ArrayList(curAns));
        }
        for (int end = index + 1; end <= s.length(); end++) {
            String sub = s.substring(index, end);
            if (isPal(sub.toCharArray())) {
                curAns.add(sub);
                subString(s, end, curAns, ans);
                curAns.remove(curAns.size() - 1);
            }
        }
    }

    public boolean isPal(char[] data) {
        int start = 0;
        int end = data.length - 1;
        while (end >= start) {
            if (data[start] != data[end]) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
