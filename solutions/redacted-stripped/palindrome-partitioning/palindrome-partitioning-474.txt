class Solution {

    private void checkPartition(int ind, String s, List<List<String>> res, List<String> help) {
        if (ind == s.length()) {
            res.add(new ArrayList<>(help));
        }
        for (int i = ind; i < s.length(); i++) {
            if (method1(s, ind, i)) {
                help.add(s.substring(ind, i + 1));
                checkPartition(i + 1, s, res, help);
                help.remove(help.size() - 1);
            }
        }
    }

    private boolean method1(String s, int start, int end) {
        while (start <= end) {
            if (s.charAt(start++) != s.charAt(end--)) {
                return false;
            }
        }
        return true;
    }

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        List<String> help = new ArrayList<>();
        checkPartition(0, s, res, help);
        return res;
    }
}
