class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> path = new ArrayList<>();
        func(s, 0, path, ans);
        return ans;
    }

    void func(String s, int index, List<String> path, List<List<String>> ans) {
        if (index == s.length()) {
            ans.add(new ArrayList<>(path));
            return;
        }
        for (int i = index; i < s.length(); i++) {
            if (method1(s, index, i)) {
                path.add(s.substring(index, i + 1));
                func(s, i + 1, path, ans);
                path.remove(path.size() - 1);
            }
        }
    }

    boolean method1(String s, int l, int r) {
        while (l <= r) {
            if (s.charAt(l++) != s.charAt(r--))
                return false;
        }
        return true;
    }
}
