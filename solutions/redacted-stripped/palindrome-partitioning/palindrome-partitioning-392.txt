class Solution {

    public List<List<String>> partition(String s) {
        List<String> res = new ArrayList<>();
        List<List<String>> l = new ArrayList<>();
        comb(0, s, res, l);
        return l;
    }

    void comb(int i, String s, List<String> res, List<List<String>> l) {
        StringBuilder sb = new StringBuilder();
        StringBuilder r = new StringBuilder();
        for (int j = i; j < s.length(); j++) {
            sb.append(s.charAt(j));
            r.insert(0, s.charAt(j));
            if (sb.toString().equals(r.toString())) {
                res.add(sb.toString());
                comb(j + 1, s, res, l);
                if (i == s.length() - 1 || j == s.length() - 1)
                    l.add(new ArrayList<>(res));
                res.remove(res.size() - 1);
            }
        }
    }
}
