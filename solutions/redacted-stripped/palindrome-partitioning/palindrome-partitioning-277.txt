class Solution {

    public List<List<String>> ans = new ArrayList<>();

    public List<List<String>> partition(String s) {
        partionHelper(0, s, new ArrayList<>(), ans);
        return ans;
    }

    public void partionHelper(int ind, String s, List<String> ds, List<List<String>> ans) {
        if (ind == s.length()) {
            ans.add(new ArrayList<>(ds));
            return;
        }
        for (int i = ind; i < s.length(); ++i) {
            if (!method1(s, ind, i))
                continue;
            ds.add(s.substring(ind, i + 1));
            partionHelper(i + 1, s, ds, ans);
            ds.remove(ds.size() - 1);
        }
    }

    public boolean method1(String str, int left, int right) {
        while (left <= right) {
            if (str.charAt(left++) != str.charAt(right--))
                return false;
        }
        return true;
    }
}
