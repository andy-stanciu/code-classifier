class Solution {

    public boolean canConstruct(String param1, String magazine) {
        if (param1.length() > magazine.length()) {
            return false;
        }
        HashMap<Character, Integer> lists = new HashMap<>();
        for (int i = 0; i < magazine.length(); i++) {
            if (lists.containsKey(magazine.charAt(i))) {
                lists.put(magazine.charAt(i), lists.get(magazine.charAt(i)) + 1);
            } else {
                lists.put(magazine.charAt(i), 1);
            }
        }
        HashMap<Character, Integer> list = new HashMap<>();
        for (int i = 0; i < param1.length(); i++) {
            if (list.containsKey(param1.charAt(i))) {
                list.put(param1.charAt(i), list.get(param1.charAt(i)) + 1);
            } else {
                list.put(param1.charAt(i), 1);
            }
        }
        Set<Character> keys = list.keySet();
        for (char key : keys) {
            if (!(lists.containsKey(key)) || lists.get(key) < list.get(key)) {
                return false;
            }
        }
        return true;
    }
}
