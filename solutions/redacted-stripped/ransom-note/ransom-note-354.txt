class Solution {

    public boolean canConstruct(String param1, String magazine) {
        char[] var1 = param1.toCharArray();
        char[] magazineCharacters = magazine.toCharArray();
        Boolean isAvailable = false;
        for (int i = 0; i < var1.length; i++) {
            if (containsElement(var1[i], magazineCharacters)) {
                isAvailable = true;
                magazineCharacters = removeFirstOccurrence(magazineCharacters, var1[i]);
            } else {
                isAvailable = false;
                break;
            }
        }
        return isAvailable;
    }

    Boolean containsElement(char singleCharacter, char[] characters) {
        Boolean isAvailable = false;
        for (int i = 0; i < characters.length; i++) {
            if (characters[i] == singleCharacter) {
                isAvailable = true;
                return isAvailable;
            }
        }
        return isAvailable;
    }

    private static char[] removeFirstOccurrence(char[] array, char element) {
        int indexToRemove = -1;
        for (int i = 0; i < array.length; i++) {
            if (array[i] == element) {
                indexToRemove = i;
                break;
            }
        }
        if (indexToRemove != -1) {
            for (int i = indexToRemove; i < array.length - 1; i++) {
                array[i] = array[i + 1];
            }
            return Arrays.copyOf(array, array.length - 1);
        } else {
            return array;
        }
    }
}
