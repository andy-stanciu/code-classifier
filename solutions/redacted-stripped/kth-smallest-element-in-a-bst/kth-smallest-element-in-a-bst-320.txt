class Solution {

    public PriorityQueue<Integer> solve(TreeNode root, PriorityQueue<Integer> queue) {
        if (root == null) {
            return queue;
        }
        queue.add(root.val);
        solve(root.right, queue);
        solve(root.left, queue);
        return queue;
    }

    public int method1(TreeNode root, int k) {
        PriorityQueue<Integer> queue = new PriorityQueue<>();
        queue = solve(root, queue);
        while (k > 1 && queue.size() > 1) {
            queue.poll();
            k--;
        }
        if (queue.size() > 0) {
            return queue.peek();
        } else {
            return -1;
        }
    }
}
