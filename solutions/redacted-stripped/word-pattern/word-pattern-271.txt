class Solution {

    public boolean method1(String param1, String s) {
        HashMap<Character, String> pToSMap = new HashMap<Character, String>();
        HashMap<String, Character> sToPMap = new HashMap<String, Character>();
        String[] var1 = s.split(" ");
        if (param1.length() != var1.length) {
            return false;
        }
        for (int i = 0; i < param1.length(); i++) {
            Character pChar = param1.charAt(i);
            if (!pToSMap.containsKey(pChar)) {
                pToSMap.put(pChar, var1[i]);
            }
        }
        for (int i = 0; i < param1.length(); i++) {
            Character pChar = param1.charAt(i);
            String var2 = var1[i];
            if (!sToPMap.containsKey(var2)) {
                sToPMap.put(var2, pChar);
            }
        }
        for (int i = 0; i < param1.length(); i++) {
            Character p = param1.charAt(i);
            String var2 = var1[i];
            String var3 = pToSMap.get(p);
            Character mappedChar = sToPMap.get(var2);
            if (!var2.equals(var3)) {
                return false;
            }
            if (!p.equals(mappedChar)) {
                return false;
            }
        }
        return true;
    }
}
