class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        int len = length(head);
        if (len % 2 != 0) {
            len = len - 1;
        }
        for (int i = 0; i < len; i += 2) {
            ListNode first = getNode(head, i);
            ListNode second = getNode(head, i + 1);
            if (first == head) {
                first.next = second.next;
                head = second;
                second.next = first;
            } else if (second.next == null) {
                ListNode prev = getNode(head, i - 1);
                prev.next = second;
                first.next = null;
                second.next = first;
            } else {
                ListNode prev = getNode(head, i - 1);
                prev.next = second;
                first.next = second.next;
                second.next = first;
            }
        }
        return head;
    }

    public ListNode getNode(ListNode head, int param1) {
        ListNode node = head;
        for (int i = 0; i < param1; i++) {
            node = node.next;
        }
        return node;
    }

    public int length(ListNode head) {
        int l = 0;
        ListNode node = head;
        while (node != null) {
            l++;
            node = node.next;
        }
        return l;
    }
}
