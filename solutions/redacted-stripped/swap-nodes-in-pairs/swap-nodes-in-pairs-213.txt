class Solution {

    private static void reverse(List<Integer> lst, int start, int end) {
        int temp = lst.get(start);
        lst.set(start, lst.get(end));
        lst.set(end, temp);
    }

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode temp = head;
        List<Integer> lst = new ArrayList<>();
        while (temp != null) {
            lst.add(temp.val);
            temp = temp.next;
        }
        int i = 0;
        while (i < lst.size() - 1) {
            reverse(lst, i, i + 1);
            i += 2;
        }
        System.out.print(lst);
        ListNode result = new ListNode(0);
        ListNode ptr = result;
        for (int j = 0; j < lst.size(); j++) {
            ptr.next = new ListNode(lst.get(j));
            ptr = ptr.next;
        }
        return result.next;
    }
}
