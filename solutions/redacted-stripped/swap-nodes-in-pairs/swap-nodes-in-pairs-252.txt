class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode currNode = head;
        ListNode nextNode = head.next;
        ListNode resHead = null;
        ListNode resCurrNode = null;
        while (currNode != null && nextNode != null) {
            ListNode node_first = new ListNode(currNode.val);
            ListNode node_second = new ListNode(nextNode.val);
            node_second.next = node_first;
            if (resHead == null) {
                resHead = node_second;
                resCurrNode = node_first;
            } else {
                resCurrNode.next = node_second;
                resCurrNode = node_first;
            }
            currNode = nextNode.next;
            if (currNode != null)
                nextNode = currNode.next;
        }
        if (currNode != null)
            resCurrNode.next = new ListNode(currNode.val);
        return resHead;
    }
}
