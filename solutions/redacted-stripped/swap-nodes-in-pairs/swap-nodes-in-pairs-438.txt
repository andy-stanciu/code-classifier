class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ArrayList<Integer> al = new ArrayList<>();
        ListNode ln = new ListNode(0);
        ListNode ln1 = ln;
        while (head != null) {
            al.add(head.val);
            head = head.next;
        }
        for (int i = 0; i < al.size(); i++) {
            if (i + 1 == al.size())
                break;
            int one = al.get(i);
            int two = al.get(i + 1);
            i += 1;
            ln1.next = new ListNode(two);
            ln1.next.next = new ListNode(one);
            ln1 = ln1.next;
            ln1 = ln1.next;
        }
        if (al.size() % 2 == 1) {
            ln1.next = new ListNode(al.get(al.size() - 1));
        }
        return ln.next;
    }
}
