class Solution {

    public int fun(int[] prices, int i, int param1, int[][] dp) {
        if (i == prices.length) {
            return 0;
        }
        if (dp[i][param1] != -1) {
            return dp[i][param1];
        }
        int take, notTake;
        if (param1 == 1) {
            take = -prices[i] + fun(prices, i + 1, 0, dp);
            notTake = fun(prices, i + 1, 1, dp);
        } else {
            take = prices[i] + fun(prices, i + 1, 1, dp);
            notTake = fun(prices, i + 1, 0, dp);
        }
        dp[i][param1] = Math.max(take, notTake);
        return dp[i][param1];
    }

    public int maxProfit(int[] prices) {
        int[][] dp = new int[prices.length][2];
        for (int[] arr : dp) {
            Arrays.fill(arr, -1);
        }
        return fun(prices, 0, 1, dp);
    }
}
