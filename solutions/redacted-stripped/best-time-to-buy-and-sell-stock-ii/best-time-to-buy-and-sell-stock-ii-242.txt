class Solution {

    public static int maxProfit(int[] prices) {
        int n = prices.length;
        int[][] dp = new int[n + 1][2];
        for (int[] i : dp) {
            Arrays.fill(i, -1);
        }
        dp[n][0] = 0;
        dp[n][1] = 0;
        for (int index = n - 1; index >= 0; index--) {
            for (int var1 = 0; var1 <= 1; var1++) {
                if (var1 == 0) {
                    int bought = -prices[index] + dp[index + 1][1];
                    int notBought = dp[index + 1][0];
                    dp[index][var1] = Math.max(bought, notBought);
                } else {
                    int sold = prices[index] + dp[index + 1][0];
                    int notSold = dp[index + 1][1];
                    dp[index][var1] = Math.max(sold, notSold);
                }
            }
        }
        return dp[0][0];
    }
}
