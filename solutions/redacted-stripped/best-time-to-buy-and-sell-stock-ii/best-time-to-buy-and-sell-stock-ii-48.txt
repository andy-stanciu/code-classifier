class Solution {

    public int maxProfit(int[] prices) {
        return solveOpti(prices);
    }

    int solveOpti(int[] arr) {
        int n = arr.length;
        int[] dp = new int[n + 1];
        for (int ind = n - 1; ind >= 0; ind--) {
            int var1 = 0, var2 = 0, ans = 0;
            for (int i = ind; i < n; i++) {
                if (ind != 0) {
                    var2 = Math.max(var2, (arr[i] - arr[ind - 1]) + dp[i + 1]);
                }
                var1 = Math.max(var1, dp[i + 1]);
            }
            ans = Math.max(var1, var2);
            dp[ind] = ans;
        }
        return dp[0];
    }

    int solveDp2(int[] arr) {
        int[][] dp = new int[arr.length + 1][arr.length + 1];
        for (int ind = arr.length - 1; ind >= 0; ind--) {
            for (int prev = arr.length; prev >= 0; prev--) {
                int var1 = 0, var2 = 0, ans = 0;
                for (int i = ind; i < arr.length; i++) {
                    if (prev != 0) {
                        var2 = (arr[i] - arr[prev - 1]) + dp[i + 1][0];
                    }
                    var1 = dp[i + 1][i + 1];
                    ans = Math.max(ans, Math.max(var1, var2));
                }
                dp[ind][prev] = ans;
            }
        }
        return dp[0][0];
    }

    int solveDp(int ind, int prev, int[] arr, int[][] dp) {
        if (ind == arr.length) {
            return 0;
        }
        if (dp[ind][prev + arr.length] != -1) {
            return dp[ind][prev + arr.length];
        }
        int var1 = 0, var2 = 0, ans = 0;
        for (int i = ind; i < arr.length; i++) {
            if (prev != -1) {
                var2 = (arr[i] - arr[prev]) + solveDp(i + 1, -1, arr, dp);
            }
            var1 = solveDp(i + 1, i, arr, dp);
            ans = Math.max(ans, Math.max(var1, var2));
        }
        return dp[ind][prev + arr.length] = ans;
    }

    int solveRec(int ind, int prev, int[] arr) {
        if (ind == arr.length) {
            return 0;
        }
        int var1 = 0, var2 = 0, ans = 0;
        for (int i = ind; i < arr.length; i++) {
            if (prev != -1) {
                var2 = (arr[i] - arr[prev]) + solveRec(i + 1, -1, arr);
            }
            var1 = solveRec(i + 1, i, arr);
            ans = Math.max(ans, Math.max(var1, var2));
        }
        return ans;
    }
}
