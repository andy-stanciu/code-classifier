class Solution {

    public int maxProfit(int[] prices) {
        int n = prices.length;
        int[][] dp = new int[n][2];
        for (int[] d : dp) Arrays.fill(d, -1);
        return getProfit(0, 1, n, prices, dp);
    }

    int getProfit(int i, int param1, int n, int[] arr, int[][] dp) {
        if (i == n)
            return 0;
        if (dp[i][param1] != -1)
            return dp[i][param1];
        int profit = 0;
        if (param1 == 1) {
            profit = Math.max(-arr[i] + getProfit(i + 1, 0, n, arr, dp), getProfit(i + 1, 1, n, arr, dp));
        } else {
            profit = Math.max(arr[i] + getProfit(i + 1, 1, n, arr, dp), getProfit(i + 1, 0, n, arr, dp));
        }
        return dp[i][param1] = profit;
    }
}
