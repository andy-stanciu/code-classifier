class Solution {

    public int maxProfit(int[] prices) {
        int n = prices.length;
        int[][] dp = new int[n][2];
        for (int[] i : dp) Arrays.fill(i, -1);
        return solve(0, n, 0, prices, dp);
    }

    public int solve(int index, int n, int param1, int[] prices, int[][] dp) {
        if (index == n)
            return 0;
        if (dp[index][param1] != -1)
            return dp[index][param1];
        int profit = 0;
        if (param1 == 0) {
            profit = Math.max(0 + solve(index + 1, n, 0, prices, dp), -prices[index] + solve(index + 1, n, 1, prices, dp));
        }
        if (param1 == 1) {
            profit = Math.max(0 + solve(index + 1, n, 1, prices, dp), prices[index] + solve(index + 1, n, 0, prices, dp));
        }
        return dp[index][param1] = profit;
    }
}
