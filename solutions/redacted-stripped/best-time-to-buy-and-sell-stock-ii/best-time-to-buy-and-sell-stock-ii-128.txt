class Solution {

    public int maxProfit(int[] prices) {
        int n = prices.length;
        return helper(0, -1, n, prices);
    }

    public int helper(int day, int holding, int n, int[] arr) {
        if (day >= n)
            return 0;
        int var1 = day != n - 1 && holding == -1 ? helper(day + 1, arr[day], n, arr) : 0;
        int var2 = day != 0 && holding != -1 ? arr[day] - holding + helper(day, -1, n, arr) : 0;
        int leave = helper(day + 1, holding, n, arr);
        return Math.max(leave, Math.max(var1, var2));
    }
}
