class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        if (list1 == null) {
            return list2;
        }
        if (list2 == null) {
            return list1;
        }
        ListNode c1 = list1;
        int size1 = 0;
        ListNode c2 = list2;
        int size2 = 0;
        while (c1 != null) {
            c1 = c1.next;
            size1++;
        }
        while (c2 != null) {
            c2 = c2.next;
            size2++;
        }
        int size = size1 + size2;
        ListNode finale = new ListNode(0);
        while (list1 != null && list2 != null) {
            if (list1.val <= list2.val) {
                add(list1.val, finale);
                list1 = list1.next;
            } else {
                add(list2.val, finale);
                list2 = list2.next;
            }
        }
        if (list1 == null) {
            while (list2 != null) {
                add(list2.val, finale);
                list2 = list2.next;
            }
        }
        if (list2 == null) {
            while (list1 != null) {
                add(list1.val, finale);
                list1 = list1.next;
            }
        }
        finale = finale.next;
        return finale;
    }

    public void add(int val, ListNode finale) {
        ListNode newnode = new ListNode(val);
        ListNode last = finale;
        if (finale == null) {
            finale = newnode;
            return;
        }
        while (last.next != null) {
            last = last.next;
        }
        last.next = newnode;
        return;
    }
}
