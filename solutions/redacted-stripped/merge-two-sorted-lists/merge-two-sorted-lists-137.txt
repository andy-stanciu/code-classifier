class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        ListNode cursor1 = list1;
        ListNode cursor2 = list2;
        ListNode commonHead;
        if (list1 == null)
            return list2;
        else if (list2 == null)
            return list1;
        if (cursor1.val > cursor2.val) {
            commonHead = cursor2;
            cursor2 = cursor2.next;
        } else {
            commonHead = cursor1;
            cursor1 = cursor1.next;
        }
        ListNode ans = commonHead;
        while (cursor1 != null && cursor2 != null) {
            if (cursor1.val > cursor2.val) {
                commonHead.next = cursor2;
                cursor2 = cursor2.next;
            } else {
                commonHead.next = cursor1;
                cursor1 = cursor1.next;
            }
            commonHead = commonHead.next;
        }
        if (cursor1 == null) {
            if (cursor2 != null) {
                commonHead.next = cursor2;
            }
        } else {
            commonHead.next = cursor1;
        }
        return ans;
    }
}
