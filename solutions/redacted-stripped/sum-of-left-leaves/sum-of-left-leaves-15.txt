class Solution {

    class A {

        TreeNode c;

        TreeNode p;

        A(TreeNode c, TreeNode p) {
            this.c = c;
            this.p = p;
        }
    }

    public int method1(TreeNode root) {
        if (root.left == null && root.right == null)
            return 0;
        Queue<A> pq = new ArrayDeque<>();
        int ans = 0;
        pq.offer(new A(root, root));
        while (pq.size() > 0) {
            int l = pq.size();
            for (int i = 0; i < l; i++) {
                A x = pq.poll();
                System.out.println(x.p.val + " " + x.c.val);
                if (x.p.left == x.c && x.c.left == null && x.c.right == null)
                    ans += x.c.val;
                if (x.c.left != null)
                    pq.offer(new A(x.c.left, x.c));
                if (x.c.right != null)
                    pq.offer(new A(x.c.right, x.c));
            }
        }
        return ans;
    }
}
