class Solution {

    public int method1(TreeNode root) {
        int var1 = 0;
        int right = 0;
        int var2 = 0;
        List<Integer> list = new ArrayList<>();
        if (root != null) {
            var1 = method2(root, list);
            right = rightTravese(root, list);
            int size = list.size();
            if (size > 0) {
                for (int elem : list) {
                    var2 = var2 + elem;
                }
            } else {
                return 0;
            }
        }
        return var2;
    }

    int method2(TreeNode root, List<Integer> list) {
        root = root.var1;
        int var1 = 0;
        int right = 0;
        int val = -1001;
        if (root != null) {
            val = root.val;
            var1 = method2(root, list);
            right = rightTravese(root, list);
            if (var1 == -1001 && right == -1001)
                list.add(root.val);
        }
        return val;
    }

    int rightTravese(TreeNode root, List<Integer> list) {
        root = root.right;
        int var1 = 0;
        int right = 0;
        int val = -1001;
        if (root != null) {
            val = root.val;
            var1 = method2(root, list);
            right = rightTravese(root, list);
        }
        return val;
    }
}
