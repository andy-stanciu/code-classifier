class Solution {

    public static int method1(int[] nums, int target) {
        int pivot = method3(nums);
        int lefts = method2(nums, 0, pivot, target);
        if (lefts == -1) {
            int rights = method2(nums, pivot + 1, nums.length - 1, target);
            return rights;
        }
        return lefts;
    }

    public static int method2(int[] arr, int start, int end, int target) {
        int mid = 0;
        while (start <= end) {
            mid = start + (end - start) / 2;
            if (arr[mid] == target)
                return mid;
            else if (arr[mid] > target) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return -1;
    }

    public static int method3(int[] nums) {
        int mid = 0;
        int start = 0;
        int end = nums.length - 1;
        while (start <= end) {
            mid = start + (end - start) / 2;
            if (mid < end && nums[mid] > nums[mid + 1]) {
                return mid;
            }
            if (mid > start && nums[mid] < nums[mid - 1]) {
                return mid - 1;
            }
            if (nums[mid] < nums[start]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return -1;
    }
}
