class Solution {

    int method1(int[] num, int target) {
        int pivot = method3(num);
        if (pivot == -1) {
            return method2(num, target, 0, num.length - 1);
        }
        if (num[pivot] == target) {
            return pivot;
        }
        if (target >= num[0]) {
            return method2(num, target, 0, pivot - 1);
        } else {
            return method2(num, target, pivot + 1, num.length - 1);
        }
    }

    int method2(int[] num, int target, int start, int end) {
        while (start <= end) {
            int mid = start + ((end - start) / 2);
            if (num[mid] > target) {
                end = mid - 1;
            } else if (num[mid] < target) {
                start = mid + 1;
            } else {
                return mid;
            }
        }
        return -1;
    }

    int method3(int[] num) {
        int start = 0;
        int end = num.length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (mid > start && num[mid - 1] > num[mid]) {
                return mid - 1;
            }
            if (mid < end && num[mid] > num[mid + 1]) {
                return mid;
            }
            if (num[mid] <= num[start]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return -1;
    }
}
