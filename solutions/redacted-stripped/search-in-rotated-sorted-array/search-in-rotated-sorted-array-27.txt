class Solution {

    public int method1(int[] nums, int target) {
        int l = nums.length;
        int peak = peakElement(nums);
        int first = method2(nums, 0, peak, target);
        if (first != -1) {
            return first;
        }
        return method2(nums, peak + 1, l - 1, target);
    }

    public static int peakElement(int[] nums) {
        int start = 0;
        int end = nums.length - 1;
        while (start < end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] > nums[mid + 1]) {
                return mid;
            }
            if (nums[mid] >= nums[start]) {
                start = mid + 1;
            } else {
                end = mid;
            }
        }
        return start;
    }

    int method2(int[] arr, int start, int end, int x) {
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (arr[mid] < x) {
                start = mid + 1;
            } else if (arr[mid] > x) {
                end = mid - 1;
            } else {
                return mid;
            }
        }
        return -1;
    }
}
