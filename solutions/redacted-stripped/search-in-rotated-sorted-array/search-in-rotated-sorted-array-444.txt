class Solution {

    public int method1(int[] nums, int target) {
        int pivot = pivot(nums);
        int ans = method2(nums, target, 0, pivot);
        if (ans != -1) {
            return ans;
        } else {
            return method2(nums, target, pivot + 1, nums.length - 1);
        }
    }

    static int method2(int[] arr, int target, int start, int end) {
        while (start <= end) {
            int mid = (start + end) / 2;
            if (arr[mid] > target) {
                end = mid - 1;
            } else if (arr[mid] < target) {
                start = mid + 1;
            } else {
                return mid;
            }
        }
        return -1;
    }

    static int pivot(int[] arr) {
        int start = 0;
        int end = arr.length - 1;
        while (start < end) {
            int mid = (start + end) / 2;
            if (arr[mid] > arr[mid + 1]) {
                return mid;
            } else if (arr[start] <= arr[mid]) {
                start = mid + 1;
            } else if (arr[mid] < arr[mid - 1]) {
                return mid - 1;
            } else if (arr[start] > arr[mid]) {
                end = mid - 1;
            }
        }
        return -1;
    }
}
