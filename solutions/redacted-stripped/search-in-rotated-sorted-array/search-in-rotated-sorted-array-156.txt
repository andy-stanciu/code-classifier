class Solution {

    public int method1(int[] nums, int target) {
        int end = nums.length - 1;
        if (nums[0] < nums[end]) {
            return method2(nums, 0, end, target);
        }
        int start = 0;
        int firstElement = nums[0];
        while (start < end) {
            int mid = (start + end) >> 1;
            if (mid > 0 && nums[mid] < nums[mid - 1]) {
                start = mid;
                break;
            }
            if (nums[mid] >= firstElement) {
                start = mid + 1;
            } else {
                end = mid;
            }
        }
        int var1 = start;
        if (nums[var1] == target) {
            return var1;
        }
        start = 0;
        end = nums.length - 1;
        if (target < firstElement) {
            start = var1;
        } else {
            end = var1 - 1;
        }
        return method2(nums, start, end, target);
    }

    private int method2(int[] nums, int start, int end, int target) {
        while (start <= end) {
            int mid = (start + end) >> 1;
            if (nums[mid] == target) {
                return mid;
            }
            if (nums[mid] < target) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return -1;
    }
}
