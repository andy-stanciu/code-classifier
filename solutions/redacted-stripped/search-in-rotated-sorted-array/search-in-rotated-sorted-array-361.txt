class Solution {

    public int method1(int[] nums, int target) {
        int piv = pivit(nums);
        int low = 0, high = nums.length - 1;
        int res;
        if (nums[low] > target) {
            res = method1(nums, piv + 1, high, target);
        } else {
            res = method1(nums, 0, piv, target);
        }
        return res;
    }

    int pivit(int[] arr) {
        int low = 0, high = arr.length - 1;
        while (low < high) {
            int mid = (low + high) / 2;
            if (arr[low] <= arr[high]) {
                return high;
            }
            if (arr[mid] > arr[low]) {
                low = mid;
            } else {
                high = mid;
            }
        }
        return low;
    }

    int method1(int[] arr, int low, int high, int target) {
        while (low <= high) {
            int mid = (low + high) / 2;
            if (arr[mid] == target) {
                return mid;
            } else if (arr[mid] < target) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return -1;
    }
}
