class Solution {

    public int method1(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] == target)
                return mid;
            if (nums[mid] < nums[left]) {
                if (target > nums[mid] && target <= nums[right]) {
                    return method2(nums, target, mid + 1, right);
                } else {
                    right = mid - 1;
                }
            } else {
                if (target >= nums[left] && target < nums[mid]) {
                    return method2(nums, target, left, mid - 1);
                } else {
                    left = mid + 1;
                }
            }
        }
        return -1;
    }

    private int method2(int[] nums, int target, int left, int right) {
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] == target)
                return mid;
            if (target < nums[mid]) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return -1;
    }
}
