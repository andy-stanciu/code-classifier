class Solution {

    public int method1(int[] nums, int target) {
        int var1 = method2(nums);
        int n = nums.length;
        int left;
        int right;
        if (target > nums[n - 1]) {
            left = 0;
            right = var1 - 1;
        } else {
            left = var1;
            right = n - 1;
        }
        while (right >= left) {
            int mid = (left + right) / 2;
            if (nums[mid] == target) {
                return mid;
            }
            if (nums[mid] > target) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return -1;
    }

    public int method2(int[] nums) {
        int left = 0;
        int right = nums.length - 1;
        int var1;
        int var2;
        if (nums[left] > nums[right]) {
            var2 = nums[right];
            var1 = right;
        } else {
            var2 = nums[left];
            var1 = left;
        }
        while (right >= left) {
            int mid = (left + right) / 2;
            if (var2 > nums[mid]) {
                var2 = nums[mid];
                var1 = mid;
            }
            if (nums[mid] > nums[right]) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return var1;
    }
}
