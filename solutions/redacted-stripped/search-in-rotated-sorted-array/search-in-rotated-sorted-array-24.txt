class Solution {

    public int method1(int[] nums, int target) {
        int res1 = -1, res2 = -1, res3 = -1;
        int i = 0;
        for (i = 0; i < nums.length - 1; i++) {
            if (nums[i] > nums[i + 1]) {
                break;
            }
        }
        if (i == nums.length - 1) {
            res1 = method2(nums, 0, nums.length - 1, target);
        } else {
            res2 = method2(nums, 0, i, target);
            res3 = method2(nums, i + 1, nums.length - 1, target);
        }
        if (res1 > -1)
            return res1;
        else if (res2 > -1)
            return res2;
        else if (res3 > -1)
            return res3;
        else
            return -1;
    }

    int method2(int[] nums, int start, int end, int target) {
        int l = start;
        int r = end;
        while (l <= r) {
            int mid = (l + r) / 2;
            if (nums[mid] == target)
                return mid;
            else if (nums[mid] > target) {
                r = mid - 1;
            } else {
                l = mid + 1;
            }
        }
        return -1;
    }
}
