class Solution {

    public int method1(int[] nums, int target) {
        int n = nums.length;
        int start = 0;
        int end = n - 1;
        int pivot = -1;
        if (n == 1 && nums[0] == target) {
            return 0;
        }
        for (int i = 0; i < n - 1; i++) {
            if (nums[i] > nums[i + 1]) {
                pivot = i;
            }
        }
        if (pivot != -1 && target == nums[pivot]) {
            return pivot;
        } else if (pivot != -1 && target < nums[pivot] && target >= nums[start]) {
            end = pivot;
        } else {
            start = pivot + 1;
        }
        while (start < end) {
            int mid = (end + start) >> 1;
            if (nums[mid] == target)
                return mid;
            if (target > nums[mid]) {
                start = mid + 1;
            } else {
                end = mid;
            }
        }
        if (start == end && nums[start] == target) {
            return start;
        }
        return -1;
    }
}
