class Solution {

    public List<String> method1(TreeNode root) {
        if (root == null) {
            List<String> base = new ArrayList<>();
            base.add("");
            return base;
        }
        if (root.left == null && root.right == null) {
            List<String> ans = new ArrayList<>();
            ans.add(Integer.toString(root.val));
            return ans;
        }
        List<String> l1 = method1(root.left);
        List<String> l2 = method1(root.right);
        List<String> finalList = new ArrayList<>();
        if (l1.get(0) != "" && l2.get(0) != "") {
            for (int counter = 0; counter < l1.size(); counter++) {
                String s1 = l1.get(counter);
                finalList.add(Integer.toString(root.val) + "->" + s1);
            }
            for (int counter = 0; counter < l2.size(); counter++) {
                String s2 = l2.get(counter);
                finalList.add(Integer.toString(root.val) + "->" + s2);
            }
        } else if (l1.get(0) != "") {
            for (int counter = 0; counter < l1.size(); counter++) {
                String s1 = l1.get(counter);
                finalList.add(Integer.toString(root.val) + "->" + s1);
            }
        } else {
            for (int counter = 0; counter < l2.size(); counter++) {
                String s2 = l2.get(counter);
                finalList.add(Integer.toString(root.val) + "->" + s2);
            }
        }
        return finalList;
    }
}
