class Solution {

    public List<String> method1(TreeNode root) {
        List<String> res = new ArrayList<>();
        if (root == null)
            return res;
        Queue<TreeNode> nodeQueue = new LinkedList<>();
        Queue<String> textQueue = new LinkedList<>();
        nodeQueue.add(root);
        textQueue.add(String.valueOf(root.val));
        while (!nodeQueue.isEmpty()) {
            int size = nodeQueue.size();
            for (int i = 0; i < size; i++) {
                TreeNode node = nodeQueue.poll();
                String tmp = textQueue.poll();
                if (node.left == null && node.right == null) {
                    res.add(tmp);
                }
                if (!tmp.equals(""))
                    tmp += "->";
                if (node.left != null) {
                    nodeQueue.add(node.left);
                    textQueue.add(tmp + node.left.val);
                }
                if (node.right != null) {
                    nodeQueue.add(node.right);
                    textQueue.add(tmp + node.right.val);
                }
            }
        }
        return res;
    }
}
