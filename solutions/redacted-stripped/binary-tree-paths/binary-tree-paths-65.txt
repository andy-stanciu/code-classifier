class Solution {

    public void AnyDFS(TreeNode root, List<String> ans, StringBuilder s) {
        if (root.right == null && root.left == null) {
            s.append(root.val);
            ans.add(s.toString());
            s.setLength(s.length() - Integer.toString(root.val).length());
            return;
        }
        s.append(root.val);
        s.append("->");
        if (root.left != null)
            AnyDFS(root.left, ans, s);
        if (root.right != null)
            AnyDFS(root.right, ans, s);
        s.setLength(s.length() - Integer.toString(root.val).length() - 2);
    }

    public List<String> method1(TreeNode root) {
        List<String> ans = new ArrayList<>();
        StringBuilder s = new StringBuilder();
        if (root == null)
            return ans;
        AnyDFS(root, ans, s);
        return ans;
    }
}
