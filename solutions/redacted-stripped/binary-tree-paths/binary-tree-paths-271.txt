class Solution {

    public List<String> method1(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        List<String> result = new ArrayList<>();
        inOrderTraversal(root, list, result);
        return result;
    }

    public void inOrderTraversal(TreeNode node, List<Integer> list, List<String> result) {
        if (node == null)
            return;
        if (node.left == null && node.right == null) {
            StringBuilder sb = new StringBuilder();
            for (int num : list) {
                sb.append(num);
                sb.append("->");
            }
            sb.append(node.val);
            result.add(sb.toString());
        }
        list.add(node.val);
        inOrderTraversal(node.left, list, result);
        inOrderTraversal(node.right, list, result);
        list.remove(list.size() - 1);
    }
}
