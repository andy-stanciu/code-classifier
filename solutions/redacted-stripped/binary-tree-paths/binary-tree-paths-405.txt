class Solution {

    public void Inorder(TreeNode root, List<String> list, Stack<String> s) {
        if (root == null) {
            return;
        }
        s.add(Integer.toString(root.val));
        Inorder(root.left, list, s);
        Inorder(root.right, list, s);
        if (root.left == null && root.right == null) {
            String str = "";
            for (int i = 0; i < s.size(); i++) {
                if (i != s.size() - 1)
                    str = str + s.get(i) + "->";
                else
                    str = str + s.get(i);
            }
            list.add(str);
        }
        s.pop();
    }

    public List<String> method1(TreeNode root) {
        List<String> list = new ArrayList<>();
        Stack<String> s = new Stack<>();
        Inorder(root, list, s);
        return list;
    }
}
