class Solution {

    List<String> result = new ArrayList<String>();

    public List<String> method1(TreeNode root) {
        return levelOrderTreversal(root);
    }

    List<String> levelOrderTreversal(TreeNode root) {
        if (root == null) {
            return result;
        }
        Queue<TreeNode> var1 = new LinkedList<TreeNode>();
        Queue<String> var2 = new LinkedList<String>();
        var1.add(root);
        var2.add("");
        while (!var1.isEmpty()) {
            TreeNode node = var1.remove();
            String path = var2.remove();
            if (node.left == null && node.right == null) {
                result.add(path + node.val);
            }
            if (node.left != null) {
                var1.add(node.left);
                var2.add(path + node.val + "->");
            }
            if (node.right != null) {
                var1.add(node.right);
                var2.add(path + node.val + "->");
            }
        }
        return result;
    }
}
