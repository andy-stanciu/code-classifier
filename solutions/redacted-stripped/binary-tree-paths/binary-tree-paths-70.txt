class Solution {

    public void solve(TreeNode root, ArrayList<Integer> ls, ArrayList<ArrayList<Integer>> ans) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            ls.add(root.val);
            ans.add(new ArrayList<>(ls));
            ls.remove(ls.size() - 1);
            return;
        }
        ls.add(root.val);
        solve(root.left, ls, ans);
        solve(root.right, ls, ans);
        ls.remove(ls.size() - 1);
    }

    public List<String> method1(TreeNode root) {
        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
        ArrayList<Integer> ls = new ArrayList<>();
        solve(root, ls, ans);
        ArrayList<String> str = new ArrayList<>();
        for (ArrayList<Integer> list : ans) {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < list.size(); i++) {
                if (i == list.size() - 1) {
                    sb.append(list.get(i));
                } else {
                    sb.append(list.get(i)).append("->");
                }
            }
            str.add(sb.toString());
        }
        return str;
    }
}
