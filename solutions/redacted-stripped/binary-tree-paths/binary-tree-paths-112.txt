class Solution {

    public List<String> method1(TreeNode root) {
        List<String> result = new ArrayList<>();
        if (root == null)
            return result;
        List<Integer> var1 = new ArrayList<>();
        traversal(root, result, var1);
        return result;
    }

    void traversal(TreeNode root, List<String> result, List<Integer> var1) {
        var1.add(root.val);
        if (root.left == null && root.right == null) {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < var1.size() - 1; i++) {
                sb.append(var1.get(i)).append("->");
            }
            sb.append(var1.get(var1.size() - 1));
            result.add(sb.toString());
            return;
        }
        if (root.left != null) {
            traversal(root.left, result, var1);
            var1.remove(var1.size() - 1);
        }
        if (root.right != null) {
            traversal(root.right, result, var1);
            var1.remove(var1.size() - 1);
        }
    }
}
