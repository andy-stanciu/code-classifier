class Solution {

    public List<String> method1(TreeNode root) {
        List<String> strList = new ArrayList<>();
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> sublist = new ArrayList<>();
        getAllPath(root, list, sublist);
        for (List<Integer> l : list) {
            String str = "";
            for (int i = 0; i < l.size(); i++) {
                str = str + l.get(i);
                if (i != l.size() - 1) {
                    str += "->";
                }
            }
            strList.add(str);
        }
        return strList;
    }

    boolean getAllPath(TreeNode root, List<List<Integer>> list, List<Integer> sublist) {
        if (root == null)
            return false;
        sublist.add(root.val);
        boolean left = getAllPath(root.left, list, sublist);
        boolean right = getAllPath(root.right, list, sublist);
        if (left == false && right == false) {
            list.add(new ArrayList(sublist));
        }
        sublist.remove(sublist.size() - 1);
        return true;
    }
}
