class Solution {

    public List<String> method1(TreeNode root) {
        List<String> result = new LinkedList<>();
        Deque<TreeNode> stack1 = new LinkedList<>();
        Deque<StringBuilder> stack2 = new LinkedList<>();
        stack1.addFirst(root);
        stack2.addFirst(new StringBuilder());
        while (!stack1.isEmpty()) {
            TreeNode node = stack1.removeFirst();
            StringBuilder builder = stack2.removeFirst();
            builder.append(node.val);
            builder.append("->");
            if (node.left == null && node.right == null) {
                builder.setLength(builder.length() - 2);
                result.add(builder.toString());
                builder = null;
            }
            if (node.right != null) {
                stack1.addFirst(node.right);
                stack2.addFirst(new StringBuilder(builder));
            }
            if (node.left != null) {
                stack1.addFirst(node.left);
                stack2.addFirst(new StringBuilder(builder));
            }
        }
        return result;
    }
}
