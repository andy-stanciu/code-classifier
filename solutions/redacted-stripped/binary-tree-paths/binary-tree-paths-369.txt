class Solution {

    List<Integer> temp = new ArrayList<>();

    List<String> ans = new ArrayList<>();

    public List<String> method1(TreeNode root) {
        dfs(root);
        return ans;
    }

    public void dfs(TreeNode root) {
        if (root.left == null && root.right == null) {
            temp.add(root.val);
            makeItToString(temp);
            temp.remove(temp.size() - 1);
            return;
        }
        temp.add(root.val);
        if (root.left != null) {
            dfs(root.left);
        }
        if (root.right != null) {
            dfs(root.right);
        }
        temp.remove(temp.size() - 1);
    }

    public void makeItToString(List<Integer> nums) {
        String s = "";
        for (int i = 0; i < nums.size(); i++) {
            if (i == 0) {
                s += Integer.toString(nums.get(i));
            } else {
                s += "->" + Integer.toString(nums.get(i));
            }
        }
        ans.add(s);
    }
}
