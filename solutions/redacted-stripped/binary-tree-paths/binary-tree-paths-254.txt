class Solution {

    List<String> r;

    public List<String> method1(TreeNode root) {
        r = new ArrayList<>();
        if (root == null)
            return r;
        int[] sta = new int[100];
        dfs(root, sta, 0);
        return r;
    }

    private void dfs(TreeNode node, int[] sta, int si) {
        sta[si] = node.val;
        if (node.left == null && node.right == null) {
            r.add(makeStr(sta, si));
        } else {
            if (node.left != null)
                dfs(node.left, sta, si + 1);
            if (node.right != null)
                dfs(node.right, sta, si + 1);
        }
    }

    private String makeStr(int[] sta, int si) {
        StringBuilder sb = new StringBuilder();
        sb.append(sta[0]);
        for (int i = 1; i <= si; i++) {
            sb.append("->");
            sb.append(sta[i]);
        }
        return sb.toString();
    }
}
