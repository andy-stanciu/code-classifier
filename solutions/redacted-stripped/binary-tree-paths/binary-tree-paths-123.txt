class Solution {

    public List<String> method1(TreeNode root) {
        ArrayList<String> ans = new ArrayList<String>();
        ArrayList<String> out = new ArrayList<String>();
        if (root == null)
            return ans;
        method2(root, ans, out);
        return ans;
    }

    public void method2(TreeNode root, ArrayList<String> ans, ArrayList<String> out) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            out.add(Integer.toString(root.val));
            StringBuilder s = new StringBuilder();
            for (int j = 0; j < out.size(); j++) {
                s.append(out.get(j));
            }
            ans.add(s.toString());
            out.remove(out.size() - 1);
            return;
        }
        out.add(root.val + "->");
        method2(root.left, ans, out);
        method2(root.right, ans, out);
        out.remove(out.size() - 1);
    }
}
