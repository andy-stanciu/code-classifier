class Solution {

    public List<String> method1(TreeNode root) {
        List<String> var1 = new ArrayList<>();
        var1 = DFS(root);
        return var1;
    }

    public static List<String> DFS(TreeNode root) {
        List<String> var1 = new ArrayList<>();
        Stack<TreeNode> nStack = new Stack<>();
        Stack<String> sStack = new Stack<>();
        if (root == null)
            return var1;
        nStack.push(root);
        sStack.push("");
        while (!nStack.isEmpty()) {
            TreeNode nTemp = nStack.pop();
            String sTemp = sStack.pop();
            if (nTemp.left == null && nTemp.right == null)
                var1.add(sTemp + nTemp.val);
            if (nTemp.left != null) {
                nStack.push(nTemp.left);
                sStack.push(sTemp + nTemp.val + "->");
            }
            if (nTemp.right != null) {
                nStack.push(nTemp.right);
                sStack.push(sTemp + nTemp.val + "->");
            }
        }
        return var1;
    }
}
