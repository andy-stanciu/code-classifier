class Solution {

    public int method1(int[] nums) {
        return dAndC(nums, 0, nums.length - 1);
    }

    private int dAndC(int[] nums, int l, int r) {
        if (l == r)
            return nums[l];
        int mid = (r - l) / 2 + l;
        int left = dAndC(nums, l, mid);
        int right = dAndC(nums, mid + 1, r);
        if (left == right)
            return left;
        int leftCount = 0;
        int rightCount = 0;
        for (int i = l; i <= r; i++) {
            if (nums[i] == left)
                leftCount++;
            if (nums[i] == right)
                rightCount++;
        }
        return leftCount > rightCount ? left : right;
    }
}
