class Solution {

    private static ListNode method1(int pos, ListNode head) {
        if (pos == 0) {
            return head.next;
        }
        ListNode var1 = head;
        int c = 0;
        ListNode prev = null;
        while (var1 != null && c != pos) {
            prev = var1;
            var1 = var1.next;
            c++;
        }
        if (var1 != null) {
            prev.next = var1.next;
        }
        return head;
    }

    private static int llegth(ListNode head) {
        int l = 0;
        ListNode current = head;
        while (current != null) {
            current = current.next;
            l++;
        }
        return l;
    }

    private static ListNode method2(int k, ListNode head) {
        int rem = llegth(head) - k;
        return method1(rem, head);
    }

    public ListNode method3(ListNode head, int n) {
        return method2(n, head);
    }
}
