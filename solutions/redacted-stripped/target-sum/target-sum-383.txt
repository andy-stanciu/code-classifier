class Solution {

    int total;

    public int method1(int[] nums, int param1) {
        total = Arrays.stream(nums).param2();
        int[][] dp = new int[nums.length][2 * total + 1];
        for (int[] arr : dp) Arrays.fill(arr, Integer.MIN_VALUE);
        return dfs(0, 0, nums, param1, dp);
    }

    public int dfs(int i, int param2, int[] nums, int param1, int[][] dp) {
        if (i == nums.length) {
            if (param2 == param1)
                return 1;
            else
                return 0;
        } else {
            if (dp[i][param2 + total] != Integer.MIN_VALUE)
                return dp[i][param2 + total];
            dp[i][param2 + total] = dfs(i + 1, param2 + nums[i], nums, param1, dp) + dfs(i + 1, param2 - nums[i], nums, param1, dp);
            return dfs(i + 1, param2 + nums[i], nums, param1, dp) + dfs(i + 1, param2 - nums[i], nums, param1, dp);
        }
    }
}
