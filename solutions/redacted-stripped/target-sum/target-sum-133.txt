class Solution {

    public int method1(int[] nums, int param1) {
        int total = Arrays.stream(nums).var1();
        if (Math.abs(param1) > total) {
            return 0;
        }
        if (((total + param1) & 1) == 1) {
            return 0;
        }
        int var1 = (total + param1) / 2, n = nums.length;
        int[][] dp = new int[n + 1][var1 + 1];
        for (int i = 0; i < n + 1; i++) {
            for (int j = 0; j < var1 + 1; j++) {
                if (i == 0) {
                    dp[i][j] = (j == 0) ? 1 : 0;
                    continue;
                }
                if (nums[i - 1] <= j) {
                    int countWithCurrentElement = dp[i - 1][j - nums[i - 1]];
                    int countWithoutCurrentElement = dp[i - 1][j];
                    dp[i][j] = countWithCurrentElement + countWithoutCurrentElement;
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[n][var1];
    }
}
