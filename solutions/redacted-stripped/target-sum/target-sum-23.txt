class Solution {

    int aux(int[] nums, int i, int param1, int S, int[][] dp) {
        if (i == nums.length) {
            if (S == param1)
                return 1;
            return 0;
        }
        if (dp[i][param1 + 1001] != Integer.MAX_VALUE)
            return dp[i][param1 + 1001];
        int pos = aux(nums, i + 1, param1 + nums[i], S, dp);
        int neg = aux(nums, i + 1, param1 - nums[i], S, dp);
        dp[i][param1 + 1001] = pos + neg;
        return dp[i][param1 + 1001];
    }

    public int method1(int[] nums, int S) {
        int[][] dp = new int[nums.length + 1][2009];
        for (int i = 0; i < nums.length + 1; i++) {
            for (int j = 0; j < 2009; j++) {
                dp[i][j] = Integer.MAX_VALUE;
            }
        }
        return aux(nums, 0, 0, S, dp);
    }
}
