class Solution {

    public int method1(int[] nums, int param1) {
        int[][] dp = new int[nums.length + 1][param1 + 1];
        for (int j = 0; j <= param1; j++) {
            dp[0][j] = 0;
        }
        dp[0][0] = 1;
        for (int i = 1; i <= nums.length; i++) {
            dp[i][0] = 1;
        }
        for (int i = 1; i <= nums.length; i++) {
            for (int j = 0; j <= param1; j++) {
                if (nums[i - 1] <= j) {
                    dp[i][j] = dp[i - 1][j - nums[i - 1]] + dp[i - 1][j];
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[nums.length][param1];
    }

    public int method2(int[] nums, int param2) {
        int Range = 0;
        for (int num : nums) {
            Range += num;
        }
        if (Math.abs(param2) > Range || (Range - param2) % 2 != 0) {
            return 0;
        }
        int s2 = (Range + param2) / 2;
        return method1(nums, s2);
    }
}
