class Solution {

    public int method1(int[] nums, int param1) {
        int n = nums.length;
        int var1 = Arrays.stream(nums).var1();
        if (var1 - param1 < 0)
            return 0;
        if ((var1 - param1) % 2 == 1)
            return 0;
        int s2 = (var1 - param1) / 2;
        int[][] dp = new int[n][s2 + 1];
        for (int[] r : dp) Arrays.fill(r, -1);
        return f(n - 1, nums, s2, dp);
    }

    public int f(int ind, int[] nums, int param1, int[][] dp) {
        if (ind == 0) {
            if (param1 == 0 && nums[0] == 0)
                return 2;
            else if (param1 == 0 || nums[0] == param1)
                return 1;
            else
                return 0;
        }
        if (dp[ind][param1] != -1)
            return dp[ind][param1];
        int nt = f(ind - 1, nums, param1, dp);
        int t = 0;
        if (nums[ind] <= param1)
            t = f(ind - 1, nums, param1 - nums[ind], dp);
        return dp[ind][param1] = nt + t;
    }
}
