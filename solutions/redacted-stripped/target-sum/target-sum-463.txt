class Solution {

    int[][] dp;

    public void method1(int[] nums, int n, int param1) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < param1; j++) {
                if (i == 0)
                    dp[0][j] = 0;
                if (j == 0)
                    dp[i][0] = 1;
            }
        }
        for (int i = 1; i < n; i++) {
            for (int j = 0; j < param1; j++) {
                dp[i][j] = dp[i - 1][j];
                if (nums[i - 1] <= j)
                    dp[i][j] += dp[i - 1][j - nums[i - 1]];
            }
        }
    }

    public int method2(int[] nums, int param2) {
        int param1 = 0;
        for (int val : nums) {
            param1 += val;
        }
        if (param2 > param1 || (param1 - param2) % 2 != 0)
            return 0;
        param1 = (param1 - param2) / 2;
        this.dp = new int[nums.length + 1][param1 + 1];
        method1(nums, nums.length + 1, param1 + 1);
        return this.dp[nums.length][param1];
    }
}
