class Solution {

    public int method1(int[] arr, int param1) {
        int var1 = 0;
        for (int i = 0; i < arr.length; i++) var1 += arr[i];
        param1 = Math.abs(param1);
        if ((param1 + var1) % 2 != 0)
            return 0;
        int s1 = (param1 + var1) / 2;
        if (var1 - s1 > s1)
            return count_subsets(arr, arr.length, s1);
        else if (var1 >= s1)
            return count_subsets(arr, arr.length, var1 - s1);
        else
            return count_subsets(arr, arr.length, s1);
    }

    int count_subsets(int[] arr, int n, int var1) {
        int[][] dp = new int[n + 1][var1 + 1];
        for (int i = 0; i <= n; i++) dp[i][0] = 1;
        for (int i = 1; i <= var1; i++) dp[0][i] = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 0; j <= var1; j++) {
                if (arr[i - 1] > j)
                    dp[i][j] = dp[i - 1][j];
                else
                    dp[i][j] = dp[i - 1][j] + dp[i - 1][j - arr[i - 1]];
            }
        }
        return dp[n][var1];
    }
}
