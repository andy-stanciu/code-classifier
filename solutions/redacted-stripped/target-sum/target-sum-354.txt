class Solution {

    public int method1(int[] nums, int param1) {
        int[][] dp = new int[nums.length][2001];
        for (int[] d : dp) Arrays.fill(d, -1);
        return helper(0, param1, nums, dp);
    }

    private int helper(int i, int param1, int[] nums, int[][] dp) {
        if (i == nums.length) {
            return param1 == 0 ? 1 : 0;
        }
        if (param1 > 1000 || param1 < -1000)
            return 0;
        int ans = dp[i][param1 + 1000];
        if (ans != -1)
            return ans;
        ans = helper(i + 1, param1 - nums[i], nums, dp);
        if (nums[i] == 0)
            ans *= 2;
        else
            ans += helper(i + 1, param1 + nums[i], nums, dp);
        dp[i][param1 + 1000] = ans;
        return ans;
    }
}
