class Solution {

    public int method1(int[] nums, int param1) {
        int count = method2(0, 0, param1, nums, new HashMap<>());
        return count;
    }

    public int method2(int idx, int param2, int param1, int[] nums, Map<String, Integer> cache) {
        if (idx == nums.length) {
            if (param2 == param1) {
                return 1;
            }
            return 0;
        }
        String key = idx + ":" + param2;
        if (cache.containsKey(key)) {
            return cache.get(key);
        }
        int var1 = method2(idx + 1, param2 + nums[idx], param1, nums, cache);
        int diff = method2(idx + 1, param2 - nums[idx], param1, nums, cache);
        int count = var1 + diff;
        cache.put(key, count);
        return count;
    }
}
