class Solution {

    static HashMap<Pair, Integer> map;

    public static int method1(int[] arr, int param1) {
        map = new HashMap<>();
        int n = arr.length;
        return helper(n, param1, arr, n - 1);
    }

    private static int helper(int n, int param1, int[] arr, int index) {
        if (index == 0) {
            if (arr[index] == 0 && param1 == 0) {
                return 2;
            }
            if (-1 * arr[0] == param1 || arr[0] == param1)
                return 1;
            else
                return 0;
        }
        if (map.get(new Pair(index, param1)) != null)
            return map.get(new Pair(index, param1));
        int sub = helper(n, param1 - (-1 * arr[index]), arr, index - 1);
        int add = helper(n, param1 - arr[index], arr, index - 1);
        map.put(new Pair(index, param1), add + sub);
        return add + sub;
    }
}
