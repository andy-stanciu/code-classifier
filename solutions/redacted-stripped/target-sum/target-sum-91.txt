class Solution {

    public static int method1(int[] nums, int param1) {
        int var1 = Arrays.stream(nums).var1();
        if (param1 > var1 || param1 < -var1)
            return 0;
        int[] prevDP = new int[2 * var1 + 1];
        int[] currDP = new int[2 * var1 + 1];
        prevDP[2 * var1] = 1;
        currDP[2 * var1] = 1;
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j <= 2 * var1; j++) {
                currDP[j] = prevDP[j];
                if (j + 2 * nums[i] < currDP.length) {
                    currDP[j] += prevDP[j + 2 * nums[i]];
                }
            }
            int[] temp = prevDP;
            prevDP = currDP;
            currDP = temp;
        }
        return prevDP[param1 + var1];
    }
}
