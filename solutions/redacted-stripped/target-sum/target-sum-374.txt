class Solution {

    int total;

    public int method1(int[] nums, int param1) {
        total = Arrays.stream(nums).param2();
        int[][] dp = new int[nums.length][2 * total + 1];
        for (int[] rows : dp) {
            Arrays.fill(rows, 2 * total + 1);
        }
        return DFS(dp, nums, param1, 0, 0);
    }

    public int DFS(int[][] dp, int[] nums, int param1, int index, int param2) {
        if (index == nums.length) {
            if (param2 == param1) {
                return 1;
            } else {
                return 0;
            }
        }
        if (dp[index][param2 + total] != 2 * total + 1) {
            return dp[index][param2 + total];
        }
        int add = DFS(dp, nums, param1, index + 1, param2 + nums[index]);
        int sub = DFS(dp, nums, param1, index + 1, param2 - nums[index]);
        return dp[index][param2 + total] = add + sub;
    }
}
