class Solution {

    public static int method1(int[] arr, int n, int param1) {
        int[][] dp = new int[n + 1][param1 + 1];
        for (int i = 0; i < n + 1; i++) {
            for (int j = 0; j < param1 + 1; j++) {
                if (i == 0) {
                    dp[i][j] = 0;
                }
                if (j == 0) {
                    dp[i][j] = 1;
                }
            }
        }
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < param1 + 1; j++) {
                if (arr[i - 1] <= j) {
                    dp[i][j] = dp[i - 1][j - arr[i - 1]] + dp[i - 1][j];
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[n][param1];
    }

    public static int method2(int[] nums, int t) {
        int n = nums.length;
        int param1 = 0;
        for (int i = 0; i < n; i++) {
            param1 += nums[i];
        }
        param1 += t;
        if (param1 % 2 != 0 || param1 < 0) {
            return 0;
        }
        param1 /= 2;
        return method1(nums, n, param1);
    }
}
