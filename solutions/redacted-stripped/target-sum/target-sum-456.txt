class Solution {

    int[][] dp;

    public int recur(int index, int param1, int param2, int[] nums, int n) {
        if (index == n) {
            if (param2 == param1) {
                return 1;
            }
            return 0;
        }
        if (dp[index][param1 + 1000] != -1) {
            return dp[index][param1 + 1000];
        }
        int firstOption = recur(index + 1, param1 + nums[index], param2, nums, n);
        int secondOption = recur(index + 1, param1 - nums[index], param2, nums, n);
        int currentAns = firstOption + secondOption;
        dp[index][param1 + 1000] = currentAns;
        return currentAns;
    }

    public int method1(int[] nums, int param2) {
        int n = nums.length;
        dp = new int[n][2001];
        for (int i = 0; i < n; i++) {
            Arrays.fill(dp[i], -1);
        }
        return recur(0, 0, param2, nums, n);
    }
}
