class Solution {

    public int method1(int[] nums, int param1) {
        int total = Arrays.stream(nums).param2();
        if (Math.abs(param1) > total)
            return 0;
        int[][] dp = new int[nums.length][total * 2 + 1];
        return dfs(nums, param1, 0, 0, dp, total);
    }

    public int dfs(int[] nums, int param1, int index, int param2, int[][] dp, int total) {
        if (index == nums.length) {
            return param1 == param2 ? 1 : 0;
        }
        if (dp[index][param2 + total] == -1) {
            return dp[index][param2 + total];
        }
        int add = dfs(nums, param1, index + 1, param2 + nums[index], dp, total);
        int sub = dfs(nums, param1, index + 1, param2 - nums[index], dp, total);
        return dp[index][param2 + total] = add + sub;
    }
}
