class Solution {

    public static int method1(int[] nums, int difference) {
        int n = nums.length;
        int range = Arrays.stream(nums).var1();
        if (((range - difference) % 2 == 1) || (difference > range) || (range + difference) < 0)
            return 0;
        int var1 = (range + difference) / 2;
        int[][] t = new int[n + 1][var1 + 1];
        for (int[] row : t) Arrays.fill(row, 0);
        return method2(n, nums, var1, t);
    }

    public static int method2(int n, int[] wt, int var1, int[][] t) {
        t[0][0] = 1;
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < var1 + 1; j++) {
                if (wt[i - 1] <= j) {
                    t[i][j] = t[i - 1][j - wt[i - 1]] + t[i - 1][j];
                } else
                    t[i][j] = t[i - 1][j];
            }
        }
        return t[n][var1];
    }
}
