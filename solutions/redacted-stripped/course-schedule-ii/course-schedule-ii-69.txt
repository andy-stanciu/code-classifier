class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        int[] inDeg = new int[param1];
        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < param1; i++) adj.add(new ArrayList<>());
        for (int i = 0; i < prerequisites.length; i++) {
            int a = prerequisites[i][0];
            int b = prerequisites[i][1];
            adj.get(a).add(b);
            inDeg[b]++;
        }
        Queue<Integer> q = new LinkedList<>();
        int[] res = new int[param1];
        for (int i = 0; i < inDeg.length; i++) {
            if (inDeg[i] == 0)
                q.add(i);
        }
        int k = param1 - 1;
        int count = 0;
        if (q.isEmpty())
            return new int[0];
        while (!q.isEmpty()) {
            int curr = q.poll();
            count++;
            res[k--] = curr;
            for (int item : adj.get(curr)) {
                if (--inDeg[item] == 0)
                    q.add(item);
            }
        }
        if (count != param1)
            return new int[0];
        return res;
    }
}
