class Solution {

    public int[] findOrder(int n, int[][] a) {
        ArrayList<ArrayList<Integer>> arr = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            arr.add(new ArrayList<>());
        }
        int[] deg = new int[n];
        for (int[] i : a) {
            int t = i[0];
            int p = i[1];
            arr.get(p).add(t);
            deg[t]++;
        }
        int[] ord = new int[n];
        int ind = 0;
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < n; i++) {
            if (deg[i] == 0) {
                q.add(i);
            }
        }
        while (!q.isEmpty()) {
            int cur = q.poll();
            ord[ind++] = cur;
            for (int i : arr.get(cur)) {
                deg[i]--;
                if (deg[i] == 0) {
                    q.add(i);
                }
            }
        }
        if (ind == n) {
            return ord;
        } else {
            return new int[0];
        }
    }
}
