class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        int[] indegree = new int[param1];
        boolean[] visited = new boolean[prerequisites.length];
        boolean[] done = new boolean[param1];
        int[] res = new int[param1];
        for (int[] p : prerequisites) {
            indegree[p[1]]++;
        }
        int index = 0;
        boolean hasNewVertex = true;
        while (hasNewVertex) {
            hasNewVertex = false;
            for (int i = 0; i < prerequisites.length; i++) {
                if (!visited[i]) {
                    int cur = prerequisites[i][0];
                    int pre = prerequisites[i][1];
                    if (indegree[cur] == 0) {
                        visited[i] = true;
                        indegree[pre]--;
                        hasNewVertex = true;
                        if (!done[cur]) {
                            done[cur] = true;
                            res[index++] = cur;
                        }
                    }
                }
            }
        }
        for (int i = 0; i < param1; i++) {
            if (!done[i]) {
                res[index++] = i;
            }
        }
        for (int i = 0; i < param1 / 2; i++) {
            int temp = res[i];
            res[i] = res[param1 - 1 - i];
            res[param1 - 1 - i] = temp;
        }
        for (int i = 0; i < param1; i++) {
            if (indegree[i] != 0) {
                return new int[] {};
            }
        }
        return res;
    }
}
