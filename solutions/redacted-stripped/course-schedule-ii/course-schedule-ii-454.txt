class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        int[] inDegree = new int[param1];
        for (int[] arr : prerequisites) {
            inDegree[arr[0]]++;
        }
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < param1; i++) {
            if (inDegree[i] == 0) {
                q.offer(i);
            }
        }
        int[] ans = new int[param1];
        int i = 0;
        while (!q.isEmpty()) {
            int n = q.poll();
            ans[i] = n;
            i++;
            for (int[] arr : prerequisites) {
                if (arr[1] == n) {
                    if (--inDegree[arr[0]] == 0) {
                        q.offer(arr[0]);
                    }
                }
            }
        }
        if (i != param1) {
            return new int[0];
        }
        return ans;
    }
}
