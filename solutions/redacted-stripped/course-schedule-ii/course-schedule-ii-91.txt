class Solution {

    public int[] findOrder(int n, int[][] adj) {
        int[] indegree = new int[n];
        List<Integer>[] lis = new ArrayList[n];
        for (int i = 0; i < n; i++) lis[i] = new ArrayList<>();
        for (int[] x : adj) {
            lis[x[0]].add(x[1]);
            indegree[x[1]]++;
        }
        Queue<Integer> q = new LinkedList<>();
        List<Integer> res = new ArrayList<>();
        for (int i = 0; i < n; i++) if (indegree[i] == 0)
            q.offer(i);
        while (!q.isEmpty()) {
            int node = q.poll();
            res.add(0, node);
            for (int x : lis[node]) {
                indegree[x]--;
                if (indegree[x] == 0)
                    q.offer(x);
            }
        }
        int[] resp = new int[n];
        if (res.size() == n) {
            for (int i = 0; i < n; i++) resp[i] = res.get(i);
            return resp;
        }
        return new int[] {};
    }
}
