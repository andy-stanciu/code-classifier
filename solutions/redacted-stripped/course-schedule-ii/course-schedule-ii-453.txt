class Solution {

    public int[] findOrder(int V, int[][] pre) {
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < V; i++) {
            adj.add(new ArrayList<>());
        }
        for (int i = 0; i < pre.length; i++) {
            adj.get(pre[i][1]).add(pre[i][0]);
        }
        int[] arr = new int[V];
        for (int i = 0; i < V; i++) {
            for (int j : adj.get(i)) {
                arr[j] = arr[j] + 1;
            }
        }
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 0)
                q.offer(i);
        }
        int[] ans = new int[V];
        int i = 0;
        while (!q.isEmpty()) {
            int temp = q.peek();
            q.remove();
            ans[i] = temp;
            i++;
            for (int j : adj.get(temp)) {
                arr[j] = arr[j] - 1;
                if (arr[j] == 0) {
                    q.offer(j);
                }
            }
        }
        int[] ans2 = {};
        if (i == V)
            return ans;
        else
            return ans2;
    }
}
