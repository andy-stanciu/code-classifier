class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        int[] indegree = new int[param1];
        for (int[] prerequisite : prerequisites) {
            int var1 = prerequisite[0];
            int prereq = prerequisite[1];
            indegree[var1]++;
        }
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < param1; i++) {
            if (indegree[i] == 0) {
                q.add(i);
            }
        }
        int[] topo = new int[param1];
        int index = 0;
        while (!q.isEmpty()) {
            int node = q.poll();
            topo[index++] = node;
            for (int[] prerequisite : prerequisites) {
                if (prerequisite[1] == node) {
                    int var2 = prerequisite[0];
                    indegree[var2]--;
                    if (indegree[var2] == 0) {
                        q.add(var2);
                    }
                }
            }
        }
        if (index != param1) {
            return new int[0];
        }
        return topo;
    }
}
