class Solution {

    public int method1(TreeNode root) {
        int result = Integer.MIN_VALUE;
        Map<TreeNode, Integer> var1 = new HashMap<>();
        var1.put(null, 0);
        for (TreeNode node : topSort(root)) {
            int left = Math.max(var1.get(node.left), 0);
            int right = Math.max(var1.get(node.right), 0);
            var1.put(node, Math.max(left, right) + node.val);
            result = Math.max(left + right + node.val, result);
        }
        return result;
    }

    public Iterable<TreeNode> topSort(TreeNode root) {
        Deque<TreeNode> result = new LinkedList<>();
        if (root != null) {
            Deque<TreeNode> stack = new LinkedList<>();
            stack.push(root);
            while (!stack.isEmpty()) {
                TreeNode curr = stack.pop();
                result.push(curr);
                if (curr.right != null) {
                    stack.push(curr.right);
                }
                if (curr.left != null) {
                    stack.push(curr.left);
                }
            }
        }
        return result;
    }
}
