public class Solution {

    private final int var1 = Integer.MIN_VALUE;

    private final int var2 = 0;

    public int method1(TreeNode root) {
        int[] arrayWithResult = { var1 };
        postOrderDfs(root, arrayWithResult);
        return arrayWithResult[0];
    }

    private int postOrderDfs(TreeNode node, int[] arrayWithResult) {
        if (node == null) {
            return var1;
        }
        int maxLeft = Math.max(var2, postOrderDfs(node.left, arrayWithResult));
        int maxRight = Math.max(var2, postOrderDfs(node.right, arrayWithResult));
        int nodeAsStartOrTerminationNodeScenario = Math.max(maxLeft, maxRight) + node.val;
        int var3 = maxLeft + node.val + maxRight;
        int var4 = Math.max(var3, nodeAsStartOrTerminationNodeScenario);
        if (var4 > arrayWithResult[0]) {
            arrayWithResult[0] = var4;
        }
        return nodeAsStartOrTerminationNodeScenario;
    }
}
