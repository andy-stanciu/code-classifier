class Solution {

    public int method1(TreeNode root) {
        Stack<Integer> st = new Stack<Integer>();
        st.add(root.val);
        method1(root, st);
        return st.peek();
    }

    public int method1(TreeNode root, Stack<Integer> re) {
        if (root.left == null && root.right == null)
            return root.val;
        int left = 0;
        int right = 0;
        int max = root.val;
        if (root.left != null) {
            left = method1(root.left, re);
            max = Math.max(max, left);
            max = Math.max(max, left + root.val);
        }
        if (root.right != null) {
            right = method1(root.right, re);
            max = Math.max(max, right);
            max = Math.max(max, right + root.val);
        }
        if (root.right != null && root.left != null)
            max = Math.max(max, right + left + root.val);
        int currentRe = Math.max(max, re.pop());
        re.add(currentRe);
        return Math.max(Math.max(left + root.val, right + root.val), root.val);
    }
}
