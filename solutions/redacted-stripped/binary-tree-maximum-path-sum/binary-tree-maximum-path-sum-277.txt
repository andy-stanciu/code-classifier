class Solution {

    Integer[] var1 = new Integer[1];

    public int method1(TreeNode root) {
        var1[0] = Integer.MIN_VALUE;
        if (root == null) {
            return 0;
        }
        Integer res = dfs(root);
        return var1[0] > res ? var1[0] : res;
    }

    public Integer dfs(TreeNode root) {
        if (root.left == null && root.right == null) {
            var1[0] = var1[0] > root.val ? var1[0] : root.val;
            return root.val;
        }
        int leftVal = 0;
        int rightVal = 0;
        if (root.left != null) {
            leftVal = dfs(root.left);
        }
        if (root.right != null) {
            rightVal = dfs(root.right);
        }
        int var2 = root.val + leftVal + rightVal;
        int var3 = root.val + leftVal;
        int var4 = root.val + rightVal;
        var1[0] = var1[0] > root.val ? var1[0] : root.val;
        var1[0] = var1[0] > var2 ? var1[0] : var2;
        var1[0] = var1[0] > var3 ? var1[0] : var3;
        var1[0] = var1[0] > var4 ? var1[0] : var4;
        int max1 = Math.max(root.val, var3);
        return Math.max(max1, var4);
    }
}
