class Solution {

    public List<Integer> method1(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        Stack<TreeNode> stk = new Stack<>();
        Stack<Boolean> visited = new Stack<>();
        stk.push(root);
        visited.push(false);
        while (!stk.isEmpty()) {
            TreeNode curr = stk.pop();
            Boolean isVisited = visited.pop();
            if (curr != null) {
                if (isVisited)
                    res.add(curr.val);
                else {
                    stk.push(curr);
                    visited.push(true);
                    stk.push(curr.right);
                    visited.push(false);
                    stk.push(curr.left);
                    visited.push(false);
                }
            }
        }
        return res;
    }

    void method2(TreeNode curr, List<Integer> list) {
        if (curr == null)
            return;
        method2(curr.left, list);
        method2(curr.right, list);
        list.add(curr.val);
    }
}
