class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> list = new ArrayList<>();
        backtrack(n, k, list, new ArrayList<>(), 1);
        return list;
    }

    public void backtrack(int n, int k, List<List<Integer>> list, List<Integer> current, int index) {
        if (current.size() == k) {
            list.add(new ArrayList<>(current));
            return;
        }
        for (int i = index; i <= n; i++) {
            if (!current.contains(new Integer(i))) {
                current.add(i);
                backtrack(n, k, list, current, i + 1);
                current.remove(current.size() - 1);
            }
        }
    }
}
