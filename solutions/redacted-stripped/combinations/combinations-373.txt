class Solution {

    List<List<Integer>> result;

    int k, n;

    public List<List<Integer>> combine(int n, int k) {
        this.result = new ArrayList<>();
        this.n = n;
        this.k = k;
        recurse(new ArrayList<>(), 1);
        return result;
    }

    private void recurse(ArrayList<Integer> current, int start) {
        if (current.size() + (n - start) < k - 1) {
            return;
        }
        if (current.size() == k) {
            result.add(new ArrayList<>(current));
            return;
        }
        for (int i = start; i <= n; i++) {
            current.add(i);
            recurse(current, i + 1);
            current.remove(current.size() - 1);
        }
    }
}
