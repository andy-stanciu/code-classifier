class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> list = Combination(n, k);
        return list;
    }

    public List<List<Integer>> Combination(int n, int k) {
        List<List<Integer>> ans = new ArrayList<>();
        if (n < k)
            return ans;
        Recursive(ans, n, k, new ArrayList<>(), 1);
        return ans;
    }

    public void Recursive(List<List<Integer>> list, int n, int k, List<Integer> dummy, int start) {
        if (dummy.size() == k) {
            list.add(new ArrayList<>(dummy));
            return;
        }
        for (int i = start; i <= n; i++) {
            dummy.add(i);
            Recursive(list, n, k, dummy, i + 1);
            dummy.remove(dummy.size() - 1);
        }
    }
}
