class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> combine(int n, int k) {
        dfs(n, k, 1, new ArrayList<>());
        return result;
    }

    private void dfs(int n, int k, int start, List<Integer> sub) {
        if (sub.size() == k) {
            result.add(new ArrayList<>(sub));
            return;
        }
        for (int i = start; i <= n; i++) {
            sub.add(i);
            dfs(n, k, i + 1, sub);
            sub.remove(sub.size() - 1);
        }
    }
}
