class Solution {

    List<List<Integer>> anslist;

    public List<List<Integer>> combine(int n, int k) {
        anslist = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        for (int i = 1; i <= n - k + 1; i++) {
            list.add(i);
            dfs(i, list, k, n);
            list.remove(list.size() - 1);
        }
        return anslist;
    }

    private void dfs(int idx, List<Integer> list, int k, int n) {
        if (list.size() == k) {
            anslist.add(new ArrayList<>(list));
            return;
        }
        for (int i = idx + 1; i <= n; i++) {
            list.add(i);
            dfs(i, list, k, n);
            list.remove(list.size() - 1);
        }
    }
}
