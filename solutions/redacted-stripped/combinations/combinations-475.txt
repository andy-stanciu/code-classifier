class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> list = new ArrayList<>();
        int[] nums = new int[n];
        int d = 1;
        int i = 0;
        while (n != i) {
            nums[i] = d;
            i++;
            d++;
        }
        helper(nums, 0, k, new ArrayList<>(), list);
        return list;
    }

    public static void helper(int[] nums, int idx, int k, List<Integer> list1, List<List<Integer>> list) {
        if (idx == nums.length) {
            if (k == 0) {
                list.add(new ArrayList(list1));
            }
            return;
        }
        list1.add(nums[idx]);
        helper(nums, idx + 1, k - 1, list1, list);
        list1.remove(list1.size() - 1);
        helper(nums, idx + 1, k, list1, list);
    }
}
