class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, n, 1, k, new ArrayList<>());
        return result;
    }

    public void backtrack(List<List<Integer>> result, int n, int start, int k, List<Integer> current) {
        if (k == 0) {
            result.add(List.copyOf(current));
            return;
        }
        for (int i = start; i < n + 1; i++) {
            current.add(i);
            backtrack(result, n, i + 1, k - 1, current);
            current.removeLast();
        }
    }
}
