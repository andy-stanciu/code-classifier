class Solution {

    List<List<Integer>> result = new ArrayList<>();

    private int n2, k2;

    public List<List<Integer>> combine(int n, int k) {
        n2 = n;
        k2 = k;
        recursion(new ArrayList<>(), 1);
        return result;
    }

    private void recursion(List<Integer> comb, int start) {
        if (comb.size() == k2) {
            result.add(new ArrayList<>(comb));
            return;
        }
        for (int i = start; i <= n2; i++) {
            comb.add(i);
            recursion(comb, i + 1);
            comb.remove(comb.size() - 1);
        }
    }
}
