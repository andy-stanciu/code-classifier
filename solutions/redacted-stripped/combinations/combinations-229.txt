class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> globalRes = new ArrayList<>();
        List<Integer> currRes = new ArrayList<>();
        helper(1, k, n, currRes, globalRes);
        return globalRes;
    }

    public void helper(int index, int k, int n, List<Integer> currRes, List<List<Integer>> globalRes) {
        if (k == 0) {
            List<Integer> temp = new ArrayList<>(currRes);
            globalRes.add(temp);
            return;
        }
        for (int i = index; i <= n - k + 1; i++) {
            currRes.add(i);
            helper(i + 1, k - 1, n, currRes, globalRes);
            currRes.remove(currRes.size() - 1);
        }
    }
}
