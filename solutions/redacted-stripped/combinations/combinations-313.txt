class Solution {

    static List<List<Integer>> list = new ArrayList<>();

    static void sub(int idx, int n, int k, int[] temp, int[] arr, int count) {
        if (count == k) {
            List<Integer> l = new ArrayList<>();
            for (int i = 0; i < k; i++) {
                l.add(temp[i]);
            }
            list.add(l);
            return;
        }
        if (idx == n) {
            return;
        }
        temp[count] = arr[idx];
        sub(idx + 1, n, k, temp, arr, count + 1);
        sub(idx + 1, n, k, temp, arr, count);
    }

    public List<List<Integer>> combine(int n, int k) {
        list.clear();
        int[] arr = new int[n];
        int idx = 0;
        for (int i = 1; i <= n; i++) {
            arr[idx] = i;
            idx++;
        }
        int[] temp = new int[n];
        sub(0, n, k, temp, arr, 0);
        return list;
    }
}
