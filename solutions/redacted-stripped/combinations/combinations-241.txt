class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> results = new ArrayList<>();
        if (n < k) {
            return results;
        }
        backtracking(1, n, k, new ArrayList<>(), results);
        return results;
    }

    private void backtracking(int start, int n, int k, List<Integer> currentList, List<List<Integer>> results) {
        if (k == 0) {
            results.add(new ArrayList<>(currentList));
        }
        for (int i = start; i <= n; i++) {
            currentList.add(i);
            backtracking(i + 1, n, k - 1, currentList, results);
            currentList.remove(currentList.size() - 1);
        }
    }
}
