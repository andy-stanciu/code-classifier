class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> list = new ArrayList<>();
        int[] arr = new int[n];
        ArrayList<Integer> al = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            arr[i] = i + 1;
        }
        subset(0, arr, al, k, list);
        return list;
    }

    static void subset(int i, int[] arr, ArrayList<Integer> al, int k, List<List<Integer>> list) {
        if (i >= arr.length) {
            if (al.size() == k) {
                list.add(new ArrayList<>(al));
            }
            return;
        }
        if (al.size() < k) {
            al.add(arr[i]);
            subset(i + 1, arr, al, k, list);
            al.remove(al.size() - 1);
        }
        subset(i + 1, arr, al, k, list);
    }
}
