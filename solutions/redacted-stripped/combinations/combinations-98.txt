class Solution {

    public void helper(List<List<Integer>> allCombination, ArrayList<Integer> newCombination, int start, int n, int k) {
        if (newCombination.size() == k) {
            allCombination.add(new ArrayList<>(newCombination));
            return;
        }
        for (int i = start; i <= n; i++) {
            newCombination.add(i);
            helper(allCombination, newCombination, i + 1, n, k);
            newCombination.remove(newCombination.size() - 1);
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> allCombination = new ArrayList<>();
        helper(allCombination, new ArrayList<>(), 1, n, k);
        return allCombination;
    }
}
