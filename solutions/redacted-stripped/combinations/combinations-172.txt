class Solution {

    public List<List<Integer>> combine(int n, int k) {
        int[] buffer = new int[k];
        List<List<Integer>> results = new ArrayList<>();
        traverse(k, 0, 1, n, buffer, results);
        return results;
    }

    private static void traverse(int k, int idx, int min, int max, int[] buffer, List<List<Integer>> results) {
        if (idx == k) {
            List<Integer> result = new ArrayList<>(k);
            for (int i = 0; i < k; i++) {
                result.add(buffer[i]);
            }
            results.add(result);
            return;
        }
        if (k - idx <= max - min + 1) {
            for (int i = min; i <= max; i++) {
                buffer[idx] = i;
                traverse(k, idx + 1, i + 1, max, buffer, results);
            }
        }
    }
}
