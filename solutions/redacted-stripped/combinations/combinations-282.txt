class Solution {

    void rec(int index, int true_count, int k, int n, boolean[] nums, List<List<Integer>> param1) {
        if (true_count == k) {
            List<Integer> combi = new ArrayList<>();
            for (int i = 1; i <= n; i++) {
                if (nums[i]) {
                    combi.add(i);
                }
            }
            param1.add(combi);
            return;
        }
        if (index <= n) {
            nums[index] = true;
            rec(index + 1, true_count + 1, k, n, nums, param1);
            nums[index] = false;
            rec(index + 1, true_count, k, n, nums, param1);
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> param1 = new ArrayList<>();
        boolean[] nums = new boolean[n + 1];
        rec(1, 0, k, n, nums, param1);
        return param1;
    }
}
