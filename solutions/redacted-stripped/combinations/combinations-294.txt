class Solution {

    public List<List<Integer>> combine(int n, int k) {
        int[] nums = new int[n];
        for (int i = 0; i < nums.length; i++) nums[i] = i + 1;
        List<List<Integer>> ans = new ArrayList<>();
        findCombination(nums, 0, ans, k, new ArrayList<>());
        return ans;
    }

    void findCombination(int[] nums, int idx, List<List<Integer>> ans, int k, List<Integer> combList) {
        if (combList.size() == k) {
            ans.add(new ArrayList<>(combList));
            return;
        }
        for (int i = idx; i < nums.length; i++) {
            combList.add(nums[i]);
            findCombination(nums, i + 1, ans, k, combList);
            combList.remove(combList.size() - 1);
        }
    }
}
