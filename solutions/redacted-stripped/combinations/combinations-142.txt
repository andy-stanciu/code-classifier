class Solution {

    private List<List<Integer>> rs;

    private List<Integer> curList;

    public void backtracking(int n, int k, int start) {
        if (curList.size() == k) {
            rs.add(new ArrayList<>(curList));
            return;
        }
        for (int i = start; i <= n; i++) {
            curList.add(i);
            backtracking(n, k, i + 1);
            curList.remove(curList.size() - 1);
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        rs = new ArrayList<>();
        curList = new ArrayList<>();
        backtracking(n, k, 1);
        return rs;
    }
}
