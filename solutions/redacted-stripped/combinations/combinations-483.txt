class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> combine(int n, int k) {
        backtrack(n, new ArrayList<>(), k, 1);
        return result;
    }

    public void backtrack(int n, List<Integer> path, int k, int start) {
        if (path.size() == k) {
            result.add(new ArrayList<>(path));
        }
        for (int i = start; i <= n; i++) {
            path.add(i);
            backtrack(n, path, k, i + 1);
            path.remove(path.size() - 1);
        }
    }
}
