class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new LinkedList<>();
        recurse(new LinkedList<>(), n, k, res);
        return res;
    }

    private void recurse(LinkedList<Integer> cur, int n, int k, List<List<Integer>> res) {
        if (cur.size() == k) {
            res.add(new LinkedList<>(cur));
            return;
        }
        var start = cur.isEmpty() ? 0 : cur.getLast();
        for (int i = start + 1; i <= n; i++) {
            cur.add(i);
            recurse(cur, n, k, res);
            cur.removeLast();
        }
    }
}
