class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> arrlist = new ArrayList<>();
        List<Integer> currList = new ArrayList<>();
        Backtrack(arrlist, currList, n, k, 1);
        return arrlist;
    }

    private void Backtrack(List<List<Integer>> arrlist, List<Integer> currList, int n, int k, int start) {
        if (currList.size() == k) {
            arrlist.add(new ArrayList<>(currList));
            return;
        } else {
            for (int i = start; i <= n; i++) {
                currList.add(i);
                Backtrack(arrlist, currList, n, k, i + 1);
                currList.remove(currList.size() - 1);
            }
        }
    }
}
