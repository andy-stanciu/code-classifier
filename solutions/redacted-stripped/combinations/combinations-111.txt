class Solution {

    public static List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<>(), n, k);
        return result;
    }

    private static void backtrack(List<List<Integer>> result, List<Integer> tempList, int n, int k) {
        if (k == 0) {
            result.add(new ArrayList<>(tempList));
            return;
        }
        if (n == 0) {
            return;
        }
        tempList.add(n);
        backtrack(result, tempList, n - 1, k - 1);
        tempList.remove(tempList.size() - 1);
        backtrack(result, tempList, n - 1, k);
    }
}
