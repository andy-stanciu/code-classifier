public class Solution {

    public boolean method1(ListNode head) {
        if (head == null)
            return false;
        ListNode s = head;
        ListNode f = head.next;
        while (s != f) {
            if (f == null || f.next == null)
                return false;
            s = s.next;
            f = f.next.next;
        }
        return true;
    }
}

class Solution2 {

    public boolean method1(ListNode head) {
        Set<ListNode> visited = new HashSet<>();
        while (head != null) {
            if (!visited.add(head)) {
                return true;
            }
            head = head.next;
        }
        return false;
    }
}

class Solution3 {

    public boolean method1(ListNode head) {
        while (head != null) {
            if (head.val == 1_000_000)
                return true;
            head.val = 1_000_000;
            head = head.next;
        }
        return false;
    }
}
