class Solution {

    public boolean canFinish(int param1, int[][] prerequisites) {
        int[] edge = new int[param1];
        List<Integer>[] adjacencyList = new ArrayList[param1];
        Arrays.setAll(adjacencyList, i -> new ArrayList<>());
        for (int[] v : prerequisites) {
            edge[v[0]]++;
            adjacencyList[v[1]].add(v[0]);
        }
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < param1; i++) {
            if (edge[i] == 0) {
                q.add(i);
            }
        }
        int var1 = 0;
        while (!q.isEmpty()) {
            int v = q.remove();
            var1++;
            for (int x : adjacencyList[v]) {
                edge[x]--;
                if (edge[x] == 0) {
                    q.add(x);
                }
            }
        }
        return var1 == param1;
    }
}
