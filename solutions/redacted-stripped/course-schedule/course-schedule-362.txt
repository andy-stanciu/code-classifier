class Solution {

    public boolean canFinish(int param1, int[][] prerequisites) {
        Queue<Integer> q = new LinkedList<>();
        int[] ind = new int[param1];
        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < param1; i++) {
            adj.add(new ArrayList());
        }
        for (int i = 0; i < prerequisites.length; i++) {
            int x = prerequisites[i][0];
            int y = prerequisites[i][1];
            adj.get(x).add(y);
            ind[y]++;
        }
        for (int i = 0; i < param1; i++) {
            if (ind[i] == 0)
                q.add(i);
        }
        while (!q.isEmpty()) {
            int a = q.poll();
            for (int i : adj.get(a)) {
                ind[i]--;
                if (ind[i] == 0)
                    q.add(i);
            }
        }
        for (int i = 0; i < param1; i++) {
            if (ind[i] != 0)
                return false;
        }
        return true;
    }
}
