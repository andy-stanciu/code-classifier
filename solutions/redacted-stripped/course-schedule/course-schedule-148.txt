class Solution {

    boolean[] vis;

    boolean[] pathVis;

    public boolean rec(int c, ArrayList<ArrayList<Integer>> adj) {
        for (int i : adj.get(c)) {
            if (vis[i] && pathVis[i])
                return false;
            if (!vis[i]) {
                vis[i] = true;
                pathVis[i] = true;
                if (!rec(i, adj))
                    return false;
                pathVis[i] = false;
            }
        }
        return true;
    }

    public boolean canFinish(int param1, int[][] prerequisites) {
        vis = new boolean[param1];
        pathVis = new boolean[param1];
        ArrayList<ArrayList<Integer>> adj = new ArrayList<ArrayList<Integer>>();
        for (int i = 0; i < param1; i++) adj.add(new ArrayList<Integer>());
        for (int[] a : prerequisites) adj.get(a[1]).add(a[0]);
        vis[0] = true;
        pathVis[0] = true;
        for (int i = 0; i < param1; i++) {
            vis[i] = true;
            pathVis[i] = true;
            if (!rec(i, adj))
                return false;
            pathVis[i] = false;
        }
        return true;
    }
}
