class Solution {

    public boolean canFinish(int param1, int[][] prerequisites) {
        int k = param1;
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < param1; i++) {
            adj.add(new ArrayList<>());
        }
        int[] topobhai = new int[param1];
        for (int[] arr : prerequisites) {
            topobhai[arr[0]] += 1;
            adj.get(arr[1]).add(arr[0]);
        }
        for (int i = 0; i < param1; i++) {
            if (topobhai[i] == 0) {
                q.add(i);
                k--;
            }
        }
        while (!q.isEmpty()) {
            int curr = q.remove();
            for (int item : adj.get(curr)) {
                topobhai[item] -= 1;
                if (topobhai[item] == 0) {
                    q.add(item);
                    k--;
                }
            }
        }
        return k == 0;
    }
}
