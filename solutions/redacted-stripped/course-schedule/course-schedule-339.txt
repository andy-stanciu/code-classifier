class Solution {

    public boolean canFinish(int param1, int[][] prerequisites) {
        ArrayList[] list = new ArrayList[param1];
        for (int i = 0; i < param1; i++) {
            list[i] = new ArrayList<>();
        }
        for (int[] preQ : prerequisites) {
            list[preQ[0]].add(preQ[1]);
        }
        for (int i = 0; i < param1; i++) {
            if (isCircle(list, i, new HashSet<>())) {
                return false;
            }
        }
        return true;
    }

    public boolean isCircle(ArrayList[] list, int param2, HashSet<Integer> set) {
        if (set.contains(param2)) {
            return true;
        }
        if (list[param2].size() == 0) {
            return false;
        }
        set.add(param2);
        for (int i = 0; i < list[param2].size(); ++i) {
            if (isCircle(list, (int) list[param2].get(i), set))
                return true;
        }
        set.remove(param2);
        list[param2] = new ArrayList<>();
        return false;
    }
}
