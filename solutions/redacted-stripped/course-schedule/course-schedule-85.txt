class Solution {

    public boolean canFinish(int param1, int[][] prerequisites) {
        ArrayList<Integer>[] preq = new ArrayList[param1];
        int[] needTake = new int[param1];
        ArrayList<Integer> var1 = new ArrayList<>();
        for (int i = 0; i < prerequisites.length; i++) {
            int want = prerequisites[i][0];
            int first = prerequisites[i][1];
            if (preq[first] == null)
                preq[first] = new ArrayList<>();
            preq[first].add(want);
            needTake[want]++;
        }
        for (int i = 0; i < needTake.length; i++) {
            if (needTake[i] == 0)
                var1.add(i);
        }
        for (int i = 0; i < var1.size(); i++) {
            if (preq[var1.get(i)] != null) {
                for (int var2 : preq[var1.get(i)]) {
                    if (--needTake[var2] == 0)
                        var1.add(var2);
                }
            }
        }
        return var1.size() == param1;
    }
}
