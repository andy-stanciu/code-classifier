class Solution {

    public String method1(String s, String t) {
        if (s.length() < t.length()) {
            return "";
        }
        int i = 0;
        int j = 0;
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        for (int k = 0; k < t.length(); k++) {
            map.put(t.charAt(k), map.getOrDefault(t.charAt(k), 0) + 1);
        }
        int sizeS = s.length();
        int sizeT = t.length();
        int count = map.size();
        int min = Integer.MAX_VALUE;
        int start = 0;
        while (j < sizeS) {
            if (map.containsKey(s.charAt(j))) {
                map.put(s.charAt(j), map.get(s.charAt(j)) - 1);
                if (map.get(s.charAt(j)) == 0) {
                    count--;
                }
            }
            while (count == 0) {
                if (min > j - i + 1) {
                    min = j - i + 1;
                    start = i;
                }
                if (map.containsKey(s.charAt(i))) {
                    map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
                    if (map.get(s.charAt(i)) > 0) {
                        count++;
                    }
                }
                i++;
            }
            j++;
        }
        return min == Integer.MAX_VALUE ? "" : s.substring(start, start + min);
    }
}
