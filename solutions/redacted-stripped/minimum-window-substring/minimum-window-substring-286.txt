class Solution {

    public String method1(String s, String t) {
        int m = s.length();
        Map<Character, Integer> tmap = new HashMap<>();
        Map<Character, Integer> smap = new HashMap<>();
        for (char a : t.toCharArray()) {
            tmap.put(a, tmap.getOrDefault(a, 0) + 1);
        }
        int required = tmap.size();
        int formed = 0;
        int i = 0, j = 0;
        int low = 0, high = 0, length = Integer.MAX_VALUE;
        while (j < m) {
            char c = s.charAt(j);
            if (tmap.containsKey(c)) {
                smap.put(c, smap.getOrDefault(c, 0) + 1);
                if (smap.get(c).intValue() == tmap.get(c).intValue())
                    formed++;
            }
            while (formed == required) {
                if (j - i + 1 < length) {
                    length = j - i + 1;
                    low = i;
                    high = j + 1;
                }
                char temp = s.charAt(i);
                if (smap.containsKey(temp)) {
                    smap.put(temp, smap.get(temp) - 1);
                    if (smap.get(temp) < tmap.get(temp))
                        formed--;
                }
                i++;
            }
            j++;
        }
        return s.substring(low, high);
    }
}
