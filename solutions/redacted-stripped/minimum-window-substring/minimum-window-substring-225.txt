class Solution {

    public String method1(String s, String t) {
        int i = 0, j = 0;
        HashMap<Character, Integer> map = new HashMap();
        for (int c = 0; c < t.length(); c++) {
            char ch = t.charAt(c);
            if (map.containsKey(ch))
                map.put(ch, map.get(ch) + 1);
            else
                map.put(ch, 1);
        }
        int count = map.size();
        int min = Integer.MAX_VALUE;
        int start = 0;
        while (j < s.length()) {
            char ch1 = s.charAt(j);
            if (map.containsKey(ch1)) {
                map.put(ch1, map.get(ch1) - 1);
                if (map.get(ch1) == 0) {
                    count--;
                }
            }
            while (count == 0) {
                if (min > j - i + 1) {
                    min = j - i + 1;
                    start = i;
                }
                if (map.containsKey(s.charAt(i))) {
                    map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
                    if (map.get(s.charAt(i)) > 0) {
                        count++;
                    }
                }
                i++;
            }
            j++;
        }
        if (min == Integer.MAX_VALUE)
            return "";
        return s.substring(start, start + min);
    }
}
