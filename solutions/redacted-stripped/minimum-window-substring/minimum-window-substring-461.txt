class Solution {

    public String method1(String s, String t) {
        if (s.length() < t.length())
            return "";
        Map<Character, Integer> map = new HashMap<>();
        for (char c : t.toCharArray()) map.put(c, map.getOrDefault(c, 0) + 1);
        int cnt = 0;
        int index = 0;
        int min = Integer.MAX_VALUE;
        int minIndex = 0;
        for (int i = 0; i < s.length(); i++) {
            if (map.containsKey(s.charAt(i))) {
                if (map.get(s.charAt(i)) > 0) {
                    cnt++;
                }
                map.put(s.charAt(i), map.get(s.charAt(i)) - 1);
            }
            if (cnt == t.length()) {
                while (index <= i && (!map.containsKey(s.charAt(index)) || map.get(s.charAt(index)) < 0)) {
                    if (map.containsKey(s.charAt(index))) {
                        map.put(s.charAt(index), map.get(s.charAt(index)) + 1);
                    }
                    index++;
                }
                if (min > i - index + 1) {
                    min = i - (minIndex = index) + 1;
                }
                if (map.containsKey(s.charAt(index))) {
                    map.put(s.charAt(index), map.get(s.charAt(index)) + 1);
                }
                cnt--;
                index++;
            }
        }
        return min == Integer.MAX_VALUE ? "" : s.substring(minIndex, min + minIndex);
    }
}
