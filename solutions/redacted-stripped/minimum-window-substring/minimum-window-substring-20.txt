class Solution {

    public String method1(String s, String t) {
        if (s == null || t == null || s.length() == 0 || t.length() == 0 || s.length() < t.length()) {
            return "";
        }
        HashMap<Character, Integer> map = new HashMap<>();
        for (char ch : t.toCharArray()) {
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        int count = map.size();
        int i = 0, j = 0;
        int leftIdx = 0;
        int min = Integer.MAX_VALUE;
        while (j < s.length()) {
            char ch = s.charAt(j);
            if (map.containsKey(ch)) {
                map.put(ch, map.get(ch) - 1);
                if (map.get(ch) == 0) {
                    count--;
                }
            }
            while (count == 0) {
                if (j - i + 1 < min) {
                    min = j - i + 1;
                    leftIdx = i;
                }
                char leftCh = s.charAt(i);
                if (map.containsKey(leftCh)) {
                    map.put(leftCh, map.get(leftCh) + 1);
                    if (map.get(leftCh) > 0) {
                        count++;
                    }
                }
                i++;
            }
            j++;
        }
        return (min == Integer.MAX_VALUE) ? "" : s.substring(leftIdx, leftIdx + min);
    }
}
