class Solution {

    public String method1(String s, String t) {
        if (t.length() > s.length())
            return "";
        HashMap<Character, Integer> mp = new HashMap<>();
        for (int i = 0; i < t.length(); i++) mp.put(t.charAt(i), mp.getOrDefault(t.charAt(i), 0) + 1);
        int i = 0, j = 0, n = s.length() + 1, m = mp.size();
        String res = "";
        while (j < s.length()) {
            if (mp.containsKey(s.charAt(j))) {
                mp.put(s.charAt(j), mp.get(s.charAt(j)) - 1);
                if (mp.get(s.charAt(j)) == 0)
                    m--;
            }
            if (m > 0)
                j++;
            else if (m == 0) {
                while (!mp.containsKey(s.charAt(i)) || mp.get(s.charAt(i)) < 0) {
                    if (mp.containsKey(s.charAt(i)))
                        mp.put(s.charAt(i), mp.get(s.charAt(i)) + 1);
                    i++;
                }
                if (j - i + 1 < n) {
                    n = j - i + 1;
                    res = s.substring(i, j + 1);
                }
                if (mp.containsKey(s.charAt(i))) {
                    mp.put(s.charAt(i), mp.get(s.charAt(i)) + 1);
                    if (mp.get(s.charAt(i)) == 1)
                        m++;
                }
                i++;
                j++;
            }
        }
        return res;
    }
}
