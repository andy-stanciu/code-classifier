class Solution {

    public String method1(String s, String t) {
        int sLen = s.length();
        int tLen = t.length();
        HashMap<Character, Integer> countMap = new HashMap<>();
        for (char c : t.toCharArray()) {
            countMap.put(c, countMap.getOrDefault(c, 0) + 1);
        }
        int start = 0;
        int end = 0;
        int maxLen = Integer.MAX_VALUE;
        int maxStart = 0;
        int maxEnd = 0;
        int count = countMap.size();
        while (end < sLen) {
            char tempCharEnd = s.charAt(end);
            if (countMap.containsKey(tempCharEnd)) {
                countMap.put(tempCharEnd, countMap.get(tempCharEnd) - 1);
                if (countMap.get(tempCharEnd) == 0) {
                    count--;
                }
            }
            while (count == 0) {
                if (maxLen > end - start + 1) {
                    maxLen = end - start + 1;
                    maxStart = start;
                    maxEnd = end + 1;
                }
                char tempCharStart = s.charAt(start);
                if (countMap.containsKey(tempCharStart)) {
                    countMap.put(tempCharStart, countMap.get(tempCharStart) + 1);
                    if (countMap.get(tempCharStart) > 0) {
                        count++;
                    }
                }
                start++;
            }
            end++;
        }
        return (s.substring(maxStart, maxEnd));
    }
}
