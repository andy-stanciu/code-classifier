class Solution {

    public static String method1(String s, String t) {
        Map<Character, Integer> targetMap = new HashMap<>();
        for (char c : t.toCharArray()) {
            targetMap.put(c, targetMap.getOrDefault(c, 0) + 1);
        }
        int required = targetMap.size();
        int left = 0, right = 0;
        int formed = 0;
        Map<Character, Integer> var1 = new HashMap<>();
        int[] ans = { -1, 0, 0 };
        while (right < s.length()) {
            char c = s.charAt(right);
            var1.put(c, var1.getOrDefault(c, 0) + 1);
            if (targetMap.containsKey(c) && var1.get(c).intValue() == targetMap.get(c).intValue()) {
                formed++;
            }
            while (left <= right && formed == required) {
                char ch = s.charAt(left);
                if (ans[0] == -1 || right - left + 1 < ans[0]) {
                    ans[0] = right - left + 1;
                    ans[1] = left;
                    ans[2] = right;
                }
                var1.put(ch, var1.get(ch) - 1);
                if (targetMap.containsKey(ch) && var1.get(ch).intValue() < targetMap.get(ch).intValue()) {
                    formed--;
                }
                left++;
            }
            right++;
        }
        return ans[0] == -1 ? "" : s.substring(ans[1], ans[2] + 1);
    }
}
