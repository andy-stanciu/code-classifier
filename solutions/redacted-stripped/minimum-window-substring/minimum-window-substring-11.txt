class Solution {

    public String method1(String s, String t) {
        int i = 0;
        int j = 0;
        int n = s.length();
        int m = t.length();
        int minLen = Integer.MAX_VALUE;
        ;
        HashMap<Character, Integer> map = new HashMap<>();
        int count = 0;
        int startInd = -1;
        for (int ind = 0; ind < m; ind++) {
            map.put(t.charAt(ind), map.getOrDefault(t.charAt(ind), 0) + 1);
        }
        while (j < n) {
            if (map.getOrDefault(s.charAt(j), 0) > 0) {
                count++;
            }
            map.put(s.charAt(j), map.getOrDefault(s.charAt(j), 0) - 1);
            while (count == m) {
                if (j - i + 1 < minLen) {
                    minLen = j - i + 1;
                    startInd = i;
                }
                map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
                if (map.get(s.charAt(i)) > 0) {
                    count--;
                }
                i++;
            }
            j++;
        }
        if (startInd == -1) {
            return "";
        }
        return s.substring(startInd, startInd + minLen);
    }
}
