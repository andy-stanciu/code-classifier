class Solution {

    public String method1(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        for (Character c : t.toCharArray()) map.put(c, map.getOrDefault(c, 0) + 1);
        int start = 0;
        int minDiff = Integer.MAX_VALUE;
        int subStrStart = 0;
        int count = 0;
        for (int end = 0; end < s.length(); end++) {
            if (map.containsKey(s.charAt(end))) {
                map.put(s.charAt(end), map.get(s.charAt(end)) - 1);
                if (map.get(s.charAt(end)) == 0) {
                    count++;
                }
            }
            while (count == map.size()) {
                if (end - start + 1 < minDiff) {
                    minDiff = end - start + 1;
                    subStrStart = start;
                }
                if (map.containsKey(s.charAt(start))) {
                    map.put(s.charAt(start), map.get(s.charAt(start)) + 1);
                    if (map.get(s.charAt(start)) > 0) {
                        count--;
                    }
                }
                start++;
            }
        }
        return minDiff != Integer.MAX_VALUE ? s.substring(subStrStart, subStrStart + minDiff) : "";
    }
}
