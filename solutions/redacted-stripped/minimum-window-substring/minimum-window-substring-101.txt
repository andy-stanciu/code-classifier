class Solution {

    public String method1(String s, String t) {
        int len_S = s.length();
        int len_T = t.length();
        int min = Integer.MAX_VALUE;
        Map<Character, Integer> map = new HashMap<>();
        int start = -1;
        for (char c : t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        int i = 0;
        int counter = 0;
        for (int j = 0; j < len_S; j++) {
            char currentChar = s.charAt(j);
            if (map.containsKey(currentChar)) {
                if (map.get(currentChar) > 0) {
                    counter++;
                }
                map.put(currentChar, map.get(currentChar) - 1);
            }
            while (counter >= len_T) {
                if (j - i + 1 < min) {
                    min = j - i + 1;
                    start = i;
                }
                char thisCurrentChar = s.charAt(i);
                if (map.containsKey(thisCurrentChar)) {
                    if (map.get(thisCurrentChar) == 0) {
                        counter--;
                    }
                    map.put(thisCurrentChar, map.get(thisCurrentChar) + 1);
                }
                i++;
            }
        }
        return start == -1 ? "" : s.substring(start, start + min);
    }
}
