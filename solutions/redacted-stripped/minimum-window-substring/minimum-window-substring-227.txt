class Solution {

    public String method1(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        for (char c : t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        int start = 0;
        int minLen = s.length() + 1;
        int subStart = 0;
        int matching = 0;
        for (int r = 0; r < s.length(); r++) {
            char c = s.charAt(r);
            if (map.containsKey(c)) {
                map.put(c, map.get(c) - 1);
                if (map.get(c) == 0)
                    matching += 1;
            }
            while (matching == map.size()) {
                if (minLen > r - start + 1) {
                    minLen = r - start + 1;
                    subStart = start;
                }
                char d = s.charAt(start);
                start += 1;
                if (map.containsKey(d)) {
                    if (map.get(d) == 0)
                        matching -= 1;
                    if (map.containsKey(d))
                        map.put(d, map.get(d) + 1);
                }
            }
        }
        if (minLen > s.length())
            return "";
        else
            return s.substring(subStart, subStart + minLen);
    }
}
