class Solution {

    public String method1(String s, String t) {
        String res = "";
        int sLen = s.length();
        int tLen = t.length();
        HashMap<Character, Integer> tMap = new HashMap<>();
        for (char c : t.toCharArray()) {
            tMap.put(c, tMap.getOrDefault(c, 0) + 1);
        }
        int num = 0;
        int left = 0;
        int minLength = Integer.MAX_VALUE;
        for (int right = 0; right < sLen; right++) {
            char rightKey = s.charAt(right);
            if (tMap.containsKey(rightKey)) {
                int rightValue = tMap.get(rightKey);
                if (rightValue > 0) {
                    num++;
                }
                tMap.put(rightKey, rightValue - 1);
            }
            while (left < right && num >= tLen) {
                char leftKey = s.charAt(left);
                if (tMap.containsKey(leftKey)) {
                    int leftValue = tMap.get(leftKey);
                    if (leftValue >= 0) {
                        break;
                    } else {
                        tMap.put(leftKey, leftValue + 1);
                    }
                }
                left++;
            }
            int curLength = right - left + 1;
            if (num >= tLen && curLength < minLength) {
                res = s.substring(left, right + 1);
                minLength = curLength;
            }
        }
        return res;
    }
}
