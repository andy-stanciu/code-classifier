public class Solution {

    public String method1(String s, String t) {
        if (s == null || t == null || s.length() == 0 || t.length() == 0 || s.length() < t.length()) {
            return "";
        }
        int[] map = new int[128];
        int required = t.length();
        int left = 0, right = 0;
        int minLen = Integer.MAX_VALUE;
        int startIndex = 0;
        for (char c : t.toCharArray()) {
            map[c]++;
        }
        while (right < s.length()) {
            if (map[s.charAt(right)] > 0) {
                required--;
            }
            map[s.charAt(right)]--;
            right++;
            while (required == 0) {
                if (right - left < minLen) {
                    minLen = right - left;
                    startIndex = left;
                }
                map[s.charAt(left)]++;
                if (map[s.charAt(left)] > 0) {
                    required++;
                }
                left++;
            }
        }
        return minLen == Integer.MAX_VALUE ? "" : s.substring(startIndex, startIndex + minLen);
    }
}
