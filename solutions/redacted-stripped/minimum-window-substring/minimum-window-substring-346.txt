class Solution {

    public String method1(String s, String t) {
        if (t.length() > s.length())
            return "";
        HashMap<Character, Integer> t_map = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            t_map.put(t.charAt(i), t_map.getOrDefault(t.charAt(i), 0) + 1);
        }
        int i = 0;
        int j = 0;
        int mct = 0;
        int dmct = t.length();
        String ans = "";
        HashMap<Character, Integer> map = new HashMap<>();
        while (true) {
            boolean flag1 = false;
            boolean flag2 = false;
            while (i < s.length() && mct < dmct) {
                map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
                if (map.get(s.charAt(i)) <= t_map.getOrDefault(s.charAt(i), 0))
                    mct++;
                flag1 = true;
                i++;
            }
            while (j < i && mct == dmct) {
                String new_ans = s.substring(j, i);
                if (ans.length() == 0 || new_ans.length() < ans.length())
                    ans = new_ans;
                map.put(s.charAt(j), map.get(s.charAt(j)) - 1);
                if (map.getOrDefault(s.charAt(j), 0) < t_map.getOrDefault(s.charAt(j), 0))
                    mct--;
                flag2 = true;
                j++;
            }
            if (flag1 == false && flag2 == false)
                break;
        }
        return ans;
    }
}
