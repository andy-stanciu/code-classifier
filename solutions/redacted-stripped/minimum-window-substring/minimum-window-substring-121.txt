class Solution {

    public String method1(String s, String t) {
        HashMap<Character, Integer> mapT = new HashMap<>();
        int left = 0, right = 0, count = 0, startIdx = -1;
        String st = "";
        int minLen = Integer.MAX_VALUE;
        for (int i = 0; i < t.length(); i++) {
            int cnt = mapT.getOrDefault(t.charAt(i), 0);
            mapT.put(t.charAt(i), cnt + 1);
        }
        while (right < s.length()) {
            char c = s.charAt(right);
            if (mapT.containsKey(c) && mapT.get(c) > 0) {
                count++;
            }
            mapT.put(c, mapT.getOrDefault(c, 0) - 1);
            while (count == t.length()) {
                if (right - left + 1 < minLen) {
                    minLen = right - left + 1;
                    startIdx = left;
                }
                char leftCh = s.charAt(left);
                mapT.put(leftCh, mapT.get(leftCh) + 1);
                if (mapT.get(leftCh) > 0) {
                    count--;
                }
                left++;
            }
            right++;
        }
        if (startIdx == -1) {
            return st;
        }
        return s.substring(startIdx, startIdx + minLen);
    }
}
