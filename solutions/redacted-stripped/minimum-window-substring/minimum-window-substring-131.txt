class Solution {

    public String method1(String s, String t) {
        if (t.length() > s.length())
            return "";
        HashMap<Character, Integer> feqMap = new HashMap<Character, Integer>();
        for (char c : t.toCharArray()) {
            feqMap.put((char) c, feqMap.getOrDefault((char) c, 0) + 1);
        }
        int i, j, minStart, count, n, minlen;
        i = j = minStart = 0;
        count = t.length();
        n = s.length();
        minlen = Integer.MAX_VALUE;
        char[] sArr = s.toCharArray();
        while (j < n) {
            char c = (char) sArr[j];
            if (feqMap.get(c) != null && feqMap.get(c) > 0) {
                count--;
            }
            feqMap.put(c, feqMap.getOrDefault(c, 0) - 1);
            j++;
            while (count == 0) {
                if (j - i < minlen) {
                    minStart = i;
                    minlen = j - i;
                }
                c = (char) sArr[i];
                feqMap.put(c, feqMap.get(c) + 1);
                if (feqMap.get(c) > 0) {
                    count++;
                }
                i++;
            }
        }
        return (minlen != Integer.MAX_VALUE ? s.substring(minStart, minStart + minlen) : "");
    }
}
