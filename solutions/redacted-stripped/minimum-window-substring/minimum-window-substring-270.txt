class Solution {

    public String method1(String s, String t) {
        if (t.length() > s.length())
            return "";
        HashMap<Character, Integer> freq = new HashMap<>();
        HashMap<Character, Integer> var1 = new HashMap<>();
        int need = t.length();
        for (int i = 0; i < t.length(); i++) {
            char letter = t.charAt(i);
            freq.put(letter, freq.getOrDefault(letter, 0) + 1);
            var1.put(letter, 0);
        }
        int var2 = 0;
        int var3 = s.length();
        int[] var4 = new int[2];
        int have = 0;
        for (int var5 = 0; var5 < s.length(); var5++) {
            if (need != have) {
                char letter = s.charAt(var5);
                if (var1.containsKey(letter)) {
                    var1.put(letter, var1.get(letter) + 1);
                    if (var1.get(letter) <= freq.get(letter)) {
                        have++;
                    }
                }
            }
            while (need == have && var2 <= var5) {
                if ((var5 - var2 + 1) <= var3) {
                    var3 = var5 - var2 + 1;
                    var4[0] = var2;
                    var4[1] = var5 + 1;
                }
                char ch = s.charAt(var2);
                if (var1.containsKey(ch)) {
                    var1.put(ch, var1.get(ch) - 1);
                    if (var1.get(ch) < freq.get(ch)) {
                        have--;
                    }
                }
                var2++;
            }
        }
        return s.substring(var4[0], var4[1]);
    }
}
