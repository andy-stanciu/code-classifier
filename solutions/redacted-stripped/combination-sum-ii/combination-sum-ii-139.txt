class Solution {

    public void backtrack(int[] candidates, int target, int index, List<Integer> temp, List<List<Integer>> ans, int param1) {
        if (index > candidates.length || param1 > target)
            return;
        if (param1 == target) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int j = index; j < candidates.length; j++) {
            if (j > index && candidates[j] == candidates[j - 1]) {
                continue;
            }
            temp.add(candidates[j]);
            backtrack(candidates, target, j + 1, temp, ans, param1 + candidates[j]);
            temp.remove(temp.size() - 1);
        }
        return;
    }

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        backtrack(candidates, target, 0, new ArrayList<>(), ans, 0);
        return ans;
    }
}
