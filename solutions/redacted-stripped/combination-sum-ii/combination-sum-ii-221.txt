class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> combos = new ArrayList<>();
        Arrays.sort(candidates);
        helper(candidates, combos, target, 0, new ArrayList<>());
        return combos;
    }

    public void helper(int[] candidates, List<List<Integer>> combos, int target, int start, List<Integer> currCombo) {
        if (target == 0) {
            combos.add(new ArrayList<>(currCombo));
            return;
        }
        for (int i = start; i < candidates.length; i++) {
            if (i > start && candidates[i] == candidates[i - 1]) {
                continue;
            }
            if (target - candidates[i] < 0) {
                break;
            }
            currCombo.add(candidates[i]);
            helper(candidates, combos, target - candidates[i], i + 1, currCombo);
            currCombo.remove(currCombo.size() - 1);
        }
    }
}
