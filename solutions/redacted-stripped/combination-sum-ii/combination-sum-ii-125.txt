class Solution {

    public List<List<Integer>> method1(int[] nums, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        Arrays.sort(nums);
        backtrack(nums, target, 0, ans, list);
        return ans;
    }

    private void backtrack(int[] nums, int target, int i, List<List<Integer>> ans, List<Integer> list) {
        if (target == 0) {
            ans.add(new ArrayList<>(list));
        }
        if (i == nums.length || nums[i] > target) {
            return;
        }
        if (nums[i] <= target) {
            list.add(nums[i]);
            backtrack(nums, target - nums[i], i + 1, ans, list);
            list.remove(list.size() - 1);
        }
        while (i + 1 < nums.length && nums[i] == nums[i + 1]) i++;
        backtrack(nums, target, i + 1, ans, list);
    }
}
