class Solution {

    List<List<Integer>> ans;

    int incre(int[] arr, int i) {
        do {
            i++;
        } while (i < arr.length && arr[i] == arr[i - 1]);
        return i;
    }

    void solve(int[] arr, int i, int target, List<Integer> temp) {
        if (target == 0) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        if (i >= arr.length || target < 0)
            return;
        temp.add(arr[i]);
        System.out.println(temp);
        solve(arr, i + 1, target - arr[i], temp);
        temp.remove(temp.size() - 1);
        solve(arr, incre(arr, i), target, temp);
    }

    public List<List<Integer>> method1(int[] candidates, int target) {
        ans = new ArrayList<>();
        Arrays.sort(candidates);
        solve(candidates, 0, target, new ArrayList<Integer>());
        return ans;
    }
}
