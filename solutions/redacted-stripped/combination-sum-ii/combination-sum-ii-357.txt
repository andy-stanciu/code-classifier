class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(candidates);
        findAllComb(result, new ArrayList<>(), candidates, target, 0);
        return result;
    }

    public void findAllComb(List<List<Integer>> result, List<Integer> comb, int[] candidates, int target, int pos) {
        if (target == 0) {
            result.add(new ArrayList(comb));
        }
        for (int i = pos; i < candidates.length; i++) {
            if (i > pos && candidates[i] == candidates[i - 1]) {
                continue;
            }
            int minus = candidates[i] - target;
            if (minus > 0) {
                break;
            }
            comb.add(candidates[i]);
            findAllComb(result, comb, candidates, -minus, i + 1);
            comb.remove(comb.size() - 1);
        }
    }
}
