class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> ans = new ArrayList<>();
        backTrack(candidates, target, ans, new ArrayList<>(), 0);
        return ans;
    }

    private void backTrack(int[] candidates, int target, List<List<Integer>> ans, List<Integer> list, int start) {
        if (target < 0)
            return;
        if (target == 0) {
            ans.add(new ArrayList<>(list));
            return;
        }
        for (int i = start; i < candidates.length; i++) {
            if (i > start && candidates[i] == candidates[i - 1])
                continue;
            list.add(candidates[i]);
            backTrack(candidates, target - candidates[i], ans, list, i + 1);
            list.remove(list.size() - 1);
        }
    }
}
