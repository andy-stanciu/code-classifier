class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> res = new LinkedList<>();
        backTrack(res, new LinkedList<Integer>(), candidates, target, 0);
        return res;
    }

    void backTrack(List<List<Integer>> res, List<Integer> base, int[] arr, int target, int start) {
        int var1 = 0;
        for (int val : base) var1 += val;
        if (var1 == target)
            res.add(new LinkedList<Integer>(base));
        else if (var1 > target)
            return;
        for (int i = start; i < arr.length; i++) {
            if (i > start && arr[i] == arr[i - 1])
                continue;
            base.add(arr[i]);
            backTrack(res, base, arr, target, i + 1);
            base.removeLast();
        }
    }
}
