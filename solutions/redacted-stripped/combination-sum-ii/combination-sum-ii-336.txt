class Solution {

    List<List<Integer>> set;

    public List<List<Integer>> method1(int[] candidates, int target) {
        set = new ArrayList<>();
        Arrays.sort(candidates);
        dfs(candidates, target, new ArrayList<>(), 0);
        return set;
    }

    void dfs(int[] candidates, int target, List<Integer> list, int idx) {
        if (target == 0) {
            set.add(new ArrayList<>(list));
            return;
        }
        for (int i = idx; i < candidates.length; i++) {
            if (i > idx && candidates[i] == candidates[i - 1])
                continue;
            if (candidates[i] <= target) {
                list.add(candidates[i]);
                dfs(candidates, target - candidates[i], list, i + 1);
                list.remove(list.size() - 1);
            } else
                return;
        }
    }
}
