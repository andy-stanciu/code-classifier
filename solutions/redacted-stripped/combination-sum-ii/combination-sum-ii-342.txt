class Solution {

    private void backtrack(List<List<Integer>> resultList, List<Integer> tempList, int[] candidates, int target, int idx) {
        if (target == 0) {
            resultList.add(new ArrayList<>(tempList));
            return;
        }
        for (int i = idx; i < candidates.length; i++) {
            if (i > idx && candidates[i] == candidates[i - 1])
                continue;
            if (candidates[i] > target)
                break;
            tempList.add(candidates[i]);
            backtrack(resultList, tempList, candidates, target - candidates[i], i + 1);
            tempList.remove(tempList.size() - 1);
        }
    }

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> resultList = new ArrayList<>();
        Arrays.sort(candidates);
        backtrack(resultList, new ArrayList<>(), candidates, target, 0);
        return resultList;
    }
}
