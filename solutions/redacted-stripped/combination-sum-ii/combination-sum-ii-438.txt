class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> method1(int[] candidates, int target) {
        Arrays.sort(candidates);
        method2(candidates, target, new ArrayList<Integer>(), 0, 0);
        return result;
    }

    private void method2(int[] candidates, int target, List<Integer> ls, int param1, int idx) {
        if (param1 == target) {
            result.add(new ArrayList<Integer>(ls));
            return;
        }
        if (idx >= candidates.length || param1 > target)
            return;
        param1 += candidates[idx];
        ls.add(candidates[idx]);
        method2(candidates, target, ls, param1, idx + 1);
        param1 -= candidates[idx];
        ls.remove(ls.size() - 1);
        int i = 0;
        while (idx + i < candidates.length && candidates[idx] == candidates[idx + i]) i++;
        method2(candidates, target, ls, param1, idx + i);
    }
}
