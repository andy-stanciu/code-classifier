class Solution {

    private void method1(List<List<Integer>> res, int[] freq, int target, int i, List<Integer> list) {
        if (target == 0) {
            res.add(list);
            return;
        }
        while (i < 51 && freq[i] == 0) {
            i++;
        }
        if (i > target)
            return;
        if (i == 51)
            return;
        method1(res, freq, target, i + 1, list);
        for (int a = 1; a * i <= target && a <= freq[i]; a++) {
            List<Integer> newlist = new ArrayList<>(list);
            for (int b = 0; b < a; b++) {
                newlist.add(i);
            }
            method1(res, freq, target - (a * i), i + 1, newlist);
        }
    }

    public List<List<Integer>> method2(int[] candidates, int target) {
        int[] freq = new int[52];
        for (int c : candidates) {
            freq[c]++;
        }
        List<List<Integer>> res = new ArrayList<>();
        method1(res, freq, target, 0, new ArrayList<>());
        return res;
    }
}
