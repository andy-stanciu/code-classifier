class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ans1 = new ArrayList<>();
        helper(candidates, 0, target, ans, ans1);
        return ans;
    }

    public static void helper(int[] candidates, int index, int target, List<List<Integer>> ans, List<Integer> ans1) {
        if (candidates.length == index) {
            if (target == 0) {
                ans.add(new ArrayList(ans1));
            }
            return;
        }
        if (candidates[index] <= target) {
            ans1.add(candidates[index]);
            helper(candidates, index + 1, target - candidates[index], ans, ans1);
            ans1.remove(ans1.size() - 1);
        }
        int j = index + 1;
        while (j < candidates.length && candidates[j] == candidates[j - 1]) j++;
        helper(candidates, j, target, ans, ans1);
    }
}
