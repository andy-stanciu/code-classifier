class Solution {

    void getComb(int[] candidates, int target, List<List<Integer>> ans, List<Integer> tmp, int idx) {
        if (target == 0) {
            ans.add(new ArrayList<>(tmp));
            return;
        }
        if (target < 0 || idx >= candidates.length)
            return;
        for (int i = idx; i < candidates.length; i++) {
            if (i != idx && candidates[i] == candidates[i - 1]) {
                continue;
            }
            tmp.add(candidates[i]);
            getComb(candidates, target - candidates[i], ans, tmp, i + 1);
            tmp.remove(tmp.size() - 1);
        }
    }

    public List<List<Integer>> method1(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        getComb(candidates, target, ans, new ArrayList<>(), 0);
        return ans;
    }
}
