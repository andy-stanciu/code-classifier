class Solution {

    private List<Integer> makeIntegerList(String[] input) {
        List<Integer> ans = new ArrayList<>();
        for (int i = 0; i < input.length; i++) {
            if (input[i].equals(""))
                continue;
            ans.add(Integer.parseInt(input[i]));
        }
        return ans;
    }

    private void generateUniqueSubsets(int[] a, int i, int n, int param1, List<List<Integer>> ans, String asf) {
        if (param1 < 0)
            return;
        if (i == n) {
            if (param1 == 0)
                ans.add(makeIntegerList(asf.split(" ")));
            return;
        }
        generateUniqueSubsets(a, i + 1, n, param1 - a[i], ans, asf + a[i] + " ");
        while (i + 1 < n && a[i] == a[i + 1]) i += 1;
        generateUniqueSubsets(a, i + 1, n, param1, ans, asf + "");
    }

    public List<List<Integer>> method1(int[] a, int param1) {
        Arrays.sort(a);
        List<List<Integer>> ans = new ArrayList<>();
        generateUniqueSubsets(a, 0, a.length, param1, ans, "");
        return ans;
    }
}
