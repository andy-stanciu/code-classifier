class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<Integer> output = new ArrayList<>();
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(candidates);
        helper(0, candidates, target, output, res);
        return res;
    }

    private void helper(int i, int[] candidates, int target, List<Integer> output, List<List<Integer>> res) {
        if (target == 0) {
            res.add(new ArrayList<>(output));
            return;
        }
        if (target < 0 || i == candidates.length) {
            return;
        }
        output.add(candidates[i]);
        helper(i + 1, candidates, target - candidates[i], output, res);
        output.remove(output.size() - 1);
        int tmp = i;
        while (tmp + 1 < candidates.length && candidates[tmp] == candidates[tmp + 1]) {
            tmp++;
        }
        helper(tmp + 1, candidates, target, output, res);
    }
}
