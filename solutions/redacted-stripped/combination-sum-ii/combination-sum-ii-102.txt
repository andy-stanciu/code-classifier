class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        Arrays.sort(candidates);
        return method2(candidates, target, 0);
    }

    public List<List<Integer>> method2(int[] candidates, int target, int start) {
        List<List<Integer>> ans = new LinkedList<>();
        int n = candidates.length;
        if (target == 0) {
            ans.add(new LinkedList<>());
            return ans;
        }
        if (start >= n || target < 0) {
            return ans;
        }
        for (int i = start; i < n; i++) {
            if (i > start && candidates[i] == candidates[i - 1]) {
                continue;
            }
            List<List<Integer>> res = method2(candidates, target - candidates[i], i + 1);
            for (List<Integer> an : res) {
                an.add(candidates[i]);
                ans.add(an);
            }
        }
        return ans;
    }
}
