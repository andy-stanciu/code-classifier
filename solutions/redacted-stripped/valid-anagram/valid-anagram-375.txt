class Solution {

    public boolean method1(String s, String t) {
        if (s.isEmpty() || t.isEmpty()) {
            return false;
        }
        if (s.equalsIgnoreCase(t)) {
            return true;
        }
        if (t.length() != s.length()) {
            return false;
        }
        int min = Math.min(s.length() - 1, t.length() - 1);
        int g = min / 2 - 1;
        if (g > 0) {
            if (s.indexOf(t.charAt(g)) == -1) {
                return false;
            }
        }
        boolean same = sameOccurrence(s, t, s.charAt(0)) && sameOccurrence(s, t, s.charAt(min)) && sameOccurrence(s, t, s.charAt(min / 2));
        return same;
    }

    boolean sameOccurrence(String s, String t, char c) {
        int findex = t.indexOf(c);
        int sindex = s.indexOf(c);
        int count = 0;
        while (findex != -1 || sindex != -1) {
            if (findex != -1) {
                count++;
                findex = t.indexOf(c, findex + 1);
            }
            if (sindex != -1) {
                count--;
                sindex = s.indexOf(c, sindex + 1);
            }
        }
        return count == 0;
    }
}
