class Solution {

    private List<List<Integer>> list = new ArrayList<List<Integer>>();

    public void method1(TreeNode root, int param1, Stack<Integer> s) {
        s.push(root.val);
        if (root.left == null && root.right == null)
            if (param1 == root.val)
                list.add(new ArrayList<Integer>(s));
        if (root.left != null)
            method1(root.left, param1 - root.val, s);
        if (root.right != null)
            method1(root.right, param1 - root.val, s);
        s.pop();
    }

    public List<List<Integer>> method2(TreeNode root, int param2) {
        if (root == null)
            return list;
        Stack<Integer> s = new Stack<Integer>();
        method1(root, param2, s);
        return list;
    }
}
