class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        dfs(root, param1, new ArrayList<>(), result);
        return result;
    }

    private void dfs(TreeNode root, int param1, List<Integer> current, List<List<Integer>> result) {
        if (root == null) {
            return;
        }
        current.add(root.val);
        param1 -= root.val;
        if (root.left == null && root.right == null && param1 == 0) {
            result.add(new ArrayList<>(current));
        }
        dfs(root.left, param1, current, result);
        dfs(root.right, param1, current, result);
        current.remove(current.size() - 1);
    }
}
