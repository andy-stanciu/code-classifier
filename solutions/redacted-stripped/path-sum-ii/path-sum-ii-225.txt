class Solution {

    public void solve(TreeNode root, int param1, int param2, List<Integer> tempAns, List<List<Integer>> ans) {
        if (root == null) {
            return;
        }
        tempAns.add(root.val);
        solve(root.left, param1, param2 + root.val, tempAns, ans);
        solve(root.right, param1, param2 + root.val, tempAns, ans);
        if (root.left == null && root.right == null && param1 == param2 + root.val) {
            ans.add(new ArrayList<>(tempAns));
        }
        tempAns.remove(tempAns.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<Integer> tempAns = new ArrayList<>();
        List<List<Integer>> ans = new ArrayList<>();
        solve(root, param1, 0, tempAns, ans);
        return ans;
    }
}
