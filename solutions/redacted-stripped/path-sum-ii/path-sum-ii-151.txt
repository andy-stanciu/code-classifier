class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null) {
            return new ArrayList<>();
        }
        List<List<Integer>> method1 = new ArrayList<>();
        helper(root, 0, new ArrayList<>(), method1, param1);
        return method1;
    }

    public void helper(TreeNode root, int param2, List<Integer> nums, List<List<Integer>> method1, int param1) {
        param2 += root.val;
        nums.add(root.val);
        if (root.left == null && root.right == null && param2 == param1) {
            method1.add(new ArrayList<>(nums));
        }
        if (root.left != null) {
            helper(root.left, param2, nums, method1, param1);
        }
        if (root.right != null) {
            helper(root.right, param2, nums, method1, param1);
        }
        int indexForDelete = -1;
        for (int i = nums.size() - 1; i >= 0; i--) {
            if (nums.get(i) == root.val) {
                indexForDelete = i;
                break;
            }
        }
        if (indexForDelete != -1) {
            nums.remove(indexForDelete);
        }
    }
}
