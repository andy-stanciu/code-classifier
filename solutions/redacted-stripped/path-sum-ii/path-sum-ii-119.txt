class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null)
            return ans;
        dfs(root, param1, ans, new ArrayList<Integer>());
        return ans;
    }

    public void dfs(TreeNode root, int target, List<List<Integer>> ans, List<Integer> sub) {
        if (root.left == null && root.right == null && target == root.val) {
            sub.add(root.val);
            ans.add(new ArrayList<>(sub));
            sub.remove(sub.size() - 1);
            return;
        }
        sub.add(root.val);
        if (root.left != null)
            dfs(root.left, target - root.val, ans, sub);
        if (root.right != null)
            dfs(root.right, target - root.val, ans, sub);
        sub.remove(sub.size() - 1);
    }
}
