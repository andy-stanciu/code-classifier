class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        dfs(root, param1, list, temp);
        return list;
    }

    public void dfs(TreeNode root, int param1, List<List<Integer>> list, List<Integer> temp) {
        if (root == null)
            return;
        temp.add(root.val);
        if (root.left == null && root.right == null && root.val == param1) {
            List<Integer> t = new ArrayList<>(temp);
            list.add(t);
        }
        dfs(root.left, param1 - root.val, list, temp);
        dfs(root.right, param1 - root.val, list, temp);
        temp.remove(temp.size() - 1);
    }
}
