class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> smallAns = new ArrayList<>();
        calculate(root, param1, ans, smallAns);
        return ans;
    }

    private void calculate(TreeNode root, int param1, List<List<Integer>> ans, List<Integer> smallAns) {
        if (root == null) {
            return;
        } else if (root.left == null && root.right == null) {
            if (root.val == param1) {
                List<Integer> l = new ArrayList<>(smallAns);
                l.add(root.val);
                ans.add(l);
            }
            return;
        }
        smallAns.add(root.val);
        calculate(root.left, param1 - root.val, ans, smallAns);
        calculate(root.right, param1 - root.val, ans, smallAns);
        smallAns.remove(smallAns.size() - 1);
    }
}
