class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null)
            return ans;
        dfs(root, param1, ans, new ArrayList<>());
        return ans;
    }

    public void dfs(TreeNode root, int param2, List<List<Integer>> ans, List<Integer> list) {
        if (root == null)
            return;
        list.add(root.val);
        if (root.left == null && root.right == null && param2 - root.val == 0) {
            ans.add(new ArrayList<>(list));
        }
        dfs(root.left, param2 - root.val, ans, list);
        dfs(root.right, param2 - root.val, ans, list);
        list.remove(list.size() - 1);
    }
}
