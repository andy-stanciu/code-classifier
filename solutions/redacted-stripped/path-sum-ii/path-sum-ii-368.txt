class Solution {

    boolean method1(TreeNode root, int param1, List<Integer> list, List<List<Integer>> ans) {
        if (root == null)
            return true;
        if (root.val == param1 && root.left == null && root.right == null) {
            list.add(root.val);
            ans.add(new ArrayList<>(list));
            list.remove(list.size() - 1);
            return true;
        }
        list.add(root.val);
        boolean left = method1(root.left, param1 - root.val, list, ans);
        boolean right = method1(root.right, param1 - root.val, list, ans);
        list.remove(list.size() - 1);
        return left || right;
    }

    public List<List<Integer>> method2(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null)
            return ans;
        List<Integer> list = new ArrayList<Integer>();
        boolean result = method1(root, param1, list, ans);
        return ans;
    }
}
