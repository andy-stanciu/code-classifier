class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> var1 = new ArrayList<>();
        if (root == null)
            return res;
        dfs(root, res, var1, param1);
        return res;
    }

    public void dfs(TreeNode node, List<List<Integer>> res, List<Integer> var1, int param1) {
        if (node == null)
            return;
        var1.add(node.val);
        if (node.left == null && node.right == null && param1 == node.val) {
            res.add(new ArrayList<>(var1));
        } else {
            dfs(node.left, res, var1, param1 - node.val);
            dfs(node.right, res, var1, param1 - node.val);
        }
        var1.remove(var1.size() - 1);
    }
}
