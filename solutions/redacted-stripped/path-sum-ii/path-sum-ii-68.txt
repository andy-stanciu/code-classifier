class Solution {

    private void dfs(TreeNode node, int target, List<Integer> param1, List<List<Integer>> result) {
        if (node == null)
            return;
        param1.add(node.val);
        if (node.left == null && node.right == null && target == node.val)
            result.add(new ArrayList<>(param1));
        else {
            dfs(node.left, target - node.val, param1, result);
            dfs(node.right, target - node.val, param1, result);
        }
        param1.remove(param1.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param2) {
        List<Integer> param1 = new ArrayList<>();
        List<List<Integer>> result = new ArrayList<>();
        dfs(root, param2, param1, result);
        return result;
    }
}
