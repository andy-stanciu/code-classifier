class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> var1 = new ArrayList<>();
        dfs(root, ans, var1, 0, param1);
        return ans;
    }

    private void dfs(TreeNode root, List<List<Integer>> ans, List<Integer> var1, int param2, int param1) {
        if (root == null) {
            return;
        }
        param2 += root.val;
        var1.add(root.val);
        if (root.left == null && root.right == null) {
            if (param2 == param1) {
                ans.add(new ArrayList<Integer>(var1));
            }
        } else {
            dfs(root.left, ans, var1, param2, param1);
            dfs(root.right, ans, var1, param2, param1);
        }
        param2 -= root.val;
        var1.remove(var1.size() - 1);
    }
}
