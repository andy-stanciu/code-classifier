class Solution {

    private List<List<Integer>> result = new LinkedList<>();

    private List<Integer> current = new LinkedList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        dfs(root, param1);
        return result;
    }

    private void dfs(TreeNode root, int param1) {
        if (root == null)
            return;
        param1 -= root.val;
        current.add(root.val);
        if (root.left == null && root.right == null && param1 == 0) {
            List<Integer> copy = new LinkedList<>(current);
            result.add(copy);
            current.remove(current.size() - 1);
            return;
        }
        dfs(root.left, param1);
        dfs(root.right, param1);
        current.remove(current.size() - 1);
    }
}
