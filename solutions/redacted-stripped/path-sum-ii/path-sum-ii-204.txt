class Solution {

    public List<List<Integer>> list = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null)
            return list;
        List<Integer> var1 = new ArrayList<>();
        dfs(root, var1, param1, 0);
        return list;
    }

    public void dfs(TreeNode root, List<Integer> var1, int param1, int param2) {
        var1.add(root.val);
        param2 += root.val;
        if (param2 == param1 && root.left == null & root.right == null) {
            list.add(new ArrayList<>(var1));
        }
        if (root.right != null)
            dfs(root.right, var1, param1, param2);
        if (root.left != null)
            dfs(root.left, var1, param1, param2);
        param2 -= var1.get(var1.size() - 1);
        var1.remove(var1.size() - 1);
    }
}
