class Solution {

    List<List<Integer>> var1 = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        dfs(root, param1, new ArrayList<>());
        return var1;
    }

    private boolean isLeaf(TreeNode root) {
        if (root != null && root.left == null && root.right == null) {
            return true;
        }
        return false;
    }

    private void dfs(TreeNode node, int param1, List<Integer> list) {
        if (node == null) {
            return;
        }
        list.add(node.val);
        if (node.val == param1 && isLeaf(node)) {
            var1.add(list);
        } else {
            List<Integer> rightList = new ArrayList<>(list);
            dfs(node.left, param1 - node.val, list);
            dfs(node.right, param1 - node.val, rightList);
        }
    }
}
