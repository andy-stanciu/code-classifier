class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    List<Integer> a = new ArrayList<>();

    public void dfs(TreeNode root, int param1, int target) {
        if (root == null) {
            System.out.println(a);
            return;
        }
        System.out.println(root.val + param1 + " " + root.val);
        a.add(root.val);
        if (param1 + root.val == target) {
            if (root.left == null && root.right == null) {
                ans.add(new ArrayList<>(a));
            } else {
                dfs(root.left, param1 + root.val, target);
                dfs(root.right, param1 + root.val, target);
            }
        } else {
            dfs(root.left, param1 + root.val, target);
            dfs(root.right, param1 + root.val, target);
        }
        a.remove(a.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param2) {
        dfs(root, 0, param2);
        return ans;
    }
}
