class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        if (root == null)
            return res;
        List<Integer> list = new ArrayList<>();
        list.add(root.val);
        backtrack(root, list, param1 - root.val, res);
        return res;
    }

    public void backtrack(TreeNode root, List<Integer> list, int param1, List<List<Integer>> res) {
        if (root.left == null && root.right == null) {
            if (param1 == 0)
                res.add(new ArrayList<>(list));
            return;
        }
        if (root.left != null) {
            list.add(root.left.val);
            backtrack(root.left, list, param1 - root.left.val, res);
            list.remove(list.size() - 1);
        }
        if (root.right != null) {
            list.add(root.right.val);
            backtrack(root.right, list, param1 - root.right.val, res);
            list.remove(list.size() - 1);
        }
    }
}
