class Solution {

    private List<List<Integer>> result;

    private int t;

    public List<List<Integer>> method1(TreeNode root, int param1) {
        result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        t = param1;
        List<Integer> lst = new ArrayList<Integer>();
        dfs(root, 0, lst);
        return result;
    }

    public void dfs(TreeNode root, int param2, List<Integer> param3) {
        if (root == null) {
            return;
        }
        param2 += root.val;
        boolean var1 = param2 == t;
        boolean isLeafNode = (root.left == null && root.right == null);
        param3.add(root.val);
        if (var1 && isLeafNode) {
            result.add(new ArrayList<Integer>(param3));
        }
        dfs(root.left, param2, param3);
        dfs(root.right, param2, param3);
        if (param3.size() > 0) {
            param3.remove(param3.size() - 1);
        }
    }
}
