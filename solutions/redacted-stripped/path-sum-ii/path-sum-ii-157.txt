class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        return intertive(root, param1);
    }

    List<List<Integer>> intertive(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Stack<TreeNode> stack = new Stack<>();
        Stack<List<Integer>> var1 = new Stack<>();
        Stack<Integer> var2 = new Stack<>();
        stack.push(root);
        var1.push(new ArrayList<>());
        var2.push(0);
        while (!stack.isEmpty()) {
            TreeNode node = stack.pop();
            List<Integer> var3 = var1.pop();
            int var4 = var2.pop();
            var3.add(node.val);
            var4 += node.val;
            if (node.left == null && node.right == null) {
                if (var4 == param1) {
                    result.add(new ArrayList<>(var3));
                }
            } else {
                if (node.right != null) {
                    stack.push(node.right);
                    var1.push(new ArrayList<>(var3));
                    var2.push(var4);
                }
                if (node.left != null) {
                    stack.push(node.left);
                    var1.push(new ArrayList<>(var3));
                    var2.push(var4);
                }
            }
        }
        return result;
    }
}
