class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        dfs(root, 0, ans, new ArrayList<>(), param1);
        return ans;
    }

    private void dfs(TreeNode root, int param2, List<List<Integer>> ans, List<Integer> runningList, int target) {
        if (root == null) {
            return;
        }
        int var1 = root.val + param2;
        runningList.add(root.val);
        if (root.left == null && root.right == null && target == var1) {
            ans.add(new ArrayList<Integer>(runningList));
            return;
        }
        dfs(root.right, param2 + root.val, ans, new ArrayList<>(runningList), target);
        dfs(root.left, param2 + root.val, ans, new ArrayList<>(runningList), target);
    }
}
