class Solution {

    static List<List<Integer>> ans = new ArrayList<>();

    public void method1(List<Integer> list, TreeNode root, int param1, int param2) {
        param1 += root.val;
        list.add(root.val);
        if (root.left == null && root.right == null) {
            if (param1 == param2) {
                List<Integer> list1 = new ArrayList<>();
                list1.addAll(list);
                ans.add(list1);
                return;
            } else {
                return;
            }
        }
        if (root.left != null) {
            method1(list, root.left, param1, param2);
            if (list.size() > 0) {
                list.remove(list.size() - 1);
            }
        }
        if (root.right != null) {
            method1(list, root.right, param1, param2);
            if (list.size() > 0) {
                list.remove(list.size() - 1);
            }
        }
    }

    public List<List<Integer>> method2(TreeNode root, int param2) {
        ans.clear();
        List<Integer> list = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        int param1 = 0;
        method1(list, root, param1, param2);
        return ans;
    }
}
