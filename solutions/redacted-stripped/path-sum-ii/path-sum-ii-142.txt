class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> output = new ArrayList<>();
        parseTree(root, param1, 0, new ArrayList<>(), output);
        return output;
    }

    public void parseTree(TreeNode root, int param1, int total, List<Integer> subList, List<List<Integer>> output) {
        if (root == null) {
            return;
        }
        total = total + root.val;
        subList.add(root.val);
        if (root.left == null && root.right == null && total == param1) {
            output.add(new ArrayList<>(subList));
        }
        parseTree(root.left, param1, total, subList, output);
        parseTree(root.right, param1, total, subList, output);
        subList.remove(subList.size() - 1);
    }
}
