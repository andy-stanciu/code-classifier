class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        method2(root, param1, ans, new ArrayList<>());
        return ans;
    }

    public void method2(TreeNode root, int param1, List<List<Integer>> ans, List<Integer> sAns) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            if (param1 - root.val == 0) {
                sAns.add(root.val);
                List<Integer> base = new ArrayList<>(sAns);
                sAns.remove(sAns.size() - 1);
                ans.add(base);
            }
            return;
        }
        sAns.add(root.val);
        method2(root.left, param1 - root.val, ans, sAns);
        method2(root.right, param1 - root.val, ans, sAns);
        sAns.remove(sAns.size() - 1);
    }
}
