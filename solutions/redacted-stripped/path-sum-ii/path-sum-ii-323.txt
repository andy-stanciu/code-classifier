class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList();
        List<Integer> data = new ArrayList();
        dfs(root, param1, data, ans);
        return ans;
    }

    private void dfs(TreeNode root, int param2, List<Integer> data, List<List<Integer>> ans) {
        if (root == null)
            return;
        data.add(root.val);
        if (root.left == null && root.right == null && param2 - root.val == 0) {
            ans.add(new ArrayList<Integer>(data));
        } else {
            dfs(root.left, param2 - root.val, data, ans);
            dfs(root.right, param2 - root.val, data, ans);
        }
        data.remove(data.size() - 1);
    }
}
