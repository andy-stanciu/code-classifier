class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        method2(root, param1, ans, temp);
        return ans;
    }

    public void method2(TreeNode root, int param1, List<List<Integer>> ans, List<Integer> temp) {
        if (root == null) {
            return;
        }
        if ((root.left == null && root.right == null) && 0 == (param1 - root.val)) {
            List<Integer> arr = new ArrayList<>();
            temp.add(root.val);
            arr.addAll(temp);
            ans.add(arr);
            temp.remove(temp.size() - 1);
            return;
        } else if ((root.left == null && root.right == null)) {
            return;
        }
        temp.add(root.val);
        param1 -= root.val;
        method2(root.left, param1, ans, temp);
        method2(root.right, param1, ans, temp);
        temp.remove(temp.size() - 1);
        return;
    }
}
