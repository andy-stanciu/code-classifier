class Solution {

    public List<List<Integer>> res;

    public List<List<Integer>> method1(TreeNode root, int param1) {
        this.res = new LinkedList();
        LinkedList<Integer> input = new LinkedList();
        backtrack(root, param1, input);
        return res;
    }

    public void backtrack(TreeNode root, int param1, LinkedList<Integer> input) {
        if (root == null) {
            return;
        }
        input.add(root.val);
        if (root.val == param1 && root.left == null && root.right == null) {
            res.add(new LinkedList(input));
        }
        if (root.left != null) {
            backtrack(root.left, param1 - root.val, input);
            input.removeLast();
        }
        if (root.right != null) {
            backtrack(root.right, param1 - root.val, input);
            input.removeLast();
        }
    }
}
