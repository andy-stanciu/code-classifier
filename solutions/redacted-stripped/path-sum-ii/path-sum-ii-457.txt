class Solution {

    int i = 0;

    private void solve(TreeNode root, int param1, int param2, List<Integer> currList, List<List<Integer>> list) {
        if (root == null)
            return;
        currList.add(root.val);
        param1 += root.val;
        if (root.left == null && root.right == null && param1 == param2) {
            list.add(new ArrayList<Integer>(currList));
        } else {
            solve(root.left, param1, param2, currList, list);
            solve(root.right, param1, param2, currList, list);
        }
        currList.remove(currList.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param2) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> currList = new ArrayList<>();
        int param1 = 0;
        solve(root, param1, param2, currList, list);
        return list;
    }
}
