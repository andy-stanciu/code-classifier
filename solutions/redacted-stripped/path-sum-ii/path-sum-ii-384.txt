class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public void in(TreeNode root, List<Integer> arr, int param1, int target) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            param1 = param1 + root.val;
            if (param1 == target) {
                arr.add(root.val);
                List<Integer> as = new ArrayList<>();
                as.addAll(arr);
                ans.add(as);
                arr.remove(arr.size() - 1);
                param1 = param1 - root.val;
                return;
            }
        }
        param1 = param1 + root.val;
        arr.add(root.val);
        in(root.left, arr, param1, target);
        in(root.right, arr, param1, target);
        param1 = param1 - root.val;
        arr.remove(arr.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param2) {
        List<Integer> arr = new ArrayList<>();
        in(root, arr, 0, param2);
        return ans;
    }
}
