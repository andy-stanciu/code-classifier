class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> answer = new ArrayList<>();
        if (root == null)
            return answer;
        if (root.val == param1) {
            if (root.left == null && root.right == null) {
                List<Integer> list = new ArrayList<>();
                list.add(root.val);
                answer.add(list);
                return answer;
            }
        }
        if (root.left != null) {
            List<List<Integer>> temp = method1(root.left, param1 - root.val);
            if (temp.size() != 0) {
                for (int i = 0; i < temp.size(); i++) {
                    List<Integer> temp1 = temp.get(i);
                    temp1.add(0, root.val);
                    answer.add(temp1);
                }
            }
        }
        if (root.right != null) {
            List<List<Integer>> temp = method1(root.right, param1 - root.val);
            if (temp.size() != 0) {
                for (int i = 0; i < temp.size(); i++) {
                    List<Integer> temp1 = temp.get(i);
                    temp1.add(0, root.val);
                    answer.add(temp1);
                }
            }
        }
        return answer;
    }
}
