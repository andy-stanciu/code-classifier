class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        List<Integer> temp = new ArrayList<>();
        method2(root, temp, result, 0, param1);
        return result;
    }

    private void method2(TreeNode root, List<Integer> temp, List<List<Integer>> result, int method2, int param1) {
        temp.add(root.val);
        method2 = method2 + root.val;
        if (method2 == param1 && root.left == null && root.right == null) {
            result.add(new ArrayList<>(temp));
        }
        if (root.left != null) {
            method2(root.left, temp, result, method2, param1);
        }
        if (root.right != null) {
            method2(root.right, temp, result, method2, param1);
        }
        temp.remove(temp.size() - 1);
    }
}
