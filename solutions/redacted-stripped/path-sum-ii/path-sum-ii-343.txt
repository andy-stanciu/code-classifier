class Solution {

    public void dfs(TreeNode root, int param1, ArrayList<Integer> cur, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            if (param1 == root.val) {
                cur.add(root.val);
                List<Integer> temp = (List<Integer>) cur.clone();
                res.add(temp);
                cur.remove(cur.size() - 1);
            }
            return;
        }
        cur.add(root.val);
        dfs(root.left, param1 - root.val, cur, res);
        dfs(root.right, param1 - root.val, cur, res);
        cur.remove(cur.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        ArrayList<Integer> cur = new ArrayList<>();
        dfs(root, param1, cur, res);
        return res;
    }
}
