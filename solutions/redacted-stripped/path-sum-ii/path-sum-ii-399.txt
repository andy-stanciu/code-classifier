class Solution {

    public List<List<Integer>> method1(TreeNode root, int target) {
        List<List<Integer>> result = new ArrayList<>();
        recurse(root, target, 0, new LinkedList<>(), result);
        return result;
    }

    private void recurse(TreeNode node, int target, int param1, List<Integer> param2, List<List<Integer>> result) {
        if (node == null)
            return;
        if (node.left == null && node.right == null) {
            param2.add(node.val);
            param1 += node.val;
            if (param1 == target)
                result.add(new ArrayList<>(param2));
            param2.remove(param2.size() - 1);
            return;
        }
        param2.add(node.val);
        recurse(node.left, target, param1 + node.val, param2, result);
        recurse(node.right, target, param1 + node.val, param2, result);
        param2.remove(param2.size() - 1);
    }
}
