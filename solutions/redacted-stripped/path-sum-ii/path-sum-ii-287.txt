class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null)
            return new ArrayList<>();
        List<List<Integer>> list = new ArrayList<>();
        traverse(root, 0, param1, list, new ArrayList<>());
        return list;
    }

    private void traverse(TreeNode root, int param2, int param1, List<List<Integer>> result, ArrayList<Integer> list) {
        if (root == null) {
            return;
        }
        param2 = param2 + root.val;
        if (root.left == null && root.right == null) {
            if (param2 == param1) {
                list.add(root.val);
                result.add(new ArrayList<>(list));
                list.remove(list.size() - 1);
            }
        } else {
            list.add(root.val);
            traverse(root.left, param2, param1, result, list);
            traverse(root.right, param2, param1, result, list);
            list.remove(list.size() - 1);
        }
    }
}
