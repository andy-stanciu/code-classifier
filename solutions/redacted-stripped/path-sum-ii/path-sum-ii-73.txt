class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null)
            return new ArrayList<>();
        List<List<Integer>> ans = new ArrayList<>();
        dfs(root, param1, ans, new ArrayList<>());
        return ans;
    }

    public void dfs(TreeNode root, int param1, List<List<Integer>> ans, List<Integer> sol) {
        if (root == null)
            return;
        sol.add(root.val);
        if (root.left == null && root.right == null && param1 == root.val) {
            ans.add(new ArrayList(sol));
        } else {
            dfs(root.left, param1 - root.val, ans, sol);
            dfs(root.right, param1 - root.val, ans, sol);
        }
        sol.remove(sol.size() - 1);
    }
}
