class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new LinkedList<>();
        if (root == null)
            return res;
        List<Integer> var1 = new LinkedList<>();
        int var2 = 0;
        backtrack(root, var2, param1, res, var1);
        return res;
    }

    private void backtrack(TreeNode curr, int var2, int param1, List<List<Integer>> res, List<Integer> var1) {
        if (curr == null)
            return;
        var1.add(curr.val);
        var2 += curr.val;
        if (curr.left == null && curr.right == null && var2 == param1) {
            res.add(new LinkedList<>(var1));
            var1.remove(var1.size() - 1);
            return;
        }
        backtrack(curr.left, var2, param1, res, var1);
        backtrack(curr.right, var2, param1, res, var1);
        var2 -= curr.val;
        var1.remove(var1.size() - 1);
    }
}
