class Solution {

    private void backtrack(TreeNode root, int param1, List<Integer> cur, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        cur.add(root.val);
        if (root.left == null && root.right == null && root.val == param1) {
            res.add(new ArrayList<>(cur));
        } else {
            backtrack(root.left, param1 - root.val, cur, res);
            backtrack(root.right, param1 - root.val, cur, res);
        }
        cur.remove(cur.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> cur = new ArrayList<>();
        backtrack(root, param1, cur, res);
        return res;
    }
}
