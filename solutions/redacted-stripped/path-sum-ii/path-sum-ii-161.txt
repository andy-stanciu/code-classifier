class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> listHost = new ArrayList<>();
        method2(root, param1, new ArrayList<>(), listHost);
        return listHost;
    }

    private void method2(TreeNode root, int param1, List<Integer> currentList, List<List<Integer>> listHost) {
        if (root == null) {
            return;
        }
        currentList.add(root.val);
        if (root.val == param1 && root.left == null && root.right == null) {
            listHost.add(new ArrayList<>(currentList));
        } else {
            method2(root.left, param1 - root.val, currentList, listHost);
            method2(root.right, param1 - root.val, currentList, listHost);
        }
        currentList.remove(currentList.size() - 1);
    }
}
