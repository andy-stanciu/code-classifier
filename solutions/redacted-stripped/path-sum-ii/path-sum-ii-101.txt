class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null && param1 == 0)
            return new ArrayList<>();
        List<List<Integer>> res = new ArrayList<>();
        dfs(root, param1, res, new ArrayList<>());
        return res;
    }

    private static void dfs(TreeNode root, int target, List<List<Integer>> res, List<Integer> list) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null && target - root.val == 0) {
            list.add(root.val);
            res.add(new ArrayList<>(list));
            list.remove(list.size() - 1);
            return;
        }
        list.add(root.val);
        dfs(root.left, target - root.val, res, list);
        dfs(root.right, target - root.val, res, list);
        list.remove(list.size() - 1);
    }
}
