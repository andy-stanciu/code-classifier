class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        if (root.left == null && root.right == null) {
            if (root.val == param1) {
                List<Integer> var1 = new ArrayList<>();
                var1.add(root.val);
                ans.add(var1);
            }
            return ans;
        }
        List<List<Integer>> left = method1(root.left, param1 - root.val);
        List<List<Integer>> right = method1(root.right, param1 - root.val);
        for (int i = 0; i < left.size(); i++) {
            left.get(i).add(0, root.val);
            ans.add(left.get(i));
        }
        for (int i = 0; i < right.size(); i++) {
            right.get(i).add(0, root.val);
            ans.add(right.get(i));
        }
        return ans;
    }
}
