class Solution {

    public static List<List<Integer>> method1(TreeNode root, int target) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> var1 = new ArrayList<>();
        dfs(root, var1, result, target);
        return result;
    }

    private static void dfs(TreeNode node, List<Integer> var1, List<List<Integer>> result, int target) {
        if (node == null)
            return;
        var1.add(node.val);
        target = target - node.val;
        if (node.left == null && node.right == null && target == 0) {
            result.add(new ArrayList<>(var1));
        } else {
            dfs(node.left, var1, result, target);
            dfs(node.right, var1, result, target);
        }
        var1.remove(var1.size() - 1);
    }
}
