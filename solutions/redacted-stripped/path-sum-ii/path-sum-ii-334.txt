class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<Integer> currList = new ArrayList<>();
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        method2(root, param1, 0, currList, result);
        return result;
    }

    private void method2(TreeNode root, int param1, int param2, List<Integer> currList, List<List<Integer>> result) {
        param2 += root.val;
        currList.add(root.val);
        if (isLeaf(root)) {
            if (param2 == param1) {
                result.add(new ArrayList(currList));
            }
            currList.remove(currList.size() - 1);
            return;
        }
        if (root.left != null)
            method2(root.left, param1, param2, currList, result);
        if (root.right != null)
            method2(root.right, param1, param2, currList, result);
        currList.remove(currList.size() - 1);
    }

    private boolean isLeaf(TreeNode root) {
        return root.left == null && root.right == null;
    }
}
