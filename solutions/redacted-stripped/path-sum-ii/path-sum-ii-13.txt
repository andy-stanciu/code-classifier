class Solution {

    private ArrayList<List<Integer>> res;

    public List<List<Integer>> method1(TreeNode root, int param1) {
        res = new ArrayList<List<Integer>>();
        if (root != null) {
            method2(root, param1, new ArrayList<>());
        }
        return res;
    }

    private void method2(TreeNode node, int param1, List<Integer> currList) {
        if (node == null) {
            return;
        }
        param1 -= node.val;
        currList.add(node.val);
        if (node.left == null && node.right == null) {
            if (param1 == 0) {
                res.add(new ArrayList<>(currList));
            }
            currList.remove(currList.size() - 1);
            return;
        }
        method2(node.left, param1, currList);
        method2(node.right, param1, currList);
        currList.remove(currList.size() - 1);
    }
}
