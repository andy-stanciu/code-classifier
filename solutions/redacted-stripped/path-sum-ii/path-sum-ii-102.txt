class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        method2(root, param1, result, 0, new ArrayList<Integer>());
        return result;
    }

    public void method2(TreeNode node, int param1, List<List<Integer>> result, int param2, List<Integer> currList) {
        if (node == null) {
            return;
        }
        currList.add(node.val);
        if (param2 + node.val == param1 && node.left == null && node.right == null) {
            List<Integer> newList = new ArrayList<>(currList);
            result.add(newList);
        }
        method2(node.left, param1, result, param2 + node.val, currList);
        method2(node.right, param1, result, param2 + node.val, currList);
        currList.remove(currList.size() - 1);
    }
}
