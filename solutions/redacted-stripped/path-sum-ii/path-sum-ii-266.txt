class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> out = new ArrayList<>();
        if (root == null)
            return new ArrayList<>();
        method1(root, param1, out, new ArrayList<>());
        return new ArrayList<>(out);
    }

    public void method1(TreeNode root, int param1, List<List<Integer>> soln, List<Integer> tmp) {
        if (root == null)
            return;
        tmp.add(root.val);
        if (isLeaf(root) && (root.val - param1) == 0) {
            soln.add(new ArrayList<>(tmp));
        }
        method1(root.left, param1 - root.val, soln, tmp);
        method1(root.right, param1 - root.val, soln, tmp);
        tmp.remove(tmp.size() - 1);
    }

    boolean isLeaf(TreeNode treeNode) {
        return treeNode.right == null && treeNode.left == null;
    }
}
