class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList();
        List<Integer> output = new ArrayList();
        if (root == null) {
            return result;
        }
        dfs(root, param1, result, output);
        return result;
    }

    private void dfs(TreeNode node, int param1, List<List<Integer>> result, List<Integer> output) {
        if (node == null) {
            return;
        }
        output.add(node.val);
        if (node.val == param1 && node.left == null && node.right == null) {
            result.add(output);
            return;
        }
        dfs(node.left, param1 - node.val, result, new ArrayList<>(output));
        dfs(node.right, param1 - node.val, result, new ArrayList<>(output));
    }
}
