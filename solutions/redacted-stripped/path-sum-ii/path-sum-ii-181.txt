class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null)
            return new ArrayList<>();
        return method2(root, new ArrayList<>(), 0, param1);
    }

    private List<List<Integer>> method2(TreeNode node, List<Integer> param2, int param3, int param1) {
        List<List<Integer>> var1 = new ArrayList<>();
        if (node == null)
            return var1;
        param2.add(node.val);
        param3 += node.val;
        if (node.left == null && node.right == null) {
            if (param3 == param1) {
                var1.add(new ArrayList<>(param2));
            }
        } else {
            if (node.left != null) {
                var1.addAll(method2(node.left, param2, param3, param1));
            }
            if (node.right != null) {
                var1.addAll(method2(node.right, param2, param3, param1));
            }
        }
        param2.remove(param2.size() - 1);
        return var1;
    }
}
