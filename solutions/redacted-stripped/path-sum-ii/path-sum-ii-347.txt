class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        final List<List<Integer>> res = new ArrayList<>();
        if (root == null) {
            return res;
        }
        final List<Integer> var1 = new ArrayList<>();
        var1.add(root.val);
        method2(root, param1, var1, 0, res);
        return res;
    }

    private void method2(TreeNode root, int param1, List<Integer> var1, int param2, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        final var t = param2 + root.val;
        if (root.left == null && root.right == null && t == param1) {
            res.add(new ArrayList<>(var1));
            return;
        }
        if (root.left != null) {
            var1.add(root.left.val);
            method2(root.left, param1, var1, t, res);
            var1.remove(var1.size() - 1);
        }
        if (root.right != null) {
            var1.add(root.right.val);
            method2(root.right, param1, var1, t, res);
            var1.remove(var1.size() - 1);
        }
    }
}
