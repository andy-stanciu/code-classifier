class Solution {

    public void getAns(TreeNode root, int t, int param1, List<Integer> ls, List<List<Integer>> list) {
        if (root.left == null && root.right == null) {
            param1 += root.val;
            ls.add(root.val);
            if (param1 == t) {
                list.add(new ArrayList<>(ls));
            }
            ls.remove(ls.size() - 1);
            return;
        }
        if (root.left != null) {
            ls.add(root.val);
            getAns(root.left, t, param1 + root.val, ls, list);
            ls.remove(ls.size() - 1);
        }
        if (root.right != null) {
            ls.add(root.val);
            getAns(root.right, t, param1 + root.val, ls, list);
            ls.remove(ls.size() - 1);
        }
    }

    public List<List<Integer>> method1(TreeNode root, int param2) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null)
            return list;
        getAns(root, param2, 0, new ArrayList<>(), list);
        return list;
    }
}
