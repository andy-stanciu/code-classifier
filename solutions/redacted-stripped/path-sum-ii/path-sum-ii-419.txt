class Solution {

    List<List<Integer>> res = new ArrayList<>();

    void BTK(TreeNode root, int param1, List<Integer> curr) {
        if (param1 == 0 && root.left == null && root.right == null)
            res.add(new ArrayList<>(curr));
        else {
            if (root.left != null) {
                curr.add(root.left.val);
                BTK(root.left, param1 - root.left.val, curr);
                curr.remove(curr.size() - 1);
            }
            if (root.right != null) {
                curr.add(root.right.val);
                BTK(root.right, param1 - root.right.val, curr);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null)
            return res;
        List<Integer> curr = new ArrayList<>();
        curr.add(root.val);
        BTK(root, param1 - root.val, curr);
        return res;
    }
}
