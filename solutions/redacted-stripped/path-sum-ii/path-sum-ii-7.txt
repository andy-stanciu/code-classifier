class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public void dfs(TreeNode root, int param1, List<Integer> param2) {
        if (root == null) {
            return;
        }
        param2.add(root.val);
        if (root.left == null && root.right == null && param1 == root.val) {
            result.add(new ArrayList<>(param2));
        } else {
            dfs(root.left, param1 - root.val, param2);
            dfs(root.right, param1 - root.val, param2);
        }
        param2.remove(param2.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null) {
            return result;
        }
        List<Integer> param2 = new ArrayList<>();
        dfs(root, param1, param2);
        return result;
    }
}
