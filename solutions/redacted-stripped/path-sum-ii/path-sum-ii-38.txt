class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        helper(root, param1, 0, ans, new ArrayList<Integer>());
        return ans;
    }

    public boolean helper(TreeNode root, int param1, int param2, List<List<Integer>> ans, List<Integer> help) {
        if (root == null)
            return false;
        if (root.left == null && root.right == null && param1 == param2 + root.val) {
            help.add(root.val);
            ans.add(new ArrayList<Integer>(help));
            help.remove(help.size() - 1);
            return true;
        }
        param2 += root.val;
        help.add(root.val);
        boolean left = helper(root.left, param1, param2, ans, help);
        boolean right = helper(root.right, param1, param2, ans, help);
        help.remove(help.size() - 1);
        return (left || right);
    }
}
