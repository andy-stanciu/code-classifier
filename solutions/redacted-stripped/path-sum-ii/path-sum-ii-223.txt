class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> var1 = new ArrayList<>();
        dfs(root, param1, var1, res);
        return res;
    }

    private void dfs(TreeNode node, int param1, List<Integer> var1, List<List<Integer>> res) {
        if (node == null) {
            return;
        }
        var1.add(node.val);
        if (node.left == null && node.right == null) {
            int var2 = method2(var1);
            if (var2 == param1) {
                res.add(new ArrayList<>(var1));
            }
        } else {
            dfs(node.left, param1, var1, res);
            dfs(node.right, param1, var1, res);
        }
        var1.remove(var1.size() - 1);
    }

    private int method2(List<Integer> list) {
        int method2 = 0;
        for (int num : list) {
            method2 += num;
        }
        return method2;
    }
}
