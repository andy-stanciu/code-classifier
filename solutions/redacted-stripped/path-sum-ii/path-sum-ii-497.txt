class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if (root == null)
            return res;
        List<Integer> curr = new ArrayList<>();
        dfs(root, param1, 0, res, curr);
        return res;
    }

    public void dfs(TreeNode root, int param1, int method1, List<List<Integer>> res, List<Integer> curr) {
        if (root.left == null && root.right == null) {
            if (method1 + root.val == param1) {
                curr.add(root.val);
                res.add(new ArrayList<>(curr));
                curr.remove(curr.size() - 1);
            }
            return;
        }
        curr.add(root.val);
        if (root.left != null) {
            dfs(root.left, param1, method1 + root.val, res, curr);
        }
        if (root.right != null) {
            dfs(root.right, param1, method1 + root.val, res, curr);
        }
        curr.remove(curr.size() - 1);
        return;
    }
}
