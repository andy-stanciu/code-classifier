class Solution {

    void dfs(TreeNode root, int param1, List<Integer> temp, List<List<Integer>> result) {
        if (root == null)
            return;
        param1 -= root.val;
        temp.add(root.val);
        if (root.left == null && root.right == null && param1 == 0) {
            result.add(new ArrayList<>(temp));
            return;
        }
        dfs(root.left, param1, new ArrayList<>(temp), result);
        dfs(root.right, param1, new ArrayList<>(temp), result);
        param1 += root.val;
        temp.remove(temp.size() - 1);
        return;
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        if (root != null)
            dfs(root, param1, temp, result);
        return result;
    }
}
