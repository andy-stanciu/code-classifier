class Solution {

    public boolean method1(int n) {
        int temp = n;
        int sum = 0;
        if (n >= 10) {
            while (n >= 10) {
                int x = temp % 10;
                int power = (int) Math.pow(x, 2);
                sum = sum + power;
                temp = temp / 10;
                if (!(temp > 0)) {
                    n = sum;
                    sum = 0;
                    temp = n;
                }
            }
            if (n == 1) {
                return true;
            } else if (n == 7) {
                return true;
            } else {
                return false;
            }
        } else {
            int new_n = (int) Math.pow(n, 2);
            while (new_n >= 10) {
                int x = temp % 10;
                int power = (int) Math.pow(x, 2);
                sum = sum + power;
                temp = temp / 10;
                if (!(temp > 0)) {
                    new_n = sum;
                    sum = 0;
                    temp = new_n;
                }
            }
            if (new_n == 1) {
                return true;
            } else {
                return false;
            }
        }
    }
}
