class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            int current = param1[i];
            boolean destroyed = false;
            while (!stack.isEmpty() && current < 0 && stack.peek() > 0) {
                int top = stack.peek();
                if (top == -current) {
                    stack.pop();
                    destroyed = true;
                    break;
                } else if (top > -current) {
                    destroyed = true;
                    break;
                } else {
                    stack.pop();
                }
            }
            if (!destroyed) {
                stack.push(current);
            }
        }
        int[] res = new int[stack.size()];
        for (int i = res.length - 1; i >= 0; i--) {
            res[i] = stack.pop();
        }
        return res;
    }
}
