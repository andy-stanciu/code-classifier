class Solution {

    public int[] method1(int[] param1) {
        List<Integer> list = new ArrayList<>();
        Stack<Integer> stack = new Stack<>();
        int i = 0;
        int len = param1.length;
        while (i < len) {
            if (param1[i] > 0) {
                stack.push(param1[i]);
            } else {
                while (!stack.isEmpty() && stack.peek() > 0 && Math.abs(stack.peek()) < Math.abs(param1[i])) {
                    stack.pop();
                }
                if (i < len && (stack.isEmpty() || stack.peek() < 0)) {
                    stack.push(param1[i]);
                } else if (!stack.isEmpty() && stack.peek() == Math.abs(param1[i])) {
                    stack.pop();
                }
            }
            i++;
        }
        int[] res = new int[stack.size()];
        for (int a = 0; a < stack.size(); a++) {
            res[a] = stack.get(a);
        }
        return res;
    }
}
