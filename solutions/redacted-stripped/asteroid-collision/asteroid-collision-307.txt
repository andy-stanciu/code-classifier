class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<Integer>();
        int n = param1.length;
        for (int var1 : param1) {
            if (stack.isEmpty()) {
                stack.push(var1);
            } else if (var1 > 0) {
                stack.push(var1);
            } else {
                while (!stack.isEmpty()) {
                    if (stack.peek() < 0) {
                        stack.push(var1);
                        break;
                    } else if (stack.peek() == Math.abs(var1)) {
                        stack.pop();
                        break;
                    } else if (stack.peek() > Math.abs(var1)) {
                        break;
                    } else {
                        stack.pop();
                        if (stack.isEmpty()) {
                            stack.push(var1);
                            break;
                        }
                    }
                }
            }
        }
        int[] ans = new int[stack.size()];
        int i = stack.size() - 1;
        while (!stack.isEmpty()) {
            ans[i--] = stack.pop();
        }
        return ans;
    }
}
