class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stck = new Stack<Integer>();
        int i;
        for (i = 0; i < param1.length; i++) {
            if (stck.isEmpty()) {
                stck.push(param1[i]);
            } else {
                if (param1[i] < 0 && stck.peek() > 0 && Math.abs(param1[i]) > stck.peek()) {
                    while (!stck.isEmpty() && param1[i] < 0 && stck.peek() > 0 && Math.abs(param1[i]) > stck.peek()) {
                        stck.pop();
                    }
                    if (stck.isEmpty()) {
                        stck.push(param1[i]);
                    } else {
                        i--;
                    }
                } else if (param1[i] < 0 && stck.peek() > 0 && Math.abs(param1[i]) == stck.peek()) {
                    stck.pop();
                } else if (param1[i] > 0 || param1[i] < 0 && stck.peek() < 0) {
                    stck.push(param1[i]);
                }
            }
        }
        int[] ans = new int[stck.size()];
        int k = stck.size() - 1;
        while (!stck.isEmpty()) {
            ans[k--] = stck.peek();
            stck.pop();
        }
        return ans;
    }
}
