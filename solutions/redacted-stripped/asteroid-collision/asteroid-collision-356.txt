class Solution {

    public int[] method1(int[] a) {
        ArrayList<Integer> l = new ArrayList<Integer>();
        Stack<Integer> s = new Stack<Integer>();
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int x = Math.abs(a[i]);
            if (a[i] < 0) {
                while (s.size() != 0 && s.peek() < x) {
                    s.pop();
                }
                if (s.size() != 0 && s.peek() == x) {
                    s.pop();
                    continue;
                } else if (s.size() == 0) {
                    l.add(-1 * x);
                }
            } else {
                s.add(x);
            }
        }
        int sz = s.size();
        Stack<Integer> pl = new Stack<Integer>();
        for (int i = 0; i < sz; i++) {
            pl.add(s.pop());
        }
        for (int i = 0; i < sz; i++) {
            l.add(pl.pop());
        }
        int t = l.size();
        int[] fin = new int[t];
        for (int i = 0; i < t; i++) {
            fin[i] = l.get(i);
        }
        return fin;
    }
}
