class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> St = new Stack<>();
        int n = param1.length;
        for (int i = 0; i < n; i++) {
            int ele = param1[i];
            if (St.size() == 0 || St.peek() < 0 || ele > 0) {
                St.push(ele);
                continue;
            }
            while (St.size() > 0 && St.peek() > 0 && Math.abs(ele) > Math.abs(St.peek())) {
                St.pop();
            }
            if (St.size() > 0 && St.peek() == -ele) {
                St.pop();
                continue;
            }
            if (St.size() > 0 && St.peek() > 0 && Math.abs(St.peek()) > Math.abs(ele)) {
                continue;
            }
            St.push(ele);
        }
        n = St.size();
        if (n == 0)
            return new int[0];
        int[] arr = new int[n];
        for (int i = n - 1; i >= 0; i--) {
            arr[i] = St.pop();
        }
        return arr;
    }
}
