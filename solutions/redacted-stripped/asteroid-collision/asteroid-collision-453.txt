class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int var1 : param1) {
            if (stack.isEmpty() || var1 > 0) {
                stack.push(var1);
            } else {
                while (!stack.isEmpty() && stack.peek() > 0 && stack.peek() < Math.abs(var1)) {
                    stack.pop();
                }
                if (stack.isEmpty() || stack.peek() < 0) {
                    stack.push(var1);
                } else if (stack.peek() == Math.abs(var1)) {
                    stack.pop();
                }
            }
        }
        int[] result = new int[stack.size()];
        for (int i = stack.size() - 1; i >= 0; i--) {
            result[i] = stack.pop();
        }
        return result;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] var2 = { 5, 10, -5 };
        int[] result1 = solution.method1(var2);
        System.out.println(Arrays.toString(result1));
        int[] var3 = { 8, -8 };
        int[] result2 = solution.method1(var3);
        System.out.println(Arrays.toString(result2));
        int[] var4 = { 10, 2, -5 };
        int[] result3 = solution.method1(var4);
        System.out.println(Arrays.toString(result3));
    }
}
