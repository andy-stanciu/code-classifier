class Solution {

    public int[] method1(int[] param1) {
        int n = param1.length;
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            int var1 = param1[i];
            int resultantMeteor = var1;
            while (!st.isEmpty() && var1 < 0 && st.peek() > 0) {
                int value1 = st.peek();
                int value2 = var1;
                if (Math.abs(value1) > Math.abs(value2)) {
                    resultantMeteor = 0;
                    break;
                } else if (Math.abs(value2) > Math.abs(value1)) {
                    st.pop();
                    resultantMeteor = value2;
                } else {
                    resultantMeteor = 0;
                    st.pop();
                    break;
                }
            }
            if (resultantMeteor != 0)
                st.push(resultantMeteor);
        }
        int[] nums = new int[st.size()];
        for (int i = st.size() - 1; i >= 0; i--) nums[i] = st.pop();
        return nums;
    }
}
