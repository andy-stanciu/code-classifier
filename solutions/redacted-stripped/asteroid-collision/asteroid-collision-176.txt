class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> st = new Stack<>();
        for (int i : param1) {
            if (st.isEmpty()) {
                st.push(i);
            } else if (i > 0) {
                st.push(i);
            } else {
                while (!st.isEmpty() && Math.abs(i) > st.peek() && st.peek() > 0) {
                    st.pop();
                }
                if (!st.isEmpty() && st.peek() > 0 && st.peek() == Math.abs(i)) {
                    st.pop();
                } else if (!st.isEmpty() && st.peek() > 0 && st.peek() > Math.abs(i)) {
                    continue;
                } else {
                    st.push(i);
                }
            }
        }
        List<Integer> ans = new ArrayList<>(st);
        int[] result = new int[ans.size()];
        for (int k = 0; k < ans.size(); k++) {
            result[k] = ans.get(k);
        }
        return result;
    }
}
