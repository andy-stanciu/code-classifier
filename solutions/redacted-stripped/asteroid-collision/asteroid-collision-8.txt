class Solution {

    public int[] method1(int[] param1) {
        int[] dom = null;
        Stack<Integer> ans = new Stack();
        for (int i = 0; i < param1.length; i++) {
            if (!ans.isEmpty() && param1[i] < 0) {
                if (ans.peek() == Math.abs(param1[i])) {
                    ans.pop();
                    continue;
                }
                while (!ans.isEmpty() && ans.peek() > 0 && ans.peek() < Math.abs(param1[i])) {
                    ans.pop();
                }
                if (!ans.isEmpty() && ans.peek() > 0) {
                    if (ans.peek() == Math.abs(param1[i])) {
                        ans.pop();
                    }
                } else {
                    ans.add(param1[i]);
                }
            } else {
                ans.add(param1[i]);
            }
        }
        dom = new int[ans.size()];
        for (int i = 0; i < ans.size(); i++) {
            dom[i] = ans.get(i);
        }
        return dom;
    }
}
