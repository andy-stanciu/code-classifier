class Solution {

    public static int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int num : param1) {
            boolean destroyed = false;
            while (!stack.isEmpty() && !destroyed) {
                if (diffDir(num, stack.peek())) {
                    if (Math.abs(num) > Math.abs(stack.peek())) {
                        stack.pop();
                    } else if (Math.abs(num) < Math.abs(stack.peek())) {
                        destroyed = true;
                    } else {
                        stack.pop();
                        destroyed = true;
                    }
                } else {
                    stack.add(num);
                    destroyed = true;
                }
            }
            if (!destroyed) {
                stack.add(num);
            }
        }
        int[] res = new int[stack.size()];
        for (int i = res.length - 1; i >= 0; i--) {
            res[i] = stack.pop();
        }
        return res;
    }

    public static boolean diffDir(int num1, int num2) {
        return (num1 < 0 && num2 > 0);
    }
}
