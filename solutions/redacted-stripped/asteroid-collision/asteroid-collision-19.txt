class Solution {

    public int[] method1(int[] param1) {
        int[] ans = null;
        Stack<Integer> stac = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            if (!stac.isEmpty() && param1[i] < 0) {
                if (stac.peek() == Math.abs(param1[i])) {
                    stac.pop();
                    continue;
                }
                while (!stac.isEmpty() && stac.peek() > 0 && stac.peek() < Math.abs(param1[i])) {
                    stac.pop();
                }
                if (!stac.isEmpty() && stac.peek() > 0) {
                    if (stac.peek() == Math.abs(param1[i])) {
                        stac.pop();
                    }
                } else {
                    stac.add(param1[i]);
                }
            } else {
                stac.add(param1[i]);
            }
        }
        ans = new int[stac.size()];
        for (int i = 0; i < stac.size(); i++) {
            ans[i] = stac.get(i);
        }
        return ans;
    }
}
