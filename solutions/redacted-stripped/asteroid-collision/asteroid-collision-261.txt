class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> st = new Stack<>();
        for (int e : param1) {
            while (st.size() > 0 && st.peek() > 0 && e < 0 && Math.abs(st.peek()) < Math.abs(e)) {
                st.pop();
            }
            if (st.size() == 0) {
                st.push(e);
            } else if ((st.peek() > 0 && e > 0) || (st.peek() < 0 && e < 0)) {
                st.push(e);
            } else if (st.peek() > 0 && e < 0 && Math.abs(st.peek()) == Math.abs(e)) {
                st.pop();
            } else if (st.peek() < 0 && e > 0) {
                st.push(e);
            }
        }
        int[] res = new int[st.size()];
        int i = st.size() - 1;
        while (st.size() > 0) {
            res[i] = st.peek();
            st.pop();
            i--;
        }
        return res;
    }
}
