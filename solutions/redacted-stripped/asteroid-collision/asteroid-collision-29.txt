class Solution {

    public int[] method1(int[] ast) {
        Stack<Integer> stack = new Stack<>();
        int i = 0;
        while (i < ast.length) {
            if (!stack.isEmpty() && ast[i] < 0 && stack.peek() > 0) {
                int peeked = stack.peek();
                int curr = ast[i];
                if (peeked == Math.abs(curr)) {
                    stack.pop();
                    i++;
                } else if (peeked > Math.abs(curr)) {
                    i++;
                } else if (peeked < Math.abs(curr)) {
                    stack.pop();
                }
            } else {
                stack.add(ast[i]);
                i++;
            }
        }
        int[] res = new int[stack.size()];
        int x = stack.size() - 1;
        while (!stack.isEmpty()) {
            res[x] = stack.pop();
            x--;
        }
        return res;
    }
}
