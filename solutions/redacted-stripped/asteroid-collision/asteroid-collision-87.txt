class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> st = new Stack<>();
        int i = 0;
        while (i < param1.length) {
            if (param1[i] > 0) {
                st.push(param1[i]);
                i++;
            } else {
                if (st.size() == 0 || st.peek() < 0) {
                    st.push(param1[i]);
                    i++;
                } else if (st.peek() > Math.abs(param1[i])) {
                    i++;
                } else if (st.peek() < Math.abs(param1[i])) {
                    st.pop();
                } else {
                    st.pop();
                    i++;
                }
            }
        }
        int[] result = new int[st.size()];
        for (int k = result.length - 1; k >= 0; k--) {
            result[k] = st.pop();
        }
        return result;
    }
}
