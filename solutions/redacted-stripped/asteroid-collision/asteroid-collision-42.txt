class Solution {

    public int[] method1(int[] arr) {
        Stack<Integer> stk = new Stack<>();
        for (int i = 0; i < arr.length; i++) {
            int n = 1;
            while (arr[i] < 0 && !stk.isEmpty() && stk.peek() > 0) {
                if (-(arr[i]) > stk.peek()) {
                    stk.pop();
                    continue;
                } else if (-(arr[i]) == stk.peek()) {
                    stk.pop();
                }
                n = 0;
                break;
            }
            if (n != 0) {
                stk.push(arr[i]);
            }
        }
        int i = 0;
        int[] res = new int[stk.size()];
        while (!stk.isEmpty()) {
            res[i] = stk.pop();
            i++;
        }
        int k = 0;
        int[] arr2 = new int[res.length];
        for (int j = res.length - 1; j >= 0; j--) {
            arr2[k] = res[j];
            k++;
        }
        return arr2;
    }
}
