class Solution {

    public int[] method1(int[] param1) {
        int l = param1.length;
        Stack<Integer> stack = new Stack<>();
        stack.push(param1[0]);
        int v;
        int p;
        for (int i = 1; i < l; i++) {
            v = param1[i];
            if (v < 0) {
                while (true) {
                    if (stack.isEmpty()) {
                        stack.push(v);
                        break;
                    }
                    p = stack.peek();
                    if (p < 0) {
                        stack.push(v);
                        break;
                    } else if (p > 0 && p + v < 0) {
                        stack.pop();
                    } else if (p + v == 0) {
                        stack.pop();
                        break;
                    } else {
                        break;
                    }
                }
            } else {
                stack.push(v);
            }
        }
        int sl = stack.size();
        int[] returnVal = new int[sl];
        for (int j = 0; j < sl; j++) {
            returnVal[j] = stack.get(j);
        }
        return returnVal;
    }
}
