class Solution {

    public int[] method1(int[] param1) {
        int i = 0;
        int ind;
        ArrayList<Integer> ast = new ArrayList<Integer>();
        for (int j = 0; j < param1.length; j++) {
            ast.add(param1[j]);
        }
        boolean ans = true;
        while (i < ast.size() && ast.get(i) < 0) {
            i++;
        }
        while (ans) {
            ans = false;
            while (i < ast.size() && ast.get(i) > 0) {
                i++;
            }
            if (i < ast.size() && ast.get(i) < 0) {
                if (Math.pow(ast.get(i - 1), 2) == Math.pow(ast.get(i), 2)) {
                    ast.remove(i);
                    ast.remove(i - 1);
                    i--;
                    ind = 0;
                } else {
                    ind = Math.pow(ast.get(i - 1), 2) > Math.pow(ast.get(i), 2) ? i : i - 1;
                    ast.remove(ind);
                }
                if (ind < ast.size() && ast.get(ind) < 0 && ind - 1 >= 0 && ast.get(ind - 1) > 0) {
                    ans = true;
                    i = ind - 1;
                } else if (i < ast.size()) {
                    ans = true;
                }
            }
            if (ans && ast.get(i) < 0) {
                if (i - 1 >= 0 && ast.get(i - 1) > 0) {
                    i--;
                } else if (i + 1 < ast.size()) {
                    while (i < ast.size() && ast.get(i) < 0) {
                        i++;
                    }
                } else {
                    i++;
                }
                if (i >= ast.size()) {
                    ans = false;
                }
            }
        }
        int[] arr = new int[ast.size()];
        for (int j = 0; j < ast.size(); j++) {
            arr[j] = ast.get(j);
        }
        return arr;
    }
}
