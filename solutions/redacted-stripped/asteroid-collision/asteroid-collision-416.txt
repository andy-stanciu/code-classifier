class Solution {

    public int[] method1(int[] param1) {
        int j = 0;
        for (int var1 : param1) {
            while (j > 0 && collidesAndDestroys(param1[j - 1], var1)) {
                j--;
            }
            if (j == 0 || !collides(param1[j - 1], var1)) {
                param1[j++] = var1;
            } else if (mutuallyDestroys(param1[j - 1], var1)) {
                j--;
            } else if (destroys(param1[j - 1], var1)) {
                param1[j - 1] = var1;
            }
        }
        return Arrays.copyOfRange(param1, 0, j);
    }

    private boolean collides(int a, int b) {
        return a > 0 && b < 0;
    }

    private boolean collidesAndDestroys(int a, int b) {
        return collides(a, b) && destroys(a, b);
    }

    private boolean destroys(int a, int b) {
        return a < -1 * b;
    }

    private boolean mutuallyDestroys(int a, int b) {
        return a == -1 * b;
    }
}
