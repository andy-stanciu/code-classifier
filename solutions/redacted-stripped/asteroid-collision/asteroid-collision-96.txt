class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> positive = new Stack<>();
        ArrayList<Integer> negatives = new ArrayList<>();
        for (int i = 0; i < param1.length; i++) {
            if (param1[i] < 0) {
                while (!positive.isEmpty() && Math.abs(param1[i]) > positive.peek()) {
                    positive.pop();
                }
                if (!positive.isEmpty() && Math.abs(param1[i]) == positive.peek()) {
                    positive.pop();
                    continue;
                }
                if (positive.isEmpty()) {
                    negatives.add(param1[i]);
                }
            } else {
                positive.push(param1[i]);
            }
        }
        int[] arr = new int[negatives.size() + positive.size()];
        for (int i = 0; i < negatives.size(); i++) {
            arr[i] = negatives.get(i);
        }
        for (int i = arr.length - 1; i >= negatives.size(); i--) {
            arr[i] = positive.pop();
        }
        return arr;
    }
}
