class Solution {

    public int[] method1(int[] param1) {
        LinkedList<Integer> armageddon = new LinkedList<>();
        for (int var1 : param1) {
            if (armageddon.isEmpty() || var1 > 0) {
                armageddon.add(var1);
            } else {
                move(armageddon, var1);
            }
        }
        return armageddon.stream().mapToInt(Integer::intValue).toArray();
    }

    private void move(LinkedList<Integer> armageddon, int var1) {
        if (armageddon.isEmpty() || armageddon.getLast() < 0) {
            armageddon.add(var1);
        } else {
            if (Math.abs(var1) > Math.abs(armageddon.getLast())) {
                armageddon.removeLast();
                move(armageddon, var1);
            } else if (Math.abs(var1) == Math.abs(armageddon.getLast())) {
                armageddon.removeLast();
            }
        }
    }
}
