class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> var1 = new Stack<>();
        var1.push(param1[0]);
        for (int i = 1; i < param1.length; i++) {
            if (param1[i] < 0) {
                while (!var1.isEmpty() && var1.peek() > 0 && var1.peek() < -param1[i]) {
                    var1.pop();
                }
                if (var1.isEmpty() || var1.peek() < 0) {
                    var1.push(param1[i]);
                }
                if (!var1.isEmpty() && var1.peek() == -param1[i]) {
                    var1.pop();
                }
            } else {
                var1.push(param1[i]);
            }
        }
        param1 = new int[var1.size()];
        for (int i = 0; i < param1.length; i++) {
            param1[i] = var1.get(i);
        }
        return param1;
    }
}
