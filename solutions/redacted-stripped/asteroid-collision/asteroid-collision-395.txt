class Solution {

    public int[] method1(int[] param1) {
        if (param1.length == 0) {
            return param1;
        }
        boolean positive = (param1[0] > 0);
        boolean done = true;
        int[] counter = new int[2];
        for (int i = 0; i < param1.length; i++) {
            if (param1[i] > 0) {
                counter[0] += 1;
            } else {
                if (counter[0] != 0) {
                    done = false;
                }
            }
        }
        if (done) {
            return param1;
        }
        ArrayList<Integer> final1 = new ArrayList<Integer>();
        for (int i = 0; i < param1.length; i++) {
            if (i == param1.length - 1) {
                final1.add(param1[i]);
                break;
            }
            boolean isPos1 = param1[i] > 0;
            boolean isPos2 = param1[i + 1] > 0;
            if (!isPos1) {
                final1.add(param1[i]);
            } else {
                if (!isPos2) {
                    if (Math.abs(param1[i]) == Math.abs(param1[i + 1])) {
                        i++;
                    } else {
                        if (Math.abs(param1[i]) > Math.abs(param1[i + 1])) {
                            final1.add(param1[i]);
                            i++;
                        } else {
                            final1.add(param1[i + 1]);
                            i++;
                        }
                    }
                } else {
                    final1.add(param1[i]);
                }
            }
        }
        int[] returnA = new int[final1.size()];
        for (int i = 0; i < final1.size(); i++) {
            returnA[i] = final1.get(i);
        }
        return method1(returnA);
    }
}
