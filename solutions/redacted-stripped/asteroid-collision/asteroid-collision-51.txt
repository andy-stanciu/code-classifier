class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> astStack = new Stack<>();
        for (int i = 0; i < param1.length; ) {
            int curr = param1[i];
            if (astStack.empty()) {
                astStack.push(curr);
                i++;
            } else {
                int last = astStack.peek();
                if (last > 0 && curr < 0) {
                    int currMag = Math.abs(curr);
                    if (currMag <= last)
                        i++;
                    if (currMag >= last)
                        astStack.pop();
                } else {
                    astStack.push(curr);
                    i++;
                }
            }
        }
        return stackToArray(astStack);
    }

    private int[] stackToArray(Stack<Integer> stack) {
        int[] result = new int[stack.size()];
        for (int i = stack.size() - 1; i >= 0; i--) result[i] = stack.pop();
        return result;
    }
}
