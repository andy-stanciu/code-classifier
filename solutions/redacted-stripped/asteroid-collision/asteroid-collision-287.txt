class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            if (stack.empty()) {
                stack.add(param1[i]);
                continue;
            }
            int facing = stack.peek();
            int incoming = param1[i];
            if (facing < 0 && incoming < 0) {
                stack.add(incoming);
                continue;
            }
            if (facing > 0 && incoming > 0) {
                stack.add(incoming);
                continue;
            }
            if (facing < 0 && incoming > 0) {
                stack.add(incoming);
                continue;
            }
            if (Math.abs(facing) == Math.abs(incoming)) {
                stack.pop();
                continue;
            }
            if (Math.abs(facing) > Math.abs(incoming)) {
                continue;
            }
            if (Math.abs(facing) < Math.abs(incoming)) {
                stack.pop();
                i--;
                continue;
            }
        }
        int[] res = new int[stack.size()];
        int idx = 0;
        for (int var1 : stack) {
            res[idx++] = var1;
        }
        return res;
    }
}
