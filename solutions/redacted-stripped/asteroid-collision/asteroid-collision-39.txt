class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int var2 : param1) {
            boolean canPush = true;
            while (!stack.isEmpty() && (stack.peek() * var2) < 0) {
                if (stack.peek() < 0 && var2 > 0)
                    break;
                int var1 = Math.abs(var2);
                int absTop = Math.abs(stack.peek());
                if (var1 > absTop)
                    stack.pop();
                else if (var1 == absTop) {
                    stack.pop();
                    canPush = false;
                    break;
                } else {
                    canPush = false;
                    break;
                }
            }
            if (canPush)
                stack.push(var2);
        }
        int size = stack.size();
        int[] result = new int[size];
        for (int i = size - 1; i >= 0; i--) result[i] = stack.pop();
        return result;
    }
}
