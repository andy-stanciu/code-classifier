class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            if (stack.isEmpty()) {
                stack.push(param1[i]);
            } else {
                if ((param1[i] > 0 && stack.peek() > 0) || (param1[i] < 0 && stack.peek() < 0)) {
                    stack.push(param1[i]);
                    continue;
                }
                if (param1[i] > 0) {
                    stack.push(param1[i]);
                } else {
                    int temp = stack.peek();
                    if (temp == Math.abs(param1[i])) {
                        stack.pop();
                    } else if (temp < Math.abs(param1[i])) {
                        stack.pop();
                        i--;
                    }
                }
            }
        }
        int[] result = new int[stack.size()];
        int count = stack.size() - 1;
        while (!stack.isEmpty()) {
            result[count--] = stack.pop();
        }
        return result;
    }
}
