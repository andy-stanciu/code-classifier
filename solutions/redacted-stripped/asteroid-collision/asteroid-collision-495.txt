class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        int i = 1;
        stack.push(param1[0]);
        while (i < param1.length) {
            if (stack.isEmpty() || i < param1.length && !(stack.peek() > 0 && param1[i] < 0)) {
                stack.push(param1[i++]);
                continue;
            } else if (-param1[i] > stack.peek()) {
                stack.pop();
                continue;
            } else if (param1[i] + stack.peek() == 0) {
                stack.pop();
                i++;
                continue;
            } else {
                i++;
            }
        }
        int[] ans = new int[stack.size()];
        int p = 0;
        Stack<Integer> stack2 = new Stack<>();
        while (!stack.isEmpty()) {
            stack2.push(stack.pop());
        }
        while (!stack2.isEmpty()) {
            ans[p++] = stack2.pop();
        }
        return ans;
    }
}
