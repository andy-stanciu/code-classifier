class Solution {

    public int[] method1(int[] param1) {
        int n = param1.length;
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            while (!st.isEmpty() && st.peek() > 0 && param1[i] < 0) {
                if (!st.isEmpty() && st.peek() + param1[i] < 0) {
                    st.pop();
                } else if (!st.isEmpty() && st.peek() + param1[i] == 0) {
                    param1[i] = 0;
                    st.pop();
                } else {
                    param1[i] = 0;
                }
            }
            if (param1[i] != 0) {
                st.push(param1[i]);
            }
        }
        int[] ans = new int[st.size()];
        int i = ans.length - 1;
        while (!st.isEmpty()) {
            ans[i] = st.pop();
            i--;
        }
        return ans;
    }
}
