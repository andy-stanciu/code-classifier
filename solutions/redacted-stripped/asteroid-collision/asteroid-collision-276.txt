class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> s = new Stack<>();
        int n = param1.length;
        for (int i = 0; i < n; i++) {
            if (s.isEmpty()) {
                s.push(param1[i]);
            } else if (s.peek() > 0 && param1[i] < 0 && s.peek() + param1[i] > 0) {
                s.push(param1[i]);
                s.pop();
            } else if (s.peek() > 0 && param1[i] < 0 && s.peek() + param1[i] == 0) {
                s.pop();
            } else if (s.peek() > 0 && param1[i] < 0 && s.peek() + param1[i] < 0) {
                s.pop();
                i--;
            } else
                s.push(param1[i]);
        }
        int[] ans = new int[s.size()];
        for (int i = s.size() - 1; i >= 0; i--) {
            ans[i] = s.peek();
            if (!s.isEmpty()) {
                s.pop();
            }
        }
        return ans;
    }
}
