class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> s = new Stack<>();
        if (param1.length != 0)
            s.push(param1[0]);
        for (int i = 1; i < param1.length; i++) {
            if (!s.isEmpty()) {
                if (s.peek() > 0 && param1[i] > 0)
                    s.push(param1[i]);
                else if (s.peek() < 0 && param1[i] < 0)
                    s.push(param1[i]);
                else if (s.peek() > 0 && param1[i] < 0) {
                    if (Math.abs(param1[i]) > s.peek()) {
                        s.pop();
                        if (s.isEmpty()) {
                            s.push(param1[i]);
                            continue;
                        }
                        i--;
                    } else if (Math.abs(param1[i]) == s.peek())
                        s.pop();
                    else
                        continue;
                } else if (s.peek() < 0 && param1[i] > 0)
                    s.push(param1[i]);
            } else if (i <= param1.length - 1)
                s.push(param1[i]);
        }
        Integer[] arr = s.toArray(new Integer[s.size()]);
        int[] a = new int[arr.length];
        for (int i = 0; i < arr.length; i++) a[i] = arr[i];
        return a;
    }
}
