class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int ast : param1) {
            if (stack.isEmpty() || method2(stack.peek(), ast)) {
                stack.push(ast);
            } else {
                while (!stack.isEmpty() && stack.peek() > 0 && stack.peek() < Math.abs(ast)) {
                    stack.pop();
                }
                if (stack.isEmpty() || stack.peek() < 0) {
                    stack.push(ast);
                } else if (stack.peek() == Math.abs(ast)) {
                    stack.pop();
                }
            }
        }
        int[] result = new int[stack.size()];
        while (!stack.isEmpty()) {
            result[stack.size() - 1] = stack.pop();
        }
        return result;
    }

    private boolean method2(int a, int b) {
        return (a > 0 && b > 0) || (a < 0 && b < 0) || (a < 0 && b > 0);
    }
}
