class Solution {

    public int[] method1(int[] param1) {
        Deque<Integer> deque = new LinkedList<>();
        for (int var1 : param1) {
            if (var1 > 0) {
                deque.addLast(var1);
            } else {
                while (!deque.isEmpty() && deque.peekLast() > 0 && Math.abs(var1) > deque.peekLast()) {
                    deque.removeLast();
                }
                if (!deque.isEmpty() && deque.peekLast() == Math.abs(var1)) {
                    deque.removeLast();
                } else if (deque.isEmpty() || deque.peekLast() < 0) {
                    deque.addLast(var1);
                }
            }
        }
        int[] result = new int[deque.size()];
        for (int i = 0; i < result.length; i++) {
            result[i] = deque.removeFirst();
        }
        return result;
    }
}
