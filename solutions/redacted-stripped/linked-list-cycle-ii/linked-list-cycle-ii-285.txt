public class Solution {

    public ListNode method1(ListNode head) {
        ListNode fast = head;
        ListNode slow = head;
        while (fast != null && fast.next != null) {
            fast = fast.next.next;
            slow = slow.next;
            if (fast == slow) {
                int length = method2(slow);
                return method3(head, length);
            }
        }
        return null;
    }

    private int method2(ListNode slow) {
        ListNode current = slow;
        int length = 0;
        do {
            current = current.next;
            length++;
        } while (current != slow);
        return length;
    }

    private ListNode method3(ListNode head, int method2) {
        ListNode pointer1 = head;
        ListNode pointer2 = head;
        for (int i = 0; i < method2; i++) {
            pointer2 = pointer2.next;
        }
        while (pointer1 != pointer2) {
            pointer1 = pointer1.next;
            pointer2 = pointer2.next;
        }
        return pointer1;
    }
}
