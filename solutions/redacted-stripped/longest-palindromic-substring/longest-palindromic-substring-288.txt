class Solution {

    static int solve(int i, int j, String s, int[][] dp) {
        if (i >= j)
            return 1;
        if (i >= s.length() || j < 0)
            return 0;
        if (dp[i][j] != -1)
            return dp[i][j];
        if (s.charAt(i) == s.charAt(j)) {
            i++;
            j--;
            return dp[i][j] = solve(i, j, s, dp);
        }
        return dp[i][j];
    }

    public String method1(String s) {
        int mlen = Integer.MIN_VALUE;
        int st = 0;
        int[][] dp = new int[s.length()][s.length()];
        for (int[] row : dp) Arrays.fill(row, -1);
        for (int i = 0; i < s.length(); i++) {
            for (int j = i; j < s.length(); j++) {
                if (solve(i, j, s, dp) == 1) {
                    if (j - i + 1 > mlen) {
                        mlen = j - i + 1;
                        st = i;
                    }
                }
            }
        }
        return s.substring(st, st + mlen);
    }
}
