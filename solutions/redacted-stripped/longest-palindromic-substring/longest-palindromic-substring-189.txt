class Solution {

    public String method1(String s) {
        int n = s.length();
        if (n == 0)
            return "";
        int max = 1;
        StringBuilder sb = new StringBuilder(s.substring(0, 1));
        for (int i = 0; i < n; i++) {
            for (int j = i + max; j < n; j++) {
                if (s.charAt(i) == s.charAt(j)) {
                    if (isPalindrom(s, i, j)) {
                        sb.setLength(0);
                        sb.append(s.substring(i, j + 1));
                        max = sb.length();
                    }
                }
            }
        }
        return sb.toString();
    }

    private boolean isPalindrom(String s, int i, int j) {
        while (i < j) {
            if (s.charAt(i) != s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}
