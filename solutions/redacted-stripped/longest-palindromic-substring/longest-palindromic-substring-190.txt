public class Solution {

    public String method1(String s) {
        int l;
        int h;
        int n = s.length();
        if (n == 0)
            return "";
        String max = String.valueOf(s.charAt(0));
        for (int i = 0; i < n; i++) {
            l = i - 1;
            h = i + 1;
            max = findPalindrome(l, h, max, s, n);
            l = i - 1;
            h = i;
            max = findPalindrome(l, h, max, s, n);
            l = i;
            h = i + 1;
            max = findPalindrome(l, h, max, s, n);
        }
        return max;
    }

    public String findPalindrome(int l, int h, String max, String s, int n) {
        while (l >= 0 && h < n && s.charAt(l) == s.charAt(h)) {
            if (h - l >= max.length()) {
                max = s.substring(l, h + 1);
            }
            l--;
            h++;
        }
        return max;
    }
}
