class Solution {

    public String method1(String s) {
        String reversed_s = new StringBuilder(s).reverse().toString();
        if (s.equals(reversed_s))
            return s;
        int[][] dp = new int[s.length() + 1][s.length() + 1];
        int maxLength = 0;
        int endIndex = 0;
        for (int i = 1; i <= s.length(); i++) {
            for (int j = 1; j <= reversed_s.length(); j++) {
                if (s.charAt(i - 1) == reversed_s.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                    if (dp[i][j] > maxLength) {
                        int i_start = i - dp[i][j];
                        int j_end = j;
                        if (i_start == s.length() - j_end) {
                            maxLength = dp[i][j];
                            endIndex = i;
                        }
                    }
                } else {
                    dp[i][j] = 0;
                }
            }
        }
        return s.substring(endIndex - maxLength, endIndex);
    }
}
