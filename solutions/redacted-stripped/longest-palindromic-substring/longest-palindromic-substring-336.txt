class Solution {

    public String method1(String s) {
        int n = s.length();
        int[] pair = new int[2];
        for (int i = 0; i < n; i++) {
            int[] pair1 = method2(i, i, s, n);
            int[] pair2 = method2(i, i + 1, s, n);
            if ((pair1[1] - pair1[0]) > (pair2[1] - pair2[0]) && (pair1[1] - pair1[0]) > (pair[1] - pair[0])) {
                pair[0] = pair1[0];
                pair[1] = pair1[1];
            } else if ((pair2[1] - pair2[0]) > (pair1[1] - pair1[0]) && (pair2[1] - pair2[0]) > (pair[1] - pair[0])) {
                pair[0] = pair2[0];
                pair[1] = pair2[1];
            }
        }
        return s.substring(pair[0], pair[1] + 1);
    }

    private int[] method2(int j, int k, String s, int n) {
        while (j >= 0 && k < n && s.charAt(j) == s.charAt(k)) {
            j--;
            k++;
        }
        return new int[] { j + 1, k - 1 };
    }
}
