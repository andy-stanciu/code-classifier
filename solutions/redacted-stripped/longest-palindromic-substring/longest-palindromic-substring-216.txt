class Solution {

    public String method1(String s) {
        char[] c = s.toCharArray();
        int maxLeft = 0, maxRange = 1, tempLeft = 0, tempRight = 0, tempRange = 1;
        for (int i = 0; i < c.length - (maxRange / 2); ++i) {
            tempLeft = tempRight = i;
            while (tempLeft != 0 && tempRight != c.length - 1 && c[tempLeft - 1] == c[tempRight + 1]) {
                --tempLeft;
                ++tempRight;
            }
            tempRange = 2 * (i - tempLeft) + 1;
            if (tempRange > maxRange) {
                maxRange = tempRange;
                maxLeft = tempLeft;
            }
            if (i + 1 < c.length && c[i] == c[i + 1]) {
                tempLeft = i;
                tempRight = i + 1;
                while (tempLeft != 0 && tempRight != c.length - 1 && c[tempLeft - 1] == c[tempRight + 1]) {
                    --tempLeft;
                    ++tempRight;
                }
                tempRange = 2 * (i - tempLeft + 1);
                if (tempRange > maxRange) {
                    maxRange = tempRange;
                    maxLeft = tempLeft;
                }
            }
        }
        return s.substring(maxLeft, maxLeft + maxRange);
    }
}
