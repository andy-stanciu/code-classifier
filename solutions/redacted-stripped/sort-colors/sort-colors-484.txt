class Solution {

    public void method1(int[] nums) {
        method2(nums, 0, nums.length);
    }

    private void method2(int[] arr, int l, int r) {
        if (r - l < 2)
            return;
        int m = (l + r) / 2;
        method2(arr, l, m);
        method2(arr, m, r);
        merge(arr, l, m, r);
    }

    private void merge(int[] arr, int l, int m, int r) {
        if (arr[m - 1] <= arr[m])
            return;
        int i = l;
        int j = m;
        int tempIdx = 0;
        int[] temp = new int[r - l];
        while (i < m && j < r) {
            temp[tempIdx++] = arr[i] < arr[j] ? arr[i++] : arr[j++];
        }
        System.arraycopy(arr, i, arr, l + tempIdx, m - i);
        System.arraycopy(temp, 0, arr, l, tempIdx);
    }
}
