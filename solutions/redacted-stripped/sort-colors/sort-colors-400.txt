class Solution {

    public void swap(int[] arr, int a, int b) {
        int temp = arr[a];
        arr[a] = arr[b];
        arr[b] = temp;
    }

    public void method1(int[] nums) {
        method2(nums, 0, nums.length - 1);
    }

    public void method2(int[] nums, int lb, int ub) {
        if (lb < ub) {
            int loc = partition(nums, lb, ub);
            method2(nums, lb, loc - 1);
            method2(nums, loc + 1, ub);
        }
    }

    public int partition(int[] arr, int lb, int ub) {
        int pivot = arr[lb];
        int start = lb;
        int end = ub;
        while (start < end) {
            while (arr[start] <= pivot && start < ub) {
                start++;
            }
            while (arr[end] > pivot) {
                end--;
            }
            if (start < end) {
                swap(arr, start, end);
            }
        }
        swap(arr, lb, end);
        return end;
    }
}
