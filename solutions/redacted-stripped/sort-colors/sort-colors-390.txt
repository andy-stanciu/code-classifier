class Solution {

    public void method1(int[] nums) {
        divide(nums);
    }

    public static void divide(int[] nums) {
        int midindex = nums.length / 2;
        int[] leftarray = new int[midindex];
        int[] rightarray = new int[nums.length - midindex];
        if (nums.length < 2) {
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (i < midindex) {
                leftarray[i] = nums[i];
            } else {
                rightarray[i - midindex] = nums[i];
            }
        }
        divide(leftarray);
        divide(rightarray);
        method2(nums, leftarray, rightarray);
    }

    public static void method2(int[] nums, int[] left, int[] right) {
        int i = 0;
        int j = 0;
        int k = 0;
        int leftlen = left.length;
        int rightlen = right.length;
        while (rightlen > j && leftlen > i) {
            if (left[i] < right[j]) {
                nums[k] = left[i];
                i++;
            } else {
                nums[k] = right[j];
                j++;
            }
            k++;
        }
        while (i < leftlen) {
            nums[k] = left[i];
            i++;
            k++;
        }
        while (j < rightlen) {
            nums[k] = right[j];
            j++;
            k++;
        }
    }
}
