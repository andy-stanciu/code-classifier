class Solution {

    public int method1(int[] nums) {
        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            int last = nums.length - i - 1;
            int maxi = maxiN(nums, last);
            swap(maxi, last, nums);
            if (last + 1 < nums.length && nums[last] != nums[last + 1]) {
                count++;
            }
            if (count == 2) {
                return nums[last];
            }
        }
        return nums[nums.length - 1];
    }

    public void swap(int i, int j, int[] nums) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    public int maxiN(int[] nums, int last) {
        int maxi = Integer.MIN_VALUE, l = 0;
        for (int i = 0; i <= last; i++) {
            if (maxi < nums[i]) {
                maxi = nums[i];
                l = i;
            }
        }
        return l;
    }
}
