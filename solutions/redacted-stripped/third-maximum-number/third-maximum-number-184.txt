class Solution {

    public void merge(int[] a, int[] b, int[] c) {
        int i = 0, j = 0, k = 0;
        while (i < a.length && j < b.length) {
            if (a[i] <= b[j])
                c[k++] = a[i++];
            else
                c[k++] = b[j++];
        }
        while (i < a.length) c[k++] = a[i++];
        while (j < b.length) c[k++] = b[j++];
    }

    public void mergesort(int[] arr) {
        int n = arr.length;
        if (n == 1) {
            return;
        }
        int[] a = new int[n / 2];
        int[] b = new int[n - n / 2];
        for (int i = 0; i < n / 2; i++) {
            a[i] = arr[i];
        }
        for (int i = 0; i < n - n / 2; i++) {
            b[i] = arr[i + n / 2];
        }
        mergesort(a);
        mergesort(b);
        merge(a, b, arr);
    }

    public int method1(int[] nums) {
        mergesort(nums);
        int n = nums.length;
        int count = 0;
        for (int i = n - 1; i > 0; i--) {
            if (nums[i] != nums[i - 1])
                count++;
            if (count == 2)
                return nums[i - 1];
        }
        return nums[n - 1];
    }
}
