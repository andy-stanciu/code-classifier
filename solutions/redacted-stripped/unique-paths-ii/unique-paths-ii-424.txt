class Solution {

    Integer[][] memo;

    public int method1(int[][] obstacleGrid) {
        int m = obstacleGrid.length, n = obstacleGrid[0].length;
        memo = new Integer[m][n];
        return helper(m - 1, n - 1, obstacleGrid);
    }

    int helper(int m, int n, int[][] obstacleGrid) {
        if (m < 0 || n < 0 || obstacleGrid[m][n] == 1)
            return 0;
        if (memo[m][n] != null)
            return memo[m][n];
        if (m == 0 && n == 0)
            return memo[m][n] = 1;
        int res = 0;
        if (m - 1 >= 0 && obstacleGrid[m - 1][n] == 0)
            res += helper(m - 1, n, obstacleGrid);
        if (n - 1 >= 0 && obstacleGrid[m][n - 1] == 0)
            res += helper(m, n - 1, obstacleGrid);
        return memo[m][n] = res;
    }
}
