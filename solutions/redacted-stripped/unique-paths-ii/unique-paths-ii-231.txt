class Solution {

    public int method1(int[][] obstacleGrid) {
        int n = obstacleGrid.length;
        int m = obstacleGrid[0].length;
        int[][] memo = new int[n][m];
        for (int[] row : memo) Arrays.fill(row, -1);
        return method2(0, 0, obstacleGrid.length, obstacleGrid[0].length, obstacleGrid, memo);
    }

    public int method2(int i, int j, int n, int m, int[][] obstacleGrid, int[][] memo) {
        if (i >= n || j >= m || obstacleGrid[i][j] == 1)
            return 0;
        if (i == n - 1 && j == m - 1)
            return 1;
        if (memo[i][j] != -1)
            return memo[i][j];
        memo[i][j] = method2(i + 1, j, n, m, obstacleGrid, memo) + method2(i, j + 1, n, m, obstacleGrid, memo);
        return memo[i][j];
    }
}
