class Solution {

    public int method1(int[][] mat) {
        int n = mat.length;
        int m = mat[0].length;
        int[][] dp = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                dp[i][j] = -1;
            }
        }
        if (mat[n - 1][m - 1] == 1) {
            return 0;
        }
        return find(mat, n, m, 0, 0, dp);
    }

    public int find(int[][] mat, int n, int m, int sr, int sc, int[][] dp) {
        if (sr == n - 1 && sc == m - 1) {
            return 1;
        }
        if (sr >= n || sc >= m) {
            return 0;
        }
        if (mat[sr][sc] == 1) {
            return 0;
        }
        if (dp[sr][sc] != -1) {
            return dp[sr][sc];
        }
        dp[sr][sc] = find(mat, n, m, sr + 1, sc, dp) + find(mat, n, m, sr, sc + 1, dp);
        return dp[sr][sc];
    }
}
