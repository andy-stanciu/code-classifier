class Solution {

    public int method1(int[][] obstacleGrid) {
        int rows = obstacleGrid.length;
        int cols = obstacleGrid[0].length;
        int[][] dp = new int[101][101];
        if (obstacleGrid[0][0] == 1)
            return 0;
        else {
            if (rows == 1 && cols == 1)
                return 1;
            else
                dp[0][0] = 1;
        }
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (obstacleGrid[i][j] == 1) {
                    dp[i][j] = 0;
                } else if (i == 0 && j != 0) {
                    dp[i][j] = dp[i][j - 1];
                } else if (j == 0 && i != 0) {
                    dp[i][j] = dp[i - 1][j];
                } else if (i > 0 && j > 0) {
                    dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
                }
            }
        }
        return dp[rows - 1][cols - 1];
    }
}
