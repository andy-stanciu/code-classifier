class Solution {

    int ans;

    int m;

    int n;

    int[][] memo;

    public int method1(int[][] obstacleGrid) {
        m = obstacleGrid.length;
        n = obstacleGrid[0].length;
        memo = new int[m + 1][n + 1];
        for (int[] mem : memo) Arrays.fill(mem, -1);
        if (obstacleGrid[m - 1][n - 1] == 1)
            return 0;
        return solve(obstacleGrid, 0, 0);
    }

    public int solve(int[][] grid, int row, int col) {
        if (row >= m || col >= n)
            return 0;
        if (grid[row][col] == 1)
            return 0;
        if (row == m - 1 && col == n - 1)
            return 1;
        if (memo[row][col] != -1)
            return memo[row][col];
        return memo[row][col] = solve(grid, row + 1, col) + solve(grid, row, col + 1);
    }
}
