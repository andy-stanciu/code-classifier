class Solution {

    int[][] dp;

    public int helper(int[][] grid, int row, int col) {
        int n = grid.length, m = grid[0].length;
        if (row >= n || col >= m || row < 0 || col < 0)
            return 0;
        if (row == n - 1 && col == m - 1) {
            if (grid[row][col] == 1)
                return 0;
            return 1;
        }
        if (grid[row][col] == 1)
            return 0;
        if (dp[row][col] != -1)
            return dp[row][col];
        int numways = 0;
        numways += helper(grid, row + 1, col);
        numways += helper(grid, row, col + 1);
        return dp[row][col] = numways;
    }

    public int method1(int[][] grid) {
        dp = new int[grid.length][grid[0].length];
        for (int[] row : dp) Arrays.fill(row, -1);
        return helper(grid, 0, 0);
    }
}
