class Solution {

    public int recur(int row, int col, int[][] dp, int[][] grid) {
        if (row < 0 || col < 0)
            return 0;
        if (grid[row][col] == 1)
            return 0;
        if (row == 0 && col == 0)
            return 1;
        if (dp[row][col] != -1)
            return dp[row][col];
        dp[row][col] = recur(row - 1, col, dp, grid) + recur(row, col - 1, dp, grid);
        return dp[row][col];
    }

    public int method1(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        int[][] dp = new int[m][n];
        for (int[] row : dp) Arrays.fill(row, -1);
        return recur(m - 1, n - 1, dp, obstacleGrid);
    }
}
