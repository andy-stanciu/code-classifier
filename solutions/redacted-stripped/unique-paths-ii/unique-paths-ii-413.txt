class Solution {

    public int check(int[][] a, int i, int j, int[][] dp) {
        int count = 0;
        if (i >= a.length || j >= a[0].length || a[i][j] == 1) {
            return count;
        } else if (dp[i][j] != -1) {
            return dp[i][j];
        } else if (i == a.length - 1 && j == a[0].length - 1) {
            return 1;
        } else {
            count += check(a, i + 1, j, dp);
            count += check(a, i, j + 1, dp);
        }
        dp[i][j] = count;
        return count;
    }

    public int method1(int[][] obstacleGrid) {
        int[][] dp = new int[obstacleGrid.length][obstacleGrid[0].length];
        for (int[] a : dp) {
            Arrays.fill(a, -1);
        }
        return check(obstacleGrid, 0, 0, dp);
    }
}
