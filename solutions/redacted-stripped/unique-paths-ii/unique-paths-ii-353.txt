class Solution {

    public int method1(int[][] obstacleGrid) {
        int[][] ansArray = new int[obstacleGrid.length][obstacleGrid[0].length];
        int ans = method2(obstacleGrid, 0, 0, ansArray);
        return ans;
    }

    public int method2(int[][] obstacleGrid, int row, int col, int[][] ansArray) {
        if (obstacleGrid[row][col] == 1)
            return 0;
        if (row == obstacleGrid.length - 1 && col == obstacleGrid[0].length - 1)
            return 1;
        int down = 0, right = 0;
        if (col + 1 <= obstacleGrid[0].length - 1) {
            if (ansArray[row][col + 1] == 0)
                right = method2(obstacleGrid, row, col + 1, ansArray);
            else
                right = ansArray[row][col + 1];
        }
        if (row + 1 <= obstacleGrid.length - 1) {
            if (ansArray[row + 1][col] == 0)
                down = method2(obstacleGrid, row + 1, col, ansArray);
            else
                down = ansArray[row + 1][col];
        }
        ansArray[row][col] = down + right;
        return down + right;
    }
}
