class Solution {

    public int method1(int[][] obstacleGrid) {
        if (obstacleGrid[0][0] == 1)
            return 0;
        int[][] dp = new int[obstacleGrid.length][obstacleGrid[0].length];
        for (int[] arr : dp) {
            Arrays.fill(arr, -1);
        }
        return method2(obstacleGrid, obstacleGrid.length - 1, obstacleGrid[0].length - 1, dp);
    }

    public int method2(int[][] obs, int i, int j, int[][] dp) {
        if (i == 0 && j == 0) {
            return 1;
        }
        if (i < 0 || j < 0) {
            return 0;
        }
        if (obs[i][j] == 1) {
            return 0;
        }
        if (dp[i][j] != -1)
            return dp[i][j];
        int up = method2(obs, i - 1, j, dp);
        int left = method2(obs, i, j - 1, dp);
        return dp[i][j] = up + left;
    }
}
