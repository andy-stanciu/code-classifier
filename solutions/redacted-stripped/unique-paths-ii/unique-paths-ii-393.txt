class Solution {

    public int method1(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        int[][] dp = new int[m][n];
        for (int[] arr : dp) {
            Arrays.fill(arr, -1);
        }
        return ans(obstacleGrid, m - 1, n - 1, dp);
    }

    public int ans(int[][] grid, int i, int j, int[][] dp) {
        if (i < 0 || j < 0) {
            return 0;
        }
        if (i == 0 && j == 0 && grid[i][j] == 0) {
            return 1;
        }
        if (grid[i][j] == 1) {
            return 0;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        int x = ans(grid, i - 1, j, dp);
        int y = ans(grid, i, j - 1, dp);
        return dp[i][j] = x + y;
    }
}
