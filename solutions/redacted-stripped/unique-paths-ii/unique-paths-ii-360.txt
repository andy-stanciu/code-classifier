class Solution {

    public int method1(int[][] obstacleGrid) {
        int row = obstacleGrid.length, col = obstacleGrid[0].length;
        int[][] dp = new int[row][col];
        return findPath(dp, 0, 0, obstacleGrid);
    }

    public int findPath(int[][] dp, int row, int col, int[][] arr) {
        if (row == dp.length || col == dp[0].length)
            return 0;
        if (arr[row][col] == 1)
            return 0;
        if (dp[row][col] != 0)
            return dp[row][col];
        if (row == dp.length - 1 && col == dp[0].length - 1)
            return 1;
        int right = findPath(dp, row, col + 1, arr);
        int left = findPath(dp, row + 1, col, arr);
        dp[row][col] = left + right;
        return dp[row][col];
    }
}
