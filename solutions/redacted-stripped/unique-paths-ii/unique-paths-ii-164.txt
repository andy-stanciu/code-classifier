class Solution {

    private int[][] vi;

    public int method1(int[][] obstacleGrid) {
        vi = new int[obstacleGrid.length][obstacleGrid[0].length];
        for (int[] r : vi) {
            Arrays.fill(r, -1);
        }
        return back(obstacleGrid, 0, 0);
    }

    public int back(int[][] grid, int r, int c) {
        if (r >= grid.length || c >= grid[0].length || grid[r][c] == 1) {
            return 0;
        }
        if (r == grid.length - 1 && c == grid[0].length - 1) {
            return 1;
        }
        if (vi[r][c] != -1) {
            return vi[r][c];
        }
        int down = back(grid, r + 1, c);
        int right = back(grid, r, c + 1);
        vi[r][c] = down + right;
        return vi[r][c];
    }
}
