class Solution {

    public int method1(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        int[][] dp = new int[m][n];
        for (int[] rows : dp) {
            Arrays.fill(rows, -1);
        }
        return method2(m - 1, n - 1, dp, obstacleGrid);
    }

    public int method2(int i, int j, int[][] dp, int[][] obstacleGrid) {
        if (i < 0 || j < 0 || obstacleGrid[i][j] == 1)
            return 0;
        if (i == 0 && j == 0)
            return 1;
        if (dp[i][j] != -1)
            return dp[i][j];
        int left = method2(i - 1, j, dp, obstacleGrid);
        int right = method2(i, j - 1, dp, obstacleGrid);
        return dp[i][j] = left + right;
    }
}
