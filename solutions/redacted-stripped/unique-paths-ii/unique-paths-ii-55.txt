class Solution {

    public int method1(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        int[][] grid = new int[m][n];
        if (obstacleGrid[0][0] == 0) {
            grid[0][0] = 1;
        } else {
            grid[0][0] = 0;
        }
        for (int i = 1; i < n; i++) {
            if (obstacleGrid[0][i] == 0) {
                grid[0][i] = grid[0][i - 1];
            }
        }
        for (int j = 1; j < m; j++) {
            if (obstacleGrid[j][0] == 0) {
                grid[j][0] = grid[j - 1][0];
            }
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (obstacleGrid[i][j] == 0) {
                    grid[i][j] = grid[i - 1][j] + grid[i][j - 1];
                }
            }
        }
        return grid[m - 1][n - 1];
    }
}
