class Solution {

    public int method1(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        if (obstacleGrid[m - 1][n - 1] == 1)
            return 0;
        int[][] tab = new int[m][n];
        tab[m - 1][n - 1] = 1;
        for (int i = m - 2; i >= 0; i--) {
            if (obstacleGrid[i][n - 1] == 1) {
                tab[i][n - 1] = 0;
            } else {
                tab[i][n - 1] = tab[i + 1][n - 1];
            }
        }
        for (int j = n - 2; j >= 0; j--) {
            if (obstacleGrid[m - 1][j] == 1) {
                tab[m - 1][j] = 0;
            } else {
                tab[m - 1][j] = tab[m - 1][j + 1];
            }
        }
        for (int i = m - 2; i >= 0; i--) {
            for (int j = n - 2; j >= 0; j--) {
                if (obstacleGrid[i][j] == 1) {
                    tab[i][j] = 0;
                } else {
                    tab[i][j] = tab[i + 1][j] + tab[i][j + 1];
                }
            }
        }
        return tab[0][0];
    }
}
