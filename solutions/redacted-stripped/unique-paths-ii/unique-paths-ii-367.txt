class Solution {

    public int method1(int[][] obstacleGrid) {
        int rowCount = obstacleGrid.length;
        int colCount = obstacleGrid[0].length;
        int[][] dp = new int[rowCount][colCount];
        for (int row = 0; row < dp.length; row++) {
            for (int col = 0; col < dp[row].length; col++) {
                if (obstacleGrid[row][col] == 1) {
                    dp[row][col] = 0;
                    continue;
                }
                if (row == 0 && col == 0) {
                    dp[0][0] = 1;
                } else {
                    int leftCellVal = row == 0 ? 0 : dp[row - 1][col];
                    int topCellVal = col == 0 ? 0 : dp[row][col - 1];
                    dp[row][col] = leftCellVal + topCellVal;
                }
            }
        }
        return dp[rowCount - 1][colCount - 1];
    }
}
