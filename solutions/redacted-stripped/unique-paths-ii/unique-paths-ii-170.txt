class Solution {

    public int method1(int[][] obstacleGrid) {
        int n = obstacleGrid.length;
        int m = obstacleGrid[0].length;
        int[][] memo = new int[n][m];
        for (int[] row : memo) {
            Arrays.fill(row, -1);
        }
        return gridWays(obstacleGrid, memo, n - 1, m - 1);
    }

    public int gridWays(int[][] obstacleGrid, int[][] memo, int n, int m) {
        if (n < 0 || m < 0 || obstacleGrid[n][m] == 1) {
            return 0;
        }
        if (n == 0 && m == 0) {
            return 1;
        }
        if (memo[n][m] != -1) {
            return memo[n][m];
        }
        int fromTop = gridWays(obstacleGrid, memo, n - 1, m);
        int fromLeft = gridWays(obstacleGrid, memo, n, m - 1);
        memo[n][m] = fromTop + fromLeft;
        return memo[n][m];
    }
}
