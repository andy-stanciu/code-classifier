class Solution {

    int[][] dp = new int[105][105];

    public int method1(int[][] obstacleGrid) {
        if (obstacleGrid[0][0] == 1)
            return 0;
        for (int[] ar : dp) Arrays.fill(ar, -1);
        return solve(obstacleGrid, 0, 0, obstacleGrid.length, obstacleGrid[0].length);
    }

    public int solve(int[][] arr, int r, int c, int n, int m) {
        if (r == n || c == m || arr[r][c] == 1)
            return 0;
        if (r == n - 1 && c == m - 1 && arr[r][c] != 1) {
            return 1;
        }
        if (dp[r][c] != -1)
            return dp[r][c];
        int a = solve(arr, r + 1, c, n, m);
        int b = solve(arr, r, c + 1, n, m);
        return dp[r][c] = a + b;
    }
}
