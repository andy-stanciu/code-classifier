class Solution {

    public double myPow(double x, int n) {
        if (n == 1) {
            return x;
        }
        if (x == 0) {
            return 0;
        }
        if (x == -1) {
            return (n % 2) == 0 ? 1 : -1;
        }
        if (n == 0 || x == 1) {
            return 1;
        }
        double ans = 0;
        if (x == 2) {
            int shift = Math.abs(n);
            if (n > 0) {
                return 2 << (shift - 1);
            }
            if (Math.abs(n / Integer.MAX_VALUE) > 0) {
                return 0;
            }
            return 2d / (2 << (shift));
        }
        if (n < 0) {
            ans = 1 / myPow(x, -n);
        } else if (n % 2 == 1) {
            ans = x * myPow(x, n - 1);
        } else {
            ans = myPow(x, n / 2);
            ans = ans * ans;
        }
        return ans;
    }
}
