class Solution {

    public int method1(int[] arr, int target) {
        Arrays.sort(arr);
        int n = arr.length;
        int minDiff = Integer.MAX_VALUE;
        int tempDiff = 0;
        int result = 0;
        int i = 0;
        while (i < n) {
            int j = i + 1;
            int k = n - 1;
            int newTarget = target - arr[i];
            while (j < k) {
                if (arr[j] + arr[k] > newTarget) {
                    tempDiff = (arr[i] + arr[j] + arr[k]) - target;
                    if (tempDiff < minDiff) {
                        minDiff = tempDiff;
                        result = arr[i] + arr[j] + arr[k];
                    }
                    k--;
                } else if (arr[j] + arr[k] < newTarget) {
                    tempDiff = target - (arr[i] + arr[j] + arr[k]);
                    if (tempDiff < minDiff) {
                        minDiff = tempDiff;
                        result = arr[i] + arr[j] + arr[k];
                    }
                    j++;
                } else {
                    return target;
                }
            }
            int temp = arr[i];
            while (arr[i] == temp) {
                i++;
                if (i >= n) {
                    break;
                }
            }
        }
        return result;
    }
}
