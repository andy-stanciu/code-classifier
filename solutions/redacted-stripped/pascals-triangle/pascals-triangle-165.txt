class Solution {

    private Map<Integer, List<Integer>> pascalMap = new TreeMap<Integer, List<Integer>>();

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> output = new ArrayList<List<Integer>>();
        if (pascalMap.isEmpty()) {
            pascalMap.put(1, Arrays.asList(1));
        }
        for (int i = 1; i <= numRows; i++) {
            if (pascalMap.containsKey(i)) {
                output.add(pascalMap.get(i));
            } else {
                List<Integer> newRow = new ArrayList<Integer>();
                List<Integer> oldRow = pascalMap.get(i - 1);
                newRow.add(1);
                for (int j = 1; j < oldRow.size(); j++) {
                    newRow.add(oldRow.get(j) + oldRow.get(j - 1));
                }
                newRow.add(1);
                pascalMap.put(i, newRow);
                output.add(newRow);
            }
        }
        return output;
    }
}
