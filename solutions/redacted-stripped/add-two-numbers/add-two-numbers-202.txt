class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode itr = new ListNode(-1);
        ListNode head = itr;
        int sum = 0;
        int carry = 0;
        while (l1 != null && l2 != null) {
            sum = (l1.val + l2.val + carry) % 10;
            ListNode temp = new ListNode(sum);
            itr.next = temp;
            itr = temp;
            carry = (l1.val + l2.val + carry) / 10;
            l1 = l1.next;
            l2 = l2.next;
        }
        while (l1 != null) {
            sum = (l1.val + carry) % 10;
            ListNode temp = new ListNode(sum);
            itr.next = temp;
            itr = temp;
            carry = (l1.val + carry) / 10;
            l1 = l1.next;
        }
        while (l2 != null) {
            sum = (l2.val + carry) % 10;
            ListNode temp = new ListNode(sum);
            itr.next = temp;
            itr = temp;
            carry = (l2.val + carry) / 10;
            l2 = l2.next;
        }
        if (carry > 0) {
            ListNode temp = new ListNode(carry);
            itr.next = temp;
            itr = temp;
        }
        return head.next;
    }
}
