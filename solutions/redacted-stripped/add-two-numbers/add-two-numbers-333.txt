class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int sum = l1.val + l2.val;
        int carry = sum / 10;
        sum = sum % 10;
        ListNode resultHead = new ListNode(sum);
        ListNode traversalNode = resultHead;
        while (l1.next != null || l2.next != null) {
            traversalNode.next = new ListNode();
            traversalNode = traversalNode.next;
            boolean l1Next = l1.next != null;
            boolean l2Next = l2.next != null;
            l1 = l1Next ? l1.next : l1;
            l2 = l2Next ? l2.next : l2;
            int l1Val = l1Next ? l1.val : 0;
            int l2Val = l2Next ? l2.val : 0;
            sum = carry + l1Val + l2Val;
            carry = sum / 10;
            sum = sum % 10;
            traversalNode.val = (sum);
        }
        if (carry > 0) {
            traversalNode.next = new ListNode(carry);
        }
        return resultHead;
    }
}
