class Solution {

    ListNode head;

    ListNode tail;

    public void method1(int x) {
        ListNode newNode = new ListNode(x);
        if (head == null) {
            head = newNode;
            tail = newNode;
            return;
        }
        tail.next = newNode;
        tail = newNode;
    }

    public ListNode method2(ListNode l1, ListNode l2) {
        int carry = 0;
        while (l1 != null && l2 != null) {
            int sum = l1.val + l2.val + carry;
            method1(sum % 10);
            carry = sum / 10;
            l1 = l1.next;
            l2 = l2.next;
        }
        while (l1 != null) {
            int sum = l1.val + carry;
            method1(sum % 10);
            carry = sum / 10;
            l1 = l1.next;
        }
        while (l2 != null) {
            int sum = l2.val + carry;
            method1(sum % 10);
            carry = sum / 10;
            l2 = l2.next;
        }
        while (carry > 0) {
            method1(carry % 10);
            carry /= 10;
        }
        return head;
    }
}
