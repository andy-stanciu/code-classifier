class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode ans = l1;
        ListNode p1 = l1;
        ListNode p2 = l2;
        boolean over = false;
        while (p1 != null && p2 != null) {
            if (over) {
                p1.val += 1;
                over = false;
            }
            int sum = p1.val + p2.val;
            if (sum >= 10) {
                p1.val = sum % 10;
                over = true;
            } else {
                p1.val = sum;
            }
            p1 = p1.next;
            p2 = p2.next;
        }
        while (p1 != null) {
            if (over) {
                p1.val += 1;
                over = false;
            }
            if (p1.val == 10) {
                p1.val = 0;
                over = true;
            }
            p1 = p1.next;
        }
        ListNode t = ans;
        while (t.next != null) {
            t = t.next;
        }
        p1 = t;
        while (p2 != null) {
            if (over) {
                p2.val += 1;
                over = false;
            }
            if (p2.val == 10) {
                p1.next = new ListNode(0);
                over = true;
            } else {
                p1.next = new ListNode(p2.val);
            }
            p2 = p2.next;
            p1 = p1.next;
        }
        if (over) {
            p1.next = new ListNode(1);
        }
        return ans;
    }
}
