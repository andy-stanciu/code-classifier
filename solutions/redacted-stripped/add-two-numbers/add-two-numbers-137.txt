class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        StringBuilder sb1 = new StringBuilder();
        StringBuilder sb2 = new StringBuilder();
        while (l1 != null) {
            sb1.append(String.valueOf(l1.val));
            l1 = l1.next;
        }
        while (l2 != null) {
            sb2.append(String.valueOf(l2.val));
            l2 = l2.next;
        }
        sb1.reverse();
        sb2.reverse();
        BigInteger a = new BigInteger(sb1.toString());
        BigInteger b = new BigInteger(sb2.toString());
        BigInteger ans = a.add(b);
        StringBuilder sb = new StringBuilder(ans.toString());
        sb.reverse();
        ListNode head = null;
        ListNode current = null;
        int i = 0, len = sb.length();
        while (true) {
            if (i == len) {
                break;
            }
            if (head == null) {
                head = new ListNode(Character.getNumericValue((sb.toString()).charAt(i)));
                current = head;
            } else {
                current.next = new ListNode(Character.getNumericValue((sb.toString()).charAt(i)));
                current = current.next;
            }
            i++;
        }
        return head;
    }
}
