class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        ListNode head = null;
        ListNode temp = null;
        int rem = 0;
        int a = 0;
        while (temp1 != null && temp2 != null) {
            int sum = temp1.val + temp2.val;
            temp1 = temp1.next;
            temp2 = temp2.next;
            a = (sum + rem) % 10;
            rem = (sum + rem) / 10;
            ListNode newnode = new ListNode(a);
            if (head == null) {
                head = newnode;
                temp = head;
            } else {
                temp.next = newnode;
                temp = newnode;
            }
        }
        while (temp1 != null) {
            int sum = temp1.val;
            temp1 = temp1.next;
            a = (sum + rem) % 10;
            rem = (sum + rem) / 10;
            ListNode newnode = new ListNode(a);
            temp.next = newnode;
            temp = newnode;
        }
        while (temp2 != null) {
            int sum = temp2.val;
            temp2 = temp2.next;
            a = (sum + rem) % 10;
            rem = (sum + rem) / 10;
            ListNode newnode = new ListNode(a);
            temp.next = newnode;
            temp = newnode;
        }
        if (rem != 0) {
            ListNode newnode = new ListNode(rem);
            temp.next = newnode;
            temp = newnode;
        }
        return head;
    }
}
