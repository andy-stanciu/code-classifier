class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode t1 = l1;
        ListNode t2 = l2;
        ListNode t = new ListNode(0);
        ListNode temp = t;
        int carry = 0;
        while (t1 != null && t2 != null) {
            int sum = t1.val + t2.val + carry;
            int num = sum % 10;
            carry = sum / 10;
            ListNode a = new ListNode(num);
            temp.next = a;
            temp = a;
            t1 = t1.next;
            t2 = t2.next;
        }
        if (t1 == null && t2 == null && carry == 0)
            return t.next;
        if (t1 == null && t2 == null && carry != 0) {
            ListNode a = new ListNode(carry);
            temp.next = a;
            temp = a;
            return t.next;
        }
        while (t1 == null && t2 != null) {
            int sum = t2.val + carry;
            int num = sum % 10;
            carry = sum / 10;
            ListNode a = new ListNode(num);
            temp.next = a;
            temp = a;
            t2 = t2.next;
        }
        while (t2 == null && t1 != null) {
            int sum = t1.val + carry;
            int num = sum % 10;
            carry = sum / 10;
            ListNode a = new ListNode(num);
            temp.next = a;
            temp = a;
            t1 = t1.next;
        }
        while (t1 == null && t2 == null && carry != 0) {
            ListNode a = new ListNode(carry);
            temp.next = a;
            temp = a;
            return t.next;
        }
        return t.next;
    }
}
