class Solution {

    public ListNode method1(ListNode ll1, ListNode ll2) {
        int carry = 0;
        ListNode res = ll1;
        ListNode l1 = ll1, l2 = ll2;
        ListNode prev = null;
        while (l1 != null && l2 != null) {
            int sum = l1.val + l2.val + carry;
            l1.val = sum % 10;
            l2.val = sum % 10;
            carry = sum / 10;
            prev = l1;
            l1 = l1.next;
            l2 = l2.next;
        }
        while (l1 != null) {
            int sum = l1.val + carry;
            l1.val = sum % 10;
            carry = sum / 10;
            prev = l1;
            l1 = l1.next;
            res = ll1;
        }
        while (l2 != null) {
            int sum = l2.val + carry;
            l2.val = sum % 10;
            carry = sum / 10;
            prev = l2;
            l2 = l2.next;
            res = ll2;
        }
        if (carry != 0) {
            ListNode n = new ListNode(carry);
            n.next = null;
            prev.next = n;
        }
        return res;
    }
}
