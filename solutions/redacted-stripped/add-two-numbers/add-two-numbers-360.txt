class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int excess = 0;
        ListNode head = new ListNode();
        ListNode k = head;
        while (l1 != null || l2 != null) {
            int sum = excess;
            if (l1 != null)
                sum += l1.val;
            if (l2 != null)
                sum += l2.val;
            if (sum > 9) {
                int unitDigit = sum % 10;
                k.val = unitDigit;
                excess = (sum - unitDigit) / 10;
            } else {
                k.val = sum;
                excess = 0;
            }
            boolean newNode = false;
            if (l1 != null) {
                if (l1.next != null)
                    newNode = true;
                l1 = l1.next;
            }
            if (l2 != null) {
                if (l2.next != null)
                    newNode = true;
                l2 = l2.next;
            }
            if (newNode) {
                k.next = new ListNode();
                k = k.next;
            }
        }
        if (excess > 0) {
            k.next = new ListNode();
            k = k.next;
            k.val = excess;
        }
        return head;
    }
}
