class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode t1 = l1;
        ListNode t2 = l2;
        int k;
        int count = 0;
        ListNode head = new ListNode();
        ListNode temp = head;
        while (t1 != null && t2 != null) {
            k = t1.val + t2.val + count;
            ListNode hp = new ListNode(k % 10);
            System.out.println(hp.val);
            temp.next = hp;
            temp = temp.next;
            t1 = t1.next;
            t2 = t2.next;
            if (k > 9) {
                count = 1;
            } else {
                count = 0;
            }
        }
        int ag = 0;
        while (t1 != null) {
            ag = t1.val + count;
            if (ag > 9) {
                count = 1;
            } else {
                count = 0;
            }
            System.out.println(ag);
            ListNode hp = new ListNode(ag % 10);
            temp.next = hp;
            temp = temp.next;
            t1 = t1.next;
        }
        while (t2 != null) {
            ag = t2.val + count;
            if (ag > 9) {
                count = 1;
            } else {
                count = 0;
            }
            ListNode hp = new ListNode(ag % 10);
            temp.next = hp;
            temp = temp.next;
            t2 = t2.next;
        }
        if (count == 1) {
            ListNode hp = new ListNode(1);
            temp.next = hp;
            temp = temp.next;
        }
        return head.next;
    }
}
