class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        if (l1 == null && l2 == null)
            return new ListNode(0);
        ListNode result = null, current = null;
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        int carry = 0;
        int var1 = 0;
        while (temp1 != null || temp2 != null) {
            int val1 = (temp1 != null) ? temp1.val : 0;
            int val2 = (temp2 != null) ? temp2.val : 0;
            var1 = val1 + val2 + carry;
            if (var1 >= 10) {
                carry = 1;
                var1 = var1 % 10;
            } else {
                carry = 0;
            }
            ListNode newNode = new ListNode(var1);
            if (result == null) {
                result = newNode;
                current = result;
            } else {
                current.next = newNode;
                current = current.next;
            }
            if (temp1 != null)
                temp1 = temp1.next;
            if (temp2 != null)
                temp2 = temp2.next;
        }
        if (carry != 0) {
            current.next = new ListNode(carry);
        }
        return result;
    }
}
