class Solution {

    public ListNode reversedList(ListNode head) {
        ListNode curr = head;
        ListNode prev = null, next = null;
        while (curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
            if (curr == null) {
                head = prev;
            }
        }
        return head;
    }

    public ListNode method1(ListNode l1, ListNode l2) {
        int carry = 0;
        int sum = 0;
        ListNode n1 = l1, n2 = l2;
        ListNode head = null;
        while (n1 != null || n2 != null) {
            sum = carry;
            if (n1 != null) {
                sum += n1.val;
                n1 = n1.next;
            }
            if (n2 != null) {
                sum += n2.val;
                n2 = n2.next;
            }
            carry = (int) sum / 10;
            sum = sum % 10;
            head = new ListNode(sum, head);
        }
        if (carry > 0) {
            head = new ListNode(carry, head);
        }
        return reversedList(head);
    }
}
