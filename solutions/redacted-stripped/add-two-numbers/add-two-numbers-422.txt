class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode head = null, curr = null;
        while (l1 != null || l2 != null) {
            int firstValue = (l1 != null) ? l1.val : 0;
            int secondValue = (l2 != null) ? l2.val : 0;
            int sum = carry + firstValue + secondValue;
            ListNode newNode = new ListNode(sum % 10);
            carry = sum / 10;
            if (head == null) {
                head = newNode;
                curr = newNode;
            } else {
                curr.next = newNode;
                curr = newNode;
            }
            if (l1 != null)
                l1 = l1.next;
            if (l2 != null)
                l2 = l2.next;
        }
        if (carry != 0) {
            ListNode newNode = new ListNode(carry);
            curr.next = newNode;
        }
        return head;
    }
}
