class ListNode {

    int val;

    ListNode next;

    ListNode() {
        this.val = 0;
        this.next = null;
    }

    ListNode(int val) {
        this.val = val;
        this.next = null;
    }

    ListNode(int val, ListNode next) {
        this.val = val;
        this.next = next;
    }
}

class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode dummyans = new ListNode(0);
        ListNode ans = dummyans;
        int carry = 0, sum = 0;
        while (l1 != null || l2 != null || carry != 0) {
            sum = carry;
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }
            carry = sum / 10;
            ans.next = new ListNode(sum % 10);
            ans = ans.next;
        }
        return dummyans.next;
    }
}
