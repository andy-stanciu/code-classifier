class Solution {

    public String method1(String s) {
        char[] str = s.toCharArray();
        Map<Character, Integer> hmap = new HashMap<>();
        for (Character c : str) {
            hmap.put(c, hmap.getOrDefault(c, 0) + 1);
        }
        Map<Integer, List<Character>> tmap = new TreeMap<>();
        for (Character c : hmap.keySet()) {
            if (tmap.containsKey(hmap.get(c))) {
                tmap.get(hmap.get(c)).add(c);
            } else {
                List<Character> al = new ArrayList<>();
                al.add(c);
                tmap.put(hmap.get(c), al);
            }
        }
        StringBuilder sb = new StringBuilder();
        for (Integer i : tmap.keySet()) {
            for (Character c : tmap.get(i)) {
                for (int j = i; j > 0; j--) {
                    sb.append(c);
                }
            }
        }
        return sb.reverse().toString();
    }
}
