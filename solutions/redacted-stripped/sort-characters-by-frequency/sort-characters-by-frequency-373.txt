class Solution {

    public static HashMap<String, Integer> method1(HashMap<String, Integer> hm) {
        HashMap<String, Integer> temp = hm.entrySet().stream().sorted((i1, i2) -> i1.getValue().compareTo(i2.getValue())).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (e1, e2) -> e1, LinkedHashMap::new));
        return temp;
    }

    public String method2(String s) {
        String answer = "";
        String answer1 = "";
        HashMap<String, Integer> h = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            String p = String.valueOf(s.charAt(i));
            if (h.containsKey(p)) {
                h.put(p, h.get(p) + 1);
            } else
                h.put(p, 1);
        }
        h = method1(h);
        for (String key : h.keySet()) {
            answer1 += (key).repeat(h.get(key));
        }
        for (int i = answer1.length() - 1; i >= 0; i--) {
            answer += String.valueOf(answer1.charAt(i));
        }
        return answer;
    }
}
