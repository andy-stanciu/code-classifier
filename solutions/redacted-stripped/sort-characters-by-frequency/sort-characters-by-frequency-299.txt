class Solution {

    public String method1(String s) {
        HashMap<Character, Integer> fmap = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            fmap.put(ch, fmap.getOrDefault(ch, 0) + 1);
        }
        PriorityQueue<Character> pq = new PriorityQueue<>((a, b) -> {
            if (fmap.get(a).equals(fmap.get(b))) {
                return Character.compare(b, a);
            }
            return fmap.get(b) - fmap.get(a);
        });
        for (char key : fmap.keySet()) {
            char ch = key;
            int var1 = fmap.get(key);
            pq.add(ch);
        }
        StringBuilder sb = new StringBuilder("");
        while (pq.size() > 0) {
            char ch = pq.remove();
            int var1 = fmap.get(ch);
            while (var1 > 0) {
                sb.append(ch);
                var1--;
            }
        }
        String ans = sb.toString();
        return ans;
    }
}
