class Solution {

    public String method1(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
        }
        StringBuilder sb = new StringBuilder();
        Map<Character, Integer> var1 = method2(map);
        for (Map.Entry<Character, Integer> entry : var1.entrySet()) {
            for (int i = 0; i < entry.getValue(); i++) {
                sb.append(entry.getKey());
            }
        }
        return new String(sb);
    }

    public static Map<Character, Integer> method2(Map<Character, Integer> map) {
        List<Map.Entry<Character, Integer>> list = new ArrayList<>(map.entrySet());
        list.sort(Map.Entry.<Character, Integer>comparingByValue().reversed());
        Map<Character, Integer> var1 = new LinkedHashMap<>();
        for (Map.Entry<Character, Integer> entry : list) {
            var1.put(entry.getKey(), entry.getValue());
        }
        return var1;
    }
}
