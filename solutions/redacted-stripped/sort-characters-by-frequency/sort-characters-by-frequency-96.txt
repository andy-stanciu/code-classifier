class Solution {

    public String method1(String s) {
        if (s == "")
            return "";
        Map<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
        }
        int[] arr = new int[map.size()];
        int index = 0;
        for (Map.Entry<Character, Integer> entry : map.entrySet()) {
            arr[index] = entry.getValue();
            index++;
        }
        Arrays.sort(arr);
        StringBuilder sb = new StringBuilder();
        for (int i = arr.length - 1; i >= 0; i--) {
            char ch = getKey(map, arr[i]);
            int t = arr[i];
            while (t-- > 0) {
                sb.append(ch);
            }
        }
        return sb.toString();
    }

    public static <Character, Integer> Character getKey(Map<Character, Integer> map, Integer value) {
        for (Character key : map.keySet()) {
            if (value.equals(map.get(key))) {
                map.remove(key);
                return key;
            }
        }
        return null;
    }
}
