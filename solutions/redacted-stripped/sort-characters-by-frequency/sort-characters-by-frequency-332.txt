class Solution {

    public static HashMap<Character, Integer> method1(HashMap<Character, Integer> hm) {
        List<Map.Entry<Character, Integer>> list = new LinkedList<Map.Entry<Character, Integer>>(hm.entrySet());
        Collections.sort(list, (i1, i2) -> i1.getValue().compareTo(i2.getValue()));
        HashMap<Character, Integer> temp = new LinkedHashMap<Character, Integer>();
        for (Map.Entry<Character, Integer> aa : list) {
            temp.put(aa.getKey(), aa.getValue());
        }
        return temp;
    }

    String addAns(Character c, Integer j) {
        String ans = "";
        for (int i = 0; i < j; i++) {
            ans += c;
        }
        return ans;
    }

    public String method2(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        char[] c = s.toCharArray();
        Arrays.sort(c);
        String str = "";
        for (char k : c) {
            map.put(k, map.getOrDefault(k, 0) + 1);
        }
        map = method1(map);
        for (Map.Entry<Character, Integer> aa : map.entrySet()) {
            str = addAns(aa.getKey(), aa.getValue()) + str;
        }
        return str;
    }
}
