class Solution {

    public static String method1(String s) {
        HashMap<Character, Integer> hashmap = new HashMap<>();
        for (int i = 0; i <= s.length() - 1; i++) hashmap.put(s.charAt(i), hashmap.getOrDefault(s.charAt(i), 0) + 1);
        Comparator<Character> cmp = new Comparator<Character>() {

            @Override
            public int compare(Character c1, Character c2) {
                if (hashmap.get(c1) > hashmap.get(c2))
                    return -1;
                else if (hashmap.get(c1) < hashmap.get(c2))
                    return 1;
                else {
                    if (c1.charValue() <= c2.charValue())
                        return -1;
                    else
                        return 1;
                }
            }
        };
        TreeMap<Character, Integer> map = new TreeMap<>(cmp);
        map.putAll(hashmap);
        s = "";
        System.out.println(map.keySet());
        for (Map.Entry<Character, Integer> entry : map.entrySet()) {
            String c = Character.toString(entry.getKey());
            int freq = entry.getValue();
            for (int i = 0; i < freq; i++) {
                s = s + c;
            }
        }
        return s;
    }
}
