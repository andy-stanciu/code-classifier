class Solution {

    public String method1(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        int n = s.length();
        for (int i = 0; i < n; i++) {
            map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
        }
        int nn = map.size();
        pair[] arr = new pair[nn];
        int i = 0;
        Set<Character> set = map.keySet();
        for (char a : set) {
            int count = map.get(a);
            arr[i] = new pair(a, count);
            i++;
        }
        Arrays.sort(arr);
        StringBuilder ans = new StringBuilder();
        for (pair p : arr) {
            for (int j = 0; j < p.cnt; j++) {
                ans.append(p.a);
            }
        }
        return ans.toString();
    }

    public static class pair implements Comparable<pair> {

        char a;

        int cnt;

        pair(char a, int cnt) {
            this.a = a;
            this.cnt = cnt;
        }

        public int compareTo(pair obj) {
            if (obj.cnt == this.cnt) {
                return obj.a - this.a;
            }
            return obj.cnt - this.cnt;
        }
    }
}
