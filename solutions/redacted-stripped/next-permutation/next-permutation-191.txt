public class Solution {

    public void method1(int[] nums) {
        if (nums == null || nums.length <= 1) {
            return;
        }
        int firstDesending = nums.length - 2;
        while (firstDesending >= 0 && nums[firstDesending] >= nums[firstDesending + 1]) {
            firstDesending--;
        }
        int firstBigger = nums.length - 1;
        if (firstDesending == -1) {
            reverse(nums, firstDesending + 1, firstBigger);
            return;
        }
        while (nums[firstBigger] <= nums[firstDesending]) {
            firstBigger--;
        }
        swap(nums, firstDesending, firstBigger);
        reverse(nums, firstDesending + 1, nums.length - 1);
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    private void reverse(int[] nums, int start, int end) {
        while (end > start) {
            swap(nums, start, end);
            start++;
            end--;
        }
    }
}
