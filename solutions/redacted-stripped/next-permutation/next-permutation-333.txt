class Solution {

    public void method1(int[] nums) {
        int pivot = findPivot(nums);
        if (pivot != -1) {
            int justGreater = findGreater(nums, nums[pivot]);
            int temp = nums[pivot];
            nums[pivot] = nums[justGreater];
            nums[justGreater] = temp;
            reverse(nums, pivot + 1);
        } else {
            reverse(nums, 0);
        }
    }

    int findPivot(int[] nums) {
        int i = nums.length - 2;
        while (i >= 0) {
            if (nums[i] < nums[i + 1]) {
                return i;
            }
            i--;
        }
        return -1;
    }

    int findGreater(int[] nums, int target) {
        int i = nums.length - 1;
        while (i >= 0) {
            if (nums[i] > target) {
                return i;
            }
            i--;
        }
        return -1;
    }

    void reverse(int[] nums, int s) {
        int e = nums.length - 1;
        while (s < e) {
            int temp = nums[s];
            nums[s] = nums[e];
            nums[e] = temp;
            s++;
            e--;
        }
    }
}
