class Solution {

    public void method1(int[] nums) {
        int pivotIdx = -1;
        for (int i = nums.length - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                pivotIdx = i;
                break;
            }
        }
        if (pivotIdx == -1) {
            reverse(nums, 0, nums.length - 1);
            return;
        }
        int successorIdx = -1;
        for (int j = nums.length - 1; j > pivotIdx; j--) {
            if (nums[j] > nums[pivotIdx]) {
                successorIdx = j;
                break;
            }
        }
        swap(nums, pivotIdx, successorIdx);
        reverse(nums, pivotIdx + 1, nums.length - 1);
    }

    public static void reverse(int[] nums, int start, int end) {
        while (start < end) {
            swap(nums, start, end);
            start++;
            end--;
        }
    }

    public static void swap(int[] nums, int index1, int index2) {
        int temp = nums[index1];
        nums[index1] = nums[index2];
        nums[index2] = temp;
    }
}
