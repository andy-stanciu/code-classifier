class Solution {

    public void method1(int[] nums) {
        int dropIndex = -1;
        for (int i = nums.length - 1; i >= 1; i--) {
            if (nums[i] > nums[i - 1]) {
                dropIndex = i - 1;
                break;
            }
        }
        if (dropIndex == -1) {
            reverseArray(nums, 0, nums.length - 1);
        } else {
            int highIndex = method2(nums, dropIndex);
            swapArray(nums, highIndex, dropIndex);
            reverseArray(nums, dropIndex + 1, nums.length - 1);
        }
    }

    public void reverseArray(int[] nums, int start, int end) {
        int temp = 0;
        while (start < end) {
            temp = nums[start];
            nums[start++] = nums[end];
            nums[end--] = temp;
        }
    }

    public void swapArray(int[] nums, int indexOne, int indexTwo) {
        int temp = nums[indexOne];
        nums[indexOne] = nums[indexTwo];
        nums[indexTwo] = temp;
    }

    public int method2(int[] nums, int dropIndex) {
        int current = nums[dropIndex];
        int var1 = Integer.MAX_VALUE;
        int ansIndex = -1;
        for (int i = nums.length - 1; i > dropIndex; i--) {
            if (nums[i] > current && nums[i] < var1) {
                var1 = nums[i];
                ansIndex = i;
            }
        }
        return ansIndex;
    }
}
