class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int left = n - 2;
        int right = n - 1;
        if (n >= 2) {
            while (left >= 0) {
                if (nums[left] < nums[left + 1]) {
                    int secondgreat = sgreat(nums, left, right);
                    swap(nums, left, secondgreat);
                    break;
                }
                left--;
            }
            left++;
            while (left < right) {
                swap(nums, left, right);
                left++;
                right--;
            }
        }
    }

    public static void swap(int[] nums, int left, int right) {
        int temp = nums[left];
        nums[left] = nums[right];
        nums[right] = temp;
    }

    public static int sgreat(int[] nums, int left, int right) {
        int secondgreat = -1;
        int temp = nums[left];
        while (left < right) {
            if (nums[right] > temp) {
                secondgreat = right;
                break;
            }
            right--;
        }
        return secondgreat;
    }
}
