class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int index = -1;
        for (int i = n - 1; i > 0; i--) {
            if (nums[i] > nums[i - 1]) {
                index = i - 1;
                break;
            }
        }
        if (index == -1) {
            bubbleSort(nums, 0, n - 1);
            return;
        }
        int swapIndex = -1;
        for (int i = n - 1; i > index; i--) {
            if (nums[i] > nums[index]) {
                swapIndex = i;
                break;
            }
        }
        swap(nums, index, swapIndex);
        bubbleSort(nums, index + 1, n - 1);
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    private void bubbleSort(int[] nums, int start, int end) {
        for (int i = start; i <= end; i++) {
            for (int j = start; j < end - (i - start); j++) {
                if (nums[j] > nums[j + 1]) {
                    swap(nums, j, j + 1);
                }
            }
        }
    }
}
