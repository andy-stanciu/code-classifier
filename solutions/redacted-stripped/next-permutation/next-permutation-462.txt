class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        if (nums.length == 1) {
            return;
        }
        int indx1 = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                indx1 = i;
                break;
            }
        }
        if (indx1 == -1) {
            reverse(nums, 0, n);
            return;
        }
        int indx2 = -1;
        for (int i = n - 1; i > indx1; i--) {
            if (nums[i] > nums[indx1]) {
                indx2 = i;
                break;
            }
        }
        swap(nums, indx1, indx2);
        reverse(nums, indx1 + 1, n);
    }

    public void swap(int[] nums, int indx1, int indx2) {
        int temp = nums[indx1];
        nums[indx1] = nums[indx2];
        nums[indx2] = temp;
    }

    public void reverse(int[] nums, int i, int n) {
        int j = n - 1;
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
        }
    }
}
