class Solution {

    public void method1(int[] nums) {
        int len = nums.length;
        int i1 = -1;
        int i2 = -1;
        for (int i = len - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                i1 = i;
                break;
            }
        }
        if (i1 == -1) {
            reverse(nums, 0, len - 1);
        } else {
            for (int i = len - 1; i >= 0; i--) {
                if (nums[i] > nums[i1]) {
                    i2 = i;
                    break;
                }
            }
            swap(nums, i1, i2);
            reverse(nums, i1 + 1, len - 1);
        }
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    private void reverse(int[] A, int i, int j) {
        while (i < j) swap(A, i++, j--);
    }
}
