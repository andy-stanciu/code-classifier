class Solution {

    public void method1(int[] nums) {
        int swapIndex = -1;
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i - 1] < nums[i]) {
                swapIndex = i - 1;
                break;
            }
        }
        if (swapIndex != -1) {
            swapNumbers(swapIndex, nums);
        }
        reverseArray(swapIndex, nums);
    }

    private static void swapNumbers(int swapIndex, int[] nums) {
        int swapWith = -1;
        int var1 = Integer.MAX_VALUE;
        int breakPoint = nums[swapIndex];
        for (int i = nums.length - 1; i > swapIndex; i--) {
            if (breakPoint < nums[i] && nums[i] < var1) {
                var1 = nums[i];
                swapWith = i;
            }
        }
        int temp = nums[swapIndex];
        nums[swapIndex] = nums[swapWith];
        nums[swapWith] = temp;
    }

    private static void reverseArray(int swapIndex, int[] nums) {
        int i = swapIndex + 1;
        int j = nums.length - 1;
        while (i < j) {
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
            i++;
            j--;
        }
    }
}
