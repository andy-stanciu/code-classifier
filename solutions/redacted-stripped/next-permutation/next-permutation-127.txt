class Solution {

    public void method1(int[] nums) {
        int n = nums.length - 1;
        int temp = nums[n--];
        while (n >= 0 && nums[n] >= temp) {
            temp = nums[n--];
        }
        if (n < 0) {
            for (int i = 0; i < nums.length / 2; i++) {
                temp = nums[i];
                nums[i] = nums[nums.length - i - 1];
                nums[nums.length - i - 1] = temp;
            }
            return;
        }
        temp = nums[n];
        int swapIndex = nums.length - 1;
        while (swapIndex >= 0 && nums[swapIndex] <= temp) {
            swapIndex--;
        }
        nums[n] = nums[swapIndex];
        nums[swapIndex] = temp;
        swapIndex = n + 1;
        n = nums.length - 1;
        for (int i = swapIndex; i <= n; i++) {
            temp = nums[i];
            nums[i] = nums[n];
            nums[n--] = temp;
        }
    }
}
