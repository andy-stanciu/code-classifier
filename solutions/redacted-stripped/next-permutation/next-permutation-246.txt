class Solution {

    public void reverse(int start, int end, int[] nums) {
        while (start < end) {
            nums[start] = nums[start] ^ nums[end] ^ (nums[end] = nums[start]);
            start++;
            end--;
        }
    }

    public void method1(int[] nums) {
        int n = nums.length;
        int dip = -1;
        for (int i = n - 1; i > 0; i--) {
            if (nums[i] > nums[i - 1]) {
                dip = i - 1;
                break;
            }
        }
        if (dip == -1) {
            reverse(0, n - 1, nums);
            return;
        }
        for (int i = n - 1; i > dip; i--) {
            if (nums[i] > nums[dip]) {
                nums[i] = nums[i] ^ nums[dip] ^ (nums[dip] = nums[i]);
                break;
            }
        }
        reverse(dip + 1, n - 1, nums);
        return;
    }
}
