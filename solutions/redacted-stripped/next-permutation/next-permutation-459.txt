class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int i = n - 2;
        while (i >= 0 && nums[i] >= nums[i + 1]) {
            i--;
        }
        if (i >= 0) {
            int j = n - 1;
            while (j >= 0 && nums[j] <= nums[i]) j--;
            swap(nums, i, j);
        }
        reveres(nums, i + 1);
    }

    public void swap(int[] nums, int i, int j) {
        int t = nums[i];
        nums[i] = nums[j];
        nums[j] = t;
    }

    public void reveres(int[] nums, int s) {
        int e = nums.length - 1;
        while (s < e) {
            swap(nums, s, e);
            s++;
            e--;
        }
    }
}
