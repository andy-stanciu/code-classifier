class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int p = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                p = i;
                break;
            }
        }
        if (p == -1) {
            reverse(nums, 0, n - 1);
            return;
        }
        int k = findJustGreater(nums, p, n);
        swap(nums, p, k);
        reverse(nums, p + 1, n - 1);
    }

    private int findJustGreater(int[] nums, int p, int n) {
        int justGreater = p + 1;
        for (int i = p + 1; i < n; i++) {
            if (nums[i] > nums[p] && nums[i] <= nums[justGreater]) {
                justGreater = i;
            }
        }
        return justGreater;
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    private void reverse(int[] nums, int start, int end) {
        while (start < end) {
            swap(nums, start, end);
            start++;
            end--;
        }
    }
}
