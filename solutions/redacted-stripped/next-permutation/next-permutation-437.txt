class Solution {

    public void method1(int[] nums) {
        int N = nums.length;
        int d = N;
        int i = N - 1;
        for (i = N - 1, d = i - 1; i > 0 && d >= 0; i--, d--) {
            if (nums[d] < nums[i]) {
                break;
            }
        }
        if (d < 0) {
            reverse(nums, 0, N - 1);
        } else {
            int minIndex = find(nums, d + 1, N - 1, d);
            swap(nums, d, minIndex);
            reverse(nums, d + 1, N - 1);
        }
    }

    private void reverse(int[] nums, int l, int r) {
        Arrays.sort(nums, l, r + 1);
    }

    private int find(int[] nums, int l, int r, int d) {
        int minIndex = -1;
        for (int i = l; i <= r; i++) {
            if (nums[i] > nums[d]) {
                if (minIndex == -1 || nums[i] < nums[minIndex]) {
                    minIndex = i;
                }
            }
        }
        return minIndex;
    }

    private void swap(int[] nums, int l, int r) {
        int temp = nums[l];
        nums[l] = nums[r];
        nums[r] = temp;
    }
}
