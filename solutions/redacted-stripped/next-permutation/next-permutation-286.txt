class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int breakPoint = n - 2;
        for (; breakPoint >= 0; breakPoint--) {
            if (nums[breakPoint] < nums[breakPoint + 1]) {
                break;
            }
        }
        if (breakPoint < 0) {
            reverse(nums, 0, n - 1);
        } else {
            int index = getFirstMax(nums, nums[breakPoint]);
            swap(nums, breakPoint, index);
            reverse(nums, breakPoint + 1, n - 1);
        }
    }

    void reverse(int[] nums, int start, int end) {
        int i = start;
        int j = end;
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
        }
    }

    void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    int getFirstMax(int[] nums, int target) {
        int index = -1;
        for (int i = nums.length - 1; i >= 0; i--) {
            if (nums[i] > target) {
                return i;
            }
        }
        return index;
    }
}
