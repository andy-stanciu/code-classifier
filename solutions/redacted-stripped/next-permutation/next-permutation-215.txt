class Solution {

    public void method1(int[] nums) {
        boolean allGood = false;
        for (int i = nums.length - 1; i >= 1; i--) {
            if (nums[i] > nums[i - 1]) {
                int numIndex = findNumberToReplace(i, nums, nums[i - 1]);
                swap(nums, i - 1, numIndex);
                reverse(nums, i);
                allGood = true;
                break;
            }
        }
        if (!allGood) {
            reverse(nums, 0);
        }
    }

    void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    void reverse(int[] nums, int start) {
        int i = start;
        int j = nums.length - 1;
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
        }
    }

    public int findNumberToReplace(int index, int[] nums, int num) {
        int ind = 0;
        for (int i = nums.length - 1; i >= 0; i--) {
            if (nums[i] > num) {
                ind = i;
                break;
            }
        }
        return ind;
    }
}
