class Solution {

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        ArrayList<Integer> al = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            int index = binarysearch(al, nums[i]);
            if (index == al.size()) {
                al.add(nums[i]);
            }
            al.set(index, nums[i]);
        }
        return al.size();
    }

    private static int binarysearch(ArrayList<Integer> al, int target) {
        int low = 0;
        int high = al.size() - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (target <= al.get(mid)) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
