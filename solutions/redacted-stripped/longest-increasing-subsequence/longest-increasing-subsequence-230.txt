class Solution {

    public int lengthOfLIS(int[] nums) {
        int len = nums.length;
        int[][] dp = new int[len][len];
        for (int i = 0; i < len; i++) for (int j = 0; j < len; j++) dp[i][j] = -1;
        return f(0, -1, nums, dp);
    }

    int f(int idx, int prev_idx, int[] nums, int[][] dp) {
        if (idx >= nums.length)
            return 0;
        if (dp[idx][prev_idx + 1] != -1)
            return dp[idx][prev_idx + 1];
        int nottake = f(idx + 1, prev_idx, nums, dp);
        int take = 0;
        if (prev_idx == -1 || nums[idx] > nums[prev_idx])
            take = 1 + f(idx + 1, idx, nums, dp);
        return dp[idx][prev_idx + 1] = Math.max(take, nottake);
    }
}
