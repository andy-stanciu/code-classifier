class Solution {

    public int length_Of_LIS(int[] nums, int current, int previous, int[][] dp_Array) {
        int length = nums.length;
        if (current == length) {
            return 0;
        }
        if (dp_Array[current][previous + 1] != -1) {
            return dp_Array[current][previous + 1];
        }
        int include_Element = 0;
        if (previous == -1 || nums[current] > nums[previous]) {
            include_Element = 1 + length_Of_LIS(nums, current + 1, current, dp_Array);
        }
        int exclude_Element = 0 + length_Of_LIS(nums, current + 1, previous, dp_Array);
        dp_Array[current][previous + 1] = Math.max(include_Element, exclude_Element);
        return dp_Array[current][previous + 1];
    }

    public int lengthOfLIS(int[] nums) {
        int[][] dp_Array = new int[nums.length][nums.length + 1];
        for (int i = 0; i < dp_Array.length; i++) {
            Arrays.fill(dp_Array[i], -1);
        }
        return length_Of_LIS(nums, 0, -1, dp_Array);
    }
}
