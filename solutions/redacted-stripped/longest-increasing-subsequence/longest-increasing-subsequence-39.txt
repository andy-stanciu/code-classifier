class Solution {

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[][] dp = new int[n][n + 1];
        for (int[] rows : dp) Arrays.fill(rows, -1);
        return LIS(0, -1, n, nums, dp);
    }

    public int LIS(int index, int prev, int n, int[] nums, int[][] dp) {
        if (index == n)
            return 0;
        if (dp[index][prev + 1] != -1)
            return dp[index][prev + 1];
        int notTake = 0 + LIS(index + 1, prev, n, nums, dp);
        int take = 0;
        if (prev == -1 || nums[index] > nums[prev])
            take = 1 + LIS(index + 1, index, n, nums, dp);
        return dp[index][prev + 1] = Math.max(take, notTake);
    }
}
