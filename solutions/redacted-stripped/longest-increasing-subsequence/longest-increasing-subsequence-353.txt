class Solution {

    private int lis(int ind, int prev_index, int[] arr, int[][] dp, int n) {
        if (ind == n) {
            return 0;
        }
        if (dp[ind][prev_index + 1] != -1) {
            return dp[ind][prev_index + 1];
        }
        int notake = lis(ind + 1, prev_index, arr, dp, n);
        int take = 0;
        if (prev_index == -1 || arr[ind] > arr[prev_index]) {
            take = 1 + lis(ind + 1, ind, arr, dp, n);
        }
        return dp[ind][prev_index + 1] = Math.max(notake, take);
    }

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[][] dp = new int[n][n + 1];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n + 1; j++) {
                dp[i][j] = -1;
            }
        }
        int prev_index = -1;
        return lis(0, prev_index, nums, dp, n);
    }
}
