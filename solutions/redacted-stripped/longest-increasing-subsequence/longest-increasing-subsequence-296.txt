class Solution {

    public int lengthOfLIS(int[] nums) {
        Integer[] dp = new Integer[nums.length];
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < nums.length; i++) {
            max = Math.max(solve(nums, i, dp, Integer.MIN_VALUE), max);
        }
        return max;
    }

    private static int solve(int[] nums, int index, Integer[] dp, int max) {
        if (index >= nums.length)
            return 0;
        if (dp[index] != null)
            return dp[index];
        int currLength = 0;
        for (int i = index; i < nums.length; i++) {
            if (nums[i] > max)
                currLength = Math.max(currLength, solve(nums, i + 1, dp, nums[i]) + 1);
        }
        return dp[index] = currLength;
    }
}
