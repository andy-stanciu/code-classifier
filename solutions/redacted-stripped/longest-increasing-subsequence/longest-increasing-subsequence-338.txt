class Solution {

    public int lengthOfLIS(int[] nums) {
        int p = -1;
        int c = 0;
        int[][] dp = new int[nums.length + 1][nums.length + 1];
        for (int i = 0; i < dp.length; i++) {
            for (int j = 0; j < dp.length; j++) {
                dp[i][j] = -1;
            }
        }
        return solve(nums, p, c, dp);
    }

    public static int solve(int[] nums, int p, int c, int[][] dp) {
        if (c >= nums.length)
            return 0;
        if (dp[p + 1][c] != -1)
            return dp[p + 1][c];
        int in = 0;
        if (p == -1 || nums[c] > nums[p]) {
            in = 1 + solve(nums, c, c + 1, dp);
        }
        int ex = 0 + solve(nums, p, c + 1, dp);
        dp[p + 1][c] = Math.max(in, ex);
        return dp[p + 1][c];
    }
}
