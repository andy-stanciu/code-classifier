class Solution {

    public int lengthOfLIS(int[] arr) {
        int n = arr.length;
        int result = 0;
        int[] cache = new int[n];
        Arrays.fill(cache, -1);
        for (int i = 0; i < n; i++) result = Math.max(result, recurse(arr, i, cache));
        return result;
    }

    public int recurse(int[] arr, int i, int[] cache) {
        int n = arr.length;
        if (i >= n)
            return 0;
        if (cache[i] != -1)
            return cache[i];
        int result = 1;
        for (int j = i + 1; j < n; j++) {
            if (arr[j] > arr[i])
                result = Math.max(result, 1 + recurse(arr, j, cache));
        }
        return cache[i] = result;
    }
}
