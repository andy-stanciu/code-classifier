class Solution {

    int[][] dp;

    public int lengthOfLIS(int[] nums) {
        dp = new int[nums.length][nums.length];
        for (int i = 0; i < nums.length; i++) Arrays.fill(dp[i], -1);
        int result = recursion(0, nums, -1);
        return result;
    }

    int recursion(int index, int[] nums, int previousIndex) {
        if (index > nums.length - 1) {
            return 0;
        }
        if (previousIndex != -1 && dp[index][previousIndex] != -1) {
            return dp[index][previousIndex];
        }
        if (previousIndex != -1 && nums[index] <= nums[previousIndex]) {
            return recursion(index + 1, nums, previousIndex);
        }
        int ans = Math.max(1 + recursion(index + 1, nums, index), recursion(index + 1, nums, previousIndex));
        if (previousIndex != -1)
            dp[index][previousIndex] = ans;
        return ans;
    }
}
