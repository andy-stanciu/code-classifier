class Solution {

    public int lengthOfLIS(int[] nums) {
        int[][] dp = new int[nums.length][nums.length + 1];
        for (int i = 0; i < nums.length; i++) {
            Arrays.fill(dp[i], -1);
        }
        return lis(0, -1, nums, dp);
    }

    int lis(int i, int last, int[] nums, int[][] dp) {
        if (i == nums.length)
            return 0;
        if (dp[i][last + 1] != -1)
            return dp[i][last + 1];
        int pick = 0;
        if (last == -1 || nums[i] > nums[last]) {
            pick = 1 + lis(i + 1, i, nums, dp);
        }
        int notPick = 0 + lis(i + 1, last, nums, dp);
        return dp[i][last + 1] = Math.max(pick, notPick);
    }
}
