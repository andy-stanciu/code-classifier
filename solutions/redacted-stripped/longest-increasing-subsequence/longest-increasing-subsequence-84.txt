class Solution {

    public int helper(int[] arr, int ind, int par, int[][] dp) {
        if (ind == arr.length)
            return 0;
        if (dp[ind][par + 1] != -1)
            return dp[ind][par + 1];
        if (par == -1 || arr[ind] > arr[par]) {
            return dp[ind][par + 1] = Math.max(1 + helper(arr, ind + 1, ind, dp), helper(arr, ind + 1, par, dp));
        } else {
            return dp[ind][par + 1] = helper(arr, ind + 1, par, dp);
        }
    }

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[][] dp = new int[n][n + 1];
        for (int[] i : dp) {
            Arrays.fill(i, -1);
        }
        return helper(nums, 0, -1, dp);
    }
}
