class Solution {

    private int binSearch(int[] arr, int l, int r, int tar) {
        int val = r;
        while (l <= r) {
            int mid = (l + r) / 2;
            if (arr[mid] >= tar) {
                r = mid - 1;
                val = mid;
            } else {
                l = mid + 1;
            }
        }
        return val;
    }

    private int lis(int[] a) {
        int N = a.length;
        int[] lisArr = new int[N];
        int l = 0, r = 0;
        lisArr[0] = a[0];
        for (int i = 1; i < N; i++) {
            if (a[i] <= lisArr[r]) {
                int pos = binSearch(lisArr, 0, r, a[i]);
                lisArr[pos] = a[i];
            } else {
                lisArr[++r] = a[i];
            }
        }
        return r - l + 1;
    }

    public int lengthOfLIS(int[] nums) {
        int res = lis(nums);
        return res;
    }
}
