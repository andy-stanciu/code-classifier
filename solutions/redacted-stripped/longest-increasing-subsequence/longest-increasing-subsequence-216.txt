class Solution {

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int max = 0;
        ArrayList<Integer> list = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            int index = lowerBound(list, nums[i]);
            if (index == list.size()) {
                list.add(nums[i]);
            } else {
                list.set(index, nums[i]);
            }
        }
        return list.size();
    }

    public int lowerBound(ArrayList<Integer> list, int num) {
        int left = 0;
        int right = list.size();
        int result = list.size();
        ;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (list.get(mid) < num) {
                left = mid + 1;
            } else {
                result = mid;
                right = mid;
            }
        }
        return result;
    }
}
