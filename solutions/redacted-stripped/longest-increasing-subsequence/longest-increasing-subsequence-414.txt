class Solution {

    public int lengthOfLIS(int[] nums) {
        List<Integer> lis = new ArrayList<>();
        lis.add(nums[0]);
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > lis.get(lis.size() - 1)) {
                lis.add(nums[i]);
            } else {
                lis.set(firstIndexOfElement(lis, nums[i]), nums[i]);
            }
        }
        return lis.size();
    }

    public int firstIndexOfElement(List<Integer> lis, int target) {
        int l = 0, r = lis.size() - 1, res = lis.size();
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (target <= lis.get(mid)) {
                res = mid;
                r = mid - 1;
            } else {
                l = mid + 1;
            }
        }
        return res;
    }
}
