class Solution {

    public int lengthOfLIS(int[] nums) {
        int prevIndex = -1;
        int index = 0;
        int ans = 0;
        int[][] dp = new int[nums.length][nums.length + 1];
        for (int[] arr : dp) {
            Arrays.fill(arr, -1);
        }
        ans = recur(prevIndex, index, nums, dp);
        return ans;
    }

    int recur(int prevIndex, int index, int[] nums, int[][] dp) {
        if (index == nums.length)
            return 0;
        if (dp[index][prevIndex + 1] != -1)
            return dp[index][prevIndex + 1];
        int x = 0;
        int y = 0;
        if (prevIndex == -1 || nums[index] > nums[prevIndex]) {
            x = recur(index, index + 1, nums, dp) + 1;
        }
        y = recur(prevIndex, index + 1, nums, dp);
        return dp[index][prevIndex + 1] = Math.max(x, y);
    }
}
