class Solution {

    public int lengthOfLIS(int[] nums) {
        List<Integer> result = new ArrayList<>();
        result.add(nums[0]);
        int len = 1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > result.get(result.size() - 1)) {
                result.add(nums[i]);
                len++;
            } else {
                int idx = binarySearch(result, nums[i]);
                result.set(idx, nums[i]);
            }
        }
        return len;
    }

    public int binarySearch(List<Integer> result, int key) {
        int low = 0, high = result.size() - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (result.get(mid) == key) {
                return mid;
            } else if (result.get(mid) < key) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return high + 1;
    }
}
