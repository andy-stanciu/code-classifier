class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> digit = new Stack<>();
        int x;
        for (int i = 0; i < tokens.length; i++) {
            switch(tokens[i]) {
                case "+":
                    digit.push(digit.pop() + digit.pop());
                    break;
                case "-":
                    x = digit.pop();
                    digit.push(digit.pop() - x);
                    break;
                case "*":
                    digit.push(digit.pop() * digit.pop());
                    break;
                case "/":
                    x = digit.pop();
                    digit.push(digit.pop() / x);
                    break;
                default:
                    digit.push(Integer.parseInt(tokens[i]));
            }
        }
        return digit.pop();
    }
}
