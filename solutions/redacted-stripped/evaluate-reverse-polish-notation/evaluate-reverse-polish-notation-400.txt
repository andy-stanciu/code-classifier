class Solution {

    public int evalRPN(String[] tokens) {
        int total = 0;
        Stack<String> stack = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("*") || tokens[i].equals("/")) {
                String s = tokens[i];
                String e1 = stack.pop();
                String e2 = stack.pop();
                if (s.equals("+")) {
                    int sum = Integer.parseInt(e2) + Integer.parseInt(e1);
                    stack.push(String.valueOf(sum));
                } else if (s.equals("*")) {
                    int sum = ((Integer.parseInt(e2)) * (Integer.parseInt(e1)));
                    stack.push(String.valueOf(sum));
                } else if (s.equals("-")) {
                    int sum = Integer.parseInt(e2) - Integer.parseInt(e1);
                    stack.push(String.valueOf(sum));
                } else if (s.equals("/")) {
                    int sum = Integer.parseInt(e2) / Integer.parseInt(e1);
                    stack.push(String.valueOf(sum));
                }
            } else {
                stack.push(tokens[i]);
            }
        }
        String s = stack.pop();
        int res = Integer.parseInt(s);
        return res;
    }
}
