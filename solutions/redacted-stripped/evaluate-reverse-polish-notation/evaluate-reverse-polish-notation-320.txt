class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+")) {
                int op1 = st.pop();
                int op2 = st.pop();
                st.push(op2 + op1);
            } else if (tokens[i].equals("-")) {
                int op1 = st.pop();
                int op2 = st.pop();
                st.push(op2 - op1);
            } else if (tokens[i].equals("*")) {
                int op1 = st.pop();
                int op2 = st.pop();
                st.push(op2 * op1);
            } else if (tokens[i].equals("/")) {
                int op1 = st.pop();
                int op2 = st.pop();
                st.push(op2 / op1);
            } else {
                st.push(Integer.parseInt(tokens[i]));
            }
        }
        return st.peek();
    }
}
