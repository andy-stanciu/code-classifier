class Solution {

    public int evalRPN(String[] tokens) {
        if (tokens.length <= 1) {
            return Integer.parseInt(tokens[0]);
        }
        int ans = 0;
        List<Integer> l = new ArrayList<>();
        for (String s : tokens) {
            if ("+".equals(s)) {
                ans = l.get(l.size() - 2) + l.get(l.size() - 1);
                updateList(l, ans);
            } else if ("-".equals(s)) {
                ans = l.get(l.size() - 2) - l.get(l.size() - 1);
                updateList(l, ans);
            } else if ("*".equals(s)) {
                ans = l.get(l.size() - 2) * l.get(l.size() - 1);
                updateList(l, ans);
            } else if ("/".equals(s)) {
                ans = l.get(l.size() - 2) / l.get(l.size() - 1);
                updateList(l, ans);
            } else {
                l.add(Integer.parseInt(s));
            }
        }
        return ans;
    }

    public void updateList(List<Integer> l, int ans) {
        l.remove(l.size() - 2);
        l.remove(l.size() - 1);
        l.add(ans);
    }
}
