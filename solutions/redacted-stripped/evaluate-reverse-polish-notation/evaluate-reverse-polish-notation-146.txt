class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        Set<String> validOperators = new HashSet<>();
        validOperators.add("+");
        validOperators.add("-");
        validOperators.add("*");
        validOperators.add("/");
        for (String token : tokens) {
            if (!validOperators.contains(token)) {
                stack.push(Integer.parseInt(token));
            } else {
                int val1 = stack.pop();
                int val2 = stack.pop();
                if (token.equals("+")) {
                    stack.push(val1 + val2);
                } else if (token.equals("-")) {
                    stack.push(val2 - val1);
                } else if (token.equals("*")) {
                    stack.push(val2 * val1);
                } else {
                    stack.push(val2 / val1);
                }
            }
        }
        return stack.isEmpty() ? 0 : stack.pop();
    }
}
