class Solution {

    Stack<Integer> stack = new Stack<>();

    public int evalRPN(String[] tokens) {
        for (String token : tokens) {
            if (isOperator(token)) {
                executeOperation(token);
            } else {
                int val = Integer.parseInt(token);
                stack.push(val);
            }
        }
        return stack.pop();
    }

    public boolean isOperator(String token) {
        return token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/");
    }

    public void executeOperation(String operation) {
        int operand1 = stack.pop();
        int operand2 = stack.pop();
        if (operation.equals("+")) {
            stack.push(operand2 + operand1);
        } else if (operation.equals("-")) {
            stack.push(operand2 - operand1);
        } else if (operation.equals("*")) {
            stack.push(operand2 * operand1);
        } else if (operation.equals("/")) {
            stack.push(operand2 / operand1);
        }
    }
}
