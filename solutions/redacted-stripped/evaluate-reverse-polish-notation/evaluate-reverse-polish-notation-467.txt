class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> s = new Stack<Integer>();
        int op1 = 0;
        int op2 = 0;
        int ans = 0;
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("*") || tokens[i].equals("/")) {
                op2 = s.pop();
                op1 = s.pop();
                if (tokens[i].equals("+")) {
                    ans = op1 + op2;
                }
                if (tokens[i].equals("-")) {
                    ans = op1 - op2;
                }
                if (tokens[i].equals("*")) {
                    ans = op1 * op2;
                }
                if (tokens[i].equals("/")) {
                    ans = op1 / op2;
                }
                s.push(ans);
            } else {
                s.push(Integer.parseInt(tokens[i]));
            }
        }
        return s.peek();
    }
}
