class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> s = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("*") || tokens[i].equals("/")) {
                switch(tokens[i]) {
                    case "+":
                        int x = s.pop();
                        int y = s.pop();
                        int sum = x + y;
                        s.push(sum);
                        break;
                    case "-":
                        x = s.pop();
                        y = s.pop();
                        int sub = y - x;
                        s.push(sub);
                        break;
                    case "*":
                        x = s.pop();
                        y = s.pop();
                        int pro = x * y;
                        s.push(pro);
                        break;
                    case "/":
                        x = s.pop();
                        y = s.pop();
                        int div = y / x;
                        s.push(div);
                        break;
                }
            } else {
                s.push(Integer.parseInt(tokens[i]));
            }
        }
        return s.pop();
    }
}
