class Solution {

    public static int evalRPN(String[] tokens) {
        Stack<Integer> numStack = new Stack<>();
        int temp;
        for (String token : tokens) {
            switch(token) {
                case "+":
                    numStack.push(numStack.pop() + numStack.pop());
                    break;
                case "-":
                    temp = numStack.pop();
                    numStack.push(numStack.pop() - temp);
                    break;
                case "*":
                    numStack.push(numStack.pop() * numStack.pop());
                    break;
                case "/":
                    temp = numStack.pop();
                    numStack.push(numStack.pop() / temp);
                    break;
                default:
                    numStack.push(Integer.parseInt(token));
            }
        }
        return numStack.pop();
    }
}
