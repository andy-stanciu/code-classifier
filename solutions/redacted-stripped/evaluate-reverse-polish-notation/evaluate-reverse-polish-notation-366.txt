class Solution {

    boolean isOperator(String op) {
        return (op.equals("+") || op.equals("-") || op.equals("*") || op.equals("/"));
    }

    public int evalRPN(String[] tokens) {
        Stack<Integer> stk = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (!stk.isEmpty() && isOperator(tokens[i])) {
                int val2 = stk.pop();
                int val1 = stk.pop();
                if (tokens[i].equals("+"))
                    stk.push(val1 + val2);
                else if (tokens[i].equals("-"))
                    stk.push(val1 - val2);
                else if (tokens[i].equals("*"))
                    stk.push(val1 * val2);
                else if (tokens[i].equals("/"))
                    stk.push(val1 / val2);
            } else
                stk.push(Integer.parseInt(tokens[i]));
        }
        return stk.pop();
    }
}
