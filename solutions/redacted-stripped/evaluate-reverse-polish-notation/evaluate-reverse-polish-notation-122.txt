class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stck = new Stack();
        for (int i = 0; i < tokens.length; i++) {
            switch(tokens[i]) {
                case "*" ->
                    {
                        int op2 = stck.pop();
                        int op1 = stck.pop();
                        stck.push(op1 * op2);
                    }
                case "+" ->
                    {
                        int op2 = stck.pop();
                        int op1 = stck.pop();
                        stck.push(op1 + op2);
                    }
                case "-" ->
                    {
                        int op2 = stck.pop();
                        int op1 = stck.pop();
                        stck.push(op1 - op2);
                    }
                case "/" ->
                    {
                        int op2 = stck.pop();
                        int op1 = stck.pop();
                        stck.push(op1 / op2);
                    }
                default ->
                    stck.push(Integer.parseInt(tokens[i]));
            }
        }
        return stck.pop();
    }
}
