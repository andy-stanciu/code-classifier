class Solution {

    public int evalRPN(String[] tokens) {
        ArrayList<Integer> stack = new ArrayList<Integer>();
        for (String token : tokens) {
            if (operator(token)) {
                int n2 = stack.remove(stack.size() - 1);
                int n1 = stack.remove(stack.size() - 1);
                int temp = operate(token, n1, n2);
                stack.add(temp);
            } else {
                stack.add(Integer.parseInt(token));
            }
        }
        return stack.get(0);
    }

    public boolean operator(String token) {
        return token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/");
    }

    public int operate(String operator, int n1, int n2) {
        switch(operator) {
            case "+":
                return n1 + n2;
            case "-":
                return n1 - n2;
            case "*":
                return n1 * n2;
            case "/":
                return n1 / n2;
            default:
                return 201;
        }
    }
}
