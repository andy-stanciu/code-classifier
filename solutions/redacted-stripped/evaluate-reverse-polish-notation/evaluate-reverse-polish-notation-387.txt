class Solution {

    private static final Map<String, BiFunction<Integer, Integer, Integer>> OPS = Map.of("+", (i, j) -> j + i, "-", (i, j) -> j - i, "*", (i, j) -> j * i, "/", (i, j) -> j / i);

    public int evalRPN(String[] tokens) {
        Stack<Integer> operands = new Stack<>();
        for (String token : tokens) {
            if (OPS.containsKey(token)) {
                operands.push(OPS.get(token).apply(operands.pop(), operands.pop()));
            } else {
                operands.push(Integer.valueOf(token));
            }
        }
        return operands.pop();
    }
}
