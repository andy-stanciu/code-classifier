class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> numbers = new Stack<>();
        for (String str : tokens) {
            switch(str) {
                case "+":
                    numbers.push(method1(numbers.pop(), numbers.pop()));
                    break;
                case "-":
                    numbers.push(method2(numbers.pop(), numbers.pop()));
                    break;
                case "*":
                    numbers.push(method3(numbers.pop(), numbers.pop()));
                    break;
                case "/":
                    numbers.push(method4(numbers.pop(), numbers.pop()));
                    break;
                default:
                    numbers.push(Integer.parseInt(str));
                    break;
            }
        }
        return numbers.pop();
    }

    private int method1(int a, int b) {
        return b + a;
    }

    private int method2(int a, int b) {
        return b - a;
    }

    private int method3(int a, int b) {
        return b * a;
    }

    private int method4(int a, int b) {
        return b / a;
    }
}
