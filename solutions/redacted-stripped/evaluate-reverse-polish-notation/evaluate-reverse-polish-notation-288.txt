class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            String token = tokens[i];
            if (isOperator(token)) {
                int op1 = stack.pop();
                int op2 = stack.pop();
                stack.push(operate(op1, op2, token));
            } else {
                stack.push(Integer.parseInt(token));
            }
        }
        return stack.pop();
    }

    private boolean isOperator(String token) {
        String res = "+/*-";
        return res.contains(token);
    }

    private int operate(int a, int b, String op) {
        int result = 0;
        switch(op) {
            case "+":
                result = a + b;
                break;
            case "-":
                result = b - a;
                break;
            case "*":
                result = a * b;
                break;
            case "/":
                result = b / a;
                break;
            default:
                return result;
        }
        return result;
    }
}
