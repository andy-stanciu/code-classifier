class Solution {

    public int evalRPN(String[] tokens) {
        Stack<String> stack = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+")) {
                int first = Integer.parseInt(stack.pop());
                int second = Integer.parseInt(stack.pop());
                int value = first + second;
                stack.push(Integer.toString(value));
            } else if (tokens[i].equals("-")) {
                int first = Integer.parseInt(stack.pop());
                int second = Integer.parseInt(stack.pop());
                int value = second - first;
                stack.push(Integer.toString(value));
            } else if (tokens[i].equals("*")) {
                int first = Integer.parseInt(stack.pop());
                int second = Integer.parseInt(stack.pop());
                int value = first * second;
                stack.push(Integer.toString(value));
            } else if (tokens[i].equals("/")) {
                int first = Integer.parseInt(stack.pop());
                int second = Integer.parseInt(stack.pop());
                int value = second / first;
                stack.push(Integer.toString(value));
            } else {
                stack.push(tokens[i]);
            }
        }
        return Integer.parseInt(stack.peek());
    }
}
