class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            String currStr = tokens[i];
            if (currStr.equals("+")) {
                Integer secNum = stack.pop();
                Integer fstNum = stack.pop();
                stack.push(fstNum + secNum);
            } else if (currStr.equals("/")) {
                Integer secNum = stack.pop();
                Integer fstNum = stack.pop();
                stack.push(fstNum / secNum);
            } else if (currStr.equals("-")) {
                Integer secNum = stack.pop();
                Integer fstNum = stack.pop();
                stack.push(fstNum - secNum);
            } else if (currStr.equals("*")) {
                Integer secNum = stack.pop();
                Integer fstNum = stack.pop();
                stack.push(fstNum * secNum);
            } else {
                stack.push(Integer.parseInt(currStr));
            }
        }
        return stack.pop();
    }
}
