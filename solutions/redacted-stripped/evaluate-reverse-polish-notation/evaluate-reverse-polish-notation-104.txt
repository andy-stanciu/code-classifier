class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (String token : tokens) {
            if (!"+-*/".contains(token)) {
                st.push(Integer.parseInt(token));
            } else {
                int d1 = st.pop();
                int d2 = st.pop();
                int cal = 0;
                switch(token) {
                    case "+":
                        cal = d2 + d1;
                        break;
                    case "-":
                        cal = d2 - d1;
                        break;
                    case "*":
                        cal = d2 * d1;
                        break;
                    case "/":
                        cal = d2 / d1;
                        break;
                }
                st.push(cal);
            }
        }
        return st.pop();
    }
}
