class Solution {

    public int evalRPN(String[] tokens) {
        if (tokens.length == 0)
            return 0;
        Stack<Integer> stk = new Stack<>();
        for (String token : tokens) {
            if (!stk.isEmpty() && (token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/"))) {
                int num1 = stk.pop();
                int num2 = stk.pop();
                int res = 0;
                if (token.equals("+")) {
                    res = num1 + num2;
                } else if (token.equals("-")) {
                    res = num2 - num1;
                } else if (token.equals("*")) {
                    res = num1 * num2;
                } else if (token.equals("/")) {
                    if (num1 == 0) {
                        return -1;
                    } else
                        res = num2 / num1;
                }
                stk.push(res);
            } else {
                stk.push(Integer.parseInt(token));
            }
        }
        return stk.pop();
    }
}
