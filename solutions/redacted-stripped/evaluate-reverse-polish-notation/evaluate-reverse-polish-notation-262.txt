class Solution {

    public int evalRPN(String[] tokens) {
        Stack<String> s = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            String ch = tokens[i];
            s.push(ch);
            if (s.peek().equals("+")) {
                s.pop();
                String b = s.pop();
                String a = s.pop();
                int result = Integer.parseInt(a) + Integer.parseInt(b);
                s.push(Integer.toString(result));
            } else if (s.peek().equals("-")) {
                s.pop();
                String b = s.pop();
                String a = s.pop();
                int result = Integer.parseInt(a) - Integer.parseInt(b);
                s.push(Integer.toString(result));
            } else if (s.peek().equals("*")) {
                s.pop();
                String b = s.pop();
                String a = s.pop();
                int result = Integer.parseInt(a) * Integer.parseInt(b);
                s.push(Integer.toString(result));
            } else if (s.peek().equals("/")) {
                s.pop();
                String b = s.pop();
                String a = s.pop();
                int result = Integer.parseInt(a) / Integer.parseInt(b);
                s.push(Integer.toString(result));
            } else {
                continue;
            }
        }
        return Integer.parseInt(s.peek());
    }
}
