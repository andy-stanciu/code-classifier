public class Solution {

    public int evalRPN(String[] tokens) {
        Deque<Integer> stack = new ArrayDeque<>(tokens.length);
        for (String token : tokens) {
            switch(token) {
                case "+":
                    stack.addLast(stack.removeLast() + stack.removeLast());
                    break;
                case "-":
                    int subtrahend = stack.removeLast();
                    stack.addLast(stack.removeLast() - subtrahend);
                    break;
                case "*":
                    stack.addLast(stack.removeLast() * stack.removeLast());
                    break;
                case "/":
                    int divisor = stack.removeLast();
                    stack.addLast(stack.removeLast() / divisor);
                    break;
                default:
                    stack.addLast(Integer.parseInt(token));
            }
        }
        return stack.removeLast();
    }
}
