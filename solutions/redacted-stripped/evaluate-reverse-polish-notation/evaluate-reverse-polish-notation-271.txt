class Solution {

    public static int evalRPN(String[] tokens) {
        Stack<String> stack = new Stack<>();
        Set<String> op = Set.of("*", "/", "+", "-");
        for (String c : tokens) {
            if (!op.contains(c)) {
                stack.push(c);
            } else {
                Integer i1 = Integer.valueOf(stack.pop());
                Integer i2 = Integer.valueOf(stack.pop());
                stack.push(String.valueOf(compute(i1, c, i2)));
            }
        }
        return Integer.valueOf(stack.peek());
    }

    public static int compute(int i2, String operator, int i1) {
        switch(operator) {
            case "+":
                return i1 + i2;
            case "-":
                return i1 - i2;
            case "*":
                return i1 * i2;
            case "/":
                if (i2 != 0) {
                    return i1 / i2;
                }
        }
        return 0;
    }
}
