class Solution {

    final static String ADD = "+";

    final static String SUB = "-";

    final static String MUL = "*";

    final static String DIV = "/";

    public int evalRPN(String[] tokens) {
        int[] stack = new int[tokens.length];
        int stack_depth = 0;
        for (String token : tokens) {
            if (ADD.equals(token)) {
                int addend = stack[--stack_depth];
                int augend = stack[--stack_depth];
                stack[stack_depth++] = addend + augend;
            } else if (SUB.equals(token)) {
                int subtrahend = stack[--stack_depth];
                int minuend = stack[--stack_depth];
                stack[stack_depth++] = minuend - subtrahend;
            } else if (MUL.equals(token)) {
                int multiplier = stack[--stack_depth];
                int multiplicand = stack[--stack_depth];
                stack[stack_depth++] = multiplier * multiplicand;
            } else if (DIV.equals(token)) {
                int divisor = stack[--stack_depth];
                int dividend = stack[--stack_depth];
                stack[stack_depth++] = dividend / divisor;
            } else {
                int num = Integer.parseInt(token);
                stack[stack_depth++] = num;
            }
        }
        return stack[0];
    }
}
