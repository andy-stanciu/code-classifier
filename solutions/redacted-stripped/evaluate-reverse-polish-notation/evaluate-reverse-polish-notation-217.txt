class Solution {

    int calculate(int a, int b, String c) {
        int res = 0;
        switch(c) {
            case ("+"):
                res = b + a;
                break;
            case ("-"):
                res = b - a;
                break;
            case ("*"):
                res = b * a;
                break;
            case ("/"):
                res = b / a;
                break;
        }
        return res;
    }

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        if (tokens.length > 2) {
            st.push(Integer.parseInt(tokens[0]));
            st.push(Integer.parseInt(tokens[1]));
            for (int i = 2; i < tokens.length; i++) {
                if (tokens[i].compareTo("+") == 0 || tokens[i].compareTo("-") == 0 || tokens[i].compareTo("*") == 0 || tokens[i].compareTo("/") == 0) {
                    int a = st.pop();
                    int b = st.pop();
                    String c = tokens[i];
                    st.push(calculate(a, b, c));
                } else {
                    st.push(Integer.parseInt(tokens[i]));
                }
            }
        } else {
            st.push(Integer.parseInt(tokens[0]));
        }
        return st.pop();
    }
}
