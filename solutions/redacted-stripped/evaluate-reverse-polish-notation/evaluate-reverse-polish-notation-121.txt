class Solution {

    public int evalRPN(String[] tokens) {
        int i, n, a, b, res = 0;
        Stack<Integer> s = new Stack<>();
        for (i = 0; i < tokens.length; i++) {
            if (tokens[i].compareTo("+") == 0 || tokens[i].compareTo("-") == 0 || tokens[i].compareTo("*") == 0 || tokens[i].compareTo("/") == 0) {
                a = 0;
                b = 0;
                res = 0;
                if (!s.isEmpty())
                    b = s.pop();
                if (!s.isEmpty())
                    a = s.pop();
                if (tokens[i].compareTo("+") == 0)
                    res = a + b;
                else if (tokens[i].compareTo("-") == 0)
                    res = a - b;
                else if (tokens[i].compareTo("*") == 0)
                    res = a * b;
                else if (tokens[i].compareTo("/") == 0)
                    res = a / b;
                s.push(res);
            } else {
                n = Integer.parseInt(tokens[i]);
                s.push(n);
            }
        }
        return s.peek();
    }
}
