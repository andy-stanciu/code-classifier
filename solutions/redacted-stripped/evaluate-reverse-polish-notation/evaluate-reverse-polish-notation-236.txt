class Solution {

    private boolean isNumber(String token) {
        try {
            Integer.parseInt(token);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (isNumber(tokens[i])) {
                st.push(Integer.valueOf(tokens[i]));
            } else {
                int b = st.pop();
                int a = st.pop();
                if (tokens[i].equals("+")) {
                    st.push(a + b);
                } else if (tokens[i].equals("-")) {
                    st.push(a - b);
                } else if (tokens[i].equals("*")) {
                    st.push(a * b);
                } else {
                    st.push(a / b);
                }
            }
        }
        return st.pop();
    }
}
