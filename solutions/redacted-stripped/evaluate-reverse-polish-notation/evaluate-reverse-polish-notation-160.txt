class Solution {

    public int evalRPN(String[] tokens) {
        Stack<String> stack = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            switch(tokens[i]) {
                case "+":
                    {
                        int num1 = Integer.parseInt(stack.pop());
                        int num2 = Integer.parseInt(stack.pop());
                        stack.push(String.valueOf(num1 + num2));
                        break;
                    }
                case "-":
                    {
                        int num1 = Integer.parseInt(stack.pop());
                        int num2 = Integer.parseInt(stack.pop());
                        stack.push(String.valueOf(num2 - num1));
                        break;
                    }
                case "*":
                    {
                        int num1 = Integer.parseInt(stack.pop());
                        int num2 = Integer.parseInt(stack.pop());
                        stack.push(String.valueOf(num1 * num2));
                        break;
                    }
                case "/":
                    {
                        int num1 = Integer.parseInt(stack.pop());
                        int num2 = Integer.parseInt(stack.pop());
                        stack.push(String.valueOf(num2 / num1));
                        break;
                    }
                default:
                    {
                        stack.push(tokens[i]);
                    }
            }
        }
        return Integer.valueOf(stack.pop());
    }
}
