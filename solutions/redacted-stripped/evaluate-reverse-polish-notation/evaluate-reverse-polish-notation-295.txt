class Solution {

    Map<String, BiFunction<Integer, Integer, Integer>> ops = Map.of("+", (i, j) -> i + j, "-", (i, j) -> i - j, "*", (i, j) -> i * j, "/", (i, j) -> i / j);

    public int evalRPN(String[] tokens) {
        Stack<Integer> s = new Stack<>();
        for (String e : tokens) {
            if (ops.containsKey(e) && e.length() == 1) {
                int sec = s.pop();
                int frs = s.pop();
                s.add(ops.get(e).apply(frs, sec));
            } else {
                s.add(Integer.parseInt(e));
            }
        }
        return s.pop();
    }
}
