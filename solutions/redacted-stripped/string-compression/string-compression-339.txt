class Solution {

    public int compress(char[] chars) {
        int n = chars.length;
        if (n < 2) {
            return 1;
        }
        int count = 1;
        int k = 0;
        int i = 0;
        int j = 1;
        while (i < n && j < n) {
            while (j < n && chars[i] == chars[j]) {
                j++;
                count++;
            }
            chars[k] = chars[i];
            k++;
            if (count > 1) {
                String temp = Integer.toString(count);
                for (int z = 0; z < temp.length(); z++) {
                    chars[k] = temp.charAt(z);
                    k++;
                }
            }
            i = j;
            j = i + 1;
            count = 1;
            if (j >= n) {
                break;
            }
        }
        if (i >= n) {
            return k;
        }
        chars[k] = chars[i];
        k++;
        if (count > 1) {
            while (count != 0) {
                chars[k] = Integer.toString(count % 10).charAt(0);
                count = count / 10;
                k++;
            }
        }
        return k;
    }
}
