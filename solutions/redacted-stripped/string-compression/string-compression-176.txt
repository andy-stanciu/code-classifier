class Solution {

    public int compress(char[] chars) {
        if (chars.length == 1) {
            return chars.length;
        }
        StringBuilder sb = new StringBuilder();
        int freq = 1;
        for (int i = 0; i < chars.length - 1; i++) {
            if (chars[i] == chars[i + 1])
                freq++;
            else if (chars[i] != chars[i + 1] && freq > 1) {
                sb.append(chars[i]);
                sb.append(freq);
                freq = 1;
            } else {
                sb.append(chars[i]);
            }
        }
        if (chars[chars.length - 2] == chars[chars.length - 1]) {
            sb.append(chars[chars.length - 1]);
            sb.append(freq);
        } else if (chars[chars.length - 2] != chars[chars.length - 1]) {
            sb.append(chars[chars.length - 1]);
        }
        String compressedStr = sb.toString();
        char[] compressedChars = compressedStr.toCharArray();
        for (int i = 0; i < compressedChars.length; i++) {
            chars[i] = compressedChars[i];
        }
        return compressedChars.length;
    }
}
