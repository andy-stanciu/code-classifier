class Solution {

    public int compress(char[] chars) {
        int counter = 0;
        if (chars.length > 0) {
            char prevChar = chars[0];
            int start = 0;
            for (int i = 0; i < chars.length; i++) {
                if (prevChar == chars[i]) {
                    counter++;
                } else {
                    chars[start++] = prevChar;
                    if (counter > 1) {
                        if (Integer.toString(counter).length() > 1) {
                            int j = 0;
                            while (j < Integer.toString(counter).length()) {
                                chars[start++] = Integer.toString(counter).charAt(j++);
                            }
                        } else {
                            chars[start++] = Integer.toString(counter).charAt(0);
                        }
                    }
                    prevChar = chars[i];
                    counter = 1;
                }
            }
            chars[start++] = prevChar;
            if (counter > 1) {
                if (Integer.toString(counter).length() > 1) {
                    int i = 0;
                    while (i < Integer.toString(counter).length()) {
                        chars[start++] = Integer.toString(counter).charAt(i++);
                    }
                } else {
                    chars[start++] = Integer.toString(counter).charAt(0);
                }
            }
            return start;
        }
        return counter;
    }
}
