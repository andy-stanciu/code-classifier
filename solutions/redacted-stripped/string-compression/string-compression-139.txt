class Solution {

    public int compress(char[] chars) {
        int i = 0;
        int j = 0;
        char prev = chars[0];
        int cnt = 0;
        if (chars.length == 1) {
            chars[j] = chars[chars.length - 1];
            j++;
            return j;
        }
        char secLast = chars[chars.length - 2];
        char last = chars[chars.length - 1];
        while (i < chars.length) {
            if (chars[i] == prev) {
                cnt++;
            } else {
                chars[j] = prev;
                j++;
                if (cnt > 1) {
                    char[] arr = String.valueOf(cnt).toCharArray();
                    for (char k : arr) {
                        chars[j] = k;
                        j++;
                    }
                }
                cnt = 1;
                prev = chars[i];
            }
            i++;
        }
        if (cnt > 1) {
            chars[j] = prev;
            j++;
            if (cnt > 1) {
                char[] arr = String.valueOf(cnt).toCharArray();
                for (char k : arr) {
                    chars[j] = k;
                    j++;
                }
            }
        }
        if (last != secLast) {
            chars[j] = chars[chars.length - 1];
            j++;
        }
        return j;
    }
}
