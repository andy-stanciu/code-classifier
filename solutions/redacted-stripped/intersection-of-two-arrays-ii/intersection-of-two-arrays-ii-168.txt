class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        int[] counter1 = new int[1001];
        int[] counter2 = new int[1001];
        int max = 0;
        int i = 0;
        for (i = 0; i < n1 && i < n2; i++) {
            counter1[nums1[i]] += 1;
            counter2[nums2[i]] += 1;
            max = max > nums1[i] ? max : nums1[i];
            max = max > nums2[i] ? max : nums2[i];
        }
        for (; i < n1; i++) {
            counter1[nums1[i]] += 1;
            max = max > nums1[i] ? max : nums1[i];
        }
        for (; i < n2; i++) {
            counter2[nums2[i]] += 1;
            max = max > nums2[i] ? max : nums2[i];
        }
        ArrayList<Integer> ls = new ArrayList<Integer>();
        for (i = 0; i <= max; i++) {
            while (counter1[i] > 0 && counter2[i] > 0) {
                ls.add(i);
                counter1[i] -= 1;
                counter2[i] -= 1;
            }
        }
        max = ls.size();
        int[] result = new int[max];
        for (i = 0; i < max; i++) {
            result[i] = ls.get(i);
        }
        return result;
    }
}
