class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        List<Integer> list = new ArrayList<>();
        HashMap<Integer, Integer> map = new HashMap<>();
        if (nums1.length >= nums2.length) {
            Hashing(map, nums1);
            for (int x : nums2) {
                if (map.containsKey(x) && map.get(x) > 0) {
                    map.put(x, map.get(x) - 1);
                    list.add(x);
                }
            }
        } else {
            Hashing(map, nums2);
            for (int x : nums1) {
                if (map.containsKey(x) && map.get(x) > 0) {
                    map.put(x, map.get(x) - 1);
                    list.add(x);
                }
            }
        }
        int[] ans = new int[list.size()];
        for (int i = 0; i < list.size(); i++) {
            ans[i] = list.get(i);
        }
        return ans;
    }

    static void Hashing(HashMap<Integer, Integer> map, int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            if (!map.containsKey(arr[i])) {
                map.put(arr[i], 1);
            } else {
                map.put(arr[i], map.get(arr[i]) + 1);
            }
        }
    }
}
