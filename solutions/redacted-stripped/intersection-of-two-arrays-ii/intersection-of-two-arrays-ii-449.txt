class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        if (n1 < n2)
            return intersect(nums2, nums1);
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < n1; i++) {
            map.put(nums1[i], map.getOrDefault(nums1[i], 0) + 1);
        }
        ArrayList<Integer> ans = new ArrayList<>();
        for (int i = 0; i < n2; i++) {
            int arrval = nums2[i];
            if (map.containsKey(arrval) == true && map.get(arrval) > 0) {
                int val = map.get(arrval);
                map.put(arrval, val - 1);
                ans.add(arrval);
            } else {
                continue;
            }
        }
        int[] anss = new int[ans.size()];
        for (int i = 0; i < ans.size(); i++) anss[i] = ans.get(i);
        return anss;
    }
}
