class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer, Integer> count1 = new HashMap<>();
        Map<Integer, Integer> count2 = new HashMap<>();
        for (int num : nums1) {
            count1.put(num, count1.getOrDefault(num, 0) + 1);
        }
        for (int num : nums2) {
            count2.put(num, count2.getOrDefault(num, 0) + 1);
        }
        List<Integer> var1 = new ArrayList<>();
        for (Map.Entry<Integer, Integer> entry : count1.entrySet()) {
            int num = entry.getKey();
            int count = entry.getValue();
            if (count2.containsKey(num)) {
                int minCount = Math.min(count, count2.get(num));
                for (int i = 0; i < minCount; i++) {
                    var1.add(num);
                }
            }
        }
        int[] result = new int[var1.size()];
        for (int i = 0; i < var1.size(); i++) {
            result[i] = var1.get(i);
        }
        return result;
    }
}
