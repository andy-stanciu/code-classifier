class Solution {

    int[] prefix;

    public int method1(int[] nums) {
        if (nums.length == 1)
            return 0;
        prefix = prefixSum(nums);
        if (prefixRange(1, nums.length - 1) == 0)
            return 0;
        for (int i = 1; i < nums.length - 1; i++) {
            int leftSum = prefixRange(0, i - 1);
            int rightSum = prefixRange(i + 1, nums.length - 1);
            if (rightSum - leftSum == 0)
                return i;
        }
        if (prefixRange(0, nums.length - 2) == 0)
            return nums.length - 1;
        return -1;
    }

    private int prefixRange(int left, int right) {
        if (left > 0) {
            return prefix[right] - prefix[left - 1];
        } else {
            return prefix[right];
        }
    }

    private int[] prefixSum(int[] nums) {
        int[] preSum = new int[nums.length];
        preSum[0] = nums[0];
        for (int i = 1; i < nums.length; i++) {
            preSum[i] = preSum[i - 1] + nums[i];
        }
        return preSum;
    }
}
