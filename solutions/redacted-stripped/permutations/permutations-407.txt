class Solution {

    public List<List<Integer>> permute(int[] nums) {
        if (nums.length <= 1) {
            List<Integer> innerList = new ArrayList<>();
            List<List<Integer>> var1 = new ArrayList<>();
            innerList.add(nums[0]);
            var1.add(innerList);
            return var1;
        } else {
            List<List<Integer>> var1 = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                int x = 0;
                int[] newNums = new int[nums.length - 1];
                for (int j = 0; j < nums.length; j++) {
                    if (j != i) {
                        newNums[x] = nums[j];
                        x++;
                    }
                }
                List<List<Integer>> permuteList = permute(newNums);
                for (List<Integer> list : permuteList) {
                    list.add(nums[i]);
                    List<Integer> innerList = new ArrayList<>();
                    for (Integer num : list) {
                        innerList.add(num);
                    }
                    var1.add(innerList);
                }
            }
            return var1;
        }
    }
}
