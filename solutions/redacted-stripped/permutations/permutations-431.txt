class Solution {

    public List<List<Integer>> permute(int[] A) {
        List<List<Integer>> resultList = new ArrayList<>();
        backtracking(A, resultList, new ArrayList<>());
        return resultList;
    }

    public void backtracking(int[] A, List<List<Integer>> resultList, List<Integer> Templist) {
        if (Templist.size() == A.length) {
            resultList.add(new ArrayList<>(Templist));
            return;
        }
        for (int n : A) {
            if (Templist.contains(n)) {
                continue;
            }
            Templist.add(n);
            backtracking(A, resultList, Templist);
            Templist.remove(Templist.size() - 1);
        }
    }
}
