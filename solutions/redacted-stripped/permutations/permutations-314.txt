class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> lists = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        findPerm(nums, lists, list);
        return lists;
    }

    public static void findPerm(int[] nums, List<List<Integer>> lists, List<Integer> list) {
        if (list.size() == nums.length) {
            lists.add(new ArrayList(list));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] < -10) {
                continue;
            }
            list.add(nums[i]);
            int temp = nums[i];
            nums[i] = -11;
            findPerm(nums, lists, list);
            list.remove(list.size() - 1);
            nums[i] = temp;
        }
    }
}
