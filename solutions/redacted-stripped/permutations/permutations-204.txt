class Solution {

    public List<List<Integer>> permute(int[] nums) {
        int n = nums.length;
        List<List<Integer>> res = new ArrayList<>();
        boolean[] map = new boolean[n];
        helper(nums, res, map, new ArrayList<>());
        return res;
    }

    public void helper(int[] nums, List<List<Integer>> res, boolean[] map, ArrayList<Integer> list) {
        if (list.size() == nums.length) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!map[i]) {
                map[i] = true;
                list.add(nums[i]);
                helper(nums, res, map, list);
                list.remove(list.size() - 1);
                map[i] = false;
            }
        }
    }
}
