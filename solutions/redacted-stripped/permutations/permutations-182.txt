class Solution {

    public List<List<Integer>> permute(int[] nums) {
        return method1(nums, new ArrayList<Integer>());
    }

    public static List<List<Integer>> method1(int[] unprocessed, List<Integer> processed) {
        if (unprocessed.length == 0) {
            List<List<Integer>> list = new ArrayList<>();
            list.add(processed);
            return list;
        }
        List<List<Integer>> ans = new ArrayList<>();
        int value = unprocessed[0];
        int[] temp = Arrays.copyOfRange(unprocessed, 1, unprocessed.length);
        for (int i = 0; i <= processed.size(); i++) {
            List<Integer> newProcessed = new ArrayList<>(processed);
            newProcessed.add(i, value);
            ans.addAll(method1(temp, newProcessed));
        }
        return ans;
    }
}
