class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        for (int i : nums) temp.add(i);
        backtrack(result, temp, new ArrayList<>());
        return result;
    }

    public void backtrack(List<List<Integer>> result, List<Integer> temp, List<Integer> current) {
        if (temp.size() == 0) {
            result.add(new ArrayList<>(current));
            return;
        }
        for (int i = 0; i < temp.size(); i++) {
            int t = temp.remove(i);
            current.add(t);
            backtrack(result, temp, current);
            current.remove(current.size() - 1);
            temp.add(i, t);
        }
    }
}
