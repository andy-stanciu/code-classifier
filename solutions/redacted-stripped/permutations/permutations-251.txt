class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> var1 = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        recursion(var1, list, nums);
        return var1;
    }

    public void recursion(List<List<Integer>> permute, List<Integer> list, int[] nums) {
        if (list.size() == nums.length) {
            permute.add(new ArrayList<>(list));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (list.contains(nums[i])) {
                continue;
            }
            list.add(nums[i]);
            recursion(permute, list, nums);
            list.remove(list.size() - 1);
        }
    }
}
