class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public void helper(int[] arr, boolean[] visited, List<Integer> list) {
        if (list.size() == arr.length) {
            res.add(new ArrayList<>(list));
        }
        for (int i = 0; i < arr.length; i++) {
            if (!visited[i]) {
                list.add(arr[i]);
                visited[i] = true;
                helper(arr, visited, list);
                visited[i] = false;
                list.remove(list.size() - 1);
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        boolean[] visited = new boolean[nums.length];
        Arrays.fill(visited, false);
        helper(nums, visited, new ArrayList<>());
        return res;
    }
}
