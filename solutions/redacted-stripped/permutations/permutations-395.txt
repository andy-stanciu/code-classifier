class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        ArrayList<Integer> numList = new ArrayList<>();
        for (int num : nums) {
            numList.add(num);
        }
        method1(numList, new ArrayList<>(), result);
        return result;
    }

    private void method1(List<Integer> nums, List<Integer> permutation, List<List<Integer>> result) {
        if (nums.isEmpty()) {
            result.add(new ArrayList<>(permutation));
            return;
        }
        for (int i = 0; i < nums.size(); i++) {
            int num = nums.get(i);
            permutation.add(num);
            List<Integer> remaining = new ArrayList<>(nums);
            remaining.remove(i);
            method1(remaining, permutation, result);
            permutation.remove(permutation.size() - 1);
        }
    }
}
