class Solution {

    public static void rec(int[] nums, List<Integer> ls, List<List<Integer>> l, boolean[] freq) {
        if (ls.size() == nums.length) {
            l.add(new ArrayList<>(ls));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!freq[i]) {
                freq[i] = true;
                ls.add(nums[i]);
                rec(nums, ls, l, freq);
                ls.remove(ls.size() - 1);
                freq[i] = false;
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<Integer> ls = new ArrayList<>();
        List<List<Integer>> l = new ArrayList<>();
        boolean[] freq = new boolean[nums.length];
        rec(nums, ls, l, freq);
        return l;
    }
}
