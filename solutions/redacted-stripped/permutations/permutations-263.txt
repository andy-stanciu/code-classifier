class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        permuteArray(0, nums, ans);
        return ans;
    }

    public void permuteArray(int ind, int[] nums, List<List<Integer>> ans) {
        int n = nums.length;
        if (ind == n) {
            List<Integer> ds = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                ds.add(nums[i]);
            }
            ans.add(new ArrayList<>(ds));
            return;
        }
        for (int i = ind; i < n; i++) {
            swap(i, ind, nums);
            permuteArray(ind + 1, nums, ans);
            swap(i, ind, nums);
        }
    }

    public void swap(int i, int j, int[] nums) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
