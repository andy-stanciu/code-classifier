class Solution {

    Set<Integer> set = new HashSet<>();

    List<Integer> list = new ArrayList<>();

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> permute(int[] nums) {
        return fun(nums, set, list);
    }

    public List<List<Integer>> fun(int[] nums, Set<Integer> set, List<Integer> list) {
        if (list.size() == nums.length) {
            res.add(List.copyOf(list));
            return res;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!set.contains(nums[i])) {
                set.add(nums[i]);
                list.add(nums[i]);
                fun(nums, set, list);
                set.remove(nums[i]);
                list.remove(list.size() - 1);
            }
        }
        return res;
    }
}
