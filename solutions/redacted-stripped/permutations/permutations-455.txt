class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new LinkedList<>();
        find(res, nums, 0);
        return res;
    }

    public void find(List<List<Integer>> res, int[] nums, int curpos) {
        if (curpos == nums.length) {
            List<Integer> newSet = new LinkedList<>();
            for (int num : nums) {
                newSet.add(num);
            }
            res.add(newSet);
            return;
        }
        for (int j = curpos; j < nums.length; j++) {
            swap(nums, curpos, j);
            find(res, nums, curpos + 1);
            swap(nums, curpos, j);
        }
    }

    public void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
