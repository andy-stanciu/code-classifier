class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        recursive(nums, new ArrayList<>(), ans, new HashSet<>());
        return ans;
    }

    private void recursive(int[] nums, List<Integer> cur, List<List<Integer>> ans, Set<Integer> seen) {
        if (cur.size() == nums.length) {
            ans.add(new ArrayList<>(cur));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            if (!seen.contains(num)) {
                seen.add(num);
                cur.add(num);
                recursive(nums, cur, ans, seen);
                seen.remove(num);
                cur.remove(cur.size() - 1);
            }
        }
    }
}
