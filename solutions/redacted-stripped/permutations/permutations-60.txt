class Solution {

    void permuteHelp(int ind, List<Integer> perm, List<List<Integer>> ans, int[] nums) {
        if (ind == nums.length) {
            ans.add(new ArrayList<>(perm));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != Integer.MAX_VALUE) {
                perm.set(ind, nums[i]);
                int t = nums[i];
                nums[i] = Integer.MAX_VALUE;
                permuteHelp(ind + 1, perm, ans, nums);
                nums[i] = t;
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        int n = nums.length;
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> perm = new ArrayList<>();
        for (int i = 0; i < n; i++) perm.add(0);
        permuteHelp(0, perm, ans, nums);
        return ans;
    }
}
