class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        append(0, nums, list);
        return list;
    }

    private void append(int x, int[] nums, List<List<Integer>> list) {
        if (nums.length == x) {
            List<Integer> ds = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                ds.add(nums[i]);
            }
            list.add(ds);
        }
        for (int i = x; i < nums.length; i++) {
            swap(nums, i, x);
            append(x + 1, nums, list);
            swap(nums, i, x);
        }
    }

    private void swap(int[] nums, int i, int x) {
        int temp = nums[i];
        nums[i] = nums[x];
        nums[x] = temp;
    }
}
