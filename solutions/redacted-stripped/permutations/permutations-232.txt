class Solution {

    List<List<Integer>> answList = new ArrayList<>();

    String k = "";

    public void permuteCombinations(int[] nums, int s, List<Integer> ans) {
        ans.add(nums[s]);
        s = s + 1;
        for (int i = s; i < nums.length; i++) {
            int temp = nums[i];
            nums[i] = nums[s];
            nums[s] = temp;
            permuteCombinations(nums, s, ans);
            ans.remove(ans.size() - 1);
            temp = nums[i];
            nums[i] = nums[s];
            nums[s] = temp;
        }
        if (ans.size() == nums.length) {
            answList.add(new ArrayList<>(ans));
        }
        return;
    }

    public List<List<Integer>> permute(int[] nums) {
        for (int i = 0; i < nums.length; i++) {
            int temp = nums[i];
            nums[i] = nums[0];
            nums[0] = temp;
            permuteCombinations(nums, 0, new ArrayList<>());
            temp = nums[i];
            nums[i] = nums[0];
            nums[0] = temp;
        }
        return answList;
    }
}
