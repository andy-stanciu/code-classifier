class Solution {

    static List<List<Integer>> outer = new ArrayList<>();

    static List<Integer> inner = new ArrayList<>();

    public static List<List<Integer>> permute(int[] nums) {
        outer = new ArrayList<>();
        inner = new ArrayList<>();
        helper(nums);
        return outer;
    }

    public static void helper(int[] a) {
        if (inner.size() == a.length) {
            outer.add(new ArrayList<>(inner));
            return;
        }
        for (int i = 0; i < a.length; i++) {
            if (inner.contains(a[i])) {
                continue;
            }
            inner.add(a[i]);
            helper(a);
            inner.remove(inner.size() - 1);
        }
    }
}
