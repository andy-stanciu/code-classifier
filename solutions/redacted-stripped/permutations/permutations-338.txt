class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        backtrack(list, new ArrayList<>(), nums);
        return list;
    }

    private void backtrack(List<List<Integer>> list, List<Integer> comboList, int[] nums) {
        if (comboList.size() == nums.length) {
            list.add(new ArrayList<>(comboList));
        } else {
            for (int i = 0; i < nums.length; i++) {
                if (comboList.contains(nums[i]))
                    continue;
                comboList.add(nums[i]);
                backtrack(list, comboList, nums);
                comboList.remove(comboList.size() - 1);
            }
        }
    }
}
