class Solution {

    public void permuteUtil(int[] nums, List<List<Integer>> res, HashSet<Integer> set, List<Integer> cur) {
        if (set.size() == nums.length) {
            List<Integer> copy = new ArrayList<>(cur);
            res.add(copy);
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!set.contains(i)) {
                set.add(i);
                cur.add(nums[i]);
                permuteUtil(nums, res, set, cur);
                set.remove(i);
                cur.remove(cur.size() - 1);
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        HashSet<Integer> set = new HashSet<>();
        List<Integer> cur = new ArrayList<>();
        permuteUtil(nums, res, set, cur);
        return res;
    }
}
