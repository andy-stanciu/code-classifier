class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ret = new ArrayList<>();
        bt(ret, new ArrayList<>(), nums, new boolean[nums.length], 0);
        return ret;
    }

    public void bt(List<List<Integer>> ret, List<Integer> permumu, int[] nums, boolean[] visited, int numVisited) {
        if (numVisited == visited.length) {
            ret.add(new ArrayList<>(permumu));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (visited[i] == false) {
                visited[i] = true;
                permumu.add(nums[i]);
                bt(ret, permumu, nums, visited, numVisited + 1);
                visited[i] = false;
                permumu.remove(permumu.size() - 1);
            }
        }
    }
}
