class Solution {

    public static List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        backtrack(nums, ans, new ArrayList<>());
        return ans;
    }

    private static void backtrack(int[] nums, List<List<Integer>> ans, ArrayList<Integer> set) {
        if (set.size() == nums.length) {
            ans.add(new ArrayList<>(set));
            return;
        }
        for (int num : nums) {
            if (!set.contains(num)) {
                set.add(num);
                backtrack(nums, ans, set);
                set.remove(set.size() - 1);
            }
        }
    }
}
