class Solution {

    static void perm(int idx, int[] nums, List<List<Integer>> res) {
        if (idx == nums.length - 1) {
            List<Integer> temp = new ArrayList<>();
            for (int i : nums) temp.add(i);
            res.add(temp);
            return;
        }
        for (int i = idx; i < nums.length; i++) {
            swap(idx, i, nums);
            perm(idx + 1, nums, res);
            swap(i, idx, nums);
        }
    }

    static void swap(int i, int j, int[] num) {
        int temp = num[i];
        num[i] = num[j];
        num[j] = temp;
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        perm(0, nums, res);
        return res;
    }
}
