class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<Integer> ans = new ArrayList<>();
        List<List<Integer>> list = new ArrayList<>();
        boolean[] freq = new boolean[nums.length];
        permut(nums, ans, list, freq);
        return list;
    }

    void permut(int[] nums, List<Integer> ans, List<List<Integer>> list, boolean[] freq) {
        if (ans.size() == nums.length) {
            list.add(new ArrayList<>(ans));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!freq[i]) {
                freq[i] = true;
                ans.add(nums[i]);
                permut(nums, ans, list, freq);
                ans.remove(ans.size() - 1);
                freq[i] = false;
            }
        }
    }
}
