class Solution {

    public List<List<Integer>> permute(int[] nums) {
        int n = nums.length;
        List<List<Integer>> result = new ArrayList<>();
        helper(result, nums, 0, nums.length - 1);
        return result;
    }

    public static void helper(List<List<Integer>> result, int[] nums, int start, int end) {
        if (start == end) {
            List<Integer> list = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                list.add(nums[i]);
            }
            result.add(list);
        } else {
            for (int i = start; i <= end; i++) {
                int temp = nums[start];
                nums[start] = nums[i];
                nums[i] = temp;
                helper(result, nums, start + 1, end);
                temp = nums[start];
                nums[start] = nums[i];
                nums[i] = temp;
            }
        }
    }
}
