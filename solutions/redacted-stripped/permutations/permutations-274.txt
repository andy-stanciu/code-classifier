class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        boolean[] visited = new boolean[nums.length];
        for (int i = 0; i < nums.length; i++) {
            method1(nums, visited, i, ans, new ArrayList<>());
        }
        return ans;
    }

    void method1(int[] nums, boolean[] visited, int index, List<List<Integer>> ans, List<Integer> arr) {
        if (arr.size() == nums.length - 1) {
            arr.add(nums[index]);
            ans.add(new ArrayList<>(arr));
            return;
        }
        visited[index] = true;
        arr.add(nums[index]);
        for (int i = 0; i < nums.length; i++) {
            if (!visited[i]) {
                method1(nums, visited, i, ans, arr);
                arr.remove(arr.size() - 1);
                visited[i] = false;
            }
        }
        visited[index] = false;
    }
}
