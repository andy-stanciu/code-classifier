class Solution {

    List<List<Integer>> lli = new ArrayList<List<Integer>>();

    public List<List<Integer>> permute(int[] nums) {
        BackTracking(nums, 0, li);
        return lli;
    }

    void BackTracking(int[] nums, int start, List<Integer> li) {
        if (start == nums.length) {
            List<Integer> lii = new ArrayList<Integer>();
            for (int i = 0; i < nums.length; i++) {
                lii.add(nums[i]);
            }
            lli.add(lii);
        }
        for (int i = start; i < nums.length; i++) {
            int dummy = nums[i];
            nums[i] = nums[start];
            nums[start] = dummy;
            BackTracking(nums, start + 1, li);
            int dummy1 = nums[i];
            nums[i] = nums[start];
            nums[start] = dummy1;
        }
    }
}
