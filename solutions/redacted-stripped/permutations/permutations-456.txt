class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new LinkedList<>();
        List<Integer> choices = new LinkedList<>();
        for (int num : nums) {
            choices.add(num);
        }
        find(res, choices, new LinkedList<Integer>());
        return res;
    }

    public void find(List<List<Integer>> res, List<Integer> choices, List<Integer> currentSet) {
        if (choices.isEmpty()) {
            List<Integer> newSet = new LinkedList<>(currentSet);
            res.add(newSet);
            return;
        }
        int size = choices.size();
        for (int i = 0; i < size; i++) {
            int num = choices.removeFirst();
            currentSet.add(num);
            find(res, choices, currentSet);
            currentSet.removeLast();
            choices.addLast(num);
        }
    }
}
