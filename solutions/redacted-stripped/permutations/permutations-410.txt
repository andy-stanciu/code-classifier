class Solution {

    static void method1(int[] nums, List<Integer> inner, List<List<Integer>> outer) {
        if (inner.size() == nums.length) {
            outer.add(new ArrayList<Integer>(inner));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!inner.contains(nums[i])) {
                inner.add(nums[i]);
                method1(nums, inner, outer);
                inner.remove(inner.size() - 1);
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> outer = new ArrayList();
        List<Integer> inner = new ArrayList();
        method1(nums, inner, outer);
        return outer;
    }
}
