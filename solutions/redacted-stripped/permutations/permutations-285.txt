class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    int l;

    public List<List<Integer>> permute(int[] nums) {
        l = nums.length;
        List<Integer> has = new ArrayList<>(), left = new ArrayList<>();
        for (int a : nums) left.add(a);
        reccur(has, left, nums);
        return ans;
    }

    public void reccur(List<Integer> has, List<Integer> left, int[] nums) {
        if (left.size() != 0) {
            for (int i = 0; i < left.size(); i++) {
                has.add(left.get(i));
                left.remove(left.get(i));
                reccur(has, new ArrayList<>(left), nums);
                left.add(0, has.get(has.size() - 1));
                has.remove(has.size() - 1);
            }
        } else {
            ans.add(new ArrayList<>(has));
        }
    }
}
