class Solution {

    public void swap(List<Integer> nums, int i, int idx) {
        int temp = nums.get(i);
        nums.set(i, nums.get(idx));
        nums.set(idx, temp);
    }

    public void function(List<List<Integer>> result, List<Integer> nums, int idx) {
        if (idx == nums.size()) {
            result.add(new ArrayList(nums));
            return;
        }
        for (int i = idx; i < nums.size(); i++) {
            swap(nums, i, idx);
            function(result, nums, idx + 1);
            swap(nums, i, idx);
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        for (int i : nums) temp.add(i);
        function(result, temp, 0);
        return result;
    }
}
