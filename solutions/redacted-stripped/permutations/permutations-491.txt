class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> arr = new ArrayList<>();
        perm(nums, 0, nums.length - 1, arr);
        return arr;
    }

    static void perm(int[] nums, int l, int r, List<List<Integer>> arr) {
        if (l == r) {
            List<Integer> a = new ArrayList<>();
            for (int num : nums) a.add(num);
            arr.add(a);
        } else {
            for (int i = l; i <= r; i++) {
                swap(nums, l, i);
                perm(nums, l + 1, r, arr);
                swap(nums, l, i);
            }
        }
    }

    static void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
