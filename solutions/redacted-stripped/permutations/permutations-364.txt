class Solution {

    public List<List<Integer>> permute(int[] nums) {
        int l = 0;
        int r = nums.length;
        List<List<Integer>> ans = new ArrayList<>();
        permuteHelper(nums, l, r, ans);
        return ans;
    }

    static void permuteHelper(int[] nums, int l, int r, List<List<Integer>> ans) {
        if (l == r) {
            List<Integer> abc = new ArrayList<Integer>();
            for (Integer a : nums) {
                abc.add(a);
            }
            ans.add(abc);
            return;
        }
        for (int i = l; i < r; i++) {
            swap(nums, i, l);
            permuteHelper(nums, l + 1, r, ans);
            swap(nums, i, l);
        }
    }

    static void swap(int[] a, int i, int l) {
        int temp = a[i];
        a[i] = a[l];
        a[l] = temp;
    }
}
