class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        if (nums.length == 0)
            return ans;
        List<Integer> first = new ArrayList<>();
        first.add(nums[0]);
        ans.add(new ArrayList<>(first));
        for (int i = 1; i < nums.length; i++) {
            List<List<Integer>> newAns = new ArrayList<>();
            for (List<Integer> perm : ans) {
                for (int j = 0; j <= perm.size(); j++) {
                    List<Integer> permCopy = new ArrayList<>(perm);
                    permCopy.add(j, nums[i]);
                    newAns.add(permCopy);
                }
            }
            ans = newAns;
        }
        return ans;
    }
}
