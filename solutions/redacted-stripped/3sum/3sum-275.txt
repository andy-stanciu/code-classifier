class Solution {

    public long gethash(int x, int y, int z) {
        int hash = x;
        hash *= 100000;
        hash += y;
        hash *= 100000;
        hash += z;
        return hash;
    }

    public List<List<Integer>> threeSum(int[] nums) {
        int tar = 0;
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        HashSet<Long> set = new HashSet<Long>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length; i++) {
            int li = i + 1;
            int ri = nums.length - 1;
            int ntar = tar - nums[i];
            while (li < ri) {
                if (nums[li] + nums[ri] < ntar) {
                    li++;
                } else if (nums[li] + nums[ri] > ntar) {
                    ri--;
                } else {
                    long hash = gethash(nums[i], nums[li], nums[ri]);
                    if (set.contains(hash) == false) {
                        result.add(Arrays.asList(nums[i], nums[li], nums[ri]));
                        set.add(hash);
                    }
                    li++;
                    ri--;
                }
            }
        }
        return result;
    }
}
