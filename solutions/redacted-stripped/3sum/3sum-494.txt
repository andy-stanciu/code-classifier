class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        int n = nums.length;
        List<List<Integer>> res = new ArrayList<>();
        if (n < 3)
            return res;
        Arrays.sort(nums);
        if (nums[0] > 0)
            return res;
        for (int i = 0; i < n - 1; i++) {
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            int left = i + 1, right = n - 1;
            while (left < right) {
                int currSum = nums[i] + nums[left] + nums[right];
                if (currSum < 0)
                    left++;
                else if (currSum > 0)
                    right--;
                else {
                    res.add(Arrays.asList(nums[i], nums[left], nums[right]));
                    int lastLow = nums[left], lastHigh = nums[right];
                    while (left < right && nums[left] == lastLow) left++;
                    while (left < right && nums[right] == lastHigh) right--;
                }
            }
        }
        return res;
    }
}
