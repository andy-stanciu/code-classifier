class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> L = new ArrayList<>();
        int i = 0, j = 0;
        int s = 0, m = 0, e = 0;
        for (i = 0; i < nums.length - 2; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            for (j = i + 1; j < nums.length - 1; j++) {
                if (j - i > 1 && nums[j] == nums[j - 1]) {
                    continue;
                }
                int search = 0 - nums[i] - nums[j];
                s = j + 1;
                e = nums.length - 1;
                while (s <= e) {
                    m = s + (e - s) / 2;
                    if (nums[m] == search) {
                        List<Integer> l = new ArrayList<>();
                        l.add(nums[i]);
                        l.add(nums[j]);
                        l.add(nums[m]);
                        L.add(l);
                        break;
                    } else if (nums[m] > search)
                        e = m - 1;
                    else
                        s = m + 1;
                }
            }
        }
        return L;
    }
}
