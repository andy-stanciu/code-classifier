class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        return new AbstractList<>() {

            List<List<Integer>> ans;

            public int size() {
                if (ans == null)
                    init();
                return ans.size();
            }

            public List<Integer> get(int i) {
                if (ans == null)
                    init();
                return ans.get(i);
            }

            private void init() {
                List<List<Integer>> res = new ArrayList<>();
                Arrays.sort(nums);
                int n = nums.length;
                for (int i = 0; i < n - 2; i++) {
                    if (i > 0 && nums[i] == nums[i - 1])
                        continue;
                    int left = i + 1;
                    int right = n - 1;
                    while (left < right) {
                        int sum = nums[i] + nums[left] + nums[right];
                        if (sum == 0) {
                            res.add(Arrays.asList(nums[i], nums[left], nums[right]));
                            while (left < right && nums[left] == nums[left + 1]) left++;
                            while (left < right && nums[right] == nums[right - 1]) right--;
                            left++;
                            right--;
                        } else if (sum < 0) {
                            left++;
                        } else {
                            right--;
                        }
                    }
                }
                ans = res;
            }
        };
    }
}
