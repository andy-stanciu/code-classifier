class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> answer = new ArrayList<>();
        Arrays.sort(nums);
        int currNumPtr = 0;
        while (currNumPtr < nums.length - 2) {
            int leftPtr = currNumPtr + 1;
            int rightPtr = nums.length - 1;
            while (leftPtr < rightPtr) {
                int sum = nums[currNumPtr] + nums[leftPtr] + nums[rightPtr];
                if (sum == 0) {
                    answer.add(Arrays.asList(nums[currNumPtr], nums[leftPtr], nums[rightPtr]));
                }
                if (sum > 0) {
                    while (rightPtr > leftPtr) {
                        --rightPtr;
                        if (nums[rightPtr] < nums[rightPtr + 1]) {
                            break;
                        }
                    }
                } else {
                    while (rightPtr > leftPtr) {
                        ++leftPtr;
                        if (nums[leftPtr] > nums[leftPtr - 1]) {
                            break;
                        }
                    }
                }
            }
            currNumPtr++;
            while (nums[currNumPtr] == nums[currNumPtr - 1]) {
                if (currNumPtr == nums.length - 2) {
                    break;
                }
                currNumPtr++;
            }
        }
        return answer;
    }
}
