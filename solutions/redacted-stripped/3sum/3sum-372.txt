class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        int size = nums.length;
        Arrays.sort(nums);
        List<List<Integer>> triplets = new ArrayList<>();
        for (int i = 0, j = i + 1, ind = 0; i < size && j < size; ) {
            int kElement = nums[i] + nums[j];
            kElement = Math.negateExact(kElement);
            int k = Arrays.binarySearch(nums, j + 1, size, kElement);
            if (k >= j + 1) {
                List<Integer> list = new ArrayList<Integer>();
                list.add(0, nums[i]);
                list.add(1, nums[j]);
                list.add(2, nums[k]);
                triplets.add(ind++, list);
            }
            j++;
            while (j + 1 != size && nums[j - 1] == nums[j]) j++;
            if (j + 1 == size) {
                i++;
                j = i + 1;
                while (i + 2 != size && nums[i - 1] == nums[i]) {
                    i++;
                    j = i + 1;
                }
            }
            if (i + 2 == size)
                break;
        }
        return triplets;
    }
}
