class Solution {

    public boolean method1(TreeNode root) {
        if (root == null) {
            return false;
        } else if (root.left == null && root.right == null) {
            return true;
        } else if (root.left == null || root.right == null) {
            return false;
        }
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        if (root.left.val != root.right.val) {
            return false;
        }
        q.add(root.left);
        q.add(root.right);
        while (q.isEmpty() == false) {
            TreeNode node1 = q.poll();
            TreeNode node2 = q.poll();
            if (node1.right == null && node2.left == null) {
            } else if (node1.right == null || node2.left == null) {
                return false;
            } else if (node1.right.val != node2.left.val) {
                return false;
            } else {
                q.add(node1.right);
                q.add(node2.left);
            }
            if (node1.left == null && node2.right == null) {
            } else if (node1.left == null || node2.right == null) {
                return false;
            } else if (node1.left.val != node2.right.val) {
                return false;
            } else {
                q.add(node1.left);
                q.add(node2.right);
            }
        }
        return true;
    }
}
