class Solution {

    public boolean method1(TreeNode root) {
        if (root.right == null && root.left == null) {
            return true;
        }
        var leftVals = new ArrayList<Object>();
        var rightVals = new ArrayList<Object>();
        traverseL(root.left, leftVals);
        traverseR(root.right, rightVals);
        return leftVals.equals(rightVals);
    }

    private void traverseL(TreeNode param1, ArrayList<Object> arrayList) {
        if (param1 == null) {
            arrayList.add("null");
            return;
        }
        arrayList.add(param1.val);
        if (param1.left != null) {
            traverseL(param1.left, arrayList);
        } else {
            arrayList.add("null");
        }
        if (param1.right != null) {
            traverseL(param1.right, arrayList);
        } else {
            arrayList.add("null");
        }
    }

    private void traverseR(TreeNode param1, ArrayList<Object> arrayList) {
        if (param1 == null) {
            arrayList.add("null");
            return;
        }
        arrayList.add(param1.val);
        if (param1.right != null) {
            traverseR(param1.right, arrayList);
        } else {
            arrayList.add("null");
        }
        if (param1.left != null) {
            traverseR(param1.left, arrayList);
        } else {
            arrayList.add("null");
        }
    }
}
