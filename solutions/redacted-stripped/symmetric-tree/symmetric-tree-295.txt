class Pair {

    TreeNode node1, node2;

    Pair(TreeNode node1, TreeNode node2) {
        this.node1 = node1;
        this.node2 = node2;
    }
}

class Solution {

    public boolean method1(TreeNode root) {
        Queue<Pair> queue = new LinkedList<>();
        if (root.right == null && root.left == null)
            return true;
        if (root.right == null || root.left == null)
            return false;
        queue.add(new Pair(root.left, root.right));
        while (!queue.isEmpty()) {
            Pair p = queue.remove();
            TreeNode node1 = p.node1, node2 = p.node2;
            if (node1 == null && node2 == null)
                continue;
            if (node1 == null || node2 == null)
                return false;
            if (node1.val != node2.val)
                return false;
            queue.add(new Pair(node1.left, node2.right));
            queue.add(new Pair(node1.right, node2.left));
        }
        return true;
    }
}
