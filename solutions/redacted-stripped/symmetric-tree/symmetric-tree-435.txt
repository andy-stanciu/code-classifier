class Solution {

    static int i = 0;

    static int j = 0;

    void pre(TreeNode root, int[] A) {
        if (root == null) {
            A[i++] = -1;
            return;
        }
        pre(root.left, A);
        pre(root.right, A);
        A[i++] = root.val;
    }

    void post(TreeNode root, int[] A) {
        if (root == null) {
            A[j++] = -1;
            return;
        }
        post(root.right, A);
        post(root.left, A);
        A[j++] = root.val;
    }

    public boolean method1(TreeNode root) {
        if (root.left == null && root.right == null)
            return true;
        if (root.right != null && root.left != null) {
            int[] A = new int[10000];
            int[] B = new int[10000];
            pre(root.left, A);
            System.out.println();
            post(root.right, B);
            System.out.print(Arrays.toString(A));
            System.out.print(Arrays.toString(B));
            int flag = 0;
            for (int k = 0; k < 10000; k++) {
                System.out.print(A[k]);
                if (A[k] != B[k]) {
                    flag = 1;
                    break;
                }
            }
            if (flag == 0)
                return true;
            return false;
        }
        return false;
    }
}
