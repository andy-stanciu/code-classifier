class Solution {

    public boolean method1(TreeNode root) {
        ArrayList<Integer> al1 = new ArrayList<>();
        ArrayList<Integer> al2 = new ArrayList<>();
        preOrder(root.left, al1);
        postOrder(root.right, al2);
        if (al1.size() != al2.size())
            return false;
        for (int i = 0; i < al1.size(); i++) {
            if (al1.get(i) != al2.get(al2.size() - i - 1))
                return false;
        }
        return true;
    }

    public void preOrder(TreeNode root, ArrayList<Integer> al1) {
        if (root == null) {
            al1.add(-101);
            return;
        }
        al1.add(root.val);
        preOrder(root.left, al1);
        preOrder(root.right, al1);
    }

    public void postOrder(TreeNode root, ArrayList<Integer> al2) {
        if (root == null) {
            al2.add(-101);
            return;
        }
        postOrder(root.left, al2);
        postOrder(root.right, al2);
        al2.add(root.val);
    }
}
