class Solution {

    public boolean method1(TreeNode root) {
        Stack<TreeNode> stack = new Stack<>();
        if (root.left != null)
            stack.push(root.left);
        if (root.right != null)
            stack.push(root.right);
        if (stack.size() % 2 != 0)
            return false;
        while (!stack.isEmpty()) {
            TreeNode p_node = stack.pop();
            TreeNode q_node = stack.pop();
            if (p_node.val != q_node.val)
                return false;
            if (p_node.right != null)
                stack.push(p_node.right);
            if (q_node.left != null)
                stack.push(q_node.left);
            if (stack.size() % 2 != 0)
                return false;
            if (p_node.left != null)
                stack.push(p_node.left);
            if (q_node.right != null)
                stack.push(q_node.right);
            if (stack.size() % 2 != 0)
                return false;
        }
        return true;
    }

    public boolean method(TreeNode one, TreeNode two) {
        if (one == two)
            return true;
        if ((one == null || two == null) || (one.val != two.val))
            return false;
        return method(one.left, two.right) && method(one.right, two.left);
    }
}
