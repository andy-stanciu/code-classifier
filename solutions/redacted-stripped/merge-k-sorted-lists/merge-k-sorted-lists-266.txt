class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0)
            return null;
        if (param1.length == 1)
            return param1[0];
        ListNode ans = param1[0];
        for (int i = 1; i < param1.length; ++i) {
            ans = method2(ans, param1[i]);
        }
        return ans;
    }

    public ListNode method2(ListNode head1, ListNode head2) {
        ListNode newHead = new ListNode();
        ListNode current = newHead;
        while (head1 != null && head2 != null) {
            if (head1.val <= head2.val) {
                current.next = head1;
                head1 = head1.next;
            } else {
                current.next = head2;
                head2 = head2.next;
            }
            current = current.next;
        }
        while (head1 != null) {
            current.next = head1;
            head1 = head1.next;
            current = current.next;
        }
        while (head2 != null) {
            current.next = head2;
            head2 = head2.next;
            current = current.next;
        }
        return newHead.next;
    }
}
