class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0)
            return null;
        else if (param1[0] == null && param1.length <= 1)
            return null;
        int value, listNode = 0;
        ListNode pointer = param1[listNode];
        List<Integer> var1 = new ArrayList<>();
        while (pointer != null || listNode < param1.length) {
            if (pointer != null) {
                value = pointer.val;
                var1.add(value);
                System.out.println(value);
                pointer = pointer.next;
            }
            if (pointer == null) {
                listNode++;
                if (param1.length == listNode)
                    break;
                else
                    pointer = param1[listNode];
            }
        }
        pointer = listToLinkedList(var1);
        return pointer;
    }

    public ListNode listToLinkedList(List<Integer> list) {
        if (list.size() == 0)
            return null;
        Collections.sort(list);
        ListNode myNewList = new ListNode();
        int length = list.size(), i;
        ListNode pointer = myNewList;
        for (i = 0; i < length; i++) {
            pointer.val = list.get(i);
            if (i + 1 != length) {
                pointer.next = new ListNode();
                pointer = pointer.next;
            }
        }
        return myNewList;
    }
}
