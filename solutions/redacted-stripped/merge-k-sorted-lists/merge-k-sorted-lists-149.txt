class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> (a - b));
        Arrays.stream(param1).forEach((e) -> {
            ListNode node = e;
            while (node != null) {
                pq.offer(node.val);
                node = node.next;
            }
        });
        if (pq.isEmpty())
            return null;
        ListNode new_list = new ListNode(pq.poll());
        ListNode temp = new_list;
        while (!pq.isEmpty()) {
            temp.next = new ListNode(pq.poll());
            temp = temp.next;
        }
        return new_list;
    }
}
