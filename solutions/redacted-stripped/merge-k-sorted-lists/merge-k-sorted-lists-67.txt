class Solution {

    public ListNode method1(ListNode[] param1) {
        int k = param1.length;
        if (k == 0)
            return null;
        return method1(param1, 0, k - 1);
    }

    public ListNode method1(ListNode[] param1, int start, int end) {
        if (end - start == 0)
            return param1[start];
        if (end - start == 1) {
            return method2(param1[start], param1[end]);
        }
        int mid = start + ((end - start) / 2);
        ListNode listA = method1(param1, start, mid);
        ListNode listB = method1(param1, mid + 1, end);
        return method2(listA, listB);
    }

    public ListNode method2(ListNode listA, ListNode listB) {
        if (listA == null)
            return listB;
        if (listB == null)
            return listA;
        if (listA.val < listB.val) {
            listA.next = method2(listA.next, listB);
            return listA;
        } else {
            listB.next = method2(listA, listB.next);
            return listB;
        }
    }
}
