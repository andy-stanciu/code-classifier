class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0) {
            return null;
        }
        PriorityQueue<Integer> priorityQueue = new PriorityQueue<>();
        for (ListNode node : param1) {
            while (node != null) {
                priorityQueue.add(node.val);
                node = node.next;
            }
        }
        ListNode head;
        if (!priorityQueue.isEmpty()) {
            head = new ListNode(priorityQueue.poll());
        } else {
            return null;
        }
        ListNode temp = head;
        while (!priorityQueue.isEmpty()) {
            temp.next = new ListNode(priorityQueue.poll());
            temp = temp.next;
        }
        temp.next = null;
        return head;
    }
}
