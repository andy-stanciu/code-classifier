class Solution {

    public ListNode method1(ListNode[] param1) {
        ListNode result = new ListNode();
        ListNode resultIter = result;
        ListNode[] viable = new ListNode[param1.length];
        int viableIdx = -1;
        for (ListNode node : param1) {
            if (node != null) {
                viable[++viableIdx] = node;
            }
        }
        int var1 = viableIdx + 1;
        while (var1 > 0) {
            int winner = 0;
            int value = viable[winner].val;
            for (int index = 1; index < var1; ++index) {
                int interim = viable[index].val;
                if (interim < value) {
                    winner = index;
                    value = interim;
                }
            }
            if (viable[winner] == null)
                break;
            resultIter = push(resultIter, value);
            ListNode nextIterator = viable[winner].next;
            if (nextIterator != null) {
                viable[winner] = nextIterator;
            } else {
                viable[winner] = viable[var1 - 1];
                --var1;
            }
        }
        return result.next;
    }

    private ListNode push(ListNode targetList, int what) {
        ListNode newNode = new ListNode(what);
        targetList.next = newNode;
        return newNode;
    }
}
