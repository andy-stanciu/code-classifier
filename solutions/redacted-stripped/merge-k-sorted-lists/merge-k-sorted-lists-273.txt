class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0)
            return null;
        if (param1.length == 1)
            return param1[0];
        int height = 1;
        while (height < param1.length) {
            for (int i = 0; i + height < param1.length; i += 2 * height) {
                param1[i] = method2(param1[i], param1[i + height]);
            }
            height *= 2;
        }
        return param1[0];
    }

    private ListNode method2(ListNode first, ListNode second) {
        if (first == null)
            return second;
        if (second == null)
            return first;
        ListNode head, tail;
        if (first.val <= second.val) {
            head = tail = first;
            first = first.next;
        } else {
            head = tail = second;
            second = second.next;
        }
        while (first != null && second != null) {
            if (first.val <= second.val) {
                tail.next = first;
                first = first.next;
            } else {
                tail.next = second;
                second = second.next;
            }
            tail = tail.next;
        }
        if (first != null)
            tail.next = first;
        else
            tail.next = second;
        return head;
    }
}
