class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0) {
            return null;
        }
        return divide(param1, 0, param1.length - 1);
    }

    private ListNode divide(ListNode[] param1, int start, int end) {
        if (start == end) {
            return param1[end];
        }
        int mid = start + (end - start) / 2;
        ListNode l1 = divide(param1, start, mid);
        ListNode l2 = divide(param1, mid + 1, end);
        return method2(l1, l2);
    }

    private ListNode method2(ListNode l1, ListNode l2) {
        if (l1 == null)
            return l2;
        if (l2 == null)
            return l1;
        if (l1.val < l2.val) {
            l1.next = method2(l1.next, l2);
            return l1;
        } else {
            l2.next = method2(l1, l2.next);
            return l2;
        }
    }
}
