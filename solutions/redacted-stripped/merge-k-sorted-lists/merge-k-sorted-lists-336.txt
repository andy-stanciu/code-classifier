class Solution {

    Comparator<ListNode> pairComparator = new Comparator<ListNode>() {

        @Override
        public int compare(ListNode l1, ListNode l2) {
            return Integer.compare(l1.val, l2.val);
        }
    };

    public ListNode method1(ListNode[] param1) {
        ListNode root = new ListNode();
        ListNode ans = root;
        PriorityQueue<ListNode> pq = new PriorityQueue<>(pairComparator);
        for (ListNode node : param1) {
            if (node != null) {
                pq.add(node);
            }
        }
        while (!pq.isEmpty()) {
            ListNode node = pq.poll();
            root.next = node;
            root = node;
            if (node.next != null) {
                pq.add(node.next);
            }
        }
        return ans.next;
    }
}
