class Solution {

    public ListNode method1(ListNode[] param1) {
        return method2(param1, 0, param1.length - 1);
    }

    private ListNode method2(ListNode[] param1, int left, int right) {
        if (left == right)
            return param1[left];
        if (left < right) {
            int mid = (left + right) / 2;
            ListNode ll = method2(param1, left, mid);
            ListNode lr = method2(param1, mid + 1, right);
            return method3(ll, lr);
        } else
            return null;
    }

    private ListNode method3(ListNode l1, ListNode l2) {
        if (l1 == null)
            return l2;
        if (l2 == null)
            return l1;
        if (l1.val < l2.val) {
            l1.next = method3(l1.next, l2);
            return l1;
        } else {
            l2.next = method3(l1, l2.next);
            return l2;
        }
    }
}
