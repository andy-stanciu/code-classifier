class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<ListNode> minHeap = new PriorityQueue<ListNode>((n1, n2) -> {
            if (n1.val < n2.val)
                return -11;
            else if (n1.val > n2.val)
                return 1;
            else
                return 0;
        });
        for (ListNode list : param1) {
            if (list != null)
                minHeap.add(list);
        }
        ListNode head = null, curr = null;
        while (!minHeap.isEmpty()) {
            if (head == null) {
                head = minHeap.poll();
                curr = head;
            } else {
                curr.next = minHeap.poll();
                curr = curr.next;
            }
            if (curr.next != null)
                minHeap.add(curr.next);
        }
        return head;
    }
}
