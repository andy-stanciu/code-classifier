class Solution {

    public static ArrayList<Integer> method1(int[][] arr, int K) {
        ArrayList<Integer> result = new ArrayList<>();
        PriorityQueue<Element> minHeap = new PriorityQueue<>((a, b) -> a.value - b.value);
        for (int i = 0; i < K; i++) {
            if (arr[i].length > 0) {
                minHeap.add(new Element(i, 0, arr[i][0]));
            }
        }
        while (!minHeap.isEmpty()) {
            Element current = minHeap.poll();
            result.add(current.value);
            if (current.col + 1 < arr[current.row].length) {
                minHeap.add(new Element(current.row, current.col + 1, arr[current.row][current.col + 1]));
            }
        }
        return result;
    }

    static class Element {

        int row;

        int col;

        int value;

        Element(int row, int col, int value) {
            this.row = row;
            this.col = col;
            this.value = value;
        }
    }
}
