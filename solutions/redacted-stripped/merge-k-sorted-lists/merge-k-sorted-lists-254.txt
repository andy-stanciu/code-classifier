class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0) {
            return null;
        }
        if (param1.length == 1) {
            return param1[0];
        }
        ListNode head = method2(param1[0], param1[1]);
        for (int i = 2; i < param1.length; i++) {
            head = method2(head, param1[i]);
        }
        return head;
    }

    public ListNode method2(ListNode head1, ListNode head2) {
        if (head1 == null) {
            return head2;
        }
        if (head2 == null) {
            return head1;
        }
        ListNode dummy = new ListNode(-1);
        ListNode current = dummy;
        while (head1 != null && head2 != null) {
            if (head1.val > head2.val) {
                current.next = head2;
                head2 = head2.next;
            } else {
                current.next = head1;
                head1 = head1.next;
            }
            current = current.next;
        }
        if (head1 != null) {
            current.next = head1;
        }
        if (head2 != null) {
            current.next = head2;
        }
        return dummy.next;
    }
}
