class Solution {

    ListNode method1(ListNode l1, ListNode l2) {
        if (l1 == null)
            return l2;
        if (l2 == null)
            return l1;
        ListNode sentinel = new ListNode(-1), ptr = sentinel;
        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                ptr.next = l1;
                l1 = l1.next;
            } else {
                ptr.next = l2;
                l2 = l2.next;
            }
            ptr = ptr.next;
        }
        if (l1 != null)
            ptr.next = l1;
        else if (l2 != null)
            ptr.next = l2;
        return sentinel.next;
    }

    public ListNode method2(ListNode[] param1) {
        if (param1 == null || param1.length == 0)
            return null;
        int end = param1.length - 1;
        while (end != 0) {
            int l = 0, r = end;
            while (l < r) {
                param1[l] = method1(param1[l], param1[r]);
                l++;
                r--;
            }
            end = r;
        }
        return param1[0];
    }
}
