class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<ListNode> pq = new PriorityQueue<>((a, b) -> a.val - b.val);
        for (ListNode list : param1) if (list != null)
            pq.add(list);
        ListNode head = null;
        ListNode curr = head;
        while (!pq.isEmpty()) {
            ListNode currMin = pq.poll();
            if (head == null) {
                head = new ListNode(currMin.val);
                curr = head;
            } else {
                curr.next = new ListNode(currMin.val);
                curr = curr.next;
            }
            if (currMin.next != null)
                pq.add(currMin.next);
        }
        return head;
    }
}
