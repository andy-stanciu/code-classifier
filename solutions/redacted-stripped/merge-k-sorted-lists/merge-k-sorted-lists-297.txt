class Solution {

    static class Class1 implements Comparable<Class1> {

        int idx;

        int val;

        public Class1(int idx, int val) {
            this.idx = idx;
            this.val = val;
        }

        @Override
        public int compareTo(Class1 m2) {
            return this.val - m2.val;
        }
    }

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Class1> pq = new PriorityQueue<>();
        for (int i = 0; i < param1.length; i++) {
            ListNode head = param1[i];
            while (head != null) {
                pq.add(new Class1(i, head.val));
                head = head.next;
            }
        }
        ListNode var1 = new ListNode(-1);
        ListNode curr = var1;
        while (!pq.isEmpty()) {
            curr.next = new ListNode(pq.remove().val);
            curr = curr.next;
        }
        return var1.next;
    }
}
