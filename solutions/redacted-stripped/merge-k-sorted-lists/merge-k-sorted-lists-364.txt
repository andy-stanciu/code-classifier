class Solution {

    public ListNode method1(ListNode[] param1) {
        ListNode dummyNode = new ListNode();
        ListNode res = dummyNode;
        PriorityQueue<ListNode> minHeap = new PriorityQueue<>((x, y) -> {
            return Integer.compare(x.val, y.val);
        });
        for (int i = 0; i < param1.length; i++) {
            if (param1[i] != null) {
                minHeap.add(param1[i]);
            }
        }
        while (!minHeap.isEmpty()) {
            ListNode minValFromXList = minHeap.poll();
            dummyNode.next = minValFromXList;
            dummyNode = minValFromXList;
            minValFromXList = minValFromXList.next;
            if (minValFromXList != null) {
                minHeap.add(minValFromXList);
            }
        }
        return res.next;
    }
}
