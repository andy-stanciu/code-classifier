class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length <= 1) {
            if (param1.length == 0) {
                return null;
            }
            return param1[0];
        }
        ListNode newList = param1[0];
        for (int i = 1; i < param1.length; i++) {
            if (param1[i] == null) {
                continue;
            }
            ListNode currentList2 = param1[i];
            ListNode currentList1 = newList;
            ListNode trackerHead = null, trackerCurrent = null;
            while (currentList2 != null && currentList1 != null) {
                ListNode currTracker = null;
                if (currentList2.val >= currentList1.val) {
                    currTracker = currentList1;
                    currentList1 = currentList1.next;
                    currTracker.next = null;
                } else {
                    currTracker = currentList2;
                    currentList2 = currentList2.next;
                    currTracker.next = null;
                }
                if (trackerHead == null) {
                    trackerHead = currTracker;
                    trackerCurrent = currTracker;
                } else {
                    trackerCurrent.next = currTracker;
                    trackerCurrent = currTracker;
                }
            }
            while (currentList1 != null) {
                if (trackerHead == null) {
                    trackerHead = currentList1;
                    trackerCurrent = currentList1;
                } else {
                    trackerCurrent.next = currentList1;
                    trackerCurrent = currentList1;
                }
                currentList1 = currentList1.next;
            }
            while (currentList2 != null) {
                if (trackerHead == null) {
                    trackerHead = currentList2;
                    trackerCurrent = currentList2;
                } else {
                    trackerCurrent.next = currentList2;
                    trackerCurrent = currentList2;
                }
                currentList2 = currentList2.next;
            }
            newList = trackerHead;
        }
        return newList;
    }
}
