class Solution {

    class Pair {

        int val;

        ListNode curr;

        Pair(int val, ListNode curr) {
            this.val = val;
            this.curr = new ListNode(val, curr);
        }
    }

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<ListNode> pq = new PriorityQueue<>((a, b) -> (a.val - b.val));
        ListNode dummy = new ListNode(-1);
        ListNode temp = dummy;
        for (ListNode c : param1) {
            if (c != null) {
                pq.offer(c);
            }
        }
        while (!pq.isEmpty()) {
            ListNode c = pq.poll();
            temp.next = c;
            if (c.next != null) {
                pq.offer(c.next);
            }
            temp = temp.next;
        }
        temp.next = null;
        return dummy.next;
    }
}
