class Solution {

    public ListNode method1(ListNode[] param1) {
        ListNode result = new ListNode();
        ListNode curr = result;
        int len = param1.length;
        TreeMap<Integer, List<ListNode>> map = new TreeMap<>();
        for (ListNode node : param1) {
            if (node != null) {
                map.computeIfAbsent(node.val, k -> new ArrayList<>()).add(node);
            }
        }
        while (!map.isEmpty()) {
            Map.Entry<Integer, List<ListNode>> entry = map.pollFirstEntry();
            List<ListNode> list = entry.getValue();
            ListNode node = list.remove(0);
            curr.next = node;
            curr = node;
            if (!list.isEmpty()) {
                map.put(entry.getKey(), list);
            }
            node = node.next;
            if (node != null) {
                map.computeIfAbsent(node.val, k -> new ArrayList<>()).add(node);
            }
        }
        return result.next;
    }
}
