class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        ListNode dummyNode = new ListNode();
        ListNode tail = dummyNode;
        while (list1 != null && list2 != null) {
            if (list1.val < list2.val) {
                tail.next = list1;
                list1 = list1.next;
            } else {
                tail.next = list2;
                list2 = list2.next;
            }
            tail = tail.next;
        }
        if (list1 != null) {
            tail.next = list1;
        }
        if (list2 != null) {
            tail.next = list2;
        }
        return dummyNode.next;
    }

    public ListNode method2(ListNode[] param1) {
        if (param1.length == 0) {
            return null;
        }
        while (param1.length > 1) {
            List<ListNode> list = new ArrayList<ListNode>();
            for (int i = 0; i < param1.length; i = i + 2) {
                ListNode list1 = param1[i];
                ListNode list2 = null;
                if (i + 1 < param1.length) {
                    list2 = param1[i + 1];
                }
                list.add(method1(list1, list2));
            }
            ListNode[] arr = new ListNode[list.size()];
            arr = list.toArray(arr);
            param1 = arr;
        }
        return param1[0];
    }
}
