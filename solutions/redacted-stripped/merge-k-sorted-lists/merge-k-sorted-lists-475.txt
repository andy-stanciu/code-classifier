class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0)
            return null;
        int interval = 1;
        while (interval < param1.length) {
            for (int i = 0; i + interval < param1.length; i += interval * 2) {
                param1[i] = method2(param1[i], param1[i + interval]);
            }
            interval *= 2;
        }
        return param1[0];
    }

    public ListNode method2(ListNode list1, ListNode list2) {
        ListNode temp = null;
        if (list1 == null && list2 == null)
            return null;
        if (list1 == null && list2 != null)
            return list2;
        if (list1 != null && list2 == null)
            return list1;
        if (list1.val > list2.val) {
            temp = list2;
            list2 = list2.next;
        } else {
            temp = list1;
            list1 = list1.next;
        }
        ListNode temp1 = temp;
        while (list1 != null && list2 != null) {
            if (list1.val > list2.val) {
                temp1.next = list2;
                list2 = list2.next;
            } else {
                temp1.next = list1;
                list1 = list1.next;
            }
            temp1 = temp1.next;
        }
        if (list1 != null)
            temp1.next = list1;
        if (list2 != null)
            temp1.next = list2;
        return temp;
    }
}
