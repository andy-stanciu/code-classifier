class Solution {

    static class Compare implements Comparator<ListNode> {

        public int compare(ListNode a, ListNode b) {
            return a.val - b.val;
        }
    }

    public ListNode method1(List<ListNode> param1) {
        PriorityQueue<ListNode> minHeap = new PriorityQueue<>(new Compare());
        for (ListNode l : param1) {
            if (l != null) {
                minHeap.offer(l);
            }
        }
        ListNode dummy = new ListNode(-1);
        ListNode curr = dummy;
        while (!minHeap.isEmpty()) {
            ListNode node = minHeap.poll();
            curr.next = node;
            curr = curr.next;
            if (node.next != null) {
                minHeap.offer(node.next);
            }
        }
        return dummy.next;
    }
}
