class Solution {

    public ListNode method1(ListNode[] param1) {
        return helper(param1, 0, param1.length - 1);
    }

    public ListNode helper(ListNode[] param1, int start, int end) {
        if (start == end) {
            return param1[start];
        }
        while (start < end) {
            int mid = (start + end) / 2;
            ListNode l1 = helper(param1, start, mid);
            ListNode l2 = helper(param1, mid + 1, end);
            return method2(l1, l2);
        }
        return null;
    }

    public ListNode method2(ListNode l1, ListNode l2) {
        if (l1 == null)
            return l2;
        if (l2 == null)
            return l1;
        if (l1.val < l2.val) {
            l1.next = method2(l1.next, l2);
            return l1;
        } else {
            l2.next = method2(l1, l2.next);
            return l2;
        }
    }
}
