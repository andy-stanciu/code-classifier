class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0) {
            return null;
        }
        return method2(param1, 0, param1.length - 1);
    }

    public ListNode method2(ListNode[] param1, int left, int right) {
        if (left >= right) {
            return param1[left];
        }
        int mid = left + (right - left) / 2;
        ListNode l1 = method2(param1, left, mid);
        ListNode l2 = method2(param1, mid + 1, right);
        return method3(l1, l2);
    }

    public ListNode method3(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(-1);
        ListNode temp = dummy;
        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                temp.next = l1;
                l1 = l1.next;
            } else {
                temp.next = l2;
                l2 = l2.next;
            }
            temp = temp.next;
        }
        if (l1 != null) {
            temp.next = l1;
        } else {
            temp.next = l2;
        }
        return dummy.next;
    }
}
