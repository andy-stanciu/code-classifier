class Solution {

    public boolean method1(TreeNode root, int param1) {
        if (root == null)
            return false;
        Stack<TreeNode> nodes = new Stack<>();
        Stack<Integer> var1 = new Stack<>();
        nodes.push(root);
        var1.push(root.val);
        while (!nodes.isEmpty()) {
            TreeNode node = nodes.pop();
            int var2 = var1.pop();
            if (node.left == null && node.right == null) {
                if (var2 == param1)
                    return true;
            }
            if (node.left != null) {
                nodes.push(node.left);
                var1.push(var2 + node.left.val);
            }
            if (node.right != null) {
                nodes.push(node.right);
                var1.push(var2 + node.right.val);
            }
        }
        return false;
    }

    public static void main(String[] args) {
        Solution s = new Solution();
        TreeNode root = new TreeNode(10);
        root.left = new TreeNode(8);
        root.right = new TreeNode(2);
        root.left.left = new TreeNode(3);
        root.left.right = new TreeNode(5);
        root.right.left = new TreeNode(2);
        int param1 = 23;
        System.out.println(s.method1(root, param1));
    }
}
