class TreeElement {

    public TreeNode node;

    private int var1;

    TreeElement(TreeNode node, int var1) {
        this.node = node;
        this.var1 = var1;
    }

    public boolean isLeaf() {
        return node != null && node.left == null && node.right == null;
    }

    public int method1() {
        return var1;
    }
}

class Solution {

    public boolean method2(TreeNode root, int param1) {
        if (root == null)
            return false;
        Queue<TreeElement> queue = new LinkedList<TreeElement>();
        queue.add(new TreeElement(root, 0));
        while (queue.size() != 0) {
            TreeElement currentElement = queue.poll();
            if (currentElement.node == null)
                continue;
            int var2 = currentElement.method1() + currentElement.node.val;
            if (currentElement.isLeaf() && var2 == param1) {
                return true;
            }
            if (currentElement.node.right != null) {
                queue.add(new TreeElement(currentElement.node.right, var2));
            }
            if (currentElement.node.left != null) {
                queue.add(new TreeElement(currentElement.node.left, var2));
            }
        }
        return false;
    }
}
