class Solution {

    public boolean method1(TreeNode root, int param1) {
        ArrayList<Integer> li = new ArrayList<Integer>();
        return backTracking(root, param1);
    }

    boolean backTracking(TreeNode root, int param1, ArrayList<Integer> res) {
        if (root == null) {
            return false;
        }
        if (root.left == null && root.right == null) {
            int var1 = 0;
            for (int i = 0; i < res.size(); i++) {
                var1 += res.get(i);
            }
            var1 = var1 + root.val;
            if (var1 == param1)
                return true;
            return false;
        }
        res.add(root.val);
        boolean left = backTracking(root.left, param1, res);
        boolean right = backTracking(root.right, param1, res);
        res.remove(res.size() - 1);
        return left || right;
    }
}
