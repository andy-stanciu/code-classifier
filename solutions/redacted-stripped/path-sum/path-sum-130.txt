class Solution {

    public boolean method1(TreeNode root, int param1) {
        if (root == null) {
            return false;
        }
        Stack<TreeNode> nodeStack = new Stack<>();
        Stack<Integer> var1 = new Stack<>();
        nodeStack.push(root);
        var1.push(param1 - root.val);
        while (!nodeStack.isEmpty()) {
            TreeNode currentNode = nodeStack.pop();
            int var2 = var1.pop();
            if (currentNode.left == null && currentNode.right == null && var2 == 0) {
                return true;
            }
            if (currentNode.left != null) {
                nodeStack.push(currentNode.left);
                var1.push(var2 - currentNode.left.val);
            }
            if (currentNode.right != null) {
                nodeStack.push(currentNode.right);
                var1.push(var2 - currentNode.right.val);
            }
        }
        return false;
    }
}
