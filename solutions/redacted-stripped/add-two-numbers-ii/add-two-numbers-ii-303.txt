class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode sum = null;
        ListNode temp = l1;
        ListNode prev = null;
        ListNode next;
        while (temp != null) {
            next = temp.next;
            temp.next = prev;
            prev = temp;
            temp = next;
        }
        l1 = prev;
        temp = l2;
        prev = null;
        while (temp != null) {
            next = temp.next;
            temp.next = prev;
            prev = temp;
            temp = next;
        }
        l2 = prev;
        temp = l1;
        ListNode temp2 = l2;
        while (temp != null || temp2 != null || carry == 1) {
            int a = 0, b = 0;
            if (temp != null) {
                a = temp.val;
                temp = temp.next;
            }
            if (temp2 != null) {
                b = temp2.val;
                temp2 = temp2.next;
            }
            int var1 = a + b + carry;
            carry = var1 / 10;
            var1 = var1 % 10;
            ListNode node = new ListNode(var1, sum);
            sum = node;
        }
        return sum;
    }
}
