class Solution {

    public ListNode reverse(ListNode h) {
        ListNode p = null, c = h;
        while (c != null) {
            ListNode f = c.next;
            c.next = p;
            p = c;
            c = f;
        }
        return p;
    }

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode t1 = reverse(l1);
        ListNode t2 = reverse(l2);
        ListNode t = new ListNode(-1);
        ListNode t3 = t;
        int a, b, sum = 0, carry = 0;
        while (t1 != null || t2 != null || carry > 0) {
            a = (t1 != null) ? t1.val : 0;
            b = (t2 != null) ? t2.val : 0;
            sum = a + b + carry;
            carry = sum / 10;
            ListNode nn = new ListNode(sum % 10);
            t3.next = nn;
            t3 = t3.next;
            if (t1 != null)
                t1 = t1.next;
            if (t2 != null)
                t2 = t2.next;
        }
        return reverse(t.next);
    }
}
