class Solution {

    public ListNode reverse(ListNode head) {
        ListNode curr = head;
        ListNode prev = null;
        while (curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode prev = dummy;
        ListNode first = reverse(l1);
        ListNode second = reverse(l2);
        int carry = 0;
        ListNode temp;
        while (first != null || second != null) {
            int sum = 0 + carry;
            if (first != null) {
                sum += first.val;
                first = first.next;
            }
            if (second != null) {
                sum += second.val;
                second = second.next;
            }
            carry = sum / 10;
            sum = sum % 10;
            ListNode node = new ListNode(sum);
            prev.next = node;
            prev = prev.next;
        }
        if (carry != 0) {
            prev.next = new ListNode(carry);
        }
        dummy.next = reverse(dummy.next);
        return dummy.next;
    }
}
