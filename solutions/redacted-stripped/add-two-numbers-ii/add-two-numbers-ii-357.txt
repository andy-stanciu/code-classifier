class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode list1 = reverse(l1);
        ListNode list2 = reverse(l2);
        ListNode ans = new ListNode(-1);
        ListNode temp = ans;
        int carry = 0;
        while (list1 != null || list2 != null || carry != 0) {
            int a = 0, b = 0;
            if (list1 != null) {
                a = list1.val;
                list1 = list1.next;
            }
            if (list2 != null) {
                b = list2.val;
                list2 = list2.next;
            }
            int sum = a + b + carry;
            if (sum < 10)
                carry = 0;
            else
                carry = 1;
            temp.next = new ListNode(sum % 10);
            temp = temp.next;
        }
        ans = ans.next;
        return reverse(ans);
    }

    private ListNode reverse(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode prev = null, curr = head;
        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }
}
