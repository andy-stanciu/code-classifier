class Solution {

    public ListNode reverse(ListNode l1) {
        ListNode cur = l1, nextNode = null, prev = null;
        while (cur != null) {
            nextNode = cur.next;
            cur.next = prev;
            prev = cur;
            cur = nextNode;
        }
        return prev;
    }

    public ListNode method1(ListNode l1, ListNode l2) {
        l1 = reverse(l1);
        l2 = reverse(l2);
        int c = 0;
        ListNode dummy = new ListNode(-1);
        ListNode t = dummy;
        while (l1 != null || l2 != null) {
            int sum = 0;
            sum += l1 != null ? l1.val : 0;
            sum += l2 != null ? l2.val : 0;
            sum += c;
            c = sum > 9 ? 1 : 0;
            sum = sum % 10;
            t.next = new ListNode(sum);
            t = t.next;
            if (l1 != null)
                l1 = l1.next;
            if (l2 != null)
                l2 = l2.next;
        }
        if (c > 0) {
            t.next = new ListNode(c);
        }
        return reverse(dummy.next);
    }
}
