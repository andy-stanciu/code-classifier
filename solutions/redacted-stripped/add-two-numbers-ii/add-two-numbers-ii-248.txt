class Solution {

    public ListNode method1(ListNode ll1, ListNode ll2) {
        if (ll1 == null || ll2 == null) {
            return null;
        }
        ListNode l1 = reverse(ll1);
        ListNode l2 = reverse(ll2);
        ListNode node = new ListNode(0);
        ListNode dummyHead = node;
        int carry = 0;
        while (l2 != null || l1 != null) {
            int x = (l1 != null) ? l1.val : 0;
            int y = (l2 != null) ? l2.val : 0;
            int sum = x + y + carry;
            carry = sum / 10;
            dummyHead.next = new ListNode(sum % 10);
            if (l1 != null) {
                l1 = l1.next;
            }
            if (l2 != null) {
                l2 = l2.next;
            }
            dummyHead = dummyHead.next;
        }
        if (carry > 0) {
            dummyHead.next = new ListNode(carry);
        }
        return reverse(node.next);
    }

    public ListNode reverse(ListNode head) {
        ListNode current = head;
        ListNode prev = null;
        ListNode next = current.next;
        while (current != null) {
            current.next = prev;
            prev = current;
            current = next;
            if (next != null) {
                next = next.next;
            }
        }
        return prev;
    }
}
