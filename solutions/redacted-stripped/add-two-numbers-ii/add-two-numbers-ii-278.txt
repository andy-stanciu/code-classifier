class Solution {

    public ListNode Reverse(ListNode l) {
        ListNode curr = l;
        ListNode prev = null;
        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode first = Reverse(l1);
        ListNode second = Reverse(l2);
        int c = 0;
        ListNode res = new ListNode(0);
        ListNode p = res;
        while (first != null || second != null) {
            int sum = 0 + c;
            if (first != null) {
                sum += first.val;
                first = first.next;
            }
            if (second != null) {
                sum += second.val;
                second = second.next;
            }
            c = sum / 10;
            sum = sum % 10;
            p.next = new ListNode(sum);
            p = p.next;
        }
        if (c == 1) {
            p.next = new ListNode(1);
        }
        ListNode ans = Reverse(res.next);
        return ans;
    }
}
