class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode f = reverse(l1);
        ListNode s = reverse(l2);
        ListNode prev = null;
        int carry = 0;
        while (f != null || s != null) {
            int a = f == null ? 0 : f.val;
            int b = s == null ? 0 : s.val;
            int sum = a + b + carry;
            carry = (int) (sum / 10);
            sum = sum % 10;
            ListNode curr = new ListNode(sum);
            curr.next = prev;
            prev = curr;
            if (f != null) {
                f = f.next;
            }
            if (s != null) {
                s = s.next;
            }
        }
        if (carry > 0) {
            ListNode curr = new ListNode(carry);
            curr.next = prev;
            prev = curr;
        }
        return prev;
    }

    public ListNode reverse(ListNode curr) {
        ListNode prev = null;
        while (curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
