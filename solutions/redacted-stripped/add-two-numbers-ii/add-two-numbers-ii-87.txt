class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode temp1 = reverse(l1);
        ListNode temp2 = reverse(l2);
        ListNode dummy = new ListNode(-1);
        ListNode current = dummy;
        int carry = 0;
        while (temp1 != null || temp2 != null) {
            int sum = carry;
            if (temp1 != null)
                sum += temp1.val;
            if (temp2 != null)
                sum += temp2.val;
            ListNode newNode = new ListNode(sum % 10);
            carry = sum / 10;
            current.next = newNode;
            current = current.next;
            if (temp1 != null)
                temp1 = temp1.next;
            if (temp2 != null)
                temp2 = temp2.next;
        }
        if (carry != 0) {
            ListNode newNode = new ListNode(carry);
            current.next = newNode;
        }
        return reverse(dummy.next);
    }

    public static ListNode reverse(ListNode l) {
        if (l == null || l.next == null)
            return l;
        ListNode rev = reverse(l.next);
        l.next.next = l;
        l.next = null;
        return rev;
    }
}
