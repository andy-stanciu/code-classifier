class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode revl1 = reverseList(l1);
        ListNode revl2 = reverseList(l2);
        ListNode dummy = new ListNode(0);
        ListNode tail = dummy;
        int carry = 0;
        while (revl1 != null || revl2 != null) {
            int x = (revl1 != null) ? revl1.val : 0;
            int y = (revl2 != null) ? revl2.val : 0;
            int sum = carry + x + y;
            carry = sum / 10;
            tail.next = new ListNode(sum % 10);
            tail = tail.next;
            if (revl1 != null)
                revl1 = revl1.next;
            if (revl2 != null)
                revl2 = revl2.next;
        }
        if (carry > 0) {
            tail.next = new ListNode(carry % 10);
        }
        dummy = dummy.next;
        ListNode ans = reverseList(dummy);
        return ans;
    }

    public ListNode reverseList(ListNode head) {
        ListNode current = head;
        ListNode next = null;
        ListNode prev = null;
        while (current != null) {
            next = current.next;
            current.next = prev;
            prev = current;
            current = next;
        }
        return prev;
    }
}
