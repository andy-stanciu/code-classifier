class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode reversel1 = reverse(l1);
        ListNode reversel2 = reverse(l2);
        ListNode result = new ListNode(-1);
        ListNode finalresult = result;
        int sum = 0;
        int carry = 0;
        while (reversel1 != null || reversel2 != null) {
            sum = carry;
            if (reversel1 != null) {
                sum += reversel1.val;
                reversel1 = reversel1.next;
            }
            if (reversel2 != null) {
                sum += reversel2.val;
                reversel2 = reversel2.next;
            }
            carry = sum / 10;
            ListNode t = new ListNode(sum % 10);
            result.next = t;
            result = result.next;
        }
        if (carry == 1) {
            ListNode t = new ListNode(1);
            result.next = t;
            result = result.next;
        }
        finalresult = finalresult.next;
        return reverse(finalresult);
    }

    public ListNode reverse(ListNode l) {
        ListNode current = l;
        ListNode previous = null;
        ListNode next;
        while (current != null) {
            next = current.next;
            current.next = previous;
            previous = current;
            current = next;
        }
        return previous;
    }
}
