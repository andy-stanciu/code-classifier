class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode n1 = reverseLL(l1);
        ListNode n2 = reverseLL(l2);
        ListNode head = null, temp = null;
        int carry = 0;
        while (n1 != null || n2 != null) {
            var sum = carry;
            if (n1 != null) {
                sum += n1.val;
                n1 = n1.next;
            }
            if (n2 != null) {
                sum += n2.val;
                n2 = n2.next;
            }
            carry = sum / 10;
            ListNode node = new ListNode(sum % 10);
            if (head == null) {
                head = temp = node;
            } else {
                temp.next = node;
                temp = temp.next;
            }
        }
        if (carry > 0) {
            temp.next = new ListNode(carry);
        }
        return reverseLL(head);
    }

    ListNode reverseLL(ListNode head) {
        var temp = head;
        ListNode pre = null;
        while (temp != null) {
            var next = temp.next;
            temp.next = pre;
            pre = temp;
            temp = next;
        }
        return pre;
    }
}
