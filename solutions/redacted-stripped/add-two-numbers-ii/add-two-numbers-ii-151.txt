class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        Stack<Integer> st1 = new Stack<>();
        Stack<Integer> st2 = new Stack<>();
        while (l1 != null) {
            st1.push(l1.val);
            l1 = l1.next;
        }
        while (l2 != null) {
            st2.push(l2.val);
            l2 = l2.next;
        }
        ListNode dummy = new ListNode(-1);
        ListNode temp = dummy;
        int carry = 0;
        while (!st1.isEmpty() || !st2.isEmpty() || carry != 0) {
            int sum = carry;
            if (!st1.isEmpty())
                sum += st1.pop();
            if (!st2.isEmpty())
                sum += st2.pop();
            carry = sum / 10;
            sum %= 10;
            ListNode newNode = new ListNode(sum);
            newNode.next = temp.next;
            temp.next = newNode;
        }
        return dummy.next;
    }
}
