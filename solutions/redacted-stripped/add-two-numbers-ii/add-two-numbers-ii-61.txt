class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int s1 = size(l1);
        int s2 = size(l2);
        ListNode sum = null;
        ListNode node = null;
        while (l1 != null || l2 != null) {
            int a = 0;
            int b = 0;
            if (s1 >= s2) {
                a = l1 != null ? l1.val : 0;
                l1 = l1.next;
                s1--;
            }
            if (s2 >= s1 + 1) {
                b = l2 != null ? l2.val : 0;
                l2 = l2.next;
                s2--;
            }
            node = new ListNode(a + b);
            node.next = sum;
            sum = node;
        }
        int carry = 0;
        sum = null;
        while (node != null) {
            node.val += carry;
            if (node.val >= 10) {
                node.val = node.val % 10;
                carry = 1;
            } else {
                carry = 0;
            }
            ListNode dummy = node.next;
            node.next = sum;
            sum = node;
            node = dummy;
        }
        if (carry == 1) {
            node = new ListNode(carry);
            node.next = sum;
            sum = node;
        }
        return sum;
    }

    private int size(ListNode list) {
        int s = 0;
        while (list != null) {
            list = list.next;
            s++;
        }
        return s;
    }
}
