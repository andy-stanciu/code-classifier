class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode head1 = new ListNode(l1.val);
        ListNode head2 = new ListNode(l2.val);
        l1 = l1.next;
        l2 = l2.next;
        while (l1 != null) {
            ListNode temp = new ListNode(l1.val);
            temp.next = head1;
            head1 = temp;
            l1 = l1.next;
        }
        while (l2 != null) {
            ListNode temp = new ListNode(l2.val);
            temp.next = head2;
            head2 = temp;
            l2 = l2.next;
        }
        int sum = head1.val + head2.val;
        ListNode ans = new ListNode(sum % 10);
        int carry = sum / 10;
        head1 = head1.next;
        head2 = head2.next;
        while (head1 != null && head2 != null) {
            sum = head1.val + head2.val + carry;
            carry = sum / 10;
            ListNode temp = new ListNode(sum % 10);
            temp.next = ans;
            ans = temp;
            head1 = head1.next;
            head2 = head2.next;
        }
        while (head1 != null) {
            sum = head1.val + carry;
            carry = sum / 10;
            ListNode temp = new ListNode(sum % 10);
            temp.next = ans;
            ans = temp;
            head1 = head1.next;
        }
        while (head2 != null) {
            sum = head2.val + carry;
            carry = sum / 10;
            ListNode temp = new ListNode(sum % 10);
            temp.next = ans;
            ans = temp;
            head2 = head2.next;
        }
        if (carry != 0) {
            ListNode temp = new ListNode(carry);
            temp.next = ans;
            ans = temp;
        }
        return ans;
    }
}
