class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode prev1 = null;
        ListNode prev2 = null;
        while (l1 != null) {
            ListNode next = l1.next;
            l1.next = prev1;
            prev1 = l1;
            l1 = next;
        }
        while (l2 != null) {
            ListNode next = l2.next;
            l2.next = prev2;
            prev2 = l2;
            l2 = next;
        }
        int carry = 0;
        ListNode finalhead = null;
        while (prev1 != null || prev2 != null) {
            if (prev1 != null && prev2 != null) {
                sum = prev1.val + prev2.val + carry;
                prev1 = prev1.next;
                prev2 = prev2.next;
            } else if (prev1 != null) {
                sum = prev1.val + carry;
                prev1 = prev1.next;
            } else if (prev2 != null) {
                sum = prev2.val + carry;
                prev2 = prev2.next;
            }
            int value = sum % 10;
            carry = sum / 10;
            ListNode newH = new ListNode(value);
            newH.next = finalhead;
            finalhead = newH;
        }
        if (carry != 0) {
            ListNode newH = new ListNode(carry);
            newH.next = finalhead;
            finalhead = newH;
        }
        return finalhead;
    }
}
