class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode h1 = reverse(l1);
        ListNode h2 = reverse(l2);
        ListNode h = new ListNode(0);
        ListNode temp = h;
        ListNode current = h;
        int carry = 0;
        int sum = 0;
        while (h1 != null || h2 != null || carry != 0) {
            sum = carry;
            if (h1 != null) {
                sum += h1.val;
                h1 = h1.next;
            }
            if (h2 != null) {
                sum += h2.val;
                h2 = h2.next;
            }
            ListNode node = new ListNode(sum % 10);
            temp.next = node;
            temp = temp.next;
            carry = sum / 10;
        }
        return reverse(h.next);
    }

    public ListNode reverse(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;
        while (curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
