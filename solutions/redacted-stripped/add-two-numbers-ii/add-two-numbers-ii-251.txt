class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode list1 = reverse(l1);
        ListNode list2 = reverse(l2);
        ListNode dummy = new ListNode();
        ListNode ptr = dummy;
        int sum, carry = 0;
        int val1, val2;
        while (list1 != null || list2 != null || carry != 0) {
            if (list1 != null) {
                val1 = list1.val;
            } else {
                val1 = 0;
            }
            if (list2 != null) {
                val2 = list2.val;
            } else {
                val2 = 0;
            }
            sum = val1 + val2 + carry;
            carry = sum / 10;
            ptr.next = new ListNode(sum % 10);
            ptr = ptr.next;
            if (list1 != null)
                list1 = list1.next;
            if (list2 != null)
                list2 = list2.next;
        }
        return reverse(dummy.next);
    }

    public ListNode reverse(ListNode head) {
        ListNode curr = head;
        ListNode prev = null;
        while (curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
