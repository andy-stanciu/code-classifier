class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode r1 = reverseNode(l1), p1 = r1;
        ListNode r2 = reverseNode(l2), p2 = r2;
        ListNode r3 = new ListNode(), p3 = r3;
        int sum = 0, x = 0, y = 0, curry = 0;
        while (p1 != null || p2 != null) {
            x = p1 != null ? p1.val : 0;
            y = p2 != null ? p2.val : 0;
            sum = x + y + curry;
            curry = sum / 10;
            sum = sum % 10;
            ListNode temp = new ListNode(sum);
            p3.next = temp;
            if (p1 != null) {
                p1 = p1.next;
            }
            if (p2 != null) {
                p2 = p2.next;
            }
            p3 = p3.next;
        }
        if (curry > 0) {
            p3.next = new ListNode(curry);
        }
        return reverseNode(r3.next);
    }

    public ListNode reverseNode(ListNode head) {
        ListNode prev = null, curr = head;
        while (curr != null) {
            ListNode currNext = curr.next;
            curr.next = prev;
            prev = curr;
            curr = currNext;
        }
        return prev;
    }
}
