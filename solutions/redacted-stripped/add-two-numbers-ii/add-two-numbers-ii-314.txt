class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode t1 = reversell(l1);
        ListNode t2 = reversell(l2);
        ListNode dummy = new ListNode(-1);
        ListNode curr = dummy;
        int carry = 0, a = 0, b = 0;
        while (!(t1 == null && t2 == null)) {
            a = 0;
            b = 0;
            if (t1 != null) {
                a = t1.val;
                t1 = t1.next;
            }
            if (t2 != null) {
                b = t2.val;
                t2 = t2.next;
            }
            int sum = a + b + carry;
            carry = sum / 10;
            curr.next = new ListNode(sum % 10);
            curr = curr.next;
        }
        if (carry != 0)
            curr.next = new ListNode(carry);
        return reversell(dummy.next);
    }

    private ListNode reversell(ListNode node) {
        ListNode current = node, prev = null;
        while (current != null) {
            ListNode temp1 = current.next;
            current.next = prev;
            prev = current;
            current = temp1;
        }
        return prev;
    }
}
