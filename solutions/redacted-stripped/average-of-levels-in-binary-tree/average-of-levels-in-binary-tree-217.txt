class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> var1 = new ArrayList<>();
        if (root == null) {
            return var1;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        queue.offer(null);
        int count = 0;
        double sum = 0;
        while (!queue.isEmpty()) {
            TreeNode currNode = queue.poll();
            if (currNode == null) {
                double var2 = sum / count;
                var1.add(var2);
                sum = 0;
                count = 0;
                if (!queue.isEmpty()) {
                    queue.offer(null);
                }
            } else {
                sum += currNode.val;
                count++;
                if (currNode.left != null) {
                    queue.offer(currNode.left);
                }
                if (currNode.right != null) {
                    queue.offer(currNode.right);
                }
            }
        }
        return var1;
    }
}
