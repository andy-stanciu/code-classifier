class Solution {

    public List<Double> method1(TreeNode root) {
        return new helper().method2(root);
    }
}

class helper {

    List<Double> avarage = new ArrayList<>();

    public List<Double> method2(TreeNode root) {
        if (root == null)
            return avarage;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int _size_ = queue.size();
            double sum = 0;
            for (int i = 0; i < _size_; i++) {
                TreeNode temp = queue.poll();
                sum += temp.val;
                if (temp.left != null)
                    queue.add(temp.left);
                if (temp.right != null)
                    queue.add(temp.right);
            }
            avarage.add(sum / _size_);
        }
        return avarage;
    }
}
