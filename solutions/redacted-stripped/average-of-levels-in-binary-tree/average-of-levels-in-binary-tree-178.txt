class Solution {

    Queue<TreeNode> q = new LinkedList<>();

    List<Double> list;

    public List<Double> method1(TreeNode root) {
        list = new ArrayList<>();
        q.add(root);
        helper();
        return list;
    }

    private void helper() {
        if (q.isEmpty())
            return;
        Queue<TreeNode> tem = new LinkedList<>();
        int n = q.size();
        Double sum = 0.0;
        while (!q.isEmpty()) {
            TreeNode cur = q.remove();
            sum += cur.val;
            if (cur.left != null)
                tem.add(cur.left);
            if (cur.right != null)
                tem.add(cur.right);
        }
        sum = sum / n;
        q = tem;
        list.add(sum);
        helper();
        return;
    }
}
