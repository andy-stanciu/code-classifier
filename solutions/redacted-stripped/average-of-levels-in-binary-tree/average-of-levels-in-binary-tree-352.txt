class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> var1 = new ArrayList<>();
        if (root == null)
            return var1;
        ArrayList<TreeNode> queue = new ArrayList<>();
        queue.add(root);
        queue.add(null);
        double var2 = 0;
        int levelNodeCount = 0;
        while (queue.size() != 1) {
            TreeNode currentNode = queue.remove(0);
            var2 += (double) currentNode.val;
            levelNodeCount++;
            if (queue.get(0) == null) {
                queue.remove(0);
                if (currentNode.left != null)
                    queue.add(currentNode.left);
                if (currentNode.right != null)
                    queue.add(currentNode.right);
                var1.add(var2 / (double) levelNodeCount);
                var2 = 0;
                levelNodeCount = 0;
                queue.add(null);
            } else {
                if (currentNode.left != null)
                    queue.add(currentNode.left);
                if (currentNode.right != null)
                    queue.add(currentNode.right);
            }
        }
        return var1;
    }
}
