class Solution {

    private int count;

    private long sum;

    public List<Double> method1(TreeNode root) {
        List<Double> list = new ArrayList<>();
        int height = height(root);
        for (int i = 1; i <= height; i++) {
            count = 0;
            sum = 0;
            visitLevel(root, i);
            double avg = (double) sum / (double) count;
            list.add(avg);
        }
        return list;
    }

    private void visitLevel(TreeNode node, int level) {
        if (node == null)
            return;
        if (level == 1) {
            count++;
            sum += node.val;
        } else if (level > 1) {
            visitLevel(node.left, level - 1);
            visitLevel(node.right, level - 1);
        }
    }

    private int height(TreeNode n) {
        if (n == null)
            return 0;
        int leftHeight = height(n.left);
        int rightHeight = height(n.right);
        return leftHeight > rightHeight ? leftHeight + 1 : rightHeight + 1;
    }
}
