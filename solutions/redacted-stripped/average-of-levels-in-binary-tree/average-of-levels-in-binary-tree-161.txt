class Solution {

    public List<Double> method1(TreeNode root) {
        List<List<Integer>> l = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        List<Double> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        q.add(root);
        while (!q.isEmpty()) {
            int level = q.size();
            List<Integer> subList = new ArrayList<>();
            for (int i = 0; i < level; i++) {
                if (q.peek().left != null) {
                    q.add(q.peek().left);
                }
                if (q.peek().right != null) {
                    q.add(q.peek().right);
                }
                subList.add(q.poll().val);
            }
            l.add(subList);
        }
        for (int i = 0; i < l.size(); i++) {
            double sample = 0;
            for (int j = 0; j < l.get(i).size(); j++) {
                sample += l.get(i).get(j);
            }
            ans.add(sample / l.get(i).size());
        }
        return ans;
    }
}
