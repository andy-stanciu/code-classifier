class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> var1 = new ArrayList<>();
        List<Integer> count = new ArrayList<>();
        calculateSum(root, var1, count, 0);
        for (int i = 0; i < var1.size(); i++) {
            var1.set(i, (var1.get(i) / count.get(i)));
        }
        return var1;
    }

    public void calculateSum(TreeNode root, List<Double> sum, List<Integer> count, int level) {
        if (root == null)
            return;
        if (sum.size() > level) {
            sum.set(level, sum.get(level) + root.val);
            count.set(level, count.get(level) + 1);
        } else {
            sum.add(level, (double) root.val);
            count.add(level, 1);
        }
        calculateSum(root.left, sum, count, level + 1);
        calculateSum(root.right, sum, count, level + 1);
    }
}
