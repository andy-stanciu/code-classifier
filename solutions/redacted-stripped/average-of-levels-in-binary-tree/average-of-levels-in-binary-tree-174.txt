class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> var1 = new LinkedList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        while (!q.isEmpty()) {
            int level = q.size();
            List<Integer> subList = new LinkedList<>();
            for (int i = 0; i < level; i++) {
                if (q.peek().left != null)
                    q.offer(q.peek().left);
                if (q.peek().right != null)
                    q.offer(q.peek().right);
                subList.add(q.poll().val);
            }
            double sum = 0;
            for (int i = 0; i < level; i++) {
                sum += subList.get(i);
            }
            var1.add(sum / level);
        }
        return var1;
    }
}
