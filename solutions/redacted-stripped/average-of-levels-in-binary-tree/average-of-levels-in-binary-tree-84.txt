class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> sums = new ArrayList<>();
        List<Integer> counts = new ArrayList<>();
        helper(root, 0, sums, counts);
        List<Double> var1 = new ArrayList<>();
        for (int i = 0; i < sums.size(); i++) {
            var1.add(sums.get(i) / counts.get(i));
        }
        return var1;
    }

    private void helper(TreeNode node, int level, List<Double> sums, List<Integer> counts) {
        if (node == null)
            return;
        if (level >= sums.size()) {
            sums.add((double) node.val);
            counts.add(1);
        } else {
            sums.set(level, sums.get(level) + node.val);
            counts.set(level, counts.get(level) + 1);
        }
        helper(node.left, level + 1, sums, counts);
        helper(node.right, level + 1, sums, counts);
    }
}
