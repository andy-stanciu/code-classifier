class Solution {

    public List<Double> method1(TreeNode root) {
        return levelOrder(root);
    }

    List<Double> levelOrder(TreeNode root) {
        List<Double> res = new ArrayList<Double>();
        if (root == null) {
            return res;
        }
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.add(root);
        while (!queue.isEmpty()) {
            int size = queue.size();
            double sum = 0;
            double level = 0;
            while (size != 0) {
                TreeNode node = queue.remove();
                sum = sum + node.val;
                if (node.left != null) {
                    queue.add(node.left);
                }
                if (node.right != null) {
                    queue.add(node.right);
                }
                level++;
                size--;
            }
            double result = sum / level;
            res.add(result);
        }
        return res;
    }
}
