class Solution {

    public List<Double> method1(TreeNode root) {
        return method2(root, 0, new ArrayList<Double>(), new ArrayList<Integer>());
    }

    public List<Double> method2(TreeNode root, int level, List<Double> list, List<Integer> count) {
        if (root == null) {
            return list;
        }
        if (list.size() - 1 < level) {
            list.add((double) root.val);
            count.add(1);
        } else {
            list.set(level, list.get(level) + root.val);
            count.set(level, count.get(level) + 1);
        }
        method2(root.left, level + 1, list, count);
        method2(root.right, level + 1, list, count);
        if (level == 0) {
            for (int i = 0; i < list.size(); i++) {
                list.set(i, list.get(i) / count.get(i));
            }
        }
        return list;
    }
}
