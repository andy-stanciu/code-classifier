class Solution {

    public List<Double> method1(TreeNode root) {
        ArrayList<Double> list = new ArrayList<>();
        levelOrderTraversal(root, list);
        return list;
    }

    void levelOrderTraversal(TreeNode root, ArrayList<Double> list) {
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return;
        }
        q.add(root);
        while (!q.isEmpty()) {
            int var1 = q.size();
            long sum = 0;
            for (int i = 0; i < var1; i++) {
                TreeNode node = q.poll();
                if (node.left != null) {
                    q.add(node.left);
                }
                if (node.right != null) {
                    q.add(node.right);
                }
                sum += node.val;
            }
            double avg = (double) sum / var1;
            list.add(avg);
        }
    }
}
