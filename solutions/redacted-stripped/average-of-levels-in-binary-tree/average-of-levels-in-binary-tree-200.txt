class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> list = new ArrayList<>();
        if (root == null)
            return list;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        q.add(null);
        double d = 0;
        int c = 0;
        while (!q.isEmpty()) {
            TreeNode n = q.remove();
            if (n == null) {
                list.add((double) d / c);
                d = 0.0;
                c = 0;
                if (!q.isEmpty())
                    q.add(n);
            } else {
                if (n.left != null)
                    q.add(n.left);
                if (n.right != null)
                    q.add(n.right);
                d += (double) n.val;
                c++;
            }
        }
        return list;
    }
}
