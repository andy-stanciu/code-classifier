class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> ans = new ArrayList<Double>();
        List<Integer> count = new ArrayList<Integer>();
        search(ans, count, 0, root);
        return ans;
    }

    public void search(List<Double> ans, List<Integer> count, int level, TreeNode node) {
        if (node == null)
            return;
        if (level == ans.size()) {
            ans.add((double) node.val);
            count.add(1);
        } else {
            ans.set(level, (ans.get(level) * (double) count.get(level) + (double) node.val) / (double) (count.get(level) + 1));
            count.set(level, count.get(level) + 1);
        }
        search(ans, count, level + 1, node.right);
        search(ans, count, level + 1, node.left);
    }
}
