class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> res = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        res.add(new Double(root.val / 1));
        while (!q.isEmpty()) {
            int len = q.size();
            Double sum = 0.0;
            Double count = 0.0;
            for (int i = 0; i < len; i++) {
                TreeNode node = q.poll();
                if (node.left != null) {
                    q.add(node.left);
                    TreeNode l = node.left;
                    sum += new Double(l.val);
                    count++;
                }
                if (node.right != null) {
                    q.add(node.right);
                    TreeNode r = node.right;
                    sum += new Double(r.val);
                    count++;
                }
            }
            Double avg = null;
            if (count > 0) {
                avg = sum / count;
            }
            if (avg != null) {
                res.add(avg);
            }
        }
        return res;
    }
}
