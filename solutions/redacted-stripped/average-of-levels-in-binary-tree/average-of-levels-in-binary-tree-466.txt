class Solution {

    public List<Double> method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<Double> list = new ArrayList<>();
        queue.add(root);
        while (!queue.isEmpty()) {
            List<Double> sublist = new ArrayList<>();
            for (int i = queue.size() - 1; i >= 0; i--) {
                if (queue.peek().left != null)
                    queue.add(queue.peek().left);
                if (queue.peek().right != null)
                    queue.add(queue.peek().right);
                sublist.add((double) queue.remove().val);
            }
            long sum = 0;
            for (int i = 0; i < sublist.size(); i++) {
                sum += sublist.get(i);
            }
            double avg = (double) sum / sublist.size();
            list.add(avg);
        }
        return list;
    }
}
