class Solution {

    int level = 0;

    public List<Double> method1(TreeNode root) {
        List<Double> d = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        q.offer(null);
        long count = 0, sum = 0;
        while (!q.isEmpty()) {
            TreeNode temp = q.peek();
            q.poll();
            if (temp == null) {
                level++;
                d.add((double) sum / count);
                sum = count = 0;
                if (!q.isEmpty())
                    q.offer(null);
            } else {
                sum += temp.val;
                count++;
                if (temp.left != null) {
                    q.offer(temp.left);
                }
                if (temp.right != null) {
                    q.offer(temp.right);
                }
            }
        }
        return d;
    }
}
