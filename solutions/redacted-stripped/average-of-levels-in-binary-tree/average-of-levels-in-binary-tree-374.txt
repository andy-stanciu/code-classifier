class Solution {

    public List<Double> method1(TreeNode root) {
        List<List<Integer>> x = new ArrayList<>();
        List<Double> r = new ArrayList<>();
        if (root == null)
            return r;
        Queue<TreeNode> y = new LinkedList<>();
        y.add(root);
        while (!y.isEmpty()) {
            int n = y.size();
            List<Integer> z = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                TreeNode k = y.remove();
                z.add(k.val);
                if (k.left != null) {
                    y.add(k.left);
                }
                if (k.right != null) {
                    y.add(k.right);
                }
            }
            x.add(z);
        }
        for (List<Integer> i : x) {
            long s = 0;
            for (int j : i) {
                s += j;
            }
            r.add(s / (i.size() * 1.0));
        }
        return r;
    }
}
