public class Solution {

    Map<Integer, Pair<Double, Double>> mp = new HashMap<>();

    void avg(TreeNode root, int l) {
        if (root == null)
            return;
        mp.putIfAbsent(l, new Pair<>(0.0, 0.0));
        Pair<Double, Double> pair = mp.get(l);
        pair.first += root.val;
        pair.second++;
        avg(root.left, l + 1);
        avg(root.right, l + 1);
    }

    public List<Double> method1(TreeNode root) {
        List<Double> ans = new ArrayList<>();
        avg(root, 0);
        for (Map.Entry<Integer, Pair<Double, Double>> entry : mp.entrySet()) {
            double sum = entry.getValue().first;
            double count = entry.getValue().second;
            ans.add(sum / count);
        }
        return ans;
    }
}
