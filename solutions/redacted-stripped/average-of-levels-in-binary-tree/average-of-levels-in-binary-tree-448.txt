class Solution {

    public List<Double> method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        List<Double> res = new ArrayList<>();
        queue.add(root);
        bfs(queue, res);
        return res;
    }

    private void bfs(Queue<TreeNode> queue, List<Double> res) {
        if (queue.isEmpty())
            return;
        int size = queue.size();
        double curSum = 0;
        for (int i = 0; i < size; i++) {
            TreeNode cur = queue.poll();
            curSum += cur.val;
            if (cur.left != null) {
                queue.add(cur.left);
            }
            if (cur.right != null) {
                queue.add(cur.right);
            }
        }
        res.add((double) (curSum / size));
        bfs(queue, res);
    }
}
