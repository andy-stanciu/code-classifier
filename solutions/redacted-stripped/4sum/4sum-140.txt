class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        int n = nums.length;
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i < n; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            for (int j = i + 1; j < n; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1]) {
                    continue;
                }
                int k = j + 1;
                int l = n - 1;
                while (k < l) {
                    long sum = (long) nums[i] + (long) nums[j];
                    sum += (long) nums[k];
                    sum += (long) nums[l];
                    if (sum < (long) target) {
                        k++;
                    } else if (sum > (long) target) {
                        l--;
                    } else {
                        List<Integer> quadruple = Arrays.asList(nums[i], nums[j], nums[k], nums[l]);
                        result.add(quadruple);
                        k++;
                        l--;
                        while (k < l && nums[k] == nums[k - 1]) {
                            k++;
                            continue;
                        }
                        while (k < l && nums[l] == nums[l + 1]) {
                            l--;
                            continue;
                        }
                    }
                }
            }
        }
        System.gc();
        return result;
    }
}
