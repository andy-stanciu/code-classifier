class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        if (nums.length < 4) {
            List<List<Integer>> emptyList = new ArrayList<>();
            return emptyList;
        }
        HashSet<List<Integer>> set = new HashSet<>();
        Arrays.sort(nums);
        for (int first = 0; first < nums.length - 3; first++) {
            for (int second = first + 1; second < nums.length - 2; second++) {
                int left = second + 1;
                int right = nums.length - 1;
                while (left < right) {
                    long sum = (long) nums[first] + nums[second] + nums[left] + nums[right];
                    if (sum == target) {
                        List<Integer> list = new ArrayList<Integer>();
                        list.add(nums[first]);
                        list.add(nums[second]);
                        list.add(nums[left]);
                        list.add(nums[right]);
                        set.add(list);
                        left++;
                        right--;
                    } else if (sum < target) {
                        left++;
                    } else {
                        right--;
                    }
                }
                while (second < (nums.length - 3) && nums[second] == nums[second + 1]) {
                    second++;
                }
            }
            while (first < (nums.length - 4) && nums[first] == nums[first + 1]) {
                first++;
            }
        }
        List<List<Integer>> ret = new ArrayList<>(set);
        return ret;
    }
}
