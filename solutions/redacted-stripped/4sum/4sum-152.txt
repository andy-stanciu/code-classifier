class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> res = new ArrayList<>();
        for (int i = 0; i <= nums.length - 4; ) {
            for (int j = i + 1; j <= nums.length - 3; ) {
                int left = j + 1, right = nums.length - 1;
                while (left < right) {
                    long sum = (long) nums[i] + (long) nums[j] + (long) nums[left] + (long) nums[right];
                    if (sum == (long) target) {
                        res.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));
                        left++;
                        while (left < right && nums[left] == nums[left - 1]) left++;
                        right--;
                        while (left < right && nums[right] == nums[right + 1]) right--;
                    } else if (sum > (long) target) {
                        right--;
                        while (left < right && nums[right] == nums[right + 1]) right--;
                    } else {
                        left++;
                        while (left < right && nums[left] == nums[left - 1]) left++;
                    }
                }
                j++;
                while (j <= nums.length - 3 && nums[j] == nums[j - 1]) j++;
            }
            i++;
            while (i <= nums.length - 4 && nums[i] == nums[i - 1]) i++;
        }
        return res;
    }
}
