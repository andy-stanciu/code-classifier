class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> output = new ArrayList<List<Integer>>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++) {
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j < nums.length - 2; j++) {
                long solution = (long) target - (long) nums[i] - (long) nums[j];
                int start = j + 1;
                int end = nums.length - 1;
                while (start < end) {
                    long sum = (long) nums[start] + (long) nums[end];
                    if (sum == solution) {
                        List<Integer> list = new ArrayList<Integer>();
                        list.add(nums[i]);
                        list.add(nums[j]);
                        list.add(nums[start]);
                        list.add(nums[end]);
                        output.add(list);
                        start = start + 1;
                    } else if (sum < solution) {
                        start = start + 1;
                    } else if (sum > solution) {
                        end = end - 1;
                    }
                }
            }
        }
        Set<List<Integer>> hashSet = new HashSet<>(output);
        return new ArrayList<>(hashSet);
    }
}
