class Solution {

    public static List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> listMain = new ArrayList<>();
        if (nums == null || nums.length < 4) {
            return listMain;
        }
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            for (int left = i + 1; left < nums.length - 2; left++) {
                if (left > i + 1 && nums[left] == nums[left - 1]) {
                    continue;
                }
                int middle = left + 1;
                int right = nums.length - 1;
                while (middle < right) {
                    long sum = (long) nums[i] + (long) nums[left] + (long) nums[middle] + (long) nums[right];
                    if (sum == target) {
                        listMain.add(Arrays.asList(nums[i], nums[left], nums[middle], nums[right]));
                        while (middle < right && nums[middle] == nums[middle + 1]) {
                            middle++;
                        }
                        while (middle < right && nums[right] == nums[right - 1]) {
                            right--;
                        }
                        middle++;
                        right--;
                    } else if (sum < target) {
                        middle++;
                    } else {
                        right--;
                    }
                }
            }
        }
        return listMain;
    }
}
