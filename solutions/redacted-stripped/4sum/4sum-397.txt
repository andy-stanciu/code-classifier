class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(nums);
        int last = nums.length - 1;
        for (int i = 0; i < last - 2; i++) {
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j < last - 1; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1])
                    continue;
                long rest = (long) target - (nums[i] + nums[j]);
                int left = j + 1;
                int right = last;
                while (left < right) {
                    long leftL = (long) nums[left];
                    long rightL = (long) nums[right];
                    if ((long) nums[left] + nums[right] == rest) {
                        result.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));
                        while (left < right && nums[left] == nums[left + 1]) left++;
                        while (left < right && nums[right] == nums[right - 1]) right--;
                        left++;
                        right--;
                    } else if ((long) nums[left] + nums[right] < rest) {
                        left++;
                    } else {
                        right--;
                    }
                }
            }
        }
        return result;
    }
}
