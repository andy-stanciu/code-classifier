class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> results = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++) {
            while ((i > 0 && i < nums.length - 3) && nums[i] == nums[i - 1]) i++;
            for (int j = i + 1; j < nums.length - 2; j++) {
                while ((j != i + 1 && j < nums.length - 2) && nums[j] == nums[j - 1]) j++;
                int left = j + 1;
                int right = nums.length - 1;
                while (left < right) {
                    long sum = nums[i];
                    sum += nums[j];
                    sum += nums[left];
                    sum += nums[right];
                    if (sum == target) {
                        List<Integer> result = new ArrayList<>();
                        result.add(nums[i]);
                        result.add(nums[j]);
                        result.add(nums[left]);
                        result.add(nums[right]);
                        results.add(result);
                        left++;
                        right--;
                        while (left < right && nums[left] == nums[left - 1]) left++;
                        while (left < right && nums[right] == nums[right + 1]) right--;
                    } else if (sum < target)
                        left++;
                    else if (sum > target)
                        right--;
                }
            }
        }
        return results;
    }
}
