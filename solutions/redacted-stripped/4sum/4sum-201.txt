class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        if (nums.length < 4)
            return List.of();
        Arrays.sort(nums);
        var result = new ArrayList<List<Integer>>();
        var a = 0;
        while (a < nums.length - 3) {
            var b = a + 1;
            while (b < nums.length - 2) {
                var c = b + 1;
                var d = nums.length - 1;
                while (c < d) {
                    if ((long) nums[a] + (long) nums[b] + (long) nums[c] + (long) nums[d] == (long) target) {
                        result.add(List.of(nums[a], nums[b], nums[c], nums[d]));
                    }
                    if ((long) nums[a] + (long) nums[b] + (long) nums[c] + (long) nums[d] > (long) target) {
                        while (c < d && nums[d] == nums[d - 1]) {
                            d--;
                        }
                        d--;
                    } else {
                        while (c < d && nums[c] == nums[c + 1]) {
                            c++;
                        }
                        c++;
                    }
                }
                while (b < nums.length - 2 && nums[b] == nums[b + 1]) {
                    b++;
                }
                b++;
            }
            while (a < nums.length - 3 && nums[a] == nums[a + 1]) {
                a++;
            }
            a++;
        }
        return result;
    }
}
