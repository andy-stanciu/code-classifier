class Solution {

    boolean[][] vis;

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        int n = nums.length;
        if (n < 4)
            return ans;
        Arrays.sort(nums);
        for (int i = 0; i < n; i++) {
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j < n; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1])
                    continue;
                long sum = (long) nums[i] + (long) nums[j];
                int k = j + 1;
                int l = n - 1;
                while (k < l) {
                    long temp = sum + ((long) nums[k] + (long) nums[l]);
                    if (temp == target) {
                        ans.add(new ArrayList<>(Arrays.asList(nums[i], nums[j], nums[k], nums[l])));
                        while (k < l && nums[k] == nums[k + 1]) k++;
                        while (l > k && nums[l] == nums[l - 1]) l--;
                        k++;
                        l--;
                    } else if (temp < target) {
                        k++;
                    } else {
                        l--;
                    }
                }
            }
        }
        return ans;
    }
}
