class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        int n = nums.length, k, l;
        long sum, need;
        List<List<Integer>> ans = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            if (i != 0 && nums[i - 1] == nums[i])
                continue;
            for (int j = i + 1; j < n; j++) {
                if (j - 1 != i && nums[j - 1] == nums[j])
                    continue;
                k = j + 1;
                l = n - 1;
                need = target - nums[i];
                need -= nums[j];
                while (k < l) {
                    sum = nums[k];
                    sum += nums[l];
                    if (sum < need)
                        k++;
                    else if (sum > need)
                        l--;
                    else {
                        List<Integer> list = new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[j]);
                        list.add(nums[k]);
                        list.add(nums[l]);
                        ans.add(list);
                        k++;
                        l--;
                        while (k < l && nums[k] == nums[k - 1]) k++;
                        while (k < l && nums[l] == nums[l + 1]) l--;
                    }
                }
            }
        }
        return ans;
    }
}
