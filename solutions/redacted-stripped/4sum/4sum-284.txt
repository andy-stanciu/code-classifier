class Solution {

    public List<List<Integer>> fourSum(int[] num, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(num);
        int n = num.length;
        if (n < 4) {
            return result;
        }
        if (n == 4) {
            long total = (long) num[0] + num[1] + num[2] + num[3];
            if (total == target) {
                result.add(Arrays.asList(num[0], num[1], num[2], num[3]));
                return result;
            } else
                return result;
        }
        for (int i = 0; i < n - 3; i++) {
            if (i > 0 && num[i] == num[i - 1]) {
                continue;
            }
            if (i > 0 && num[i] == num[0]) {
                continue;
            }
            for (int j = i + 1; j < n - 2; j++) {
                if (j > i + 1 && num[j] == num[j - 1]) {
                    continue;
                }
                int left = j + 1, right = n - 1;
                while (left < right) {
                    int total = num[i] + num[j] + num[left] + num[right];
                    if (total == target) {
                        result.add(Arrays.asList(num[i], num[j], num[left], num[right]));
                        left++;
                        while (left < right && num[left] == num[left - 1]) {
                            left++;
                        }
                    } else if (total > target) {
                        right--;
                    } else {
                        left++;
                    }
                }
            }
        }
        return result;
    }
}
