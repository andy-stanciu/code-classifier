class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        int i, j, s, r;
        long val = 0;
        List<List<Integer>> as = new ArrayList<>();
        Arrays.sort(nums);
        for (i = 0; i < nums.length - 3; i++) {
            for (j = i + 1; j < nums.length - 2; j++) {
                long temp = (long) nums[i] + nums[j];
                val = (long) target - temp;
                s = j + 1;
                r = nums.length - 1;
                while (s < r) {
                    if ((long) nums[s] + nums[r] > val)
                        r--;
                    else if ((long) nums[s] + nums[r] < val)
                        s++;
                    else if (s < r && (long) nums[s] + nums[r] == val) {
                        ArrayList<Integer> al = new ArrayList<>();
                        al.add(nums[i]);
                        al.add(nums[j]);
                        al.add(nums[s]);
                        al.add(nums[r]);
                        Collections.sort(al);
                        if (!as.contains(al))
                            as.add(al);
                        if ((long) nums[s + 1] + nums[r] == val)
                            s++;
                        else if ((long) nums[s] + nums[r - 1] == val)
                            r--;
                        else {
                            s++;
                            r--;
                        }
                    }
                }
            }
        }
        return as;
    }
}
