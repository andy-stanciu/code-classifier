class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        int len = nums.length;
        Arrays.sort(nums);
        for (int i = 0; i < len - 3; i++) {
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j < len - 2; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1])
                    continue;
                int newTarget = target - nums[i] - nums[j];
                if (newTarget < nums[j + 1]) {
                    break;
                }
                Set<Integer> set = new HashSet<>();
                for (int k = j + 1; k < len; k++) {
                    if (k > j + 1 && k < len - 1 && nums[k] == nums[k - 1])
                        if (set.contains(newTarget - nums[k])) {
                            ans.add(Arrays.asList(nums[i], nums[j], newTarget - nums[k], nums[k]));
                        }
                    set.add(nums[k]);
                }
            }
        }
        return ans;
    }
}
