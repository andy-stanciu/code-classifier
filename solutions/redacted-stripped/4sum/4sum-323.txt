class Solution {

    public List<List<Integer>> fourSum(int[] arr, int tar) {
        Arrays.sort(arr);
        long target = (long) tar;
        int n = arr.length;
        if (n < 4) {
            return new ArrayList<List<Integer>>();
        }
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        int end = n - 1;
        for (int start = 0; start <= end - 3; start++) {
            if (start > 0 && arr[start] == arr[start - 1]) {
                continue;
            }
            long sum = arr[start];
            for (int i = start + 1; i <= end - 2; i++) {
                if (i > start + 1 && arr[i] == arr[i - 1]) {
                    continue;
                }
                long sum2 = sum + arr[i];
                int j = i + 1, k = end;
                while (j < k) {
                    if (j > i + 1 && arr[j] == arr[j - 1]) {
                        j++;
                        continue;
                    }
                    long sum3 = sum2 + arr[j] + arr[k];
                    if (sum3 == target) {
                        List<Integer> temp = new ArrayList<Integer>();
                        temp.add(arr[start]);
                        temp.add(arr[i]);
                        temp.add(arr[j]);
                        temp.add(arr[k]);
                        res.add(temp);
                        j++;
                        k--;
                    } else if (sum3 > target) {
                        k--;
                    } else {
                        j++;
                    }
                }
            }
        }
        return res;
    }
}
