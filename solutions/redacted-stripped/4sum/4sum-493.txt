class Solution {

    public List<List<Integer>> fourSum(int[] nums, int k) {
        List<List<Integer>> li = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++) {
            for (int j = i + 1; j < nums.length - 2; j++) {
                long sum = nums[i] + nums[j];
                long target = k - sum;
                int low = j + 1;
                int high = nums.length - 1;
                while (low < high) {
                    if (nums[low] + nums[high] == target) {
                        List<Integer> l1 = new ArrayList<>();
                        l1.add(nums[i]);
                        l1.add(nums[j]);
                        l1.add(nums[low]);
                        l1.add(nums[high]);
                        li.add(l1);
                        low++;
                        high--;
                        while (low < high && nums[low] == nums[low - 1]) low++;
                        while (low < high && nums[high] == nums[high + 1]) high--;
                    } else if (nums[low] + nums[high] > target) {
                        high--;
                    } else {
                        low++;
                    }
                }
                while (j < nums.length - 3 && nums[j] == nums[j + 1]) j++;
            }
            while (i < nums.length - 4 && nums[i] == nums[i + 1]) i++;
        }
        return li;
    }
}
