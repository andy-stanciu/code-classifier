class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> lis = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i <= nums.length - 4; i++) {
            if (i != 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j <= nums.length - 3; j++) {
                if (j != i + 1 && nums[j] == nums[j - 1])
                    continue;
                int lo = j + 1, hi = nums.length - 1;
                long newTar = (long) target - (long) nums[i] - (long) nums[j];
                while (lo < hi) {
                    if ((long) nums[lo] + (long) nums[hi] == newTar) {
                        lis.add(new ArrayList<Integer>(Arrays.asList(nums[i], nums[j], nums[lo], nums[hi])));
                        while (lo + 1 < hi && nums[lo] == nums[lo + 1]) lo++;
                        while (hi - 1 > lo && nums[hi] == nums[hi - 1]) hi--;
                        lo++;
                        hi--;
                    } else if ((long) nums[lo] + (long) nums[hi] < newTar) {
                        lo++;
                    } else
                        hi--;
                }
            }
        }
        return lis;
    }
}
