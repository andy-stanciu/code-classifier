class Solution {

    public ListNode method1(ListNode head, int k) {
        return recursiveRecursion(head, head, 1, k);
    }

    public ListNode recursiveRecursion(ListNode head, ListNode tail, int count, int k) {
        if (tail.next == null && count != k)
            return head;
        else if (count == k) {
            ListNode nextNode = tail.next;
            tail.next = null;
            ListNode var1 = method2(head);
            ListNode var2 = null;
            if (nextNode != null)
                var2 = recursiveRecursion(nextNode, nextNode, 1, k);
            head.next = var2;
            return var1;
        } else
            return recursiveRecursion(head, tail.next, ++count, k);
    }

    public ListNode method2(ListNode head) {
        ListNode previous = null;
        ListNode curr = head;
        ListNode next = head;
        while (curr != null) {
            next = next.next;
            curr.next = previous;
            previous = curr;
            curr = next;
        }
        return previous;
    }
}
