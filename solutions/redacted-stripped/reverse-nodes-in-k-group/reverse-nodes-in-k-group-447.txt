class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode ans = null;
        ListNode node = head;
        ListNode prev = null;
        ListNode next = null;
        int count = 1;
        while (node != null) {
            ListNode rev = node;
            while (count < k && node != null) {
                node = node.next;
                count++;
            }
            if (count == k && node != null) {
                next = node.next;
                node.next = null;
                ListNode[] temp = method2(rev);
                if (prev == null) {
                    ans = temp[0];
                } else {
                    prev.next = temp[0];
                }
                count = 1;
                prev = temp[1];
                temp[1].next = next;
                node = next;
            }
        }
        return ans;
    }

    public ListNode[] method2(ListNode head) {
        ListNode node = head;
        ListNode prev = null;
        ListNode[] ans = new ListNode[2];
        while (node != null) {
            ListNode temp = node.next;
            node.next = prev;
            prev = node;
            node = temp;
        }
        ans[0] = prev;
        ans[1] = head;
        return ans;
    }
}
