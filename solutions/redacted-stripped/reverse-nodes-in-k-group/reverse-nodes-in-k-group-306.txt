class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode prev = head;
        ListNode curr = head.next;
        k -= 1;
        ListNode nhead = curr;
        ListNode next = head.next.next;
        curr.next = null;
        prev = curr;
        curr = next;
        k -= 1;
        next = next.next;
        while (k != 0) {
            curr.next = prev;
            prev = curr;
            curr = next;
            k -= 1;
            next = next.next;
        }
        curr.next = prev;
        head.next = curr;
        nhead.next = next;
        return nhead;
    }

    public int Length(ListNode head) {
        ListNode temp = head;
        int len = 0;
        if (temp == null) {
            return len;
        }
        while (temp != null) {
            len += 1;
            temp = temp.next;
        }
        return len;
    }

    public ListNode method2(ListNode head, int k) {
        if (head == null || head.next == null || k == 1) {
            return head;
        }
        int len = Length(head);
        ListNode Dummy = new ListNode(0, head);
        int var1 = 0;
        ListNode hd = Dummy;
        while (var1 != (len / k)) {
            hd = method1(hd, k);
            var1 += 1;
        }
        return Dummy.next;
    }
}
