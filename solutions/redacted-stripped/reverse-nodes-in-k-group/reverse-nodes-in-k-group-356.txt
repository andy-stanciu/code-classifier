class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode currNode = head;
        ListNode prevNode = null;
        ListNode nextNode = null;
        if (head == null) {
            return null;
        }
        ListNode node = head;
        for (int i = 0; i < k; i++) {
            if (node == null) {
                return head;
            }
            node = node.next;
        }
        int count = 0;
        while (count < k) {
            nextNode = currNode.next;
            currNode.next = prevNode;
            prevNode = currNode;
            currNode = nextNode;
            count++;
        }
        if (currNode != null) {
            head.next = method1(nextNode, k);
        }
        return prevNode;
    }
}
