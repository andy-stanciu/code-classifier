class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || k == 1) {
            return head;
        }
        ListNode clone = new ListNode(0);
        clone.next = head;
        ListNode ptrSize = clone.next;
        int size = 0;
        while (ptrSize != null) {
            size++;
            ptrSize = ptrSize.next;
        }
        int num = size / k;
        int iter = 0;
        ListNode currNode = clone.next;
        ListNode prevNode = null;
        ListNode var1 = clone;
        while (iter < num) {
            int sub = 0;
            ListNode var2 = currNode;
            ListNode nextNode = null;
            prevNode = null;
            while (sub < k) {
                nextNode = currNode.next;
                currNode.next = prevNode;
                prevNode = currNode;
                currNode = nextNode;
                sub++;
            }
            var1.next = prevNode;
            var2.next = currNode;
            var1 = var2;
            iter++;
        }
        return clone.next;
    }
}
