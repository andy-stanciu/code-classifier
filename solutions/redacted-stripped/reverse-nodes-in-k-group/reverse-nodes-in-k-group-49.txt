class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || k < 2)
            return head;
        ListNode var1 = null, var2, var3 = null, var4 = head;
        head = null;
        while (var4 != null) {
            var2 = var4;
            int count = 0;
            while (count < k && var4 != null) {
                var3 = var4;
                var4 = var4.next;
                count++;
            }
            if (count == k) {
                method2(var2, k);
                if (head == null)
                    head = var3;
                if (var1 != null) {
                    var1.next = var3;
                }
                var1 = var2;
            } else if (head == null) {
                head = var2;
            } else if (var1 != null)
                var1.next = var2;
        }
        return head;
    }

    private ListNode method2(ListNode node, int nodeCount) {
        if (nodeCount < 2)
            return node;
        ListNode result = method2(node.next, nodeCount - 1);
        result.next = node;
        node.next = null;
        return node;
    }
}
