class Solution {

    ListNode method1(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode newHead = method1(head.next);
        ListNode front = head.next;
        front.next = head;
        head.next = null;
        return newHead;
    }

    ListNode getKthNode(ListNode temp, int k) {
        k -= 1;
        while (temp != null && k > 0) {
            k--;
            temp = temp.next;
        }
        return temp;
    }

    public ListNode method2(ListNode head, int k) {
        ListNode temp = head;
        ListNode prevNode = null;
        while (temp != null) {
            ListNode KthNode = getKthNode(temp, k);
            if (KthNode == null) {
                if (prevNode != null)
                    prevNode.next = temp;
                break;
            }
            ListNode nextNode = KthNode.next;
            KthNode.next = null;
            method1(temp);
            if (temp == head) {
                head = KthNode;
            } else {
                prevNode.next = KthNode;
            }
            prevNode = temp;
            temp = nextNode;
        }
        return head;
    }
}
