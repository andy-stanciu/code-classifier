class Solution {

    ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode n = head.next, curr = head;
        ListNode prev = null;
        while (n != null) {
            curr.next = prev;
            prev = curr;
            curr = n;
            n = n.next;
        }
        curr.next = prev;
        return curr;
    }

    public ListNode method2(ListNode head, int k) {
        if (head == null) {
            return null;
        }
        int k2 = k;
        ListNode curr = head;
        while (curr != null && k2 > 1) {
            k2--;
            curr = curr.next;
        }
        if (k2 == 1 && curr != null) {
            ListNode next = null;
            if (curr == null || curr.next == null) {
                next = null;
            } else {
                next = curr.next;
            }
            curr.next = null;
            ListNode h = method1(head);
            head.next = method2(next, k);
            return h;
        } else {
            return head;
        }
    }
}
