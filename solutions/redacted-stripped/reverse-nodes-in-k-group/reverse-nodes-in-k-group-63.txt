class Solution {

    public static ListNode method1(ListNode head, int k) {
        int count = 0;
        ListNode temp = head;
        while (temp != null && count < k) {
            count++;
            temp = temp.next;
        }
        if (count < k)
            return head;
        ListNode tail = head;
        ListNode front = method2(head, k);
        tail.next = method1(temp, k);
        return front;
    }

    private static ListNode method2(ListNode head, int n) {
        ListNode prev = null;
        ListNode curr = head;
        while (n-- != 0) {
            ListNode ahead = curr.next;
            curr.next = prev;
            prev = curr;
            curr = ahead;
        }
        return prev;
    }
}
