class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null) {
            return null;
        }
        ListNode iterator = head;
        ListNode ansHead = null;
        ListNode prevTail = null;
        while (iterator != null) {
            int i = k;
            ListNode prev = null;
            ListNode tempHead = iterator;
            while (i-- > 0 && iterator != null) {
                ListNode next = iterator.next;
                iterator.next = prev;
                prev = iterator;
                iterator = next;
            }
            if (ansHead == null) {
                ansHead = prev;
            }
            if (prevTail != null) {
                if (i >= 0) {
                    ListNode var1 = method2(prev);
                    prevTail.next = var1;
                } else {
                    if (prevTail != prev) {
                        prevTail.next = prev;
                    }
                }
            }
            prevTail = tempHead;
        }
        return ansHead;
    }

    public ListNode method2(ListNode head) {
        ListNode iterator = head;
        ListNode prev = null;
        while (iterator != null) {
            ListNode next = iterator.next;
            iterator.next = prev;
            prev = iterator;
            iterator = next;
        }
        return prev;
    }
}
