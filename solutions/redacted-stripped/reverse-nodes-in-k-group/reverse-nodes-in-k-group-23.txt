class Solution {

    public ListNode method1(ListNode head, int k) {
        int count = 0;
        ListNode start = head;
        ListNode end = head;
        ListNode newHead = head;
        ListNode prev = new ListNode();
        while (end != null) {
            count++;
            if (count == k) {
                newHead = end;
            }
            if (count % k == 0) {
                ListNode newNode = end.next;
                ListNode node = method2(start, end, k);
                prev.next = node;
                prev = start;
                start = newNode;
                end = start;
                continue;
            }
            end = end.next;
        }
        return newHead;
    }

    private ListNode method2(ListNode start, ListNode end, int k) {
        ListNode curr = start;
        ListNode prev = end.next;
        ListNode next = null;
        for (int i = 0; i < k; i++) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
