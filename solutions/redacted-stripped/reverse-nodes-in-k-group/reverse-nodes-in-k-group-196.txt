class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head.next == null)
            return head;
        ListNode ans = new ListNode();
        ListNode ans2 = ans;
        ListNode node = head;
        int n = k;
        while (node != null && node.next != null) {
            if (n > 1) {
                node = node.next;
                n--;
            } else {
                ListNode temp = node.next;
                node.next = null;
                ans2.next = method2(head);
                while (ans2.next != null) ans2 = ans2.next;
                head = temp;
                node = head;
                n = k;
            }
        }
        if (n == 1) {
            ans2.next = method2(head);
        } else {
            ans2.next = head;
        }
        return ans.next;
    }

    private ListNode method2(ListNode node) {
        ListNode prev = null;
        ListNode curr = node;
        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }
}
