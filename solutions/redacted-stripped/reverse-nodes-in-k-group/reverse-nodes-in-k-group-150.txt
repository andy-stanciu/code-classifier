class Solution {

    static ListNode method1(ListNode head) {
        ListNode temp = head;
        ListNode prev = null;
        while (temp != null) {
            ListNode front = temp.next;
            temp.next = prev;
            prev = temp;
            temp = front;
        }
        return prev;
    }

    static ListNode getKthNode(ListNode temp, int k) {
        k -= 1;
        while (temp != null && k > 0) {
            k--;
            temp = temp.next;
        }
        return temp;
    }

    public ListNode method2(ListNode head, int k) {
        ListNode temp = head;
        ListNode prevLast = null;
        while (temp != null) {
            ListNode KThNode = getKthNode(temp, k);
            if (KThNode == null) {
                if (prevLast != null) {
                    prevLast.next = temp;
                }
                break;
            }
            ListNode nextNode = KThNode.next;
            KThNode.next = null;
            method1(temp);
            if (temp == head) {
                head = KThNode;
            } else {
                prevLast.next = KThNode;
            }
            prevLast = temp;
            temp = nextNode;
        }
        return head;
    }
}
