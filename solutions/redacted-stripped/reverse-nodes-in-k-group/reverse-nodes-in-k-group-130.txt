class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || k == 1)
            return head;
        return method1(head, k, 1);
    }

    public ListNode method1(ListNode head, int k, int c) {
        var var1 = head;
        while (var1 != null && k != c) {
            var1 = var1.next;
            c++;
        }
        if (k != c || var1 == null)
            return head;
        var next = method1(var1.next, k, 1);
        method2(head, k);
        head.next = next;
        return var1;
    }

    public ListNode method2(ListNode head, int k) {
        if (k == 1)
            return head;
        var prev = method2(head.next, k - 1);
        prev.next = head;
        return head;
    }
}
