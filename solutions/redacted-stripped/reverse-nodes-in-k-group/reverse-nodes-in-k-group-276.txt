class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || k <= 0)
            return head;
        ListNode tail = method2(head, k);
        if (tail == null)
            return head;
        ListNode var1 = tail.next;
        tail.next = null;
        tail = method3(head);
        head.next = method1(var1, k);
        return tail;
    }

    private ListNode method2(ListNode head, int k) {
        k = k - 1;
        while (head != null && k > 0) {
            head = head.next;
            k--;
        }
        return head;
    }

    private ListNode method3(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode n_1_list = head.next;
        head.next = null;
        ListNode newHead = method3(n_1_list);
        n_1_list.next = head;
        return newHead;
    }
}
