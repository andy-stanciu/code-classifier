class Solution {

    public ListNode method1(ListNode head, int k) {
        if (k == 1)
            return head;
        ListNode root = new ListNode(-1);
        root.next = head;
        int count = method3(head);
        int var1 = count / k;
        ListNode node = root;
        while (var1 > 0) {
            node = method2(node, k);
            var1--;
        }
        return root.next;
    }

    public ListNode method2(ListNode node, int k) {
        ListNode curr = node.next;
        ListNode tail = null;
        ListNode var2 = null;
        while (k > 0 && curr != null) {
            ListNode newNode = curr.next;
            curr.next = var2;
            var2 = curr;
            curr = newNode;
            if (var2.next == null)
                tail = var2;
            k--;
        }
        tail.next = curr;
        node.next = var2;
        return tail;
    }

    public int method3(ListNode node) {
        int count = 0;
        while (node != null) {
            count++;
            node = node.next;
        }
        return count;
    }
}
