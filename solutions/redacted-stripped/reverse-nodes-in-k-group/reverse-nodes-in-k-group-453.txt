class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null) {
            return head;
        } else if (head.next == null) {
            return head;
        } else {
            ListNode q = head;
            ListNode p = head;
            ListNode previousTail = null;
            int i = 1;
            boolean headFlag = false;
            while (i != k && p != null && p.next != null) {
                i++;
                p = p.next;
                if (i == k) {
                    ListNode temp = p.next;
                    p.next = null;
                    p = temp;
                    q = method3(q);
                    if (previousTail != null) {
                        previousTail.next = q;
                    }
                    ListNode r = null;
                    while (q != null) {
                        r = q;
                        if (!headFlag) {
                            head = q;
                            headFlag = true;
                        }
                        q = q.next;
                    }
                    previousTail = r;
                    r.next = p;
                    q = p;
                    i = 1;
                }
            }
        }
        return head;
    }

    public void method2(ListNode head) {
        ListNode p = head;
        while (p != null) {
            System.out.method2(p.val + " - ");
            p = p.next;
        }
        System.out.println(" --- ");
    }

    public ListNode method3(ListNode head) {
        ListNode p = null;
        ListNode q = head;
        while (q != null) {
            ListNode r = q.next;
            q.next = p;
            p = q;
            q = r;
        }
        return p;
    }
}
