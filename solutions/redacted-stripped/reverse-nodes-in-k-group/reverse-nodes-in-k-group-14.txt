class Solution {

    ListNode method1(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode temp = head;
        ListNode prev = null;
        ListNode next = head;
        while (temp != null) {
            next = temp.next;
            temp.next = prev;
            prev = temp;
            temp = next;
        }
        return prev;
    }

    public ListNode method2(ListNode head, int k) {
        ListNode temp = head;
        int count = 0;
        while (temp != null) {
            count++;
            temp = temp.next;
        }
        temp = head;
        int hd = count / k;
        count = 0;
        int var1 = 1;
        ListNode start = head;
        ListNode prev = null;
        ListNode ns = head;
        while (count < hd) {
            start = ns;
            while (var1 != k && temp != null) {
                temp = temp.next;
                var1++;
            }
            var1 = 1;
            ns = temp.next;
            temp.next = null;
            temp = ns;
            if (prev == null) {
                head = method1(start);
                prev = start;
            } else {
                prev.next = method1(start);
                prev = start;
            }
            count++;
        }
        prev.next = temp;
        return head;
    }
}
