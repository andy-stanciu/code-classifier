class Solution {

    public ListNode method1(ListNode head) {
        ListNode curr = head;
        ListNode next = null;
        ListNode prev = null;
        while (curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }

    public ListNode method2(ListNode head, int k) {
        ListNode dummy = head;
        ListNode newHead = null;
        ListNode curr = head;
        ListNode tail = head;
        int t = 0;
        while (curr != null) {
            t++;
            if (t == k) {
                t = 1;
                ListNode currBackup = curr.next;
                curr.next = null;
                if (newHead == null) {
                    newHead = curr;
                }
                ListNode temp = method1(dummy);
                tail.next = temp;
                tail = dummy;
                tail.next = currBackup;
                dummy = currBackup;
                curr = currBackup;
            }
            if (curr != null)
                curr = curr.next;
        }
        return newHead;
    }
}
