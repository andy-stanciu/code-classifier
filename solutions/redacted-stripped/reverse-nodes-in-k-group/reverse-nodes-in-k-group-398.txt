class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || head.next == null || k == 1) {
            return head;
        }
        ListNode temp = head;
        int size = 0;
        while (temp != null) {
            temp = temp.next;
            size++;
        }
        int var1 = size / k;
        temp = head;
        ListNode newHead = null, last = null;
        Stack<ListNode> stack = new Stack<>();
        int count = 0;
        while (temp != null && count < var1) {
            int i = 0;
            while (i < k && temp != null) {
                stack.push(temp);
                temp = temp.next;
                i++;
            }
            while (!stack.isEmpty()) {
                if (newHead == null) {
                    newHead = stack.peek();
                    last = stack.pop();
                } else {
                    last.next = stack.pop();
                    last = last.next;
                }
            }
            count++;
        }
        if (temp != null) {
            last.next = temp;
        } else {
            last.next = null;
        }
        return newHead;
    }
}
