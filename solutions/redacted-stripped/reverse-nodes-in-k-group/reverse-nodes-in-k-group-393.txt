class Solution {

    ListNode th = null;

    ListNode tt = null;

    public ListNode method1(ListNode head, int k) {
        if (head == null || head.next == null || k == 0) {
            return head;
        }
        int n = 0;
        ListNode a = head;
        ListNode oh = null;
        ListNode ot = null;
        while (a != null) {
            n += 1;
            a = a.next;
        }
        ListNode curr = head;
        while (n >= k) {
            int pair = k;
            while (pair > 0) {
                ListNode fwd = curr.next;
                curr.next = null;
                addfirst(curr);
                curr = fwd;
                pair--;
            }
            if (oh == null) {
                oh = th;
                ot = tt;
            } else {
                ot.next = th;
                ot = tt;
            }
            th = null;
            tt = null;
            n -= k;
        }
        ot.next = curr;
        return oh;
    }

    public void addfirst(ListNode node) {
        if (th == null) {
            th = node;
            tt = node;
        } else {
            node.next = th;
            th = node;
        }
    }
}
