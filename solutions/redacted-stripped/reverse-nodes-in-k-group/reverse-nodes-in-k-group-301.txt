class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null)
            return head;
        ListNode newHead = null, tail = null, revHead = null, current = head;
        int count = 0;
        while (current != null) {
            count = 0;
            while (current != null && count < k) {
                current = current.next;
                count++;
            }
            if (count == k) {
                revHead = method2(head, k);
                if (newHead == null)
                    newHead = revHead;
                if (tail != null)
                    tail.next = revHead;
                tail = head;
                head = current;
            }
        }
        if (tail != null)
            tail.next = head;
        return newHead == null ? head : newHead;
    }

    private ListNode method2(ListNode head, int k) {
        ListNode current = head, next = null, previous = null;
        int count = 0;
        while (current != null && count < k) {
            next = current.next;
            current.next = previous;
            previous = current;
            current = next;
            count++;
        }
        return previous;
    }
}
