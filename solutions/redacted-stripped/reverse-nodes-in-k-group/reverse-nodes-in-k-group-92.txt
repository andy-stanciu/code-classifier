class Solution {

    public ListNode method1(ListNode head, int k) {
        if (k <= 1 || head == null)
            return head;
        int length = 0;
        ListNode tmp = head;
        while (tmp != null) {
            tmp = tmp.next;
            length++;
        }
        ListNode current = head, previous = null;
        while (true) {
            if (k > length)
                break;
            ListNode lastNodeOfPreviousPart = previous;
            ListNode lastNodeOfSubList = current;
            ListNode next = null;
            for (int i = 0; current != null && i < k; i++) {
                next = current.next;
                current.next = previous;
                previous = current;
                current = next;
                length--;
            }
            if (lastNodeOfPreviousPart != null)
                lastNodeOfPreviousPart.next = previous;
            else
                head = previous;
            lastNodeOfSubList.next = current;
            if (current == null)
                break;
            previous = lastNodeOfSubList;
        }
        return head;
    }
}
