class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode preTail = null, curHead = head, curTail = head, nextHead = null;
        while (curHead != null) {
            int count = 1;
            while (curTail.next != null && count < k) {
                curTail = curTail.next;
                count++;
            }
            if (count != k) {
                break;
            }
            nextHead = curTail.next;
            curTail.next = null;
            if (preTail != null) {
                preTail.next = null;
            }
            curTail = method2(curHead);
            if (preTail != null) {
                preTail.next = curTail;
            } else {
                head = curTail;
            }
            curHead.next = nextHead;
            preTail = curHead;
            curHead = nextHead;
            curTail = nextHead;
        }
        return head;
    }

    private ListNode method2(ListNode head) {
        ListNode prev = null, curr = head, next = null;
        while (curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
