class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode temp = head;
        ListNode prev = null;
        while (temp != null) {
            ListNode kthNode = method2(temp, k);
            if (kthNode == null) {
                if (prev != null) {
                    prev.next = temp;
                }
                break;
            }
            ListNode nxtNode = kthNode.next;
            kthNode.next = null;
            ListNode rev = method3(temp);
            if (temp == head) {
                head = kthNode;
            } else {
                prev.next = kthNode;
            }
            prev = temp;
            temp = nxtNode;
        }
        return head;
    }

    public static ListNode method2(ListNode temp, int k) {
        k -= 1;
        while (temp != null && k > 0) {
            k--;
            temp = temp.next;
        }
        return temp;
    }

    public static ListNode method3(ListNode temp) {
        ListNode prev = null;
        ListNode nxt = null;
        while (temp != null) {
            nxt = temp.next;
            temp.next = prev;
            prev = temp;
            temp = nxt;
        }
        return prev;
    }
}
