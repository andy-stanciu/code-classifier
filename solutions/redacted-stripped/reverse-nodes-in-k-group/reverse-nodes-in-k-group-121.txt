class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode temp = head;
        int c = 0;
        while (temp != null) {
            c++;
            temp = temp.next;
        }
        temp = head;
        int[] arr = new int[c];
        for (int i = 0; i < c; i++) {
            arr[i] = temp.val;
            temp = temp.next;
        }
        List<Integer> arr1 = new ArrayList<>();
        int i = 0;
        while (i + k <= arr.length) {
            for (int j = i + k - 1; j >= i; j--) {
                arr1.add(arr[j]);
            }
            i += k;
        }
        for (int j = i; j < arr.length; j++) {
            arr1.add(arr[j]);
        }
        ListNode h = null;
        ListNode prev = null;
        for (int j = 0; j < arr1.size(); j++) {
            ListNode current = new ListNode();
            if (j == 0) {
                h = current;
            }
            current.val = arr1.get(j);
            if (prev != null) {
                prev.next = current;
            }
            prev = current;
            current.next = null;
        }
        return h;
    }
}
