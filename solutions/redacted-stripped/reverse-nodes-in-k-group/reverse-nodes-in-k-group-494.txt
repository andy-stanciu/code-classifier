class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || head.next == null) {
            return head;
        }
        head = method2(head, k);
        ListNode currentNode = head;
        while (currentNode != null && currentNode.next != null) {
            for (int i = 1; currentNode != null && i < k; i++) {
                currentNode = currentNode.next;
            }
            if (currentNode != null && currentNode.next != null) {
                currentNode.next = method2(currentNode.next, k);
                currentNode = currentNode.next;
            }
        }
        return head;
    }

    public ListNode method2(ListNode head, int k) {
        if (head.next == null) {
            return head;
        }
        ListNode var1 = head;
        for (int i = 0; i < k; i++) {
            if (var1 == null) {
                return head;
            }
            var1 = var1.next;
        }
        ListNode previousNode = null;
        ListNode currentNode = head;
        var1 = head;
        ListNode nextNode = currentNode.next;
        for (int i = 1; i <= k; i++) {
            nextNode = currentNode.next;
            currentNode.next = previousNode;
            previousNode = currentNode;
            currentNode = nextNode;
        }
        var1.next = nextNode;
        return previousNode;
    }
}
