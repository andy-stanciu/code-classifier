class Solution {

    private int method1(ListNode head) {
        int len = 0;
        while (head != null) {
            head = head.next;
            len++;
        }
        return len;
    }

    private ListNode method2(ListNode head, int k) {
        ListNode dummyHead = null;
        ListNode temp = null;
        ListNode end = head;
        for (int i = 0; i < k; i++) {
            temp = head;
            head = head.next;
            temp.next = dummyHead;
            dummyHead = temp;
        }
        end.next = head;
        return dummyHead;
    }

    private void method3(ListNode head) {
        while (head != null) {
            System.out.method3(head.val + "->");
            head = head.next;
        }
        System.out.println();
    }

    private ListNode method4(ListNode head, int len, int k) {
        ListNode temp = head;
        if (len >= k) {
            head = method2(head, k);
        } else {
            return head;
        }
        temp.next = method4(temp.next, len - k, k);
        return head;
    }

    ListNode start;

    public ListNode method5(ListNode head, int k) {
        int len = method1(head);
        start = head;
        ListNode res = method4(head, len, k);
        return res;
    }
}
