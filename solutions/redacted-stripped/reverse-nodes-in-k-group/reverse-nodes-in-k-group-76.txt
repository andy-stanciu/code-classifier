class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode var1 = head;
        ListNode dummyNode = new ListNode();
        ListNode newCurr = dummyNode;
        while (var1 != null) {
            ListNode curr = var1;
            int i = k;
            int availableNode = 0;
            while (i-- > 0 && curr != null) {
                curr = curr.next;
                availableNode++;
            }
            ListNode var2 = curr;
            if (availableNode == k) {
                newCurr.next = method2(var1, k);
                newCurr = var1;
            } else {
                newCurr.next = var1;
            }
            var1 = var2;
        }
        return dummyNode.next;
    }

    private ListNode method2(ListNode node, int k) {
        ListNode prev = null;
        ListNode curr = node;
        while (curr != null && k-- > 0) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
