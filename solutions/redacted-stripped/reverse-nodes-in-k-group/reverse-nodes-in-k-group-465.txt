class Solution {

    public ListNode method1(ListNode head) {
        ListNode curr = head;
        ListNode prev = null;
        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev;
    }

    public ListNode method2(ListNode head, int k) {
        ListNode currOne = head;
        ListNode currTwo = head;
        ListNode prev = null;
        while (currTwo != null) {
            int n = k;
            while (currTwo.next != null && n > 1) {
                currTwo = currTwo.next;
                n--;
            }
            if (n <= 1) {
                ListNode temp = null;
                if (currTwo != null)
                    temp = currTwo.next;
                if (currTwo != null)
                    currTwo.next = null;
                if (prev != null)
                    prev.next = method1(currOne);
                else
                    head = method1(head);
                currOne.next = temp;
            }
            prev = currOne;
            currOne = currOne.next;
            currTwo = currOne;
        }
        return head;
    }
}
