class Solution {

    public int lower_bound(int val, int[] nums) {
        int lb = 0;
        for (int num : nums) {
            if (num <= val) {
                lb = num;
            } else {
                break;
            }
        }
        return lb;
    }

    public String method1(int val) {
        int[] nums = { 1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000 };
        HashMap<Integer, String> m = new HashMap<>();
        m.put(1, "I");
        m.put(4, "IV");
        m.put(5, "V");
        m.put(9, "IX");
        m.put(10, "X");
        m.put(40, "XL");
        m.put(50, "L");
        m.put(90, "XC");
        m.put(100, "C");
        m.put(400, "CD");
        m.put(500, "D");
        m.put(900, "CM");
        m.put(1000, "M");
        StringBuilder ans = new StringBuilder();
        int lb;
        while (val > 0) {
            lb = lower_bound(val, nums);
            ans.append(m.get(lb));
            val = val - lb;
        }
        return ans.toString();
    }
}
