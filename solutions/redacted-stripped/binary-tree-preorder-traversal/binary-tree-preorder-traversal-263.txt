class Solution {

    public List<Integer> method1(TreeNode root) {
        List<Integer> var1 = new ArrayList<>();
        method2(root, var1);
        return var1;
    }

    private void method2(TreeNode node, List<Integer> var1) {
        if (node == null)
            return;
        Deque<TreeNode> stack = new ArrayDeque<>();
        TreeNode tempNode;
        stack.push(node);
        while (!stack.isEmpty()) {
            tempNode = stack.pop();
            var1.add(tempNode.val);
            if (tempNode.right != null) {
                stack.push(tempNode.right);
            }
            if (tempNode.left != null) {
                stack.push(tempNode.left);
            }
        }
    }

    private void method3(TreeNode node, List<Integer> var1) {
        if (node == null)
            return;
        var1.add(node.val);
        method3(node.left, var1);
        method3(node.right, var1);
    }
}
