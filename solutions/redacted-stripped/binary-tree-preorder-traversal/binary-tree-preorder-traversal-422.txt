class Solution {

    public void isHelp(TreeNode root, List<Integer> list) {
        if (root == null)
            return;
        list.add(root.val);
        isHelp(root.left, list);
        isHelp(root.right, list);
    }

    public void method1(TreeNode root, List<Integer> list) {
        if (root == null)
            return;
        Stack<TreeNode> s = new Stack();
        s.push(root);
        while (!s.isEmpty()) {
            TreeNode curr = s.pop();
            list.add(curr.val);
            if (curr.right != null) {
                s.push(curr.right);
            }
            if (curr.left != null) {
                s.push(curr.left);
            }
        }
    }

    public List<Integer> method2(TreeNode root) {
        List<Integer> list = new ArrayList();
        method1(root, list);
        return list;
    }
}
