class Solution {

    List<Integer> ls = new ArrayList<Integer>();

    public List<Integer> method1(TreeNode root) {
        method2(root);
        return ls;
    }

    void method2(TreeNode root) {
        if (root == null)
            return;
        ls.add(root.val);
        method2(root.left);
        method2(root.right);
        return;
    }

    public List<Integer> method1(TreeNode root) {
        List<Integer> ls = new ArrayList<Integer>();
        if (root == null)
            return ls;
        Stack<TreeNode> st = new Stack<>();
        st.push(root);
        while (!st.isEmpty()) {
            TreeNode temp = st.pop();
            ls.add(temp.val);
            if (temp.right != null)
                st.push(temp.right);
            if (temp.left != null)
                st.push(temp.left);
        }
        return ls;
    }
}
