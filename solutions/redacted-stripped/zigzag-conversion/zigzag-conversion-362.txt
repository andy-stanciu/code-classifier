class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1)
            return s;
        int bstride = 2 * (numRows - 1), slen = s.length();
        if (slen < numRows)
            return s;
        char[] ret = new char[slen];
        int ri = 0;
        for (int i = 0; i < slen; i += bstride) {
            ret[ri++] = (s.charAt(i));
        }
        for (int i = 1; i < numRows - 1; i++) {
            int sdiff = bstride - i * 2;
            ret[ri++] = (s.charAt(i));
            for (int j = i + sdiff; j < slen; j += bstride) {
                ret[ri++] = (s.charAt(j));
                if (j + i * 2 < slen)
                    ret[ri++] = (s.charAt(j + i * 2));
            }
        }
        for (int i = numRows - 1; i < slen; i += bstride) {
            ret[ri++] = (s.charAt(i));
        }
        return new String(ret);
    }
}
