class Solution {

    public static String convert(String s, int numRows) {
        if (numRows == 1) {
            return s;
        }
        var vlength = 2 * (numRows - 1);
        var v = s.length() / vlength + 1;
        StringBuilder sb = new StringBuilder();
        StringBuilder[] list = new StringBuilder[numRows];
        for (int i = 0; i < numRows; i++) {
            list[i] = (new StringBuilder());
        }
        int position = 0;
        for (int i = 0; i < v; i++) {
            for (int j = 0; j < numRows; j++) {
                if (position > s.length() - 1) {
                    break;
                }
                list[j].append(s.charAt(position));
                position++;
            }
            for (int j = 0; j < numRows - 2; j++) {
                if (position > s.length() - 1) {
                    break;
                }
                list[numRows - j - 2].append(s.charAt(position));
                position++;
            }
        }
        for (StringBuilder stringBuilder : list) {
            sb.append(stringBuilder);
        }
        return sb.toString();
    }
}
