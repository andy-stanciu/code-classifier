class Solution {

    public String convert(String s, int numRows) {
        if (numRows == s.length())
            return s;
        int left = 0;
        int len = s.length();
        int rowNum = 0;
        HashMap<Integer, List<String>> rowCharMap = new HashMap<>();
        for (int i = 0; i < numRows; i++) {
            rowCharMap.put(i, new ArrayList<String>());
        }
        while (left < len) {
            rowCharMap.get(rowNum).add(s.substring(left, left + 1));
            if (rowNum == numRows - 1) {
                int temp = numRows - 2;
                while (temp > 0 && left < len - 1) {
                    ++left;
                    rowCharMap.get(temp).add(s.substring(left, left + 1));
                    temp--;
                }
            }
            left++;
            rowNum++;
            rowNum %= numRows;
        }
        rowNum = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < numRows; i++) {
            sb.append(String.join("", rowCharMap.get(i)));
        }
        return sb.toString();
    }
}
