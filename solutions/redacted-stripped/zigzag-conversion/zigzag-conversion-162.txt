class Solution {

    public String convert(String s, int numRows) {
        if (s.length() == 1 || numRows == 1 || numRows > s.length())
            return s;
        int temp;
        StringBuilder var1 = new StringBuilder();
        int m = 0;
        while ((temp = 2 * m * (numRows - 1) + 1) <= s.length()) {
            var1.append(s.charAt(temp - 1));
            m++;
        }
        for (int i = 2; i < numRows; i++) {
            m = 1;
            var1.append(s.charAt(i - 1));
            while ((temp = 2 * m * (numRows - 1) + i - 1) < s.length()) {
                var1.append(s.charAt(2 * m * (numRows - 1) + 2 - i - 1));
                var1.append(s.charAt(temp));
                m++;
            }
            if ((temp = 2 * m * (numRows - 1) + 2 - i - 1) < s.length())
                var1.append(s.charAt(temp));
        }
        m = 0;
        while ((temp = 2 * m * (numRows - 1) + numRows - 1) < s.length()) {
            var1.append(s.charAt(temp));
            m++;
        }
        return var1.toString();
    }
}
