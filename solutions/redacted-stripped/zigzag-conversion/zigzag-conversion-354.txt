class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1)
            return s;
        List<Character>[] m = new LinkedList[numRows];
        for (int i = 0; i < numRows; i++) {
            m[i] = new LinkedList<Character>();
        }
        int k = 0;
        int gap = numRows - 1;
        while (k < s.length()) {
            for (int i = 0; i < gap; i++) {
                if (k >= s.length())
                    break;
                if (i == 0) {
                    for (int j = 0; j < numRows; j++) {
                        if (k >= s.length())
                            break;
                        m[j].add(s.charAt(k++));
                    }
                } else {
                    m[numRows - i - 1].add(s.charAt(k++));
                }
            }
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < numRows; i++) {
            for (Character ch : m[i]) {
                sb.append(ch);
            }
        }
        return sb.toString();
    }
}
