class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1)
            return s;
        int dist = 2 * numRows - 2;
        int n = s.length();
        StringBuilder sb = new StringBuilder();
        int a = 0;
        while (a < n) {
            sb.append(s.charAt(a));
            a += dist;
        }
        for (int i = 1; i < numRows - 1; ++i) {
            int d = 2 * (numRows - 1 - i);
            for (int j = i; j < n; j += dist) {
                sb.append(s.charAt(j));
                if (j + d > n - 1)
                    break;
                sb.append(s.charAt(j + d));
            }
        }
        a = numRows - 1;
        while (a < n) {
            sb.append(s.charAt(a));
            a += dist;
        }
        return sb.toString();
    }
}
