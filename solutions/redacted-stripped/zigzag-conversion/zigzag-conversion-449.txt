class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1 || s.length() == 1 || numRows >= s.length())
            return s;
        int[] a = new int[s.length() / numRows + 1];
        int lim = s.length() / numRows + s.length() % numRows;
        int l = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < a.length; i++) {
            a[i] = l;
            l += 2 * numRows - 2;
            if (a[i] < s.length())
                sb.append(s.charAt(a[i]));
        }
        for (int j = 1; j <= numRows - 2; j++) {
            sb.append(s.charAt(j));
            for (int i = 1; i < a.length; i++) {
                if (a[i] - j < s.length())
                    sb.append(s.charAt(a[i] - j));
                if (a[i] + j < s.length())
                    sb.append(s.charAt(a[i] + j));
            }
        }
        for (int i = 0; i < a.length; i++) {
            if (a[i] + numRows - 1 < s.length())
                sb.append(s.charAt(a[i] + numRows - 1));
        }
        return sb.toString();
    }
}
