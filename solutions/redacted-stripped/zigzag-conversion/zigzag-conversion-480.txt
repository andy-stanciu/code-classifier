class Solution {

    public String convert(String s, int numRows) {
        if (numRows <= 0)
            return null;
        if (s == null || s.length() <= 1 || numRows == 1)
            return s;
        StringBuffer sb = new StringBuffer();
        int n = s.length();
        for (int row = 0; row < numRows; row++) {
            int curIndex = row, iteration = 1;
            while (curIndex < n) {
                sb.append(s.charAt(curIndex));
                curIndex += getNextDistance(row, numRows, iteration);
                iteration++;
            }
        }
        return sb.toString();
    }

    private int getNextDistance(int row, int totalRows, int iteration) {
        if (row == 0 || row == totalRows - 1) {
            return 2 * (totalRows - 1);
        }
        return iteration % 2 == 1 ? 2 * (totalRows - 1 - row) : 2 * row;
    }
}
