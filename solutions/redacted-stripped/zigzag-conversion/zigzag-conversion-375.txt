class Solution {

    public String convert(String s, int numRows) {
        if (numRows >= s.length() || numRows == 1) {
            return s;
        }
        StringBuffer[] rows = new StringBuffer[numRows];
        for (int i = 0; i < rows.length; ++i) rows[i] = new StringBuffer();
        int modSize = numRows + (numRows - 2);
        for (int modCurr = 0; modCurr < numRows; modCurr++) {
            for (int i = 0; i < s.length(); ++i) {
                int mval = i % modSize;
                if (mval == modCurr || mval == modSize - modCurr) {
                    rows[modCurr].append(s.charAt(i));
                }
            }
        }
        StringBuffer res = new StringBuffer();
        for (StringBuffer tmp : rows) {
            res.append(tmp);
        }
        return res.toString();
    }
}
