class Solution {

    public int strStr(String haystack, String needle) {
        int m = haystack.length();
        int n = needle.length();
        if (n == 0)
            return 0;
        if (n > m)
            return -1;
        int[] lps = new int[n];
        int prevLPS = 0;
        int i = 1;
        while (i < n) {
            if (needle.charAt(prevLPS) == needle.charAt(i)) {
                lps[i] = prevLPS + 1;
                i++;
                prevLPS++;
            } else if (prevLPS == 0) {
                lps[i] = 0;
                i++;
            } else {
                prevLPS = lps[prevLPS - 1];
            }
        }
        i = 0;
        int j = 0;
        while (i < m) {
            if (haystack.charAt(i) == needle.charAt(j)) {
                i++;
                j++;
            } else {
                if (j == 0)
                    i++;
                else
                    j = lps[j - 1];
            }
            if (j == n)
                return i - n;
        }
        return -1;
    }
}
