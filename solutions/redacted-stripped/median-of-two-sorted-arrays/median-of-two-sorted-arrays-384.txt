class Solution {

    public double method1(int[] arr1, int[] arr2) {
        int[] temp = arr1;
        if (arr1.length > arr2.length) {
            arr1 = arr2;
            arr2 = temp;
        }
        int n1 = arr1.length;
        int n2 = arr2.length;
        int lo = 0;
        int hi = n1;
        while (lo <= hi) {
            int i1 = (lo + hi) >> 1;
            int i2 = ((n1 + n2 + 1) / 2) - i1;
            int min1 = i1 < n1 ? arr1[i1] : Integer.MAX_VALUE;
            int max1 = i1 >= 1 ? arr1[i1 - 1] : Integer.MIN_VALUE;
            int min2 = i2 < n2 ? arr2[i2] : Integer.MAX_VALUE;
            int max2 = i2 >= 1 ? arr2[i2 - 1] : Integer.MIN_VALUE;
            if (min1 >= max2 && min2 >= max1) {
                if ((n1 + n2) % 2 == 0) {
                    return (double) (Math.max(max1, max2) + Math.min(min1, min2)) / 2;
                } else {
                    return (double) (Math.max(max1, max2));
                }
            } else {
                if (max1 > min2) {
                    hi = i1 - 1;
                } else {
                    lo = i1 + 1;
                }
            }
        }
        return -1;
    }
}
