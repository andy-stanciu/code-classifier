class Solution {

    public double method1(int[] nums1, int[] nums2) {
        if (nums1.length == 0 && nums2.length == 0) {
            return -1;
        } else if (nums1.length > 1000 || nums2.length > 1000) {
            return -1;
        }
        int q = nums1.length;
        int r = q;
        int w = nums2.length;
        int a = q + w;
        int[] oke = new int[a];
        int i = 0, j = 0, k = 0;
        while (i < q && j < w) {
            if (nums1[i] <= nums2[j]) {
                oke[k++] = nums1[i++];
            } else {
                oke[k++] = nums2[j++];
            }
        }
        while (i < q) {
            oke[k++] = nums1[i++];
        }
        while (j < w) {
            oke[k++] = nums2[j++];
        }
        if (a % 2 != 0) {
            int b = a / 2;
            return oke[b];
        } else {
            int b = a / 2;
            int c = oke[b - 1] + oke[b];
            return c / 2.0;
        }
    }
}
