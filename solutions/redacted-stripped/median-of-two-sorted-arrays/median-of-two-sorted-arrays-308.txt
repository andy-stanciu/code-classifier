class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int i = 0;
        int j = 0;
        int k = 0;
        int m = nums1.length;
        int n = nums2.length;
        int[] temp = new int[m + n];
        while (i < m && j < n) {
            if (nums1[i] < nums2[j]) {
                temp[k] = nums1[i];
                k++;
                i++;
            } else {
                temp[k] = nums2[j];
                k++;
                j++;
            }
        }
        while (i < m) {
            temp[k] = nums1[i];
            k++;
            i++;
        }
        while (j < n) {
            temp[k] = nums2[j];
            k++;
            j++;
        }
        int l = m + n;
        if (l % 2 == 1) {
            return temp[l / 2];
        }
        return (temp[l / 2] + temp[(l / 2 - 1)]) / 2.0;
    }
}
