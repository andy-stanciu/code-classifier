class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int[] nums3 = method2(nums1, nums2);
        int mid = nums3.length / 2;
        return nums3.length % 2 != 0 ? nums3[mid] : (nums3[mid] + nums3[mid - 1]) / 2.0;
    }

    private int[] method2(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        int[] nums3 = new int[n1 + n2];
        int i = 0, j = 0, k = 0;
        while (i < n1 && j < n2) {
            if (nums1[i] < nums2[j]) {
                nums3[k++] = nums1[i++];
            } else {
                nums3[k++] = nums2[j++];
            }
        }
        while (i < n1) nums3[k++] = nums1[i++];
        while (j < n2) nums3[k++] = nums2[j++];
        return nums3;
    }
}
