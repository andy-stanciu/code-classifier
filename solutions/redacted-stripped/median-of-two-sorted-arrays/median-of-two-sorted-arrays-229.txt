class Solution {

    public double method1(int[] nums1, int[] nums2) {
        double[] newArr = new double[nums1.length + nums2.length];
        int ptr1 = 0;
        int ptr2 = 0;
        int pos = 0;
        while (ptr1 < nums1.length || ptr2 < nums2.length) {
            if (ptr1 < nums1.length && ptr2 < nums2.length) {
                if (nums1[ptr1] <= nums2[ptr2]) {
                    newArr[pos++] = nums1[ptr1++];
                } else {
                    newArr[pos++] = nums2[ptr2++];
                }
            } else if (ptr1 >= nums1.length) {
                while (ptr2 < nums2.length) {
                    newArr[pos++] = nums2[ptr2++];
                }
            } else {
                while (ptr1 < nums1.length) {
                    newArr[pos++] = nums1[ptr1++];
                }
            }
        }
        double var1 = 0.0;
        if (newArr.length % 2 == 0) {
            var1 = (newArr[newArr.length / 2 - 1] + newArr[newArr.length / 2]) / 2;
        } else {
            var1 = newArr[newArr.length / 2];
        }
        return var1;
    }
}
