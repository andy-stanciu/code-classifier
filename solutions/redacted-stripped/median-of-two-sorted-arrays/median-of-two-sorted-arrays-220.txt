class Solution {

    public double method1(int[] arr1, int[] arr2) {
        int m = arr1.length;
        int n = arr2.length;
        int i = 0;
        int j = 0;
        int[] merged = new int[m + n];
        int x = 0;
        while (i < m && j < n) {
            if (arr1[i] < arr2[j]) {
                merged[x++] = arr1[i++];
            } else {
                merged[x++] = arr2[j++];
            }
        }
        while (i < m) {
            merged[x++] = arr1[i++];
        }
        while (j < n) {
            merged[x++] = arr2[j++];
        }
        int mid = (m + n) / 2;
        double var1;
        if ((m + n) % 2 == 0) {
            int prev = mid - 1;
            var1 = Double.valueOf(merged[mid] + merged[prev]) / 2;
        } else {
            var1 = merged[mid];
        }
        return var1;
    }
}
