class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int[] l = new int[nums1.length + nums2.length];
        int l1 = 0;
        int l2 = 0;
        for (int i = 0; i < l.length; i++) {
            if (l1 >= nums1.length) {
                l[i] = nums2[l2++];
            } else if (l2 >= nums2.length) {
                l[i] = nums1[l1++];
            } else {
                l[i] = nums1[l1] < nums2[l2] ? nums1[l1++] : nums2[l2++];
            }
        }
        return method2(l);
    }

    private double method2(int[] nums) {
        double res;
        if (nums.length == 0) {
            res = -1;
        } else if (nums.length % 2 == 0) {
            int middle = (int) nums.length / 2;
            int left = middle - 1;
            int right = middle;
            res = (nums[left] + nums[right]) / 2f;
        } else {
            int middle = (int) (nums.length - 1) / 2;
            res = nums[middle];
        }
        return res;
    }
}
