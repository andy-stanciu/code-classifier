class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int n = nums1.length;
        int m = nums2.length;
        int i = 0;
        int j = 0;
        int[] ans = new int[m + n];
        int k = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] < nums2[j]) {
                ans[k++] = nums1[i++];
            } else {
                ans[k++] = nums2[j++];
            }
        }
        while (i < nums1.length) {
            ans[k++] = nums1[i++];
        }
        while (j < nums2.length) {
            ans[k++] = nums2[j++];
        }
        int length = ans.length;
        if (length % 2 == 1) {
            return ans[length / 2];
        } else {
            int mid1 = ans[length / 2 - 1];
            int mid2 = ans[length / 2];
            return (double) (mid1 + mid2) / 2.0;
        }
    }
}
