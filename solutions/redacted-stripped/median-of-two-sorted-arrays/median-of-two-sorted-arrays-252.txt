class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int step1 = 0;
        int step2 = 0;
        int mergedLen = nums1.length + nums2.length;
        double[] mergedArr = new double[mergedLen];
        for (int i = 0; i < mergedLen; i++) {
            if (step1 == nums1.length) {
                mergedArr[i] = nums2[step2];
                step2++;
                continue;
            } else if (step2 == nums2.length) {
                mergedArr[i] = nums1[step1];
                step1++;
                continue;
            }
            if (nums1[step1] <= nums2[step2]) {
                mergedArr[i] = nums1[step1];
                step1++;
            } else {
                mergedArr[i] = nums2[step2];
                step2++;
            }
            if (i + 1 > mergedLen / 2) {
                return mergedLen % 2 == 0 ? (mergedArr[i] + mergedArr[i - 1]) / 2 : mergedArr[i];
            }
        }
        return mergedLen % 2 == 0 ? (mergedArr[mergedLen / 2] + mergedArr[mergedLen / 2 - 1]) / 2 : mergedArr[mergedLen / 2];
    }
}
