class Solution {

    public double method1(int[] nums1, int[] nums2) {
        if (nums1.length > nums2.length) {
            return method1(nums2, nums1);
        }
        var num1Length = nums1.length;
        var num2Length = nums2.length;
        var low = 0;
        var high = num1Length;
        while (low <= high) {
            var var1 = (low + high) / 2;
            var var2 = (num1Length + num2Length + 1) / 2 - var1;
            var var3 = (var1 == 0) ? Integer.MIN_VALUE : nums1[var1 - 1];
            var var4 = (var1 == num1Length) ? Integer.MAX_VALUE : nums1[var1];
            var var5 = (var2 == 0) ? Integer.MIN_VALUE : nums2[var2 - 1];
            var var6 = (var2 == num2Length) ? Integer.MAX_VALUE : nums2[var2];
            if (var3 <= var6 && var5 <= var4) {
                if ((num1Length + num2Length) % 2 == 1) {
                    return Math.max(var3, var5);
                } else {
                    return (double) (Math.max(var3, var5) + Math.min(var4, var6)) / 2;
                }
            } else if (var3 > var6) {
                high = var1 - 1;
            } else {
                low = var1 + 1;
            }
        }
        throw new IllegalArgumentException("\u041C\u0430\u0441\u0441\u0438\u0432 \u043D\u0435 \u043E\u0442\u0441\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D");
    }
}
