class Solution {

    public int method1(int[][] points) {
        // O(NLogN)
        Arrays.sort(points, (a, b) -> Integer.compare(a[0], b[0]));
        int var1 = 1;
        int prev = points[0][1];
        for (int i = 1; i < points.length; i++) {
            //O(N)
            System.out.println(points[i][0] + " - " + points[i][1]);
            if (points[i][0] > prev) {
                var1++;
                prev = points[i][1];
            } else
                prev = Math.min(prev, points[i][1]);
        }
        return var1;
    }
}
/**
 * [10,16],[2,8],[1,6],[7,12]
 * [1,6],[2,8],,[7,12],[10,16]
 *
 *  prev =6 arrow =1
 *  i=1 2<6   prev =8
 *  i=2 7<8   prev = 12
 *
 *  Y
 *  |                   p1                 p1
 *  |   p2          p2
 *  | p3          p3
 *  |               p4          p4
 *  |
 *  |
 *   ----------------------------------------  X
 *  0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
 *
 *  1 20
 *  2 8
 *  7 12
 *  10 16
 */
