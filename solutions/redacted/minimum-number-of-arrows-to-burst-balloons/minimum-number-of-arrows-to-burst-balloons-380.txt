class Solution {

    public int method1(int[][] points) {
        //sort based on the first element
        Arrays.sort(points, Comparator.comparingInt(a -> a[0]));
        //make new interval as first element of points array
        int[][] newInterval = new int[2][2];
        newInterval[0][0] = points[0][0];
        newInterval[0][1] = points[0][1];
        int ans = 1;
        for (int i = 1; i < points.length; i++) {
            //check if current elements lies inside the new interval
            // if it lies inside update the new interval
            if (points[i][0] <= newInterval[0][1]) {
                newInterval[0][0] = Math.max(newInterval[0][0], points[i][0]);
                newInterval[0][1] = Math.min(newInterval[0][1], points[i][1]);
            } else {
                //else update the new interval with current point
                //and update the ans by 1
                newInterval[0][0] = points[i][0];
                newInterval[0][1] = points[i][1];
                ans++;
            }
        }
        return ans;
    }
}
