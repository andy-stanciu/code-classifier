class Solution {

    public int method1(int[][] points) {
        quickSort(points, 0, points.length - 1);
        int min = 1;
        int prev = points[0][1];
        for (int i = 1; i < points.length; i++) {
            if (prev > points[i][1])
                prev = points[i][1];
            if (prev < points[i][0]) {
                prev = points[i][1];
                min++;
            }
        }
        return min;
    }

    private void quickSort(int[][] arr, int low, int high) {
        if (low >= high)
            return;
        random(arr, low, high);
        int i = (low - 1);
        for (int j = low; j <= high; j++) if (arr[j][1] < arr[high][1]) {
            swap(arr, j, ++i);
        }
        swap(arr, high, ++i);
        quickSort(arr, low, i - 1);
        quickSort(arr, i + 1, high);
    }

    private void random(int[][] arr, int low, int high) {
        int mid = low + (high - low) / 2;
        swap(arr, mid, high);
    }

    private void swap(int[][] arr, int x, int y) {
        if (x == y)
            return;
        int[] temp = arr[x];
        arr[x] = arr[y];
        arr[y] = temp;
    }
}
