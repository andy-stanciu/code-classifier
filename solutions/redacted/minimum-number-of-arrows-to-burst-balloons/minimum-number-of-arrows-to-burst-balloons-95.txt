class Solution {

    public int method1(int[][] points) {
        if (points.length == 0)
            return 0;
        if (points.length == 1)
            return 1;
        // sort based on second element
        Arrays.sort(points, new Comparator<int[]>() {

            @Override
            public int compare(int[] a, int[] b) {
                return Integer.compare(a[1], b[1]);
            }
        });
        int end = points[0][1];
        // start with at least 1 arrow for 1 balloon.
        int var1 = 1;
        // compare first element with next points with the end position until that point.
        // If it is more, we will need another arrow.
        // update the end to the current point second position.
        for (int i = 1; i < points.length; i++) {
            if (points[i][0] > end) {
                var1++;
                end = points[i][1];
            }
        }
        return var1;
    }
}
