class Solution {

    public int method1(int[][] points) {
        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> a[0] == b[0] ? a[1] - b[1] : a[0] - b[0]);
        for (int i = 0; i < points.length; i++) {
            pq.add(points[i]);
        }
        //stores the range under consideration
        int[] prev = pq.poll();
        int c = 1;
        while (!pq.isEmpty()) {
            int[] temp = pq.poll();
            if (temp[0] <= prev[0] && temp[1] >= prev[0]) {
                prev[1] = Math.min(prev[1], temp[1]);
            } else if (temp[0] > prev[0] && temp[0] <= prev[1]) {
                prev[0] = Math.max(prev[0], temp[0]);
                prev[1] = Math.min(prev[1], temp[1]);
            } else {
                c++;
                prev = temp;
            }
        }
        return c;
    }
}
