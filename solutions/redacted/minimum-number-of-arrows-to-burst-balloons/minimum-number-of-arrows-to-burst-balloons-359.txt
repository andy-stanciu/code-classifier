class Solution {

    public int method1(int[][] points) {
        if (points == null || points.length == 0)
            return 0;
        // Sort the balloons based on their end points
        Arrays.sort(points, (a, b) -> Integer.compare(a[1], b[1]));
        // Initialize the number of arrows required
        int var1 = 1;
        // End point of the first balloon
        int prevEnd = points[0][1];
        // Iterate through the balloons
        for (int i = 1; i < points.length; i++) {
            // If the current balloon\'s start point is after the previous balloon\'s end point
            // then we need another arrow to burst this balloon
            if (points[i][0] > prevEnd) {
                var1++;
                // Update the end point
                prevEnd = points[i][1];
            }
        }
        return var1;
    }
}
