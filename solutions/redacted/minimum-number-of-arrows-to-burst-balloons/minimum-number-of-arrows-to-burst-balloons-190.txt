class Solution {

    /*  1. Sort on the basis of start coordinate
     *  2. Then find the intersection of the intervals 
     *. 3. Return the length.  
     */
    public int method1(int[][] points) {
        // Sort on the basis of start
        Arrays.sort(points, Comparator.comparingInt(a -> a[0]));
        List<List<Integer>> list = new ArrayList<>();
        for (int[] point : points) {
            int start = point[0];
            int end = point[1];
            if (list.isEmpty() || (list.get(list.size() - 1).get(1) < start)) {
                List<Integer> l = new ArrayList<>(Arrays.asList(start, end));
                list.add(l);
            } else {
                int n = list.size() - 1;
                list.get(n).set(0, Math.max(start, list.get(n).get(0)));
                list.get(n).set(1, Math.min(end, list.get(n).get(1)));
            }
        }
        return list.size();
    }
}
