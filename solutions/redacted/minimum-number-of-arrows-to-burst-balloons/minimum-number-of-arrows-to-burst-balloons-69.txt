class Solution {

    public int method1(int[][] points) {
        // To sort our array according
        // to end position of balloons
        Arrays.sort(points, (a, b) -> Integer.compare(a[1], b[1]));
        // Initialize end variable with
        // the end of first balloon
        int end = points[0][1];
        // Initialize arrow with 1
        // minimum one arrow is going to be needed to burst the balloons
        int arrow = 1;
        // Iterate through the entire array of points
        for (int i = 1; i < points.length; i++) {
            // If the start of ith balloon <= end than do nothing
            // because it is overlapping which means
            // same arrow is enough to burst the balloons in the same range
            if (points[i][0] <= end) {
                continue;
            } else // if start of the next balloon >= end of the first balloon
            // then increment the arrow
            {
                // Update the new end
                end = points[i][1];
                arrow++;
            }
        }
        // Return the total count of arrows
        return arrow;
    }
}
