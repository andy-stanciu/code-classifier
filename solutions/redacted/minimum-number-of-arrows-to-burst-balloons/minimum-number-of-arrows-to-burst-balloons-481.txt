class Solution {

    public int method1(int[][] points) {
        // Sort by end coordinate.
        Arrays.sort(points, Comparator.comparingInt(a -> a[1]));
        int var1 = 1;
        int prevEnd = points[0][1];
        for (int i = 1; i < points.length; i++) {
            int currentStart = points[i][0];
            int currentEnd = points[i][1];
            // If the next balloon starts AFTER the current balloon has ended, then we will need an additional arrow since there is now overlap.
            // If there is an overalap, then we want to hold onto the currentEnd value to check if there are any further overlaps.
            if (currentStart > prevEnd) {
                prevEnd = currentEnd;
                var1++;
            }
        }
        return var1;
    }
}
// find number of overlapping intervals
// sort by start coordinate
// go through the list and if the end of 1 is after the start of the next one then overlap happened.
