class Solution {

    public double method1(int[] nums1, int[] nums2) {
        double var1 = 0;
        int len = nums1.length + nums2.length;
        int[] merge = new int[len];
        int left = 0, right = 0, idx = 0;
        while (left < nums1.length && right < nums2.length) {
            if (nums1[left] < nums2[right]) {
                merge[idx] = nums1[left];
                left++;
            } else {
                merge[idx] = nums2[right];
                right++;
            }
            idx++;
        }
        while (left < nums1.length) {
            merge[idx++] = nums1[left++];
        }
        while (right < nums2.length) {
            merge[idx++] = nums2[right++];
        }
        int m1 = 0, m2 = 0;
        if (merge.length % 2 != 0) {
            var1 = merge[merge.length / 2];
        } else {
            int mid = merge.length / 2;
            var1 = (merge[mid - 1] + merge[mid]) / 2.0;
        }
        return var1;
    }
}
