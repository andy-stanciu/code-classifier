class Solution {

    public double method1(int[] a, int[] b) {
        int i = 0, j = 0, k = 0, mid;
        float med = 0;
        int m = a.length;
        int n = b.length;
        int[] res = new int[m + n];
        while ((i < m) && (j < n)) {
            if (a[i] < b[j]) {
                res[k] = a[i];
                i++;
                k++;
            } else if (a[i] > b[j]) {
                res[k] = b[j];
                j++;
                k++;
            } else if (a[i] == b[j]) {
                res[k] = a[i];
                res[k + 1] = b[j];
                k = k + 2;
                i++;
                j++;
            }
        }
        while (i < m) {
            res[k] = a[i];
            k++;
            i++;
        }
        while (j < n) {
            res[k] = b[j];
            k++;
            j++;
        }
        mid = (m + n) / 2;
        if ((m + n) % 2 == 0) {
            med = ((float) (res[mid] + res[mid - 1])) / 2;
        } else if ((m + n) % 2 != 0) {
            return (res[mid]);
        }
        return med;
    }
}
