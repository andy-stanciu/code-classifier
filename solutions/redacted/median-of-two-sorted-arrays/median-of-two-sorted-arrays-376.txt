class Solution {

    public double method1(int[] nums1, int[] nums2) {
        double result;
        int i = 0;
        int j = 0;
        int k = 0;
        int[] nums3 = new int[nums1.length + nums2.length];
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] <= nums2[j]) {
                nums3[k] = nums1[i];
                k++;
                i++;
            } else {
                nums3[k] = nums2[j];
                k++;
                j++;
            }
        }
        while (i < nums1.length) {
            nums3[k] = nums1[i];
            k++;
            i++;
        }
        while (j < nums2.length) {
            nums3[k] = nums2[j];
            k++;
            j++;
        }
        if ((nums3.length) % 2 == 0) {
            result = (nums3[(nums3.length) / 2 - 1] + nums3[(nums3.length) / 2]) / 2.0;
            return result;
        } else if ((nums3.length) % 2 != 0) {
            result = (nums3[nums3.length / 2]);
            return result;
        }
        return -1;
    }
}
