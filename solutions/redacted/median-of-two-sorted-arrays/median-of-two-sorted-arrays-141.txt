class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int l1 = nums1.length;
        int l2 = nums2.length;
        int[] nums3 = new int[l1 + l2];
        //counter i for nums1 and counter j for nums2 and counter k for nums3
        int i = 0, j = 0, k = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] < nums2[j]) {
                nums3[k] = nums1[i];
                i++;
            } else {
                nums3[k] = nums2[j];
                j++;
            }
            k++;
        }
        while (i < nums1.length) {
            nums3[k] = nums1[i];
            i++;
            k++;
        }
        while (j < nums2.length) {
            nums3[k] = nums2[j];
            j++;
            k++;
        }
        double var1;
        int l3 = nums3.length;
        if (l3 % 2 == 1)
            var1 = nums3[l3 / 2];
        else
            var1 = (nums3[l3 / 2] + nums3[(l3 / 2) - 1]) / 2.00;
        return var1;
    }
}
