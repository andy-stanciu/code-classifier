class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int[] arr = new int[nums1.length + nums2.length];
        int low1 = 0;
        int low2 = 0;
        int i = 0;
        while (low1 < nums1.length && low2 < nums2.length) {
            if (nums1[low1] <= nums2[low2]) {
                arr[i] = nums1[low1];
                low1++;
            } else {
                arr[i] = nums2[low2];
                low2++;
            }
            i++;
        }
        if (low1 < nums1.length) {
            for (int k = low1; k < nums1.length; k++) {
                arr[i] = nums1[k];
                i++;
            }
        }
        if (low2 < nums2.length) {
            for (int k = low2; k < nums2.length; k++) {
                arr[i] = nums2[k];
                i++;
            }
        }
        int n = arr.length;
        return n % 2 == 0 ? (arr[n / 2] + arr[(n / 2) - 1]) / 2.0 : arr[n / 2];
    }
}
