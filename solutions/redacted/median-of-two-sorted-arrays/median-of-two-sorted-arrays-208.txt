class Solution {

    public double method1(int[] nums1, int[] nums2) {
        //optimised
        int l1 = nums1.length;
        int l2 = nums2.length;
        int ptr1 = 0;
        int ptr2 = 0;
        int med1 = 0;
        int med2 = 0;
        double var1 = 0;
        int newlen = l2 + l1;
        for (int i = 0; i < l1 + l2; i++) {
            int small = 0;
            if (ptr1 < l1 && ptr2 < l2) {
                if (nums1[ptr1] < nums2[ptr2]) {
                    small = nums1[ptr1];
                    ptr1++;
                } else {
                    small = nums2[ptr2];
                    ptr2++;
                }
            } else {
                if (ptr1 < l1) {
                    small = nums1[ptr1];
                    ptr1++;
                } else {
                    small = nums2[ptr2];
                    ptr2++;
                }
            }
            if (i == newlen / 2) {
                med1 = small;
            }
            if (i == (newlen / 2) - 1) {
                med2 = small;
            }
        }
        if ((newlen) % 2 == 0) {
            var1 = (med1 + med2) / 2.0;
        } else {
            var1 = med1;
        }
        return var1;
    }
}
