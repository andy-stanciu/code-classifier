class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int m = nums1.length, n = nums2.length;
        // create a new array to store all the elements in a sorted order
        long[] res = new long[n + m];
        int i = 0, j = 0, k = 0;
        while (i < m && j < n) {
            if (nums1[i] < nums2[j]) {
                // comapare the two values in the arrays and insert it into a new array in ascending order
                res[k] = nums1[i];
                i++;
                k++;
            } else {
                res[k] = nums2[j];
                j++;
                k++;
            }
        }
        while (i < m) {
            // insert the remaning elements in nums1 to res
            res[k] = nums1[i];
            i++;
            k++;
        }
        while (j < n) {
            // insert the remaning elements in nums2 to res
            res[k] = nums2[j];
            j++;
            k++;
        }
        if ((m + n) % 2 != 0)
            return res[(m + n) / 2];
        else {
            double ans = res[(m + n) / 2] + res[(m + n) / 2 - 1];
            return (ans / 2);
        }
    }
}
