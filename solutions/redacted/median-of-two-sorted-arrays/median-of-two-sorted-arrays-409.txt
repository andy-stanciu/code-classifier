class Solution {

    public double method1(int[] a, int n) {
        int idx = (n - 1) / 2;
        double mid;
        if (n % 2 == 0)
            mid = (a[idx] + a[idx + 1]) / 2.0;
        else
            mid = a[idx];
        return mid;
    }

    public double merge(int[] arr1, int[] arr2) {
        int i = 0, j = 0, k = 0;
        int n1 = arr1.length;
        int n2 = arr2.length;
        int[] res = new int[n1 + n2];
        while (i < n1 && j < n2) {
            if (arr1[i] < arr2[j])
                res[k++] = arr1[i++];
            else
                res[k++] = arr2[j++];
        }
        while (i < n1) res[k++] = arr1[i++];
        while (j < n2) res[k++] = arr2[j++];
        double mid = method1(res, n1 + n2);
        return mid;
    }

    public double method2(int[] nums1, int[] nums2) {
        double res = merge(nums1, nums2);
        return res;
    }
}
