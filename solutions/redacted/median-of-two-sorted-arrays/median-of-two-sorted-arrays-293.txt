class Solution {

    public double method1(int[] nums1, int[] nums2) {
        boolean even = false;
        int x = nums1.length + nums2.length;
        int[] mergedArray = new int[x];
        int i = 0;
        int j = 0;
        int k = 0;
        if (x % 2 == 0) {
            even = true;
        }
        for (; i < nums1.length && j < nums2.length; k++) {
            if (nums1[i] <= nums2[j]) {
                mergedArray[k] = nums1[i];
                i++;
            } else {
                mergedArray[k] = nums2[j];
                j++;
            }
        }
        while (i < nums1.length) {
            mergedArray[k] = nums1[i];
            i++;
            k++;
        }
        while (j < nums2.length) {
            mergedArray[k] = nums2[j];
            j++;
            k++;
        }
        if (even) {
            return (double) (mergedArray[x / 2 - 1] + mergedArray[x / 2]) * 0.5;
        } else {
            return (double) (mergedArray[x / 2]);
        }
    }
}
