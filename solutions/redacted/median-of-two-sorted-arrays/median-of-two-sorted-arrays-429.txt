class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int n = nums1.length;
        int m = nums2.length;
        // combined array
        int[] merged = new int[n + m];
        int k = 0;
        // storing the elements of both array into a single array
        for (int i = 0; i < nums1.length; i++) {
            merged[k++] = nums1[i];
        }
        for (int i = 0; i < nums2.length; i++) {
            merged[k++] = nums2[i];
        }
        // sorting merged array
        Arrays.sort(merged);
        // counting length of merged array
        int total = merged.length;
        // if array containes even number of elements then return
        // element present at mid index
        if (merged.length % 2 == 1) {
            return (double) merged[total / 2];
        } else // else return avg of mid element and mid-1 index element
        {
            int med1 = merged[total / 2 - 1];
            int med2 = merged[total / 2];
            return (double) ((med1 + med2) / 2.0);
        }
    }
}
