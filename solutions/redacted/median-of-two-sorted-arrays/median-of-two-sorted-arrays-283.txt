class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int[] mergedArray = new int[nums1.length + nums2.length];
        var p1 = 0;
        var p2 = 0;
        var m = 0;
        double var1 = 0;
        while (m < mergedArray.length) {
            int i1 = p1 < nums1.length ? nums1[p1] : Integer.MAX_VALUE;
            int i2 = p2 < nums2.length ? nums2[p2] : Integer.MAX_VALUE;
            // choose the value to put into array and move forward correct pointer
            int mergeItem;
            if (i1 < i2) {
                mergeItem = i1;
                p1++;
            } else {
                mergeItem = i2;
                p2++;
            }
            if (mergedArray.length % 2 == 0 && m == mergedArray.length / 2) {
                var1 = (double) (mergedArray[mergedArray.length / 2 - 1] + mergeItem) / 2;
                break;
            } else if (mergedArray.length % 2 != 0 && m == mergedArray.length / 2) {
                var1 = mergeItem;
                break;
            }
            mergedArray[m] = mergeItem;
            m++;
        }
        return var1;
    }
}
