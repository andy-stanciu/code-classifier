class Solution {

    public static void merge(int[] nums1, int[] nums2, int[] nums) {
        int i = 0;
        int j = 0;
        int k = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] < nums2[j]) {
                nums[k] = nums1[i];
                i++;
            } else {
                nums[k] = nums2[j];
                j++;
            }
            k++;
        }
        while (i < nums1.length) {
            nums[k] = nums1[i];
            k++;
            i++;
        }
        while (j < nums2.length) {
            nums[k] = nums2[j];
            k++;
            j++;
        }
    }

    public double method1(int[] nums1, int[] nums2) {
        int[] nums = new int[nums1.length + nums2.length];
        merge(nums1, nums2, nums);
        if (nums.length % 2 == 0) {
            int a = nums[(nums.length - 1) / 2];
            int b = nums[((nums.length - 1) / 2) + 1];
            return (double) (a + b) / 2;
        } else {
            return (double) nums[nums.length / 2];
        }
    }
}
