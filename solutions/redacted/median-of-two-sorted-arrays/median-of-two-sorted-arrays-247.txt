class Solution {

    public double method1(int[] first, int[] second) {
        int[] mix = new int[first.length + second.length];
        // pointer for first array
        int i = 0;
        // pointer for second array
        int j = 0;
        // pointer for new (mix) array
        int k = 0;
        while (i < first.length && j < second.length) {
            if (first[i] < second[j]) {
                mix[k] = first[i];
                i++;
            } else {
                mix[k] = second[j];
                j++;
            }
            k++;
        }
        // it may be complete possible that one of the array me not be complete
        // copy the remaining elements
        while (i < first.length) {
            mix[k] = first[i];
            i++;
            k++;
        }
        while (j < second.length) {
            mix[k] = second[j];
            j++;
            k++;
        }
        int n = mix.length;
        if (n % 2 == 0) {
            return (double) (mix[n / 2] + mix[((n - 2) / 2)]) / 2;
        } else {
            return mix[n / 2];
        }
    }
}
