class Solution {

    public double method1(int[] nums1, int[] nums2) {
        //  to keep track of hypothetical merged array - index
        int index = 0;
        int n = nums1.length;
        int m = nums2.length;
        // total length of array
        int sum = n + m;
        // to keep track of both array
        int ind1 = 0;
        int ind2 = 0;
        // in case of even count we need two numbers - median = (n1+n2)/2
        int curr = 0;
        int last = 0;
        while (index <= sum / 2) {
            last = curr;
            if (ind1 < n && ind2 < m) {
                if (nums1[ind1] < nums2[ind2]) {
                    curr = nums1[ind1];
                    ind1++;
                    index++;
                } else {
                    curr = nums2[ind2];
                    ind2++;
                    index++;
                }
            } else if (ind1 < n) {
                curr = nums1[ind1];
                ind1++;
                index++;
            } else {
                curr = nums2[ind2];
                ind2++;
                index++;
            }
        }
        if (sum % 2 == 0) {
            return ((double) last + curr) / 2;
        } else {
            return (double) curr;
        }
    }
}
