class Solution {

    public double method1(int[] nums1, int[] nums2) {
        int i = 0, j = 0, k = 0;
        int[] mergedArray = new int[nums1.length + nums2.length];
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] < nums2[j]) {
                mergedArray[k++] = nums1[i++];
            } else {
                mergedArray[k++] = nums2[j++];
            }
        }
        while (i < nums1.length) {
            mergedArray[k++] = nums1[i++];
        }
        while (j < nums2.length) {
            mergedArray[k++] = nums2[j++];
        }
        int mergedArrayLength = mergedArray.length;
        if (mergedArrayLength % 2 == 1) {
            return mergedArray[mergedArrayLength / 2];
        } else {
            int mid1 = mergedArrayLength / 2;
            int mid2 = mid1 - 1;
            return (mergedArray[mid1] + mergedArray[mid2]) / 2.0;
        }
    }
}
