/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> method1(TreeNode root) {
        List<Integer> list = new ArrayList();
        //inorder(list, root);
        method2(list, root);
        return list;
    }

    /*
    public void inorder(List<Integer> list, TreeNode root){
        if(root == null){
            return;
        }
        if(root.left != null){           
            inorder(list, root.left);
        }
        list.add(root.val);
        if(root.right != null){            
            inorder(list, root.right);
        }

    }
    */
    public void method2(List<Integer> list, TreeNode root) {
        if (root == null)
            return;
        Stack<TreeNode> st = new Stack();
        st.push(root);
        while (!st.isEmpty()) {
            if (root.left != null) {
                st.push(root.left);
                root = root.left;
            } else {
                TreeNode node = st.pop();
                list.add(node.val);
                if (node.right != null) {
                    st.push(node.right);
                    root = node.right;
                }
            }
        }
    }
}
