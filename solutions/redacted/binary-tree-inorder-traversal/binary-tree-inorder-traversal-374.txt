/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> method1(TreeNode root) {
        /**
         * Iterative Inorder tree traversal
         */
        Stack<TreeNode> stack = new Stack<>();
        ArrayList<Integer> in = new ArrayList<Integer>();
        if (root == null)
            return new ArrayList<Integer>();
        TreeNode curr = root;
        while (curr != null) {
            while (curr != null) {
                stack.push(curr);
                curr = curr.left;
            }
            while (curr == null && !stack.empty()) {
                curr = stack.pop();
                in.add(curr.val);
                curr = curr.right;
            }
        }
        return in;
    }
}
