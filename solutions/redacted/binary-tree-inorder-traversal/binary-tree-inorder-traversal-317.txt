/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> method1(TreeNode root) {
        // creaete empty list
        List<Integer> list = new ArrayList<>();
        // if root is empty return empty list
        if (root == null) {
            return list;
        }
        //Inorder means left-visit-right
        //first go to left side of tree
        list.addAll(method1(root.left));
        //then visit the node
        list.add(root.val);
        //then go to right side of tree
        list.addAll(method1(root.right));
        return list;
    }
}
