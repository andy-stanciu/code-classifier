/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    // public static void inOrder(TreeNode n ,List<Integer> temp) {
    //     if (n == null)
    //         return;
    //     inOrder(n.left , temp);
    //     temp.add(n.val);
    //     inOrder(n.right , temp);
    // }
    public List<Integer> method1(TreeNode root) {
        Stack<TreeNode> st = new Stack<>();
        List<Integer> ans = new ArrayList<>();
        if (root == null)
            return ans;
        TreeNode temp = root;
        while (true) {
            if (temp != null) {
                st.push(temp);
                temp = temp.left;
            } else {
                if (st.isEmpty())
                    break;
                temp = st.pop();
                ans.add(temp.val);
                temp = temp.right;
            }
        }
        return ans;
    }
}
