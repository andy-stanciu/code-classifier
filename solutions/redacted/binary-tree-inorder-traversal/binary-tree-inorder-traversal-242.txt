/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public List<Integer> method1(TreeNode root) {
        Stack<TreeNode> s = new Stack<>();
        List<Integer> output = new ArrayList<>();
        TreeNode currentNode = root;
        while (currentNode != null || !s.isEmpty()) {
            while (currentNode != null) {
                s.add(currentNode);
                currentNode = currentNode.left;
            }
            currentNode = s.pop();
            output.add(currentNode.val);
            currentNode = currentNode.right;
        }
        return output;
    }
}
