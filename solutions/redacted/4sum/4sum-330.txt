class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        Set<List<Integer>> set = new HashSet<>();
        List<List<Integer>> result = new ArrayList<>();
        int a = 0;
        while (a <= nums.length - 4) {
            if (a > 0 && nums[a] == nums[a - 1]) {
                a++;
            } else {
                int b = nums.length - 1;
                while (a <= b - 3) {
                    long twoSum = (long) nums[a] + nums[b];
                    if (twoSum > target && nums[a + 1] >= 0) {
                        b--;
                    } else {
                        long subTarget = target - twoSum;
                        int i = a + 1;
                        int j = b - 1;
                        while (i < j) {
                            long subSum = (long) nums[i] + nums[j];
                            if (subSum == subTarget) {
                                set.add(Arrays.asList(nums[a], nums[i], nums[j], nums[b]));
                                i++;
                                j--;
                            } else {
                                if (subSum > subTarget) {
                                    j--;
                                } else {
                                    i++;
                                }
                            }
                        }
                        b--;
                    }
                }
                a++;
            }
        }
        result.addAll(set);
        return result;
    }
}
