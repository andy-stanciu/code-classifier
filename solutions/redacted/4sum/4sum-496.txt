class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums);
        int a = 0;
        while (a < nums.length - 3) {
            if (target <= 0 && nums[a] > 0 || target > 0 && nums[a] > target)
                break;
            int b = a + 1;
            while (b < nums.length - 2) {
                if (target <= 0 && nums[a] + nums[b] > 0 || nums[a] + nums[b] > target && target > 0)
                    break;
                int c = b + 1;
                int d = nums.length - 1;
                while (c < d) {
                    int sum = nums[a] + nums[b] + nums[c] + nums[d];
                    if (sum == target) {
                        res.add(Arrays.asList(nums[a], nums[b], nums[c], nums[d]));
                        while (c < d && nums[d--] == nums[d - 1]) {
                        }
                        while (++c < d && nums[c] == nums[c - 1]) {
                        }
                    } else if (sum > target) {
                        d--;
                    } else {
                        c++;
                    }
                }
                while (++b < nums.length && nums[b] == nums[b - 1]) {
                }
            }
            while (++a < nums.length && nums[a] == nums[a - 1]) {
            }
        }
        return res;
    }
}
