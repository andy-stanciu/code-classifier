class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> list = new ArrayList<>();
        if (nums.length < 4) {
            return list;
        }
        for (int i = 0; i < nums.length - 3; i++) {
            for (int j = i + 1; j < nums.length - 2; j++) {
                int k = j + 1;
                int l = nums.length - 1;
                while (k < l) {
                    long sum = (long) nums[i] + nums[j] + nums[k] + nums[l];
                    if (sum > target) {
                        while (k < l && nums[l] == nums[l - 1]) l--;
                        l--;
                    } else if (sum < target) {
                        while (k < l && nums[k] == nums[k + 1]) k++;
                        k++;
                    } else if (sum == target) {
                        List<Integer> innerList = new ArrayList<>();
                        innerList.add(nums[i]);
                        innerList.add(nums[j]);
                        innerList.add(nums[k]);
                        innerList.add(nums[l]);
                        list.add(innerList);
                        while (k < l && nums[k] == nums[k + 1]) k++;
                        k++;
                        while (k < l && nums[l] == nums[l - 1]) l--;
                        l--;
                    }
                }
                while (nums[j] == nums[j + 1] && j < nums.length - 2) j++;
            }
            while (nums[i] == nums[i + 1] && i < nums.length - 3) i++;
        }
        return list;
    }
}
