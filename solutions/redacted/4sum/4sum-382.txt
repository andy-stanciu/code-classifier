class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> ll = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++) {
            for (int j = i + 1; j < nums.length - 2; j++) {
                int k = j + 1;
                int l = nums.length - 1;
                while (l > k) {
                    long sum = (long) nums[i] + nums[j] + nums[k] + nums[l];
                    if (sum == target) {
                        List<Integer> li = new ArrayList<>();
                        li.add(nums[i]);
                        li.add(nums[j]);
                        li.add(nums[k]);
                        li.add(nums[l]);
                        if (!ll.contains(li)) {
                            ll.add(li);
                        }
                        while (l > k && nums[l] == nums[l - 1]) l--;
                        while (l > k && nums[k] == nums[k + 1]) k++;
                        l--;
                        k++;
                    }
                    if (sum > target) {
                        l--;
                    }
                    if (target > sum) {
                        k++;
                    }
                }
            }
        }
        return ll;
    }
}
