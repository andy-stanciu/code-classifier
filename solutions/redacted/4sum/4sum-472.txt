class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList<>();
        long sum = 0;
        for (int i = 0; i < nums.length - 3; i++) {
            if (i == 0 || nums[i] != nums[i - 1]) {
                for (int j = i + 1; j < nums.length - 2; j++) {
                    sum = (long) target - nums[j] - nums[i];
                    int low = j + 1;
                    int high = nums.length - 1;
                    while (low < high) {
                        if ((long) (nums[low] + nums[high]) == sum) {
                            result.add(List.of(nums[i], nums[j], nums[low], nums[high]));
                            while (low < high && nums[low] == nums[low + 1]) {
                                low++;
                            }
                            while (low < high && nums[high] == nums[high - 1]) {
                                high--;
                            }
                            low++;
                            high--;
                        } else if (nums[low] + nums[high] < sum) {
                            low++;
                        } else {
                            high--;
                        }
                    }
                    while (j < nums.length - 2 && nums[j] == nums[j + 1]) {
                        j++;
                    }
                }
            }
            while (i < nums.length - 3 && nums[i] == nums[i + 1]) {
                i++;
            }
        }
        return result;
    }
}
