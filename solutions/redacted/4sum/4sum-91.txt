class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        Set<List<Integer>> ans = new HashSet<>();
        for (int i = 0; i < nums.length; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                int k = j + 1;
                int l = nums.length - 1;
                List<Integer> tempAns;
                while (k < l) {
                    long sum = (long) nums[i] + (long) nums[j] + (long) nums[k] + (long) nums[l];
                    if (sum > Integer.MAX_VALUE)
                        break;
                    if ((int) sum == target) {
                        tempAns = new ArrayList<>();
                        tempAns.add(nums[i]);
                        tempAns.add(nums[j]);
                        tempAns.add(nums[k]);
                        tempAns.add(nums[l]);
                        ans.add(tempAns);
                        k++;
                    } else if (sum < target) {
                        k++;
                    } else {
                        l--;
                    }
                }
            }
        }
        List<List<Integer>> finalList = new ArrayList<>(ans);
        return finalList;
    }
}
