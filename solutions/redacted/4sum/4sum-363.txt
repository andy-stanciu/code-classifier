class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        int n = nums.length;
        Arrays.sort(nums);
        List<List<Integer>> res = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            if (i > 0 && nums[i - 1] == nums[i])
                continue;
            List<Integer> temp = new ArrayList<>();
            for (int j = i + 1; j < n; j++) {
                if (j > i + 1 && nums[j - 1] == nums[j])
                    continue;
                int a = nums[i];
                int b = nums[j];
                int st = j + 1;
                int ed = n - 1;
                while (st < ed) {
                    long sum = (long) a + (long) b + (long) nums[st] + (long) nums[ed];
                    if (sum == (long) target) {
                        temp.add(a);
                        temp.add(b);
                        temp.add(nums[st]);
                        temp.add(nums[ed]);
                        res.add(temp);
                        temp = new ArrayList<>();
                    }
                    if (sum > (long) target) {
                        ed--;
                        while (st < ed && nums[ed] == nums[ed + 1]) {
                            ed--;
                        }
                    } else {
                        st++;
                        while (st < ed && nums[st - 1] == nums[st]) {
                            st++;
                        }
                    }
                }
            }
        }
        return res;
    }
}
