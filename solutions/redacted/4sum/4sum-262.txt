class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> res = new ArrayList<>();
        for (int i = 0; i < nums.length; i++) {
            if (i != 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j < nums.length; j++) {
                if (j != i + 1 && nums[j] == nums[j - 1])
                    continue;
                long twoSum = nums[i] + nums[j];
                int aPointer = j + 1;
                int bPointer = nums.length - 1;
                while (aPointer < bPointer) {
                    if ((twoSum + nums[aPointer] + nums[bPointer]) == target) {
                        List<Integer> innerList = new ArrayList<>(List.of(nums[i], nums[j], nums[aPointer], nums[bPointer]));
                        res.add(innerList);
                        aPointer += 1;
                        while (aPointer < bPointer && nums[aPointer - 1] == nums[aPointer]) aPointer += 1;
                        while (aPointer > bPointer && nums[bPointer] == nums[bPointer + 1]) bPointer -= 1;
                    } else if ((twoSum + nums[aPointer] + nums[bPointer]) > target) {
                        bPointer -= 1;
                    } else {
                        aPointer += 1;
                    }
                }
            }
        }
        return res;
    }
}
