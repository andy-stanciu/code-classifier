class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> bl = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++) {
            //Check duplicates for the first element
            if (i > 0 && nums[i] == nums[i - 1])
                continue;
            for (int j = i + 1; j < nums.length - 2; j++) {
                //Check duplicates for the last element
                if (j > i + 1 && nums[j] == nums[j - 1])
                    continue;
                int k = j + 1;
                int l = nums.length - 1;
                while (k < l) {
                    long sum = (long) nums[i] + nums[j] + nums[k] + nums[l];
                    if (sum == target) {
                        List<Integer> sl = List.of(nums[i], nums[j], nums[k], nums[l]);
                        bl.add(sl);
                        //Check duplicates of k
                        while (k < l && nums[k] == nums[k + 1]) k++;
                        //Check duplicates of l
                        while (k < l && nums[l] == nums[l - 1]) l--;
                        k++;
                        l--;
                    } else if (sum < target)
                        k++;
                    else
                        l--;
                }
            }
        }
        return bl;
    }
}
