class Solution {

    public List<List<Integer>> fourSum(int[] nums, int target) {
        int n = nums.length;
        //sort the array
        Arrays.sort(nums);
        //store all the ans
        List<List<Integer>> a = new ArrayList<>();
        for (int i = 0; i < nums.length; i++) {
            //if its not first element and prev and next are same then ski[p becuase no dupilcate]
            if (i > 0 && nums[i - 1] == nums[i])
                continue;
            //same fro j
            for (int j = i + 1; j < nums.length; j++) {
                if (j > i + 1 && nums[j - 1] == nums[j])
                    continue;
                //keep k and l move
                int k = j + 1;
                int l = n - 1;
                while (k < l) {
                    //add the sum (make sure that it should not rcross the integer limit)
                    long sum = nums[i];
                    sum += nums[j];
                    sum += nums[k];
                    sum += nums[l];
                    //when its target addthe set
                    if (sum == target) {
                        List<Integer> temp = new ArrayList<>();
                        temp.add(nums[i]);
                        temp.add(nums[j]);
                        temp.add(nums[k]);
                        temp.add(nums[l]);
                        a.add(temp);
                        k++;
                        l--;
                        //check for duplictes on right side
                        while (k < l && nums[k] == nums[k - 1]) k++;
                        while (k < l && nums[l] == nums[l + 1]) l--;
                    } else //more meand need to decreaseas array is sorted
                    if (sum > target)
                        l--;
                    else
                        k++;
                }
            }
        }
        return a;
    }
}
