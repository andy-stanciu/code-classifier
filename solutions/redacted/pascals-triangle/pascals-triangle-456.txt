class Solution {

    public List<List<Integer>> generate(int n) {
        Queue<Integer> queue = new LinkedList<>();
        queue.add(1);
        List<List<Integer>> res = new ArrayList<>();
        while (!queue.isEmpty()) {
            List<Integer> ans = new ArrayList<>();
            List<Integer> row = new ArrayList<>();
            row.add(1);
            int j = 0;
            int sum = 0;
            while (!queue.isEmpty()) {
                int top = queue.poll();
                ans.add(top);
                sum = sum + top;
                j++;
                if (j == 2) {
                    row.add(sum);
                    j--;
                    sum = top;
                }
            }
            res.add(ans);
            row.add(1);
            for (int data : row) queue.add(data);
            n--;
            if (n == 0)
                break;
        }
        return res;
    }
}
