class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> list = new ArrayList<>();
        list.add(Arrays.asList(1));
        for (int j = 2; j <= numRows; j++) {
            List<Integer> tempList = new ArrayList<>();
            ////for first element in the temporary List eg(1,.....)
            tempList.add(0, 1);
            int i = 1;
            while (i != j - 1) {
                //for finding the current element it will always be the sum of
                //current index that is i + i-1
                //reason for (j-2) is think it as a level ---so for 4 th level we need to go to 3rd level list.get(4-1) but
                //as it is 0 based indexing we need to subtract 1 once again.
                // { {1}<0 index, level one >   ,{1,1} <1 index, level 2>,{1,2,1} <2 index, level 3}
                tempList.add(i, list.get(j - 2).get(i) + list.get(j - 2).get(i - 1));
                i++;
            }
            ////for adding last element 1 in the temporary List eg(1,.....,1)
            tempList.add(j - 1, 1);
            list.add(tempList);
        }
        return list;
    }
}
