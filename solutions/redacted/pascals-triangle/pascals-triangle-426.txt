class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> answer = new ArrayList();
        // initial value as 1
        List<Integer> list = new ArrayList();
        list.add(1);
        answer.add(list);
        // how the pascal tree works:
        // 1 3 3 1 0 <- clone prev level
        // 1 3 3 1 1 <- go from behind and add index-1 values, adding 1 to 0
        // 1 3 3 4 1 <- adding 3 to 1 3+1 = 4
        // 1 3 6 4 1 <- adding 3 to 3 3+3 = 6
        // 1 4 6 4 1 <- adding 1 to 3 1+3 = 3
        for (int i = 1; i < numRows; i++) {
            List<Integer> prevList = answer.get(i - 1);
            List<Integer> newList = new ArrayList();
            for (int x : prevList) {
                newList.add(x);
            }
            newList.add(1);
            for (int j = prevList.size() - 1; j >= 1; j--) {
                int updateValue = newList.get(j) + newList.get(j - 1);
                newList.set(j, updateValue);
            }
            answer.add(newList);
        }
        return answer;
    }
}
