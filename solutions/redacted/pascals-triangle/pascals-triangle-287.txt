class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> twoDList = new ArrayList<>();
        if (numRows == 1) {
            List<Integer> row = new ArrayList<>();
            row.add(1);
            twoDList.add(row);
            return twoDList;
        } else if (numRows == 2) {
            List<Integer> row1 = new ArrayList<>();
            row1.add(1);
            twoDList.add(row1);
            List<Integer> row2 = new ArrayList<>();
            row2.add(1);
            row2.add(1);
            twoDList.add(row2);
            return twoDList;
        } else {
            List<Integer> row1 = new ArrayList<>();
            row1.add(1);
            twoDList.add(row1);
            List<Integer> row2 = new ArrayList<>();
            row2.add(1);
            row2.add(1);
            twoDList.add(row2);
            for (int i = 2; i < numRows; i++) {
                List<Integer> row = new ArrayList<>();
                List<Integer> prev_row = new ArrayList<>();
                prev_row = twoDList.get(i - 1);
                row.add(1);
                for (int j = 0; j < prev_row.size() - 1; j++) {
                    row.add(prev_row.get(j) + prev_row.get(j + 1));
                }
                row.add(1);
                twoDList.add(row);
            }
        }
        return twoDList;
    }
}
