class Solution {

    public List<List<Integer>> generate(int numRows) {
        //[[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
        //   [[1]
        //,  [1,1]
        //, [1,2,1]
        //  [1,3,3,1]
        //,[1,4,6,4,1]]
        //number of elements: 1*n
        //n != 0 prev[n-1] +prev[n]
        //bounding values == 1
        List<List<Integer>> result = new ArrayList<>();
        int n = numRows;
        List<Integer> firstRow = new ArrayList<>();
        firstRow.add(1);
        result.add(firstRow);
        for (int i = 1; i <= n - 1; i++) {
            List<Integer> row = new ArrayList<>();
            int numberOfELs = n;
            for (int j = 1; j <= i + 1; j++) {
                if (j != 1 && j != i + 1) {
                    Integer nth = result.get(i - 1).get(j - 1);
                    Integer nthm = result.get(i - 1).get(j - 2);
                    row.add(nth + nthm);
                } else {
                    row.add(1);
                }
            }
            result.add(row);
        }
        return result;
    }
}
