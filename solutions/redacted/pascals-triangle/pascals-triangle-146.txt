class Solution {

    public List<List<Integer>> generate(int n) {
        List<List<Integer>> ans = new ArrayList<>();
        int c = 1;
        for (int i = 0; i < n; i++) {
            // for (int sp = 0; sp <=2*(n-i) ; sp++) {
            //     System.out.print(" ");
            // }
            List<Integer> tem = new ArrayList<>();
            for (int col = 0; col <= i; col++) {
                if (col == 0 || i == 0) {
                    c = 1;
                } else {
                    c = c * (i - col + 1) / col;
                }
                tem.add(c);
            }
            ans.add(tem);
        }
        return ans;
    }
    // the pattern of the following
    /*
static void pattern(int n){
        int c=1;
        for (int i = 0; i < n; i++) {
            for (int sp = 0; sp <=2*(n-i) ; sp++) {
                System.out.print(" ");
            }
            for (int col = 0; col <=i ; col++) {
                if(col==0||i==0){
                    c=1;
                }else{
                    c=c*(i-col+1)/col;
                }
                System.out.print(c +"   ");
            }
            System.out.println();
        }
    }
*/
}
