/*class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> finalOutput = new ArrayList<List<Integer>>();
        if(numRows<=0){
            return finalOutput;
        }
        ArrayList<Integer> prev = new ArrayList<Integer>();
        prev.add(1);
        finalOutput.add(prev);
        for(int i=1;i<numRows;i++){
            ArrayList<Integer> curr = new ArrayList<>();
            curr.add(1);
            for(int j=0;j<prev.size()-1;j++){
                curr.add(prev.get(j)+prev.get(j+1));
            }
            curr.add(1);
            finalOutput.add(curr);
            prev=curr;
        }
        return finalOutput;
    }
}*/
public class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> finalList = new ArrayList<List<Integer>>();
        ArrayList<Integer> insideList = new ArrayList<Integer>();
        if (numRows <= 0) {
            return finalList;
        }
        insideList.add(1);
        finalList.add(insideList);
        for (int i = 1; i < numRows; i++) {
            ArrayList<Integer> currentList = new ArrayList<Integer>();
            currentList.add(1);
            for (int j = 0; j < insideList.size() - 1; j++) {
                currentList.add(insideList.get(j) + insideList.get(j + 1));
            }
            currentList.add(1);
            finalList.add(currentList);
            insideList = currentList;
        }
        return finalList;
    }
}
