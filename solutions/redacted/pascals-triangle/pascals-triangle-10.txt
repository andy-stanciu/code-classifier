class Solution {

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> var1 = new ArrayList<>();
        var1.add(List.of(1));
        return generate(var1, numRows);
    }

    private List<List<Integer>> generate(List<List<Integer>> result, int deep) {
        if (deep == 1)
            return result;
        var oldRow = getLastRow(result);
        var newRow = new ArrayList<Integer>(oldRow.size() + 1);
        result.add(newRow);
        int i = 1;
        newRow.add(1);
        while (i < oldRow.size()) {
            newRow.add(oldRow.get(i - 1) + oldRow.get(i));
            i++;
        }
        newRow.add(1);
        return generate(result, deep - 1);
    }

    private List<Integer> getLastRow(List<List<Integer>> var1) {
        return var1.get(var1.size() - 1);
    }
}
