class Solution {

    public List<List<Integer>> generate(int numRows) {
        //List of List
        List<List<Integer>> var1 = new ArrayList<>();
        //Inner List:
        List<Integer> firstRow = new ArrayList<>();
        //adding 1st row as 1
        firstRow.add(1);
        var1.add(firstRow);
        //Further rows:
        for (int i = 1; i < numRows; i++) {
            //taking current and previous rows:
            List<Integer> prevRow = var1.get(i - 1);
            List<Integer> currRow = new ArrayList<>();
            //adding 1st element in a row as 1
            currRow.add(1);
            //Handling mid elements with a condition and generic formula
            for (int j = 1; j < i; j++) {
                currRow.add(prevRow.get(j - 1) + prevRow.get(j));
            }
            //adding last element in a row as 1
            currRow.add(1);
            //adding whole list in the outer list:
            var1.add(currRow);
        }
        //returning list of list
        return var1;
    }
}
