class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(candidates);
        solve(0, candidates, target, result, new ArrayList<>());
        return result;
    }

    private void solve(int ind, int[] can, int tar, List<List<Integer>> res, List<Integer> ds) {
        // n = index
        if (tar == 0) {
            res.add(new ArrayList<>(ds));
            return;
        }
        for (int i = ind; i < can.length; i++) {
            if (i > ind && can[i] == can[i - 1])
                continue;
            if (can[i] > tar)
                break;
            ds.add(can[i]);
            solve(i + 1, can, tar - can[i], res, ds);
            ds.remove(ds.size() - 1);
        }
    }
}
