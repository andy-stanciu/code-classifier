class Solution {

    public void Backtrack(List<List<Integer>> result, List<Integer> temp, int[] candidates, int target, int start) {
        if (target < 0) {
            return;
        } else if (target == 0) {
            result.add(new ArrayList<>(temp));
        }
        for (int i = start; i < candidates.length; i++) {
            if (i > start && candidates[i] == candidates[i - 1]) {
                continue;
            }
            temp.add(candidates[i]);
            Backtrack(result, temp, candidates, target - candidates[i], i + 1);
            temp.remove(temp.size() - 1);
        }
    }

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(candidates);
        Backtrack(result, new ArrayList<Integer>(), candidates, target, 0);
        return result;
    }
}
