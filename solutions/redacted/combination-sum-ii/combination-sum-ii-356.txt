class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        method2(0, 0, candidates.length, candidates, ans, new ArrayList<>(), target);
        return ans;
    }

    void method2(int i, int add, int n, int[] num, List<List<Integer>> ans, List<Integer> temp, int target) {
        if (i >= n) {
            if (add == target) {
                ans.add(new ArrayList<>(temp));
                return;
            } else
                return;
        } else if (add == target) {
            ans.add(new ArrayList<>(temp));
            return;
        } else if (add > target)
            return;
        else if (num[i] > target)
            return;
        temp.add(num[i]);
        add = add + num[i];
        method2(i + 1, add, n, num, ans, temp, target);
        add = add - temp.get(temp.size() - 1);
        temp.remove(temp.size() - 1);
        while (i + 1 < num.length && num[i] == num[i + 1]) i++;
        method2(i + 1, add, n, num, ans, temp, target);
        return;
    }
}
