class Solution {

    public List<List<Integer>> method1(int[] arr, int tar) {
        List<List<Integer>> a = new ArrayList<>();
        Arrays.sort(arr);
        backtrack(arr, tar, 0, new ArrayList<>(), a);
        return a;
    }

    public static void backtrack(int[] arr, int tar, int st, List<Integer> sam, List<List<Integer>> a) {
        if (tar == 0) {
            a.add(new ArrayList<>(sam));
            return;
        }
        for (int i = st; i < arr.length; i++) {
            if (i > st && arr[i] == arr[i - 1]) {
                continue;
            }
            if (arr[i] > tar) {
                break;
            }
            sam.add(arr[i]);
            backtrack(arr, tar - arr[i], i + 1, sam, a);
            sam.remove(sam.size() - 1);
        }
    }
}
