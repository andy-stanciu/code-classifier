class Solution {

    List<List<Integer>> res;

    List<Integer> list;

    int[] candidates;

    public List<List<Integer>> method1(int[] candidates, int target) {
        res = new ArrayList<>();
        list = new ArrayList<>();
        this.candidates = candidates;
        Arrays.sort(this.candidates);
        this.backtrack(target, 0);
        return res;
    }

    private void backtrack(int target, int start) {
        if (target == 0) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int i = start; i < candidates.length; i++) {
            if (i > start && candidates[i] == candidates[i - 1])
                continue;
            if (candidates[i] > target)
                break;
            list.add(candidates[i]);
            backtrack(target - candidates[i], i + 1);
            list.remove(list.size() - 1);
        }
    }
}
