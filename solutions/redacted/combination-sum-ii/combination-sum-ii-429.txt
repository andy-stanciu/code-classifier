class Solution {

    void backtrack(List<List<Integer>> ans, int[] arr, int target, int param1, int start, ArrayList<Integer> temp) {
        if (param1 == target) {
            ans.add(new ArrayList(temp));
            return;
        }
        if (param1 > target)
            return;
        for (int i = start; i < arr.length; i++) {
            temp.add(arr[i]);
            backtrack(ans, arr, target, param1 + arr[i], i + 1, temp);
            temp.remove(temp.size() - 1);
            int curr = arr[i];
            while (i < arr.length && arr[i] == curr) i++;
            i--;
        }
    }

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        backtrack(ans, candidates, target, 0, 0, new ArrayList<>());
        return ans;
    }
}
