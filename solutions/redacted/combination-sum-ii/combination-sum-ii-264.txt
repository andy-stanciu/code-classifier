public class Solution {

    private void method1(int index, List<Integer> candidates, int target, List<List<Integer>> ans, List<Integer> ds) {
        if (target == 0) {
            ans.add(new ArrayList<>(ds));
            return;
        }
        for (int i = index; i < candidates.size(); i++) {
            if (i > index && candidates.get(i).equals(candidates.get(i - 1)))
                continue;
            if (candidates.get(i) > target)
                break;
            ds.add(candidates.get(i));
            method1(i + 1, candidates, target - candidates.get(i), ans, ds);
            ds.remove(ds.size() - 1);
        }
    }

    public List<List<Integer>> method2(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();
        Arrays.sort(candidates);
        List<Integer> candidatesList = new ArrayList<>();
        for (int num : candidates) {
            candidatesList.add(num);
        }
        method1(0, candidatesList, target, ans, ds);
        return ans;
    }
}
