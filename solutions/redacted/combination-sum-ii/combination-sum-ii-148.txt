class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        int[] candidateVals = new int[target + 1];
        for (int candidate : candidates) {
            if (candidate <= target) {
                candidateVals[candidate]++;
            }
        }
        List<List<Integer>> result = new ArrayList<>();
        getTargets(candidateVals, result, new ArrayList<>(), 0, target);
        return result;
    }

    void getTargets(int[] candidateVals, List<List<Integer>> result, List<Integer> current, int start, int target) {
        if (target < 0) {
            return;
        }
        if (target == 0) {
            result.add(current);
            return;
        }
        for (int i = start; i <= target; i++) {
            if (candidateVals[i] > 0) {
                candidateVals[i]--;
                List<Integer> nextCurrent = new ArrayList<>(current);
                nextCurrent.add(i);
                getTargets(candidateVals, result, nextCurrent, i, target - i);
                candidateVals[i]++;
            }
        }
        return;
    }
}
