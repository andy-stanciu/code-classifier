class Solution {

    HashSet<List<Integer>> set = new HashSet();

    List<List<Integer>> ans = new ArrayList();

    public List<List<Integer>> method1(int[] candidates, int target) {
        Arrays.sort(candidates);
        helper(candidates, target, 0, new ArrayList<Integer>(), 0);
        // for(List<Integer> ele : set){
        //     ans.add(ele);
        // }
        return ans;
    }

    public void helper(int[] candidates, int target, int index, List<Integer> list, int param1) {
        if (target < 0) {
            return;
        }
        if (target == 0) {
            ans.add(new ArrayList(list));
        }
        for (int i = index; i < candidates.length; i++) {
            if (i > index && candidates[i] == candidates[i - 1]) {
                continue;
            }
            list.add(candidates[i]);
            helper(candidates, target - candidates[i], i + 1, list, param1);
            list.remove(list.size() - 1);
        }
        // if(sum ==target){
        //     set.add(new ArrayList(list));
        //     return ;
        // }
        // if(sum>target){
        //     return ;
        // }
        //    if(index==candidates.length){
        //     return;
        // }
        // list.add(candidates[index]);
        // helper(candidates, target,index+1,list,sum+candidates[index]);
        // list.remove(list.size()-1);
        //  helper(candidates, target,index+1,list,sum);
    }
}
