class Solution {

    public void solve(int[] a, List<List<Integer>> res, List<Integer> list, int target, int idx, int n) {
        if (idx == n) {
            if (target == 0) {
                res.add(new ArrayList<>(list));
            }
            return;
        }
        if (target == 0) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int i = idx; i < n; i++) {
            if (i > idx && a[i] == a[i - 1])
                continue;
            if (target < a[i])
                break;
            else {
                list.add(a[i]);
                solve(a, res, list, target - a[i], i + 1, n);
                list.remove(list.size() - 1);
            }
        }
    }

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        int n = candidates.length;
        Arrays.sort(candidates);
        solve(candidates, res, list, target, 0, n);
        return res;
    }
}
