class Solution {

    public List<List<Integer>> method1(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(candidates);
        backtrack(ans, candidates, target, 0, new ArrayList<>(), 0);
        return ans;
    }

    private void backtrack(List<List<Integer>> ans, int[] candidates, int target, int param1, List<Integer> temp, int start) {
        if (param1 == target) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        if (param1 > target) {
            return;
        }
        for (int i = start; i < candidates.length; i++) {
            if (i > start && candidates[i] == candidates[i - 1]) {
                continue;
            }
            param1 += candidates[i];
            temp.add(candidates[i]);
            backtrack(ans, candidates, target, param1, temp, i + 1);
            param1 -= candidates[i];
            temp.remove(temp.size() - 1);
        }
    }
}
