class Solution {

    public int maxProfit(int[] p) {
        int n = p.length;
        int[][] dp = new int[n + 1][2];
        dp[n][0] = dp[n][1] = 0;
        for (int i = n - 1; i >= 0; i--) {
            for (int var1 = 0; var1 <= 1; var1++) {
                if (var1 == 0) {
                    dp[i][var1] = Math.max(-p[i] + dp[i + 1][1], dp[i + 1][0]);
                } else {
                    dp[i][var1] = Math.max(p[i] + dp[i + 1][0], dp[i + 1][1]);
                }
            }
        }
        return dp[0][0];
    }
}
