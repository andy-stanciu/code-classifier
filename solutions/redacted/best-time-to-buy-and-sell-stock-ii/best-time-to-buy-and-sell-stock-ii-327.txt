class Solution {

    public int f(int[] arr, int ind, int param1, int n, int[][] dp) {
        if (ind == n)
            return 0;
        if (dp[ind][param1] != -1)
            return dp[ind][param1];
        int profit = 0;
        if (param1 == 0) {
            profit = Math.max(-arr[ind] + f(arr, ind + 1, 1, n, dp), 0 + f(arr, ind + 1, 0, n, dp));
        } else {
            profit = Math.max(arr[ind] + f(arr, ind + 1, 0, n, dp), 0 + f(arr, ind + 1, 1, n, dp));
        }
        return dp[ind][param1] = profit;
    }

    public int maxProfit(int[] prices) {
        int n = prices.length;
        int[][] dp = new int[n][2];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return f(prices, 0, 0, n, dp);
    }
}
