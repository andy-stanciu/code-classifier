class Solution {

    public int maxProfit(int[] prices) {
        int n = prices.length;
        int[] ahead = new int[2];
        int[] curr = new int[2];
        // Base condition: If we have no stocks to buy or sell, profit is 0
        ahead[0] = ahead[1] = 0;
        int profit = 0;
        for (int index = n - 1; index >= 0; index--) {
            for (int var1 = 0; var1 <= 1; var1++) {
                if (var1 == 0) {
                    // We can either skip this day or buy stock
                    profit = Math.max(0 + ahead[0], -prices[index] + ahead[1]);
                } else if (var1 == 1) {
                    // We can either skip this day or sell stock
                    profit = Math.max(0 + ahead[1], prices[index] + ahead[0]);
                }
                // Store the result in dp array and return it
                curr[var1] = profit;
            }
            System.arraycopy(curr, 0, ahead, 0, 2);
        }
        return curr[0];
    }
}
