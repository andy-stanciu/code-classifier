class Solution {

    public int maxProfit(int[] prices) {
        int n = prices.length;
        int[][] dp = new int[n][2];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return function(0, 1, prices, dp);
    }

    public static int function(int index, int choice, int[] prices, int[][] dp) {
        // base case that I dont make any profit as I am the end of the array
        if (index == prices.length) {
            return 0;
        }
        if (dp[index][choice] != -1) {
            return dp[index][choice];
        }
        // i can do 2 things
        // either buy or sell
        // choice == 1 ? buy : sell
        int profit = 0;
        if (choice == 1) {
            profit = Math.max(-prices[index] + function(index + 1, 0, prices, dp), function(index + 1, 1, prices, dp));
        } else {
            profit = Math.max(prices[index] + function(index + 1, 1, prices, dp), function(index + 1, 0, prices, dp));
        }
        dp[index][choice] = profit;
        return dp[index][choice];
    }
}
