class Solution {

    public int maxProfit(int[] prices) {
        int n = prices.length;
        long[][] dp = new long[n][2];
        for (long[] it : dp) {
            Arrays.fill(it, -1);
        }
        return (int) fun(prices, 0, n, 1, dp);
    }

    static long fun(int[] prices, int idx, int n, int param1, long[][] dp) {
        if (idx == n)
            return 0;
        if (dp[idx][param1] != -1)
            return dp[idx][param1];
        long profit = 0;
        if (param1 == 1)
            profit = Math.max(-prices[idx] + fun(prices, idx + 1, n, 0, dp), fun(prices, idx + 1, n, 1, dp));
        else
            profit = Math.max(prices[idx] + fun(prices, idx + 1, n, 1, dp), fun(prices, idx + 1, n, 0, dp));
        return dp[idx][param1] = profit;
    }
}
