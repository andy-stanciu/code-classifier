class Solution {

    public int maxProfit(int[] prices) {
        int cvalley = Integer.MAX_VALUE;
        int pvalley = Integer.MAX_VALUE;
        ;
        int peak = Integer.MIN_VALUE;
        int profit = 0;
        // formula: if (peak> cvalley) && (cvalley < pvalley) profit = profit + (peak - Math.min(pvalley,cvalley)) and then set if(cvalley<pvalley) pvalley = cvalley
        // [5 ,1, 4, 5, 4, 10, 1, 3]
        // i=0, cvalley=5,pvalley=5, peak=1, peak<cvalley so profit = 0
        // i=1, cvalley=1,pvalley=5, peak=4, (peak> cvalley) && (cvalley < pvalley)
        // profit= 0 + (4-1) = 3 then set pvalley = cvalley so pvalley= 1
        // i=2, cvalley=4,pvalley=1 peak=5, profit remains same and set pvalley = cvalley so pvalley=4
        // i=3, cvalley=5,pvalley=4 peak=4, condition fails so profit remains same and pvalley=5
        // i=4, cvalley=4,pvalley=5 peak=10, condition is met so profit= 3+10-4= 9 and pvalley=4
        // .....
        //[1,2,3,4,5]
        for (int i = 0; i < prices.length - 1; i++) {
            cvalley = prices[i];
            peak = prices[i + 1];
            // condition
            if ((peak > cvalley)) {
                if (cvalley < pvalley)
                    profit = profit + (peak - Math.min(pvalley, cvalley));
                else
                    profit = profit + (peak - Math.max(pvalley, cvalley));
            }
            pvalley = cvalley;
        }
        return profit;
    }
}
