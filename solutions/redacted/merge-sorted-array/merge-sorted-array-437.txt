class Solution {

    public void method1(int[] nums1, int m, int[] nums2, int n) {
        // If nums2 is empty, no need to merge
        if (n == 0)
            return;
        // Initialize pointers for nums1, nums2, and the merged array
        // Last valid element in nums1
        m--;
        // Last element in nums2
        n--;
        // Last position in nums1
        int c = nums1.length - 1;
        // Merge the arrays starting from the back
        while (m >= 0 && n >= 0) {
            if (nums1[m] >= nums2[n]) {
                // Take the larger element from nums1
                nums1[c] = nums1[m];
                m--;
            } else {
                // Take the larger element from nums2
                nums1[c] = nums2[n];
                n--;
            }
            // Move the pointer in nums1 backward
            c--;
        }
        // If any elements are left in nums2, copy them to nums1
        while (n >= 0) {
            nums1[c] = nums2[n];
            n--;
            c--;
        }
    }
}
