class Solution {

    public void method1(int[] nums1, int m, int[] nums2, int n) {
        ///starting from end of each array,nums1ptr starts from end of num1 array elements
        int nums1ptr = m - 1;
        int nums2ptr = n - 1;
        int ptr = m + n - 1;
        //coz nums2 array is shorter than nums1 and do while all the nums2 elements are traversed (or has been transferred to nums1)
        while (nums2ptr >= 0) {
            //nums1ptr>=0 coz if nums1 is blank then m-1(in line5) will give 0-1=-1 which is arrayOutOfBounds
            if (nums1ptr >= 0 && nums1[nums1ptr] > nums2[nums2ptr]) {
                nums1[ptr] = nums1[nums1ptr];
                nums1ptr--;
                ptr--;
                //decrementing the ptrs coz we are moving from right to left of each array
            } else {
                nums1[ptr] = nums2[nums2ptr];
                nums2ptr--;
                ptr--;
            }
        }
        /*if nums1 is blank then control moves to else part where we transfer all nums2 elements to nums1
        control also moves to else when there are same elements in both the array and that condition is not checked in if statement */
    }
}
