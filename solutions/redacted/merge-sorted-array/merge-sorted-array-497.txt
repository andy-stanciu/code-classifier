class Solution {

    public void method1(int[] nums1, int m, int[] nums2, int n) {
        int i = m - 1;
        int j = n - 1;
        int k = m + n - 1;
        while (i >= 0 && j >= 0) {
            if (nums1[i] > nums2[j]) {
                nums1[k] = nums1[i];
                i--;
            } else {
                nums1[k] = nums2[j];
                j--;
            }
            k--;
        }
        while (j >= 0) {
            nums1[k] = nums2[j];
            j--;
            k--;
        }
    }
}
//Brute Force Approach
//// class Solution {
// public void merge(int[] nums1, int m, int[] nums2, int n) {
// int size = m + n;
// int[] arr = new int[size];
// int index = 0;
// for (int i = 0; i < m; i++) {
// arr[index] = nums1[i];
// index++;
// }
// for (int j = 0; j < n; j++) {
// arr[index] = nums2[j];
// index++;
// }
// Arrays.sort(arr);
// for (int i = 0; i < size; i++) {
// nums1[i] = arr[i];
// }
// System.out.println(Arrays.toString(nums1));
// }
// }
