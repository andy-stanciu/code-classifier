// Two pointers, head to tail
// Time complexity: O(M+N)
// Space complexity: O(M)
class Solution {

    public void method1(int[] nums1, int m, int[] nums2, int n) {
        int k = 0, i = 0, j = 0;
        int[] nums3 = new int[m];
        System.arraycopy(nums1, 0, nums3, 0, m);
        while (i < m && j < n) {
            if (nums3[i] <= nums2[j]) {
                nums1[k++] = nums3[i++];
            } else {
                nums1[k++] = nums2[j++];
            }
        }
        while (i < m) {
            nums1[k++] = nums3[i++];
        }
        while (j < n) {
            nums1[k++] = nums2[j++];
        }
    }
}
