class Solution {

    public void method1(int[] nums1, int m, int[] nums2, int n) {
        // Pointer for non-zero elements in nums1
        int a = 0;
        // Pointer for elements in nums2
        int b = 0;
        int[] newnums1 = new int[nums1.length];
        for (int q = 0; q < nums1.length; q++) {
            newnums1[q] = nums1[q];
        }
        // Main loop to merge elements into nums1
        for (int l = 0; l < m + n; l++) {
            if (a >= m) {
                // If all elements from nums1 are used, copy remaining elements from nums2
                nums1[l] = nums2[b];
                b++;
            } else if (b >= n) {
                if (a <= nums1.length) {
                    nums1[l] = newnums1[a];
                    a++;
                } else {
                    break;
                    // If all elements from nums2 are used, keep the rest from nums1
                }
            } else if (newnums1[a] <= nums2[b]) {
                // Place element from nums1 if it\'s smaller
                nums1[l] = newnums1[a];
                a++;
            } else {
                // Place element from nums2 if it\'s smaller
                nums1[l] = nums2[b];
                b++;
            }
        }
    }
}
