class Solution {

    public void method1(int[] nums1, int m, int[] nums2, int n) {
        //Two-pointer approach
        //Here we Traverse arrays in reverse order and insert largest element among both arrays at current index.
        //set the pointer at last index of nums1 where 1st insertion will take place, here, 5
        int index = nums1.length - 1;
        //Now,insert elements until nums2 and nums1 are both completely traversed,i.e., 3+3 = 6 times
        while (n > 0) {
            //insert larger value at current index
            if (m > 0 && nums1[m - 1] > nums2[n - 1]) {
                //when 1st array\'s element is larger && m > 0 ensures we traverse nums1 completely
                //if nums[m-1] was larger
                nums1[index] = nums1[m - 1];
                //denotes that this element is inserted
                m--;
            } else {
                //when 2nd array\'s element is larger && n\'s value is being checked inside while statement
                //since nums2[n-1] = nums2[2] = 6 is larger, insert 6 at nums1[index]
                nums1[index] = nums2[n - 1];
                //denotes that this element is inserted, i.e., 2-- = 1
                n--;
            }
            //moving from last index of nums1 to 1st by decreasing pointer by 1
            index--;
        }
    }
}
