class Solution {

    public static List<List<String>> res;

    public static boolean palin(String s, int i, int j) {
        while (i <= j) {
            if (s.charAt(i) != s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }

    public static void fun(int ind, String s, List<String> cur) {
        if (ind == s.length()) {
            res.add(new ArrayList<>(cur));
            return;
        }
        for (int i = ind; i < s.length(); i++) {
            if (palin(s, ind, i)) {
                cur.add(s.substring(ind, i + 1));
                fun(i + 1, s, cur);
                cur.remove(cur.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        res = new ArrayList<>();
        fun(0, s, new ArrayList<String>());
        return res;
    }
}
