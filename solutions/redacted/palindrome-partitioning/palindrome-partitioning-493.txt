class Solution {

    public List<List<String>> partition(String s) {
        List<String> temp = new ArrayList<>();
        List<List<String>> ans = new ArrayList<>();
        partition(0, s, temp, ans);
        return ans;
    }

    private void partition(int i, String s, List<String> temp, List<List<String>> ans) {
        if (i == s.length()) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int j = i; j < s.length(); j++) {
            String prefix = s.substring(i, j + 1);
            if (!method1(prefix))
                continue;
            temp.add(prefix);
            partition(j + 1, s, temp, ans);
            temp.remove(temp.size() - 1);
        }
    }

    private boolean method1(String s) {
        int start = 0;
        int end = s.length() - 1;
        while (start < end) {
            if (s.charAt(start) != s.charAt(end))
                return false;
            start++;
            end--;
        }
        return true;
    }
}
