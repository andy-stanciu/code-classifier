class Solution {

    List<List<String>> out = null;

    public List<List<String>> partition(String s) {
        out = new ArrayList<>();
        helper(s, new ArrayList<String>(), 0);
        return out;
    }

    public void helper(String s, List<String> curr, int pos) {
        if (pos == s.length()) {
            out.add(new ArrayList<>(curr));
            return;
        }
        for (int i = pos; i < s.length(); i++) {
            if (method1(s, pos, i)) {
                curr.add(s.substring(pos, i + 1));
                helper(s, curr, i + 1);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public boolean method1(String s, int l, int r) {
        while (l <= r) {
            if (s.charAt(l) != s.charAt(r))
                return false;
            l++;
            r--;
        }
        return true;
    }
}
