class Solution {

    public List<List<String>> result;

    public boolean method1(String str) {
        int st = 0, end = str.length() - 1;
        while (st <= end) {
            if (str.charAt(st++) != str.charAt(end--))
                return false;
        }
        return true;
    }

    public void dfs(String str, int st, int end, List<String> list) {
        if (st == end) {
            result.add(new ArrayList<>(list));
            return;
        }
        String x = "";
        for (int i = st; i < str.length(); i++) {
            x += str.charAt(i);
            if (method1(x)) {
                list.add(x);
                dfs(str, i + 1, end, list);
                list.remove(list.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        this.result = new ArrayList<>();
        List<String> list = new ArrayList<>();
        dfs(s, 0, s.length(), list);
        return result;
    }
}
