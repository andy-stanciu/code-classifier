class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        if (s.length() == 0) {
            List<String> li = new ArrayList<>();
            res.add(li);
            return res;
        }
        if (s.length() == 1) {
            List<String> li = new ArrayList<>();
            li.add(s);
            res.add(li);
            return res;
        }
        for (int i = s.length() - 1; i >= 0; i--) {
            var ss = s.substring(i);
            if (method1(ss)) {
                List<List<String>> sRes = partition(s.substring(0, i));
                for (var li : sRes) {
                    li.add(ss);
                }
                res.addAll(sRes);
            }
        }
        return res;
    }

    private boolean method1(String s) {
        int n = s.length();
        int k = n / 2;
        for (int i = 0; i < k; i++) {
            if (s.charAt(i) != s.charAt(n - 1 - i))
                return false;
        }
        return true;
    }
}
