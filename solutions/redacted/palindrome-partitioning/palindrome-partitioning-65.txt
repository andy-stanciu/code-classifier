class Solution {

    List<List<String>> answer = new ArrayList<List<String>>();

    public List<List<String>> partition(String s) {
        List<String> temp = new ArrayList<String>();
        solve(s, 0, temp);
        return answer;
    }

    public void solve(String s, int i, List<String> temp) {
        System.out.println(i);
        if (i == s.length()) {
            answer.add(new ArrayList<>(temp));
            return;
        }
        for (int index = i; index < s.length(); index++) {
            if (Pal(s, i, index)) {
                temp.add(s.substring(i, index + 1));
                solve(s, index + 1, temp);
                temp.remove(temp.size() - 1);
            }
        }
    }

    public boolean Pal(String s, int start, int end) {
        while (start <= end) {
            if (s.charAt(start) != s.charAt(end))
                return false;
            start++;
            end--;
        }
        return true;
    }
}
