class Solution {

    public boolean method1(String str, int startIndex, int lastIndex) {
        while (startIndex <= lastIndex) {
            if (str.charAt(startIndex) != str.charAt(lastIndex))
                return false;
            startIndex++;
            lastIndex--;
        }
        return true;
    }

    public void method2(int index, List<String> ds, List<List<String>> output, String str) {
        if (index == str.length()) {
            output.add(new ArrayList<>(ds));
            return;
        }
        for (int i = index; i < str.length(); i++) {
            if (method1(str, index, i)) {
                ds.add(str.substring(index, i + 1));
                method2(i + 1, ds, output, str);
                ds.remove(ds.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<List<String>> output = new ArrayList<>();
        List<String> ds = new ArrayList<>();
        method2(0, ds, output, s);
        return output;
    }
}
