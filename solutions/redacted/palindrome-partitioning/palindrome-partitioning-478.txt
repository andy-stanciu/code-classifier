class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> list = new ArrayList<>();
        backtrack(ans, list, s, 0);
        return ans;
    }

    public void backtrack(List<List<String>> ans, List<String> list, String s, int id) {
        if (id == s.length()) {
            ans.add(new ArrayList<>(list));
            return;
        }
        for (int k = id; k < s.length(); ++k) {
            String str = s.substring(id, k + 1);
            int flag = 0;
            for (int i = 0, j = str.length() - 1; i < j; ++i, --j) {
                if (str.charAt(i) != str.charAt(j)) {
                    ++flag;
                    break;
                }
            }
            if (flag == 0) {
                list.add(str);
                backtrack(ans, list, s, k + 1);
                list.remove(list.size() - 1);
            }
        }
    }
}
