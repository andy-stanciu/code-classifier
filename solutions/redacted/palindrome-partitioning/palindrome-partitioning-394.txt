class Solution {

    public boolean method1(String s) {
        int i = 0;
        int j = s.length() - 1;
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

    public void partitionUtil(String s, int start, List<List<String>> result, List<String> curr) {
        if (start == s.length()) {
            result.add(new ArrayList<>(curr));
            return;
        }
        for (int end = start + 1; end <= s.length(); end++) {
            String substring = s.substring(start, end);
            if (method1(substring)) {
                curr.add(substring);
                partitionUtil(s, end, result, curr);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList<>();
        List<String> list = new ArrayList<>();
        partitionUtil(s, 0, result, list);
        return result;
    }
}
