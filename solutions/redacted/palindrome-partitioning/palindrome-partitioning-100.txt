class Solution {

    public static boolean method1(String str, int s, int e) {
        while (s < e) {
            if (str.charAt(s++) != str.charAt(e--))
                return false;
        }
        return true;
    }

    public static void rec(String s, int ind, List<String> list, List<List<String>> list2d) {
        if (ind == s.length()) {
            list2d.add(new ArrayList<>(list));
            return;
        }
        for (int i = ind; i < s.length(); i++) {
            if (method1(s, ind, i)) {
                list.add(s.substring(ind, i + 1));
                rec(s, i + 1, list, list2d);
                list.remove(list.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<List<String>> list2d = new ArrayList<>();
        rec(s, 0, new ArrayList<>(), list2d);
        return list2d;
    }
}
