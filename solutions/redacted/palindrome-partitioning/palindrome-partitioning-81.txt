class Solution {

    List<List<String>> res;

    public List<List<String>> partition(String s) {
        res = new ArrayList<>();
        List<String> path = new ArrayList<>();
        method1(s, 0, path);
        return res;
    }

    public void method1(String s, int index, List<String> path) {
        if (index == s.length()) {
            res.add(new ArrayList<>(path));
            return;
        }
        for (int i = index; i < s.length(); ++i) {
            if (method2(s, index, i)) {
                path.add(s.substring(index, i + 1));
                method1(s, i + 1, path);
                path.remove(path.size() - 1);
            }
        }
    }

    public boolean method2(String s, int startIndex, int endIndex) {
        while (startIndex <= endIndex) {
            if (s.charAt(startIndex++) != s.charAt(endIndex--))
                return false;
        }
        return true;
    }
}
