class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        partition_(0, s, ans, new ArrayList<>());
        return ans;
    }

    public void partition_(int st, String s, List<List<String>> ans, List<String> sans) {
        if (st == s.length()) {
            ans.add(new ArrayList<>(sans));
            return;
        }
        for (int i = st; i < s.length(); i++) {
            if (isPallin(s, st, i)) {
                sans.add(s.substring(st, i + 1));
                partition_(i + 1, s, ans, sans);
                sans.remove(sans.size() - 1);
            }
        }
        return;
    }

    public boolean isPallin(String s, int i, int j) {
        while (i <= j) {
            if (s.charAt(i) != s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}
