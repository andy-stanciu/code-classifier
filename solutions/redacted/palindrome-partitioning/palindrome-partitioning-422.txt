class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList();
        partition(s, new ArrayList(), ans);
        return ans;
    }

    void partition(String s, List<String> part, List<List<String>> ans) {
        if (s.isEmpty()) {
            ans.add(new ArrayList(part));
            return;
        }
        for (int i = 0; i < s.length(); i++) {
            String ps = s.substring(0, i + 1);
            if (method1(ps)) {
                part.add(ps);
                partition(s.substring(i + 1), part, ans);
                part.remove(part.size() - 1);
            }
        }
    }

    boolean method1(String s) {
        int i = 0, j = s.length() - 1;
        while (i <= j) {
            if (s.charAt(i) != s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}
