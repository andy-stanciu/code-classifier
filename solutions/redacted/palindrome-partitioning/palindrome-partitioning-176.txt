class Solution {

    int n;

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        n = s.length();
        solve(s, 0, new ArrayList<>(), res);
        return res;
    }

    void solve(String s, int idx, List<String> cur, List<List<String>> res) {
        if (idx == n) {
            res.add(new ArrayList<>(cur));
            return;
        }
        for (int i = idx; i < n; i++) {
            if (method1(s, idx, i)) {
                cur.add(s.substring(idx, i + 1));
                solve(s, i + 1, cur, res);
                cur.remove(cur.size() - 1);
            }
        }
    }

    boolean method1(String s, int l, int r) {
        while (l < r) {
            if (s.charAt(l) != s.charAt(r))
                return false;
            l++;
            r--;
        }
        return true;
    }
}
