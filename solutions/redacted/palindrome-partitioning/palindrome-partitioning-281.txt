class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        bt(s, -1, new ArrayList<>(), res);
        return res;
    }

    private void bt(String s, int p, List<String> buf, List<List<String>> res) {
        int st = p + 1;
        if (st == s.length()) {
            res.add(new ArrayList<>(buf));
            return;
        }
        for (int i = st; i < s.length(); i++) {
            if (isPali(s.substring(st, i + 1))) {
                buf.add(s.substring(st, i + 1));
                bt(s, i, buf, res);
                buf.removeLast();
            }
        }
    }

    private boolean isPali(String s) {
        int l = 0, r = s.length() - 1;
        while (l < r) {
            if (s.charAt(l) != s.charAt(r))
                return false;
            l++;
            r--;
        }
        return true;
    }
}
