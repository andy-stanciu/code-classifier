class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList<>();
        partition(s, 0, new ArrayList<>(), result);
        return result;
    }

    static void partition(String s, int idx, List<String> list, List<List<String>> result) {
        if (idx == s.length()) {
            if (list.size() > 0)
                result.add(new ArrayList<>(list));
            return;
        }
        for (int i = idx; i < s.length(); ++i) {
            String current = s.substring(idx, i + 1);
            if (method1(current)) {
                list.add(current);
                partition(s, i + 1, list, result);
                list.remove(list.size() - 1);
            }
        }
    }

    static boolean method1(String s) {
        if (s == "")
            return false;
        if (s.length() == 1)
            return true;
        int i = 0, j = s.length() - 1;
        while (i < j) {
            if (s.charAt(i) != s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}
