class Solution {

    public boolean method1(String s) {
        int start = 0, end = s.length() - 1;
        while (start <= end) {
            if (s.charAt(start) != s.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }

    public void generator(String s, int index, List<String> list, List<List<String>> answer) {
        if (index == s.length()) {
            answer.add(new ArrayList(list));
            return;
        }
        for (int i = index; i < s.length(); i++) {
            String substring = s.substring(index, i + 1);
            if (method1(substring)) {
                list.add(substring);
                generator(s, i + 1, list, answer);
                list.remove(list.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<List<String>> answer = new ArrayList<>();
        List<String> list = new ArrayList<>();
        generator(s, 0, list, answer);
        return answer;
    }
}
