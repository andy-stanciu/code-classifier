class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> sol = new ArrayList<>();
        List<String> list = new ArrayList<>();
        helper(s, 0, list, sol);
        return sol;
    }

    public void helper(String s, int n, List<String> list, List<List<String>> sol) {
        if (n == s.length()) {
            sol.add(new ArrayList<>(list));
            return;
        }
        for (int i = n; i < s.length(); i++) {
            if (pal(s, n, i)) {
                list.add(s.substring(n, i + 1));
                helper(s, i + 1, list, sol);
                list.remove(list.size() - 1);
            }
        }
    }

    public boolean pal(String s, int l, int r) {
        while (r > l) if (s.charAt(l++) != s.charAt(r--))
            return false;
        return true;
    }
}
