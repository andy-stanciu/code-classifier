class Solution {

    public List<List<String>> partition(String s) {
        int n = s.length();
        List<List<String>> res = new ArrayList<>();
        helper(s, 0, res, new ArrayList<>());
        return res;
    }

    private void helper(String s, int index, List<List<String>> res, List<String> tmp) {
        int n = s.length();
        if (index == n) {
            res.add(new ArrayList<>(tmp));
            return;
        }
        for (int i = index; i < n; i++) {
            if (method1(s, index, i)) {
                tmp.add(s.substring(index, i + 1));
                helper(s, i + 1, res, tmp);
                tmp.remove(tmp.size() - 1);
            }
        }
    }

    private boolean method1(String s, int i, int j) {
        while (j > i) {
            if (s.charAt(i++) != s.charAt(j--))
                return false;
        }
        return true;
    }
}
