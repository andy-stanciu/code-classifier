class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        List<String> temp = new ArrayList<>();
        soln(res, temp, s, 0);
        return res;
    }

    public void soln(List<List<String>> res, List<String> temp, String s, int idx) {
        if (idx == s.length()) {
            res.add(new ArrayList<>(temp));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            if (method1(s, idx, i)) {
                temp.add(s.substring(idx, i + 1));
                soln(res, temp, s, i + 1);
                temp.remove(temp.size() - 1);
            }
        }
    }

    public boolean method1(String s, int start, int end) {
        while (start <= end) {
            if (s.charAt(start) != s.charAt(end))
                return false;
            start++;
            end--;
        }
        return true;
    }
}
