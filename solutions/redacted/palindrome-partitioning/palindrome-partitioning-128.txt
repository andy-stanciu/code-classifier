class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> result = new ArrayList<>();
        partitionutil(s, new ArrayList<>(), result);
        return result;
    }

    public void partitionutil(String s, List<String> current, List<List<String>> result) {
        if (s.length() == 0) {
            result.add(new ArrayList<>(current));
            return;
        }
        for (int i = 1; i <= s.length(); i++) {
            String prefix = s.substring(0, i);
            if (ispalin(prefix)) {
                current.add(prefix);
                partitionutil(s.substring(i), current, result);
                current.remove(current.size() - 1);
            }
        }
    }

    public boolean ispalin(String s) {
        int n = s.length();
        int ptr = 0;
        int ptr2 = n - 1;
        while (ptr < ptr2) {
            if (s.charAt(ptr) != s.charAt(ptr2)) {
                return false;
            }
            ptr++;
            ptr2--;
        }
        return true;
    }
}
