class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> output = new ArrayList<>();
        part(0, s, new ArrayList<String>(), output);
        return output;
    }

    public boolean checkPali(String s) {
        int i = 0, j = s.length() - 1;
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

    public void part(int index, String s, List<String> input, List<List<String>> output) {
        if (index >= s.length()) {
            output.add(new ArrayList<String>(input));
            return;
        }
        int j = index + 1;
        while (j <= s.length()) {
            if (checkPali(s.substring(index, j))) {
                input.add(s.substring(index, j));
                part(j, s, input, output);
                input.remove(input.size() - 1);
            }
            j++;
        }
    }
}
