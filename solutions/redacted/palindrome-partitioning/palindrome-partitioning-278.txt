class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList();
        helper(s, new ArrayList(), 0, ans, s.length());
        return ans;
    }

    public void helper(String s, List<String> ds, int idx, List<List<String>> ans, int n) {
        if (idx == n) {
            ans.add(new ArrayList(ds));
            return;
        }
        for (int i = idx; i < n; i++) {
            if (method1(idx, i, s)) {
                ds.add(s.substring(idx, i + 1));
                helper(s, ds, i + 1, ans, n);
                ds.remove(ds.size() - 1);
            }
        }
    }

    public boolean method1(int start, int end, String s) {
        while (start <= end) {
            if (s.charAt(start) != s.charAt(end))
                return false;
            start++;
            end--;
        }
        return true;
    }
}
