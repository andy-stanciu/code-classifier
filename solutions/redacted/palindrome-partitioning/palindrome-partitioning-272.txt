class Solution {

    public static void helper(String s, int idx, List<List<String>> ans, List<String> demo) {
        if (idx == s.length()) {
            ans.add(new ArrayList<>(demo));
            return;
        }
        for (int i = idx; i < s.length(); i++) {
            if (isPalindrom(s, idx, i)) {
                demo.add(s.substring(idx, i + 1));
                helper(s, i + 1, ans, demo);
                demo.remove(demo.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> demo = new ArrayList<>();
        helper(s, 0, ans, demo);
        return ans;
    }

    public static boolean isPalindrom(String s, int start, int end) {
        while (start <= end) {
            if (s.charAt(start) != s.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
