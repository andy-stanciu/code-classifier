class Solution {

    public boolean method1(String s, int low, int high) {
        while (low < high) if (s.charAt(low++) != s.charAt(high--))
            return false;
        return true;
    }

    public void solve(String s, List<List<String>> sol, List<String> temp, int index) {
        if (index == s.length()) {
            sol.add(new ArrayList<>(temp));
        }
        for (int i = index; i < s.length(); i++) {
            if (method1(s, index, i)) {
                temp.add(s.substring(index, i + 1));
                solve(s, sol, temp, i + 1);
                temp.remove(temp.size() - 1);
            }
        }
    }

    public List<List<String>> partition(String s) {
        List<List<String>> sol = new ArrayList<>();
        //Arrays.sort(nums);
        solve(s, sol, new ArrayList<>(), 0);
        return sol;
    }
}
