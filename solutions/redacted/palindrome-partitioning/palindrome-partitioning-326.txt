class Solution {

    List<String> list = new ArrayList<>();

    List<List<String>> res = new ArrayList<>();

    public List<List<String>> partition(String s) {
        String s1 = s + ".";
        int len = s.length();
        backtrack(s1, len, 0);
        return res;
    }

    void backtrack(String s, int len, int listLength) {
        if (listLength == len) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int i = 0; i < s.length() - 1; i++) {
            String t = s.substring(0, i + 1);
            if (method1(t)) {
                list.add(t);
                backtrack(s.substring(i + 1), len, listLength + i + 1);
                list.removeLast();
            }
        }
    }

    boolean method1(String s) {
        int l = 0;
        int r = s.length() - 1;
        while (l < r) {
            if (s.charAt(l) != s.charAt(r)) {
                return false;
            }
            l++;
            r--;
        }
        return true;
    }
}
