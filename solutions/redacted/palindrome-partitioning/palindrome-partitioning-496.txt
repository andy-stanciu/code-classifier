class Solution {

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        backtrack(0, new ArrayList<>(), s, res);
        return res;
    }

    public void backtrack(int start, List<String> list, String s, List<List<String>> res) {
        if (start >= s.length()) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int end = start; end < s.length(); end++) {
            String curr = s.substring(start, end + 1);
            if (method1(curr)) {
                list.add(curr);
                backtrack(end + 1, list, s, res);
                list.remove(list.size() - 1);
            }
        }
    }

    public boolean method1(String s) {
        int start = 0, end = s.length() - 1;
        while (start < end) {
            if (s.charAt(start) != s.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
