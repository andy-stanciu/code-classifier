class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            if (stack.isEmpty() || param1[i] >= 0) {
                stack.push(param1[i]);
                continue;
            } else {
                if (stack.peek() < 0) {
                    stack.push(param1[i]);
                } else if (stack.peek() == -param1[i]) {
                    stack.pop();
                } else if (stack.peek() > -param1[i]) {
                    continue;
                } else {
                    while (!stack.isEmpty() && stack.peek() >= 0 && stack.peek() < -param1[i]) {
                        stack.pop();
                    }
                    if (!stack.isEmpty() && stack.peek() == -param1[i]) {
                        stack.pop();
                    } else if (!stack.isEmpty() && stack.peek() > -param1[i]) {
                        continue;
                    } else {
                        stack.push(param1[i]);
                    }
                }
            }
        }
        int[] res = new int[stack.size()];
        for (int i = res.length - 1; i >= 0; i--) {
            res[i] = stack.pop();
        }
        return res;
    }
}
