class Solution {

    public int[] method1(int[] param1) {
        int n = param1.length;
        List<Integer> ans = new ArrayList<>();
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            boolean collided = false;
            while (!st.isEmpty() && param1[i] < 0 && st.peek() > 0) {
                int top = st.pop();
                if (top == -param1[i]) {
                    collided = true;
                    break;
                } else if (top > -param1[i]) {
                    st.push(top);
                    collided = true;
                    break;
                }
            }
            if (!collided) {
                st.push(param1[i]);
            }
        }
        int j = 0;
        while (!st.isEmpty()) {
            ans.add(st.pop());
        }
        Collections.reverse(ans);
        int[] intArray = new int[ans.size()];
        for (int i = 0; i < ans.size(); i++) {
            intArray[i] = ans.get(i);
        }
        return intArray;
    }
}
