class Solution {

    public int[] method1(int[] param1) {
        int n = param1.length;
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            if (param1[i] > 0 || st.isEmpty())
                st.push(param1[i]);
            else {
                while (!st.isEmpty() && st.peek() > 0 && st.peek() < Math.abs(param1[i])) st.pop();
                if (!st.isEmpty() && st.peek() == Math.abs(param1[i]))
                    st.pop();
                else {
                    if (st.isEmpty() || st.peek() < 0)
                        st.push(param1[i]);
                }
            }
        }
        int[] res = new int[st.size()];
        for (int i = st.size() - 1; i >= 0; i--) {
            res[i] = st.peek();
            st.pop();
        }
        return res;
    }
}
