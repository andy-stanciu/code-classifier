class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stk = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            boolean flag = true;
            while (!stk.isEmpty() && (param1[i] < 0 && stk.peek() > 0)) {
                //case1 in this case we will add asteroid to stack
                if (-param1[i] > stk.peek()) {
                    // System.out.println(asteroids[i]+"abs");
                    stk.pop();
                    flag = true;
                } else //case2 we wont add asteroid to stack
                if (-param1[i] < stk.peek()) {
                    flag = false;
                    break;
                } else // case3 here , both will neutralise each other , so we wont add to stack
                if (-param1[i] == stk.peek()) {
                    // System.out.println(asteroids[i]+"abc");
                    stk.pop();
                    flag = false;
                    break;
                }
            }
            //if flag is true,
            if (flag) {
                //System.out.println(asteroids[i]);
                stk.push(param1[i]);
            }
        }
        int[] arr = new int[stk.size()];
        int i = stk.size() - 1;
        while (!stk.isEmpty()) {
            arr[i] = stk.pop();
            i--;
        }
        return arr;
    }
}
