class Solution {

    public int[] method1(int[] param1) {
        ArrayDeque<Integer> deque = new ArrayDeque<>();
        int i = 0;
        int[] ans;
        while (i < param1.length) {
            while (!deque.isEmpty() && deque.peek() > 0 && param1[i] < 0 && deque.peek() + param1[i] < 0) {
                deque.pop();
            }
            if (!deque.isEmpty() && deque.peek() > 0 && param1[i] < 0 && deque.peek() + param1[i] > 0) {
                i++;
                continue;
            }
            if (!deque.isEmpty() && deque.peek() > 0 && param1[i] < 0 && deque.peek() + param1[i] == 0) {
                deque.pop();
                i++;
                continue;
            }
            deque.push(param1[i]);
            i++;
        }
        ans = new int[deque.size()];
        for (int j = ans.length - 1; j >= 0; j--) {
            ans[j] = deque.pop();
        }
        return ans;
    }
}
