class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> st = new Stack<>();
        for (int astroid : param1) {
            if (astroid >= 0) {
                st.push(astroid);
            } else {
                if (st.isEmpty()) {
                    st.push(astroid);
                } else {
                    while (st.size() > 0 && st.peek() >= 0 && st.peek() < Math.abs(astroid)) {
                        st.pop();
                    }
                    if (st.size() > 0 && st.peek() == Math.abs(astroid)) {
                        st.pop();
                    } else if (st.size() > 0 && st.peek() > Math.abs(astroid)) {
                    } else if (st.size() == 0 || st.size() > 0 && st.peek() < 0) {
                        st.push(astroid);
                    }
                }
            }
        }
        int[] ans = new int[st.size()];
        for (int i = ans.length - 1; i >= 0; i--) {
            ans[i] = st.pop();
        }
        return ans;
    }
}
