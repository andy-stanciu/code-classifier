class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> st = new Stack<Integer>();
        int n = param1.length;
        for (int i = 0; i < n; i++) {
            if (param1[i] > 0) {
                st.push(param1[i]);
            } else {
                while (st.size() > 0 && st.peek() > 0 && st.peek() < -(param1[i])) {
                    st.pop();
                }
                if (st.size() > 0 && st.peek() == -(param1[i])) {
                    st.pop();
                } else if (st.size() > 0 && st.peek() > -(param1[i])) {
                } else {
                    st.push(param1[i]);
                }
            }
        }
        int[] result = new int[st.size()];
        int x = result.length - 1;
        for (int i = x; i >= 0; i--) {
            result[i] = st.pop();
        }
        return result;
    }
}
