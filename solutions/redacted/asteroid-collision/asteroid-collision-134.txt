class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> st = new Stack<>();
        int i = 0;
        while (i < param1.length) {
            if (param1[i] > 0) {
                st.push(param1[i]);
            } else {
                while (!st.isEmpty() && st.peek() > 0 && st.peek() < Math.abs(param1[i])) {
                    st.pop();
                }
                if (st.isEmpty() || st.peek() < 0) {
                    st.push(param1[i]);
                } else if (st.peek() == Math.abs(param1[i])) {
                    st.pop();
                }
            }
            i++;
        }
        int[] arr = new int[st.size()];
        for (int j = st.size() - 1; j >= 0; j--) {
            arr[j] = st.pop();
        }
        return arr;
    }
}
