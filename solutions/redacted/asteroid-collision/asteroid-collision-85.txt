class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> var1 = new Stack<>();
        int i = 0;
        while (i < param1.length) {
            if (var1.isEmpty()) {
                var1.push(param1[i]);
                i++;
                continue;
            }
            int lastElement = var1.pop();
            if ((lastElement < 0 && param1[i] < 0) || (lastElement > 0 && param1[i] > 0)) {
                var1.push(lastElement);
                var1.push(param1[i]);
                i++;
                continue;
            }
            if (lastElement < 0 && param1[i] > 0) {
                var1.push(lastElement);
                var1.push(param1[i]);
                i++;
                continue;
            }
            if (Math.abs(lastElement) > Math.abs(param1[i])) {
                var1.push(lastElement);
                i++;
                continue;
            }
            if (Math.abs(lastElement) == Math.abs(param1[i])) {
                i++;
                continue;
            }
        }
        int[] array = new int[var1.size()];
        for (int j = array.length - 1; j >= 0; j--) {
            array[j] = var1.pop();
        }
        return array;
    }
}
