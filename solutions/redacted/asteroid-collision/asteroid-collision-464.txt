class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int var1 : param1) {
            boolean collided = false;
            // Check if the current asteroid has a collision with the top element in the stack
            while (!stack.isEmpty() && var1 < 0 && stack.peek() > 0) {
                // Collision with opposite directions
                if (Math.abs(var1) > stack.peek()) {
                    // The current asteroid destroys the smaller asteroid in the stack
                    stack.pop();
                    continue;
                } else if (Math.abs(var1) == stack.peek()) {
                    // Both asteroids explode as they have the same size
                    stack.pop();
                }
                // Mark that a collision occurred
                collided = true;
                break;
            }
            // If no collision occurs, push the current asteroid onto the stack
            if (!collided) {
                stack.push(var1);
            }
        }
        // Create the result array and store the elements from the stack in reverse order
        int[] result = new int[stack.size()];
        for (int i = stack.size() - 1; i >= 0; i--) {
            result[i] = stack.pop();
        }
        return result;
    }
}
