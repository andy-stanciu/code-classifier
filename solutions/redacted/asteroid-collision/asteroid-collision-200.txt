class Solution {

    public int[] method1(int[] param1) {
        int n = param1.length;
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < n; i++) {
            int el = param1[i];
            if (el > 0) {
                st.push(el);
            } else {
                while (!st.isEmpty() && st.peek() > 0 && Math.abs(el) > st.peek()) {
                    st.pop();
                }
                if (st.isEmpty() || st.peek() < 0) {
                    st.push(el);
                } else if (st.peek() == Math.abs(el))
                    st.pop();
            }
        }
        int nn = st.size();
        int[] ans = new int[nn];
        for (int i = nn - 1; i >= 0; i--) {
            ans[i] = st.pop();
        }
        return ans;
    }
}
