class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            int curr = param1[i];
            if (st.isEmpty()) {
                st.push(param1[i]);
            } else {
                boolean destroyed = false;
                while (!st.isEmpty() && st.peek() > 0 && curr < 0) {
                    int top = st.peek();
                    if (Math.abs(top) < Math.abs(curr)) {
                        st.pop();
                    } else if (Math.abs(top) == Math.abs(curr)) {
                        st.pop();
                        destroyed = true;
                        break;
                    } else {
                        destroyed = true;
                        break;
                    }
                }
                if (!destroyed) {
                    st.push(curr);
                }
            }
        }
        int[] ans = new int[st.size()];
        for (int i = st.size() - 1; i >= 0; i--) {
            ans[i] = st.pop();
        }
        return ans;
    }
}
