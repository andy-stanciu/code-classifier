class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int var1 : param1) {
            boolean exploded = false;
            // While the current asteroid is negative (moving left) and the top of the stack is positive (moving right)
            while (!stack.isEmpty() && var1 < 0 && stack.peek() > 0) {
                if (stack.peek() < Math.abs(var1)) {
                    // The top of the stack explodes because it is smaller
                    stack.pop();
                } else if (stack.peek() == Math.abs(var1)) {
                    // Both asteroids are the same size and explode
                    stack.pop();
                    exploded = true;
                    break;
                } else {
                    // The current asteroid explodes because it is smaller
                    exploded = true;
                    break;
                }
            }
            // If the current asteroid did not explode, add it to the stack
            if (!exploded) {
                stack.push(var1);
            }
        }
        // Convert the stack to an array
        int[] result = new int[stack.size()];
        for (int i = 0; i < result.length; i++) {
            result[i] = stack.get(i);
        }
        return result;
    }
}
