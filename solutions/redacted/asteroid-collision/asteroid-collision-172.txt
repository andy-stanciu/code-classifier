class Solution {

    public int[] method1(int[] arr) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] > 0) {
                st.push(i);
            } else {
                while (!st.isEmpty() && arr[st.peek()] > 0 && Math.abs(arr[st.peek()]) < Math.abs(arr[i])) {
                    st.pop();
                }
                if (!st.isEmpty() && arr[st.peek()] > 0 && Math.abs(arr[st.peek()]) == Math.abs(arr[i])) {
                    st.pop();
                } else if (st.isEmpty() || arr[st.peek()] < 0) {
                    st.push(i);
                }
            }
        }
        int[] ans = new int[st.size()];
        int i = ans.length - 1;
        while (!st.isEmpty()) {
            ans[i--] = arr[st.pop()];
        }
        return ans;
    }
}
