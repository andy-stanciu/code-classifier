class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            method2(stack, param1[i]);
        }
        int[] result = new int[stack.size()];
        for (int i = result.length - 1; i >= 0; i--) {
            result[i] = stack.pop();
        }
        return result;
    }

    public void method2(Stack<Integer> stack, int param2) {
        if (stack.empty())
            stack.push(param2);
        else {
            int prev = stack.peek();
            boolean willCollide = prev > 0 && param2 < 0;
            if (!willCollide)
                stack.push(param2);
            else {
                int modVal = Math.abs(param2);
                if (modVal < prev)
                    return;
                else if (modVal == prev) {
                    stack.pop();
                    return;
                } else {
                    stack.pop();
                    method2(stack, param2);
                }
            }
        }
    }
}
