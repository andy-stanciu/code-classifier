class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            int rock = param1[i];
            if (rock < 0) {
                if (stack.isEmpty() || stack.peek() < 0)
                    stack.push(rock);
                else {
                    // Peek is positive
                    int last = 0;
                    while (!stack.isEmpty() && stack.peek() > 0 && stack.peek() <= Math.abs(rock)) {
                        last = stack.pop();
                        if (last == Math.abs(rock)) {
                            break;
                        }
                    }
                    if ((stack.isEmpty() || stack.peek() < 0) && (last != Math.abs(rock))) {
                        stack.push(rock);
                    }
                }
            } else
                stack.push(rock);
        }
        int[] out = new int[stack.size()];
        for (int i = out.length - 1; i >= 0; i--) {
            out[i] = stack.pop();
        }
        return out;
    }
}
