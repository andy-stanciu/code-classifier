class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> s = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            if (s.isEmpty()) {
                s.push(param1[i]);
            } else if (s.peek() < 0) {
                s.push(param1[i]);
            } else {
                if (param1[i] > 0) {
                    s.push(param1[i]);
                } else {
                    while (!s.isEmpty() && s.peek() > 0 && s.peek() < -param1[i]) {
                        s.pop();
                    }
                    if (s.isEmpty() || s.peek() < 0) {
                        s.push(param1[i]);
                    }
                    if (!s.isEmpty() && s.peek() == -param1[i]) {
                        s.pop();
                    }
                }
            }
        }
        int[] ans = new int[s.size()];
        for (int i = s.size() - 1; i >= 0; i--) {
            ans[i] = s.pop();
        }
        return ans;
    }
}
