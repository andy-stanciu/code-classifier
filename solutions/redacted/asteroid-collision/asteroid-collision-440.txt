class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            if (st.isEmpty() || param1[i] > 0) {
                st.push(param1[i]);
            } else {
                while (true) {
                    //[-3,7] -5
                    if (st.peek() > 0) {
                        //[-3,-6.7]-7
                        //[-3,-6]
                        if (Math.abs(st.peek()) == Math.abs(param1[i])) {
                            st.pop();
                            break;
                        } else //[-3,-6.7]-4
                        //[-3,-6,7]
                        if (Math.abs(st.peek()) > Math.abs(param1[i])) {
                            break;
                        } else //[3,6,7]-9
                        //[-9]
                        {
                            st.pop();
                            if (st.isEmpty()) {
                                st.push(param1[i]);
                                break;
                            }
                        }
                    } else //[-2,3,-4,-3] -5
                    {
                        st.push(param1[i]);
                        break;
                    }
                }
            }
        }
        int n = st.size();
        int[] arr = new int[n];
        while (n > 0) {
            arr[--n] = st.pop();
        }
        return arr;
    }
}
