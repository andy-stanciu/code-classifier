class Solution {

    public int[] method1(int[] a) {
        Stack<Integer> s = new Stack<>();
        int i = a.length - 1;
        while (i >= 0) {
            while (!s.isEmpty() && i >= 0 && a[i] < 0) {
                s.push(a[i]);
                i--;
            }
            while (!s.isEmpty() && i >= 0 && a[i] > 0) {
                if (s.peek() < 0 && a[i] >= Math.abs(s.peek())) {
                    if (a[i] == Math.abs(s.peek()))
                        i--;
                    s.pop();
                } else {
                    if (s.peek() < 0) {
                        i--;
                    } else {
                        s.push(a[i]);
                        i--;
                    }
                }
            }
            if (s.isEmpty() && i >= 0) {
                s.push(a[i]);
                i--;
            }
        }
        int[] arr = new int[s.size()];
        for (int j = 0; j < arr.length; j++) {
            arr[j] = s.pop();
        }
        return arr;
    }
}
