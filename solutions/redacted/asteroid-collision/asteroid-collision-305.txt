class Solution {

    public int[] method1(int[] param1) {
        //  if(asteroids.length==0) return int[0];
        //[10,5,3,2,-5]
        Stack<Integer> stack = new Stack<>();
        for (int a : param1) {
            while (!stack.isEmpty() && stack.peek() > 0 && a < 0) {
                //collision codition
                int sum = a + stack.peek();
                if (//[10,-9]
                //[10,-9]
                sum > 0) {
                    a = 0;
                } else if (//[5,-5]
                //[5,-5]
                sum == 0) {
                    a = 0;
                    stack.pop();
                } else //checks for more
                if (sum < 0) {
                    stack.pop();
                }
                //asteroids on the left
            }
            if (a != 0)
                stack.push(a);
        }
        //put answer stack to array from last as the lifo nature
        int[] ans = new int[stack.size()];
        for (int i = stack.size() - 1; i >= 0; i--) {
            ans[i] = stack.peek();
            stack.pop();
        }
        return ans;
    }
}
