class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> var1 = new Stack<Integer>();
        Stack<Integer> var2 = new Stack<Integer>();
        for (int i = param1.length - 1; i >= 0; i--) {
            int var3 = param1[i];
            if (var3 > 0) {
                while (!var2.empty()) {
                    if (Math.abs(var2.peek()) > var3) {
                        var3 = 0;
                        break;
                    } else if (Math.abs(var2.peek()) == var3) {
                        var2.pop();
                        var3 = 0;
                        break;
                    } else {
                        var2.pop();
                    }
                }
                if (var2.empty() && var3 > 0) {
                    var1.push(var3);
                }
            } else {
                var2.push(var3);
            }
        }
        List<Integer> ans = new ArrayList<>();
        while (!var2.empty()) {
            ans.add(var2.pop());
        }
        while (!var1.empty()) {
            ans.add(var1.pop());
        }
        int[] arr = new int[ans.size()];
        for (int i = 0; i < ans.size(); i++) {
            arr[i] = ans.get(i);
        }
        return arr;
    }
}
