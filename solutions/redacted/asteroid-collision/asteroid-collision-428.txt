class Solution {

    public int[] method1(int[] param1) {
        List<Integer> ans = new ArrayList<>();
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            if (param1[i] < 0) {
                if (st.isEmpty()) {
                    ans.add(param1[i]);
                } else {
                    while (!st.isEmpty() && st.peek() < Math.abs(param1[i])) {
                        st.pop();
                    }
                    if (st.isEmpty()) {
                        ans.add(param1[i]);
                    } else if (st.peek() == Math.abs(param1[i]))
                        st.pop();
                }
            } else {
                st.push(param1[i]);
            }
        }
        int ind = ans.size();
        while (!st.isEmpty()) {
            ans.add(ind, st.peek());
            st.pop();
        }
        int[] fans = new int[ans.size()];
        for (int i = 0; i < ans.size(); i++) {
            fans[i] = ans.get(i);
        }
        return fans;
    }
}
