class Solution {

    public int[] method1(int[] param1) {
        Stack<Integer> s = new Stack<>();
        for (int i = 0; i < param1.length; i++) {
            if (param1[i] >= 0) {
                s.push(i);
                continue;
            }
            while (!s.isEmpty()) {
                if (Math.abs(param1[s.peek()]) > Math.abs(param1[i])) {
                    param1[i] = 0;
                    break;
                } else if (Math.abs(param1[s.peek()]) < Math.abs(param1[i])) {
                    param1[s.pop()] = 0;
                } else {
                    param1[s.pop()] = 0;
                    param1[i] = 0;
                }
            }
        }
        List<Integer> ans = new ArrayList<>();
        for (int i : param1) {
            if (i != 0) {
                ans.add(i);
            }
        }
        int[] arr = ans.stream().mapToInt(Integer::intValue).toArray();
        return arr;
    }
}
