class Solution {

    Stack<Integer> st = new Stack<>();

    public int[] method1(int[] param1) {
        st.add(param1[0]);
        for (int i = 1; i < param1.length; i++) {
            while (!st.isEmpty() && (st.peek() > 0 && param1[i] < 0) && (Math.abs(st.peek()) < Math.abs(param1[i]))) {
                st.pop();
            }
            if (!st.isEmpty() && st.peek() > 0 && param1[i] < 0) {
                if (st.peek() == Math.abs(param1[i]))
                    st.pop();
            } else
                st.push(param1[i]);
        }
        // System.out.println(st);
        int[] res = new int[st.size()];
        int i = res.length - 1;
        while (!st.isEmpty()) res[i--] = st.pop();
        return res;
    }
}
