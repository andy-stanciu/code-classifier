class Solution {

    public int method1(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        while (start <= end) {
            int mid = start + end;
            if (nums[mid] == target) {
                return mid;
            }
            if (nums[start] <= nums[mid]) {
                if (target < nums[mid] && target >= nums[start]) {
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            } else {
                if (target > nums[mid] && target <= nums[end]) {
                    start = mid + 1;
                } else {
                    end = mid - 1;
                }
            }
        }
        return -1;
    }
}
// class Solution:
//     def search(self, nums: List[int], target: int) -> int:
//         left, right = 0, len(nums) - 1
//         while left <= right:
//             mid = (left + right) // 2
//             if nums[mid] == target:
//                 return mid
//             # Check if left half is sorted
//             if nums[left] <= nums[mid]:
//                 if nums[left] <= target < nums[mid]:
//                     right = mid - 1
//                 else:
//                     left = mid + 1
//             # Otherwise, right half is sorted
//             else:
//                 if nums[mid] < target <= nums[right]:
//                     left = mid + 1
//                 else:
//                     right = mid - 1
//         return -1
