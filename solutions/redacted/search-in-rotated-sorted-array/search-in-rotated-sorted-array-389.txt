class Solution {

    public int method1(int[] nums, int target) {
        // if there is any word like sorted than we sure can that it is legal to apply binary search
        int start = 0;
        int end = nums.length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] == target) {
                return mid;
            }
            // check left array is sorted or right
            if (nums[start] <= nums[mid]) {
                // left array is sorted
                if (nums[start] <= target && target <= nums[mid]) {
                    // it checks that target lies between left sorted array or not
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            } else {
                // right subarray is sorted
                if (nums[mid] <= target && target <= nums[end]) {
                    // it means that target is lies in right sorted array
                    start = mid + 1;
                } else {
                    end = mid - 1;
                }
            }
        }
        return -1;
    }
}
