class Solution {

    public int method1(int[] nums, int target) {
        int n = nums.length;
        int var1 = method2(nums);
        if (nums[var1] <= target && target <= nums[n - 1]) {
            return method1(nums, var1, n - 1, target);
        } else {
            return method1(nums, 0, var1, target);
        }
    }

    public static int method1(int[] nums, int start, int end, int target) {
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] == target) {
                return mid;
            } else if (nums[mid] > target) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return -1;
    }

    public static int method2(int[] nums) {
        int start = 0;
        int end = nums.length - 1;
        while (start < end) {
            int mid = start + (end - start) / 2;
            if (mid > 0 && nums[mid - 1] > nums[mid]) {
                return mid;
            } else if (nums[start] <= nums[mid] && nums[mid] > nums[end]) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return start;
    }
}
