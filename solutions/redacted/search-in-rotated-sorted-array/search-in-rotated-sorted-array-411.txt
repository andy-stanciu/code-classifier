class Solution {

    public int method1(int[] nums, int target) {
        int Peak = peak(nums);
        int ans1 = method2(nums, target, 0, Peak);
        if (ans1 != -1) {
            return ans1;
        }
        int ans2 = method2(nums, target, Peak + 1, nums.length - 1);
        if (ans2 != -1) {
            return ans2;
        }
        return -1;
    }

    int peak(int[] arr) {
        int start = 0;
        int end = arr.length - 1;
        while (start < end) {
            int mid = (start + end) / 2;
            if (mid < end && arr[mid] > arr[mid + 1]) {
                return mid;
            }
            if (mid > 0 && arr[mid] < arr[mid - 1]) {
                return mid - 1;
            }
            if (arr[start] > arr[mid]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return -1;
    }

    int method2(int[] arr, int target, int start, int end) {
        while (start <= end) {
            int mid = (start + end) / 2;
            if (target > arr[mid]) {
                start = mid + 1;
            } else if (target < arr[mid]) {
                end = mid - 1;
            } else {
                return mid;
            }
        }
        return -1;
    }
}
