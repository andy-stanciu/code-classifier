class Solution {

    public int method1(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        while (left <= right) {
            int mid = (left + right) / 2;
            // If the target is found at mid, return its index
            if (nums[mid] == target) {
                return mid;
            }
            // Determine which half is sorted
            if (nums[left] <= nums[mid]) {
                // Left half is sorted
                if (nums[left] <= target && target < nums[mid]) {
                    // Search in the left half
                    right = mid - 1;
                } else {
                    // Search in the right half
                    left = mid + 1;
                }
            } else {
                // Right half is sorted
                if (nums[mid] < target && target <= nums[right]) {
                    // Search in the right half
                    left = mid + 1;
                } else {
                    // Search in the left half
                    right = mid - 1;
                }
            }
        }
        // If the target is not found
        return -1;
    }
}
