class Solution {

    public int method1(int[] nums, int target) {
        int start = 0, end = nums.length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            //if target is found, return the index
            if (nums[mid] == target)
                return mid;
            else //as the array is rotated, we need to check whether first half of the search is
            // in increasing order
            // if yes, lets check whether target is within the range
            if (nums[mid] >= nums[start]) {
                if (target >= nums[start] && target < nums[mid])
                    end = mid - 1;
                else
                    start = mid + 1;
            } else //if the first half is not in increasing order
            //check target is within 2nd half range
            {
                if (target <= nums[end] && target > nums[mid])
                    start = mid + 1;
                else
                    end = mid - 1;
            }
        }
        return -1;
    }
}
