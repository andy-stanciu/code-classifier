class Solution {

    public int method1(int[] nums, int target) {
        int pivot = -1;
        int numslen = nums.length;
        if (nums[0] > nums[numslen - 1])
            pivot = method3(nums);
        System.out.println(pivot);
        if (pivot == -1)
            return method2(nums, 0, numslen - 1, target);
        else if (target >= nums[0]) {
            return method2(nums, 0, pivot - 1, target);
        } else {
            return method2(nums, pivot, numslen - 1, target);
        }
        //   return -1;
    }

    public int method2(int[] nums, int start, int end, int target) {
        if (nums[start] == target)
            return start;
        if (nums[end] == target)
            return end;
        while (start <= end) {
            int mid = (end - start + 1) / 2 + start;
            if (nums[mid] == target) {
                return mid;
            } else if (nums[mid] < target) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return -1;
    }

    public int method3(int[] nums) {
        int low = 0;
        int firstValue = nums[0];
        int high = nums.length - 1;
        int pivot = -1;
        while (low <= high) {
            int mid = (high - low + 1) / 2 + low;
            if (nums[mid] >= firstValue) {
                low = mid + 1;
            } else {
                pivot = mid;
                high = mid - 1;
            }
        }
        return pivot;
    }
}
