class Solution {

    public int method1(int[] nums, int target) {
        int pivot = pivot(nums);
        if (pivot == -1) {
            return method2(nums, target, 0, nums.length - 1);
        } else if (nums[pivot] == target) {
            return pivot;
        } else if (target >= nums[0]) {
            return method2(nums, target, 0, pivot - 1);
        } else {
            return method2(nums, target, pivot + 1, nums.length - 1);
        }
    }

    public int method2(int[] nums, int target, int s, int e) {
        while (s <= e) {
            int m = s + (e - s) / 2;
            if (target > nums[m]) {
                s = m + 1;
            } else if (target < nums[m]) {
                e = m - 1;
            } else {
                return m;
            }
        }
        return -1;
    }

    public int pivot(int[] nums) {
        int s = 0;
        int e = nums.length - 1;
        while (s <= e) {
            int m = s + (e - s) / 2;
            if (m < e && nums[m] > nums[m + 1]) {
                return m;
            } else if (m > s && nums[m] < nums[m - 1]) {
                return m - 1;
            } else if (nums[m] <= nums[s]) {
                e = m - 1;
            } else {
                s = m + 1;
            }
        }
        return -1;
    }
}
