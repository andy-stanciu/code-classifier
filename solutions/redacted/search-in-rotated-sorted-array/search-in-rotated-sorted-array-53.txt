class Solution {

    public int method1(int[] arr, int target) {
        int low = 0;
        int high = arr.length - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (arr[mid] == target) {
                //if found return it
                return mid;
            }
            //check for the sorted part
            if (arr[low] <= arr[mid]) {
                //if low is smaller than mid means left part is sorted otherwise right part is sorted
                if (arr[low] <= target && target <= arr[mid]) {
                    //if  low<=target<=mid means it is in left part so eliminate right part
                    high = mid - 1;
                } else {
                    //if not then eliminate left part;
                    low = mid + 1;
                }
            } else {
                if (arr[mid] <= target && target <= arr[high]) {
                    //if  mid<=target<=high means it is in right part so eliminate left part
                    low = mid + 1;
                } else {
                    //if not then eliminate right part;
                    high = mid - 1;
                }
            }
        }
        return -1;
    }
}
