class Solution {

    public int method1(int[] nums, int target) {
        int n = nums.length;
        int var1 = method2(nums);
        int idx = method3(0, var1 - 1, nums, target);
        if (idx != -1) {
            return idx;
        }
        idx = method3(var1, n - 1, nums, target);
        return idx;
    }

    static int method2(int[] nums) {
        int l = 0;
        int r = nums.length - 1;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] > nums[r]) {
                l = mid + 1;
            } else {
                r = mid;
            }
        }
        return r;
    }

    static int method3(int l, int r, int[] arr, int target) {
        int idx = -1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (arr[mid] == target) {
                idx = mid;
                return idx;
            } else if (arr[mid] < target) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return idx;
    }
}
