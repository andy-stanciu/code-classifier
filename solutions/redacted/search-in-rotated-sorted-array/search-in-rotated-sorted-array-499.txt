class Solution {

    public int method1(int[] nums, int target) {
        return helper(nums, target, 0, nums.length - 1);
    }

    public static int helper(int[] nums, int target, int low, int high) {
        if (low > high)
            return -1;
        int mid = low + (high - low) / 2;
        // Check if mid is the target
        if (nums[mid] == target)
            return mid;
        // Determine which side is sorted
        if (nums[low] <= nums[mid]) {
            // Left side is sorted
            if (nums[low] <= target && target < nums[mid]) {
                // Search left
                return helper(nums, target, low, mid - 1);
            } else {
                // Search right
                return helper(nums, target, mid + 1, high);
            }
        } else {
            // Right side is sorted
            if (nums[mid] < target && target <= nums[high]) {
                // Search right
                return helper(nums, target, mid + 1, high);
            } else {
                // Search left
                return helper(nums, target, low, mid - 1);
            }
        }
    }
}
