class Solution {

    public int method1(int[] nums, int target) {
        int l = 0, r = nums.length - 1;
        while (l <= r) {
            int m = (l + r) / 2;
            if (target == nums[m])
                return m;
            //we have to search the left sorted part of the array
            if (nums[m] >= nums[l]) {
                //target is greater than the largest num in left sorted part
                //then we search right side
                if (target > nums[m])
                    l = m + 1;
                else //target is lesser than the smallest num in left sorted part
                //then we search right side
                if (target < nums[l])
                    l = m + 1;
                else
                    //the value actually lies inside left sorted part
                    r = m - 1;
            } else //we have to search the right sorted part of the array
            {
                //target is lesser than the smallest num in right sorted part
                //then we search left side
                if (target < nums[m])
                    r = m - 1;
                else //target is greater than the largest num in right sorted part
                //then we search left side
                if (target > nums[r])
                    r = m - 1;
                else
                    //the value actually lies inside right sorted part
                    l = m + 1;
            }
        }
        return -1;
    }
}
