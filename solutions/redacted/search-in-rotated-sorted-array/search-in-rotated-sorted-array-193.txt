class Solution {

    public int method1(int[] nums, int target) {
        int l = 0, r = nums.length - 1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] == target)
                return mid;
            // If we are in the left sorted portion of the array
            if (nums[l] <= nums[mid]) {
                // Check if the target lies in the unsorted right half
                if (target > nums[mid] || target < nums[l]) {
                    l = mid + 1;
                } else {
                    r = mid - 1;
                }
            } else // We are in the right sorted portion of the array
            {
                // Check if the target lies in the unsorted left half
                if (target > nums[r] || target < nums[mid]) {
                    r = mid - 1;
                } else {
                    l = mid + 1;
                }
            }
        }
        // Target not found in the array
        return -1;
    }
}
