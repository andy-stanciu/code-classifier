class Solution {

    public int method1(int[] nums, int target) {
        return method2(nums, target, 0, nums.length - 1);
    }

    public int method2(int[] nums, int target, int si, int ei) {
        if (si > ei) {
            return -1;
        }
        int mid = si + (ei - si) / 2;
        if (nums[mid] == target) {
            return mid;
        }
        //target on L1
        if (nums[si] <= nums[mid]) {
            //case a, target on left
            if (nums[si] <= target && target < nums[mid]) {
                return method2(nums, target, si, mid - 1);
            } else {
                return method2(nums, target, mid + 1, ei);
            }
        } else //target on L2
        {
            //case a, target on right
            if (nums[mid] <= target && target <= nums[ei]) {
                return method2(nums, target, mid + 1, ei);
            } else {
                return method2(nums, target, si, mid - 1);
            }
        }
    }
}
