class Solution {

    public int method1(int[] nums) {
        // Okay so we have written our sorts. Use them to pick out the number
        // nums = insertionSort(nums);
        int[] alpha = new int[nums.length + 1];
        for (int i = 0; i < nums.length + 1; i++) {
            alpha[i] = i;
        }
        // now we can brute force it
        for (int i = 0; i < alpha.length; i++) {
            int key = alpha[i];
            int j = 0;
            boolean check = false;
            while (j < nums.length) {
                if (key == nums[j]) {
                    check = true;
                }
                j++;
            }
            if (!check) {
                return key;
            }
        }
        return 0;
    }

    public int[] insertionSort(int[] a) {
        for (int i = 1; i < a.length; i++) {
            int j = i - 1;
            int key = a[i];
            while (j >= 0 && key > a[j]) {
                a[j + 1] = a[j];
            }
            // insert key
            a[j + 1] = key;
        }
        return a;
    }

    public int[] bubbleUp(int[] a) {
        for (int i = 1; i < a.length; i++) {
            for (int j = 0; j < a.length - i; j++) {
                if (a[j] > a[j + 1]) {
                    int temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }
        return a;
    }

    public int[] selectionSort(int[] a) {
        for (int i = 0; i < a.length; i++) {
            int low = i;
            int j = i + 1;
            while (j < a.length) {
                if (a[j] < a[low]) {
                    low = j;
                }
            }
            int temp = a[i];
            a[i] = a[low];
            a[low] = temp;
        }
        return a;
    }
}
