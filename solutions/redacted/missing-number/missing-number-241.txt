class Solution {

    public int method1(int[] nums) {
        /* Method 1 : liner search O(n)
        Arrays.sort(nums);
        if(nums[0] != 0) return 0;
        for(int i = 0 ; i < nums.length -1 ; i++){
            if(nums[i]+1 != nums[i+1]){
                return nums[i]+1;
            }
        }
        return nums[nums.length-1]+1;
        */
        ///* Method 2 : 2 pointer approach O(log n) - 7 ms , 52 mb
        Arrays.sort(nums);
        if (nums[0] != 0)
            return 0;
        int left = 0;
        int right = nums.length - 1;
        while (left < right) {
            if (nums[left] + 1 != nums[left + 1]) {
                return nums[left] + 1;
            }
            if (nums[right] - 1 != nums[right - 1]) {
                return nums[right] - 1;
            }
            left++;
            right--;
        }
        return nums[nums.length - 1] + 1;
    }
}
