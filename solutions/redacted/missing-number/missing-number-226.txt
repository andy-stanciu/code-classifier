class Solution {

    public int method1(int[] nums) {
        int sum = 0;
        for (int i : nums) {
            sum = sum + i;
        }
        return (nums.length * (nums.length + 1) - 2 * sum) / 2;
    }
}
//Not optimized as per ask
// class Solution {
//     public int missingNumber(int[] nums) {
//         HashSet<Integer> set = new HashSet<Integer>();
//         for(int i:nums){
//             set.add(i);
//         }
//         for(int i=1; i<=nums.length; i++){
//             if(!set.contains(i))return i;
//         }
//         return 0;
//     }
// }
