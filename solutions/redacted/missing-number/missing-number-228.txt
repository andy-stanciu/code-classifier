class Solution {

    public int method1(int[] nums) {
        Arrays.sort(nums);
        int l = 0;
        int h = nums.length;
        while (l < h) {
            int mid = l + (h - l) / 2;
            if (nums[mid] <= mid) {
                l = mid + 1;
            } else if (nums[mid] > mid) {
                h = mid;
            } else
                return mid;
        }
        return l;
    }
}

// Approach 2: using HashSet
class Solution {

    public int method1(int[] nums) {
        HashSet<Integer> hs = new HashSet<>();
        for (int i = 0; i < nums.length; i++) {
            hs.add(nums[i]);
        }
        for (int i = 0; i < nums.length; i++) {
            if (!hs.contains(i))
                return i;
        }
        return nums.length;
    }
}
