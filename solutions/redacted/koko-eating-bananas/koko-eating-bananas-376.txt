class Solution {

    public boolean canEatAll(int[] arr, int mid, int h) {
        int actualHours = 0;
        for (int x : arr) {
            //hours
            actualHours += x / mid;
            if (x % mid != 0) {
                actualHours++;
            }
        }
        return actualHours <= h;
    }

    public int method1(int[] piles, int h) {
        int n = piles.length;
        int maxi = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            maxi = Math.max(maxi, piles[i]);
        }
        int l = 1, r = maxi;
        while (l < r) {
            int mid = (l + r) / 2;
            if (canEatAll(piles, mid, h)) {
                r = mid;
            } else {
                l = mid + 1;
            }
        }
        return l;
    }
}
