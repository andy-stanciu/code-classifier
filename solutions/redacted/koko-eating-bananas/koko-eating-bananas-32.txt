class Solution {

    public int method1(int[] piles, int h) {
        int left = 1, right = Arrays.stream(piles).max().getAsInt();
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (method2(piles, h, mid))
                right = mid;
            else
                left = mid + 1;
        }
        return left;
    }

    private boolean method2(int[] piles, int h, int mid) {
        int time = 0;
        for (int i = 0; i < piles.length; i++) time += (piles[i] - 1) / mid + 1;
        if (time > h)
            return false;
        return true;
    }
}
