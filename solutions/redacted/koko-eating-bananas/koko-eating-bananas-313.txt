class Solution {

    public int method1(int[] piles, int h) {
        int n = piles.length;
        int max = Integer.MAX_VALUE;
        for (int i = 0; i < n; i++) max = Math.max(max, piles[i]);
        int s = 1;
        int e = max;
        while (s <= e) {
            int mid = s + (e - s) / 2;
            int totalHour = calculateHour(piles, mid);
            if (totalHour <= h)
                e = mid - 1;
            else
                s = mid + 1;
        }
        return s;
    }

    public int calculateHour(int[] piles, int h) {
        int n = piles.length;
        int totalHour = 0;
        for (int i = 0; i < n; i++) totalHour += Math.ceil((double) piles[i] / (double) h);
        return totalHour;
    }
}
