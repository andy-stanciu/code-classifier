class Solution {

    public int maxElement(int[] piles) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            max = Math.max(max, piles[i]);
        }
        return max;
    }

    public int eatAll(int[] piles, int hour) {
        int totalhours = 0;
        for (int i : piles) {
            totalhours += Math.ceil((double) i / (double) hour);
        }
        return totalhours;
    }

    public int method1(int[] piles, int h) {
        int left = 1;
        int right = maxElement(piles);
        while (left <= right) {
            int mid = left + (right - left) / 2;
            int totalH = eatAll(piles, mid);
            if (totalH <= h) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return left;
    }
}
