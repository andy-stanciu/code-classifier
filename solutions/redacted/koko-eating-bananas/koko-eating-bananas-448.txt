class Solution {

    public int method1(int[] piles, int h) {
        int n = piles.length;
        int min = Integer.MAX_VALUE;
        int temp = 0;
        for (int i = 0; i < n; i++) {
            temp = Math.max(piles[i], temp);
        }
        int high = temp;
        int low = 1;
        while (high >= low) {
            int mid = (high + low) / 2;
            int totalhr = 0;
            for (int j = 0; j < n; j++) {
                totalhr += Math.ceil((double) piles[j] / (double) mid);
            }
            if (totalhr <= h) {
                min = Math.min(min, mid);
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return min;
    }
}
