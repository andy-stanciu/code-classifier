class Solution {

    public int method1(int[] piles, int h) {
        int low = 0, mid = 0;
        int high = maxEle(piles);
        while (low <= high) {
            mid = (low + high) / 2;
            int totH = totHrs(piles, mid);
            if (totH <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }

    public int maxEle(int[] piles) {
        int maxE = Integer.MIN_VALUE;
        int n = piles.length;
        for (int i = 0; i < n; i++) {
            maxE = Math.max(maxE, piles[i]);
        }
        return maxE;
    }

    public int totHrs(int[] piles, int hours) {
        int tot = 0;
        for (int i = 0; i < piles.length; i++) {
            tot += Math.ceil((double) (piles[i]) / (double) (hours));
        }
        return tot;
    }
}
