class Solution {

    public boolean calculateHours(int[] piles, int h, int mid) {
        int hours = 0;
        for (int i = 0; i < piles.length; i++) {
            hours += Math.ceil((double) piles[i] / (double) mid);
        }
        return hours <= h;
    }

    public int method1(int[] piles, int h) {
        int var1 = Integer.MIN_VALUE;
        int n = piles.length;
        for (int i = 0; i < n; i++) {
            var1 = Math.max(piles[i], var1);
        }
        int s = 1, e = var1;
        while (s < e) {
            int mid = s + (e - s) / 2;
            if (calculateHours(piles, h, mid)) {
                e = mid;
            } else {
                s = mid + 1;
            }
        }
        return s;
    }
}
