class Solution {

    public int method1(int[] piles, int h) {
        int max = 0, ans = 0;
        int n = piles.length;
        for (int i = 0; i < n; i++) {
            max = Math.max(max, piles[i]);
        }
        long s = 1;
        long e = max;
        while (s <= e) {
            long mid = s + (e - s) / 2;
            long cnt = 0;
            for (int i = 0; i < n; i++) {
                if (piles[i] <= mid)
                    cnt++;
                else {
                    long val = (long) Math.ceil((double) piles[i] / mid);
                    cnt += val;
                }
            }
            if (cnt <= h) {
                e = mid - 1;
            } else {
                s = mid + 1;
            }
        }
        return (int) s;
    }
}
