class Solution {

    boolean canFinish(int k, int[] piles, int h) {
        for (int i = 0; i < piles.length; i++) {
            h -= piles[i] / k;
            if (piles[i] % k != 0)
                h--;
        }
        return h >= 0;
    }

    public int method1(int[] piles, int h) {
        int min = 1, max = piles[0];
        for (int i = 0; i < piles.length; i++) if (piles[i] > max)
            max = piles[i];
        while (min <= max) {
            int k = (min + max) / 2;
            if (canFinish(k, piles, h)) {
                max = k - 1;
            } else
                min = k + 1;
        }
        return min;
    }
}
