class Solution {

    public int getMax(int[] arr) {
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }

    public int method1(int[] piles, int h) {
        int min = 1;
        int max = getMax(piles);
        int k = Integer.MAX_VALUE;
        int l = 1;
        int r = max;
        while (l <= r) {
            int mid = l + ((r - l) / 2);
            int duration = 0;
            for (int j = 0; j < piles.length; j++) {
                duration += Math.ceil((piles[j] * 1.0) / mid);
            }
            if (duration <= h) {
                if (mid < k) {
                    k = mid;
                }
                r = mid - 1;
            } else if (duration > h) {
                l = mid + 1;
            }
            System.out.println();
            System.out.println();
        }
        return k;
    }
}
