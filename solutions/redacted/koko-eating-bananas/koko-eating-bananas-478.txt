class Solution {

    public int method1(int[] piles, int h) {
        int low = 1, high = maxNum(piles), mid = 0;
        while (low <= high) {
            mid = low + (high - low) / 2;
            if (minBanana(piles, mid) <= h)
                high = mid - 1;
            else
                low = mid + 1;
        }
        return low;
    }

    public int minBanana(int[] piles, int r) {
        double totalHr = 0;
        for (int i = 0; i < piles.length; i++) {
            totalHr = totalHr + Math.ceil((double) piles[i] / (double) r);
        }
        return (int) totalHr;
    }

    public int maxNum(int[] piles) {
        int max = piles[0];
        for (int i = 0; i < piles.length; i++) {
            max = Math.max(max, piles[i]);
        }
        return max;
    }
}
