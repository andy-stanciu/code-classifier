class Solution {

    public boolean verify(int[] piles, int h, int num) {
        int n = piles.length;
        for (int i = 0; i < n; i++) {
            h -= Math.ceil((double) piles[i] / num);
            if (h < 0) {
                return false;
            }
        }
        return true;
    }

    public int method1(int[] piles, int h) {
        int s = 1;
        int e = Arrays.stream(piles).max().getAsInt();
        int ans = 0;
        while (s <= e) {
            int mid = s + (e - s) / 2;
            if (verify(piles, h, mid)) {
                e = mid - 1;
                ans = mid;
            } else {
                s = mid + 1;
            }
        }
        return ans;
    }
}
