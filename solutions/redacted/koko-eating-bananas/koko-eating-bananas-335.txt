class Solution {

    public int method1(int[] piles, int h) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            max = Math.max(max, piles[i]);
        }
        int low = 1;
        int high = max;
        int ans = -1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (sumTofinish(piles, mid) <= h) {
                ans = mid;
                high = mid - 1;
            } else
                low = mid + 1;
        }
        return ans;
    }

    private int sumTofinish(int[] piles, int divisor) {
        int sum = 0;
        for (int j = 0; j < piles.length; j++) {
            double val = Math.ceil((double) piles[j] / divisor);
            sum += val;
        }
        return sum;
    }
}
