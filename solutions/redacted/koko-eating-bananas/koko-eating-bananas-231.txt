// we are asked to find the minimum speed of koko to eat the banana in 1 hour
class Solution {

    public int method1(int[] piles, int h) {
        int left = 1;
        int right = Integer.MAX_VALUE;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (canEatInTime(piles, mid, h)) {
                //possible answer
                right = mid - 1;
            } else
                left = mid + 1;
        }
        return left;
    }

    boolean canEatInTime(int[] piles, int k, int h) {
        int hours = 0;
        for (int i = 0; i < piles.length; i++) {
            int rem = piles[i] / k;
            hours += rem;
            // if remainder value is not 0, we need to have an extra hour
            if (piles[i] % k != 0) {
                hours++;
            }
        }
        // true if hours are less than or equal to h
        return hours <= h;
    }
}
