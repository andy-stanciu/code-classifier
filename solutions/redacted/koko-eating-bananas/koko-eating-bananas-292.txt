class Solution {

    public int method1(int[] piles, int h) {
        int low = 1, high = findMax(piles);
        while (low <= high) {
            int mid = low + (high - low) / 2;
            int totalHours = calculateHours(piles, mid);
            if (totalHours <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }

    public int findMax(int[] piles) {
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < piles.length; i++) {
            max = Math.max(max, piles[i]);
        }
        return max;
    }

    public int calculateHours(int[] piles, int h) {
        int total = 0;
        for (int i = 0; i < piles.length; i++) {
            total += (Math.ceil((double) piles[i] / (double) h));
        }
        return total;
    }
}
