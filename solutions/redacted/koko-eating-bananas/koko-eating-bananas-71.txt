class Solution {

    public int hours(int[] piles, int mid) {
        int sum = 0;
        for (int i = 0; i < piles.length; i++) {
            // if (piles[i] / mid == 0) {
            //     sum += 1;
            // }
            // else {
            //     int k = piles[i] / mid;
            //     sum += k;
            //     if (k * mid != piles[i]) {
            //         sum += 1;
            //     }
            // }
            sum += (piles[i] + mid - 1) / mid;
        }
        return sum;
    }

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = 0;
        for (int i = 0; i < piles.length; i++) {
            high = Math.max(high, piles[i]);
        }
        while (low < high) {
            int mid = low + (high - low) / 2;
            int ans = hours(piles, mid);
            if (ans <= h) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
