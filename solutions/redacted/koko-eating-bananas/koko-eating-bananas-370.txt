class Solution {

    public int method1(int[] piles, int h) {
        int max = piles[0];
        for (int i = 0; i < piles.length; i++) {
            if (piles[i] > piles[0]) {
                max = piles[i];
            }
        }
        int high = max;
        int low = 1;
        int ans = -1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (isPossible(mid, piles, h)) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }

    public static boolean isPossible(int mid, int[] piles, int h) {
        int hourspeed = 0;
        for (int i : piles) {
            hourspeed += Math.ceil((double) i / mid);
        }
        return hourspeed <= h;
    }
}
