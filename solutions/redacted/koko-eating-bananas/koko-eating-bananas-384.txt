class Solution {

    public boolean caneat(int[] piles, int mid, int h) {
        int n = piles.length;
        int hours = 0;
        for (int i : piles) {
            hours += i / mid;
            if (i % mid != 0) {
                hours++;
            }
        }
        return hours <= h;
    }

    public int method1(int[] piles, int h) {
        int left = 1;
        int right = Arrays.stream(piles).max().getAsInt();
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (caneat(piles, mid, h)) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return left;
    }
}
