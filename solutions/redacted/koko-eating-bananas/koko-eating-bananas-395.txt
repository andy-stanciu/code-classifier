class Solution {

    public int method1(int[] piles, int h) {
        // so now the here we will do the binary search and thier is no any formula that we can reduce the
        // the time complexicity here so now
        int start = 1;
        // so now as here we know that here we are going inside the the piles for divinding so why not go
        // iniside it to find the max also
        int end = 0;
        // int ans = Integer.MAX_VALUE;
        for (int num : piles) {
            if (num > end) {
                // so now we have to updat the value
                end = num;
            }
        }
        // so now here we have updated our end also here
        while (start < end) {
            // as we are not starting fromt the zero taht\'s why this  ans zero is giving
            // error here
            // so now here we will calculate the mid
            int mid = start + (end - start) / 2;
            // so now here we calculate the hour in the pile
            int hour = 0;
            for (int num : piles) {
                // so now here we add the value  of num in the hour
                hour += (num / mid);
                // so now here we have to check like if num is 1 and we divide it by 3 then we want 1 not 0
                if (num % mid != 0)
                    hour++;
            }
            // so nwo after this loop now we have to check for the if we get hour less than the expected
            // hour then it can be our potential answer here so now
            if (hour <= h) {
                // so this can be our potential answer so now we have to update the
                // ans = Math.min(ans , mid);  // this not needed now
                // as we want the min answer
                // as this because we have cahnged our base case from the start <= end to
                end = mid;
                // start< end
            } else {
                start = mid + 1;
            }
        }
        // so now here we have to return the ans
        // return ans
        // insipite of return the ans as this is the binary serach we can return the start
        return start;
        // here the next gretater elemtnt than target
        // because in the last of one case it is givieng the error here
    }
}
// piles = [3,6,7,11], h = 8
// k = 1 to 11 bananas per hours
// k = 1,
// 3/1 + 6/1 + 7/1 + 11/1 = 3 + 6 + 7 + 11 = 27hrs > 8 hrs = Not enough time
// k = 2,
// 3/2 + 6/2 + 7/2 + 11/2 = 2 + 3 + 4 + 6 = 15 hrs > 8 hrs = Not enough time
// k = 3,
// 3/3 + 6/3 + 7/3 + 11/3 = 1+ 2+ 3 + 4 = 10hrs > 8 hrs = Not enough time
// k = 4,
// 3/4 + 6/4 + 7/4 + 11/4 = 1 + 2 + 2 + 3 = 8hrs = GOOD
// k = 5,
// 3/5 + 6/5 + 7/5 + 11/5 = 1 + 2 + 2 + 3 = 8hrs = GOOD, but not the minimum k
// k = 6,
// 3/6 + 6/6 + 7/6 + 11/6 = 1 + 1 + 2 + 2 = 4hrs = GOOD, but not the minimum k
// .
// .
// .
// So the answer is k=4 .
