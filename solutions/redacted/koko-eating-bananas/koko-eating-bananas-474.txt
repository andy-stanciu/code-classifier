class Solution {

    public int method1(int[] piles, int h) {
        int low = 1;
        int high = max(piles);
        while (low <= high) {
            int mid = low + (high - low) / 2;
            int totalH = findH(piles, mid);
            if (totalH <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }

    static int max(int[] arr) {
        int maxii = Integer.MIN_VALUE;
        int n = arr.length;
        for (int i = 0; i < n; i++) {
            maxii = Math.max(maxii, arr[i]);
        }
        return maxii;
    }

    static int findH(int[] arr, int h) {
        int total = 0;
        int n = arr.length;
        for (int i = 0; i < n; i++) {
            total += Math.ceil((double) arr[i] / (double) h);
        }
        return total;
    }
}
