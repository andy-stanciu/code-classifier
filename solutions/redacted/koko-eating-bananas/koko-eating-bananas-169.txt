class Solution {

    public boolean banana(int[] piles, int mid, int hours) {
        double time = 0, n = piles.length;
        for (int i = 0; i < n; i++) {
            time += Math.ceil((double) piles[i] / (double) mid);
        }
        return (time <= hours) ? true : false;
    }

    public int method1(int[] piles, int h) {
        int n = piles.length;
        int maxi = 0, low = 1;
        for (int i = 0; i < n; i++) {
            maxi = Math.max(maxi, piles[i]);
        }
        int high = maxi, ans = 0;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (banana(piles, mid, h) == true) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
}
