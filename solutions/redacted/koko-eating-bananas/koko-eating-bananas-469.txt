class Solution {

    public int findMaxLimit(int[] arr) {
        int max = arr[0];
        for (int num : arr) {
            if (num > max) {
                max = num;
            }
        }
        return max;
    }

    public int calculateTotalHour(int[] piles, int hourlyRate) {
        int totalHour = 0;
        for (int pile : piles) {
            totalHour += Math.ceil((double) (pile) / (double) (hourlyRate));
        }
        return totalHour;
    }

    public int method1(int[] piles, int h) {
        // range of hourly rate
        int start = 1;
        int end = findMaxLimit(piles);
        while (start <= end) {
            // hourly rate
            int mid = start + (end - start) / 2;
            int totalHour = calculateTotalHour(piles, mid);
            if (totalHour > h) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        // will point to minimum hourly rate
        return start;
    }
}
