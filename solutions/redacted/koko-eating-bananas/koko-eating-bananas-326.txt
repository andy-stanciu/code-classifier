class Solution {

    public int helper(int[] piles, int n) {
        int val = 0;
        for (int i = 0; i < piles.length; i++) {
            val += Math.ceil((double) piles[i] / (double) n);
        }
        return val;
    }

    public int method1(int[] piles, int h) {
        //calculate the maximum element from piles
        int max = Integer.MIN_VALUE;
        for (int i : piles) {
            max = Math.max(max, i);
        }
        //perform the binary Search
        int low = 1, high = max, result = 0;
        while (low <= high) {
            int mid = (high - low) / 2 + low;
            int x = helper(piles, mid);
            if (x <= h) {
                result = mid;
                high = mid - 1;
            } else
                low = mid + 1;
        }
        return result;
    }
}
