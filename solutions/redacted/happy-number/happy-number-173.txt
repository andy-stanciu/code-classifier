class Solution {

    public boolean method1(int n) {
        int slow = n;
        int fast = n;
        do {
            // moves by 1 step
            slow = sumOfSquares(slow);
            // moves by 2 steps
            fast = sumOfSquares(sumOfSquares(fast));
        } while (// loop until cycle is detected
        slow != fast);
        // if slow meets 1, the number is happy
        return slow == 1;
    }

    private static int sumOfSquares(int n) {
        int sum = 0;
        while (n > 0) {
            int rem = n % 10;
            sum += rem * rem;
            n /= 10;
        }
        return sum;
    }
}
