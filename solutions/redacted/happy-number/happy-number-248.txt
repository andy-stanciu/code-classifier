class Solution {

    public boolean method1(int n) {
        int value = n;
        HashSet<Integer> set = new HashSet();
        while (value != 1) {
            int[] digits = getDigits(value);
            int valSq = 0;
            for (int i = 0; i < digits.length; i++) {
                valSq += digits[i] * digits[i];
            }
            if (set.contains(valSq)) {
                return false;
            }
            set.add(valSq);
            value = valSq;
        }
        if (value == 1) {
            return true;
        } else {
            return false;
        }
    }

    int[] getDigits(int param1) {
        int temp = param1;
        int count = 0;
        while (temp != 0) {
            temp /= 10;
            count++;
        }
        int[] digits = new int[count];
        for (int i = count - 1; i >= 0; i--) {
            digits[i] = param1 % 10;
            param1 /= 10;
        }
        return digits;
    }
}
