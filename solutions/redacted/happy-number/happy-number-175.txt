public class Solution {

    public boolean method1(int n) {
        // Variable to store if the number is happy
        boolean var1;
        // Copy of the input number
        int a = n;
        // Variable to hold the remainder
        int rem;
        // Variable to accumulate the sum of squares
        int sum = 0;
        // Base cases for happy numbers
        if (a == 1 || a == 7) {
            // 1 and 7 are happy numbers
            var1 = true;
        } else if (a > 1 && a < 10) {
            // Single-digit numbers other than 1 and 7 are unhappy
            var1 = false;
        } else {
            // Loop to calculate the sum of squares of digits
            while (a != 0) {
                // Get the last digit
                rem = a % 10;
                // Add the square of the digit to sum
                sum = sum + (rem * rem);
                // Remove the last digit
                a = a / 10;
            }
            // Recursive check for happiness
            if (sum != 1) {
                // Check if the sum is happy
                var1 = method1(sum);
            } else {
                // If sum is 1, then it\'s happy
                var1 = true;
            }
        }
        // Return the result
        return var1;
    }
}
