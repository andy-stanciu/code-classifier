class Solution {

    public boolean method1(int n) {
        // if cycle exist than that no is not a happy number
        // just like in a linkedList
        int slow = n;
        int fast = n;
        // slow moves one step and fast moves two step at a time.
        do {
            slow = square(slow);
            fast = square(square(fast));
        } while (slow != fast);
        return slow == 1;
    }

    public int square(int n) {
        int sum = 0;
        while (n > 0) {
            int r = n % 10;
            sum += r * r;
            n = n / 10;
        }
        return sum;
    }
}
