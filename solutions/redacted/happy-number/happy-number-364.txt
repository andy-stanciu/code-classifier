class Solution {

    public boolean method1(int n) {
        //taken sum variable to store the sum of square of digits of number
        int sum;
        do //taken do-while loop for running the eloop atleast one
        {
            //Every time when the loop begins sum will become zero and store the sum of squares of the upated number
            sum = 0;
            while (//this loop for calculating the sum of squares of updated number
            n != 0) {
                int rem = n % 10;
                sum += (rem * rem);
                n /= 10;
            }
            //the number is updated to sum value for calculating sum of new number
            n = sum;
        } while (//if the calculated sum is below or equal to 9 loop will be terminated
        sum > 9);
        if (//As we know the condition for happy number if the sum of square of the digits of number is  lessa than 10 and equal to 1 or 7  then the number is happy number therefore returned true
        sum == 1 || sum == 7) {
            return true;
        }
        //At last if all become false then this number is not a happy number
        return false;
    }
}
