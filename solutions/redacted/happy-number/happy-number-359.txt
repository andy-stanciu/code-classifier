class Solution {

    public boolean method1(int n) {
        Set<Integer> seen = new HashSet<>();
        while (n > 1) {
            int sos = 0;
            while (n > 0) {
                int digit = n % 10;
                sos += digit * digit;
                n /= 10;
            }
            if (seen.contains(sos)) {
                // Cycle detected
                return false;
            }
            seen.add(sos);
            n = sos;
        }
        // Happy if n becomes 1
        return n == 1;
    }
}
