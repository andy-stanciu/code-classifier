/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null) {
            return null;
        }
        ListNode var1 = new ListNode(-1);
        ListNode var2 = new ListNode(-1);
        ListNode var3 = var1;
        ListNode var4 = var2;
        ListNode cur = head;
        int counter = 1;
        while (cur != null) {
            if (counter % 2 == 1) {
                // Odd position
                var3.next = cur;
                var3 = var3.next;
            } else {
                // Even position
                var4.next = cur;
                var4 = var4.next;
            }
            cur = cur.next;
            counter++;
        }
        // Combine odd and even lists
        var3.next = var2.next;
        // End the even list
        var4.next = null;
        // Skip the dummy node
        return var1.next;
    }
}
