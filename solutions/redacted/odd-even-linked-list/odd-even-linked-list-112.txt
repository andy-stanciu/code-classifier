class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null || head.next.next == null) {
            return head;
        }
        ListNode var1 = head;
        ListNode var2 = head.next;
        solve(head.next.next, var1, var2, true);
        //adding evenHead at end of all odd positioned elements
        ListNode curr = var1;
        while (curr.next != null) {
            curr = curr.next;
        }
        curr.next = var2;
        //return
        return var1;
    }

    //Recursive approach to solve
    void solve(ListNode head, ListNode var1, ListNode var2, boolean param1) {
        if (head == null) {
            if (param1)
                var1.next = null;
            else
                var2.next = null;
            return;
        }
        if (param1) {
            var1.next = head;
            solve(head.next, head, var2, !param1);
        } else {
            var2.next = head;
            solve(head.next, var1, head, !param1);
        }
    }
}
