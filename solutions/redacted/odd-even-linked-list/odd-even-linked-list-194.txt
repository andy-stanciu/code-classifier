class Solution {

    public ListNode method1(ListNode head) {
        // Handle edge cases
        if (head == null || head.next == null)
            return head;
        ListNode var1 = head;
        ListNode var2 = head.next;
        // To reconnect odd and even lists at the end
        ListNode var3 = var2;
        while (var2 != null && var2.next != null) {
            // Link current odd node to next odd node
            var1.next = var2.next;
            // Move odd pointer
            var1 = var1.next;
            // Link current even node to next even node
            var2.next = var1.next;
            // Move even pointer
            var2 = var2.next;
        }
        // Append even list after odd list
        var1.next = var3;
        return head;
    }
}
