/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null) {
            return null;
        }
        ListNode var1 = head;
        ListNode var2 = head.next;
        // To remember the start of even list
        ListNode var3 = var2;
        while (var2 != null && var2.next != null) {
            // Link current odd node to the next odd node
            var1.next = var1.next.next;
            var1 = var1.next;
            //Link current even node to the next even node
            var2.next = var2.next.next;
            var2 = var2.next;
        }
        // Link the end of the odd list to the head of the even list
        var1.next = var3;
        return head;
    }
}
