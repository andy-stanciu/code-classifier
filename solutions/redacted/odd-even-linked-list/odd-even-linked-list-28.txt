/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null || head.next.next == null)
            return head;
        ListNode ptr1 = new ListNode(head.val);
        ListNode ptr2 = new ListNode(head.next.val);
        ListNode res1 = ptr1;
        ListNode res2 = ptr2;
        int k = 0;
        head = head.next.next;
        while (head != null) {
            k++;
            if ((k & 1) == 0) {
                ptr2.next = new ListNode(head.val);
                ptr2 = ptr2.next;
            } else {
                ptr1.next = new ListNode(head.val);
                ptr1 = ptr1.next;
            }
            head = head.next;
        }
        ptr1.next = res2;
        return res1;
    }
}
