/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode var1 = head, var2 = head.next, var3 = var2;
        while (var2 != null && var2.next != null) {
            // setting next as alternate elements
            var1.next = var1.next.next;
            var2.next = var2.next.next;
            // updating current even and odd...as we have already pointed odd and even as next.next....next is alternate element
            var1 = var1.next;
            var2 = var2.next;
        }
        // connecting odd end with even head
        var1.next = var3;
        return head;
    }
}
