/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode var1 = head.next;
        ListNode var2 = head;
        ListNode var3 = var1;
        while (var1 != null && var1.next != null) {
            var2.next = var2.next.next;
            var1.next = var1.next.next;
            var2 = var2.next;
            var1 = var1.next;
        }
        var2.next = var3;
        return head;
    }
}
// class Solution {
//     public ListNode oddEvenList(ListNode head) {
//         ListNode tail = head;
//         int i=0;
//         if(head.next==null || head==null || head.next.next==null){
//             return head;
//         }
//         while(tail.next!=null){
//             tail=tail.next;
//             i++;
//         }
//         int j=2;
//         boolean n = false;
//         ListNode temp = head.next;
//         while(j<=i){
//             if(n==false){
//                 tail.next=temp;
//                 tail=tail.next;
//                 tail.next=null;
//                 temp=temp.next;
//                 n=true;
//                 j++;
//                 continue;
//             }
//             if(n==true && j+2<=i){
//                 temp.next=temp.next.next;
//                 n=false;
//                 j++;
//                 temp=temp.next;
//             } else{
//                 n=false;
//                 temp=temp.next;
//                 j++; continue;
//             }
//         }
//         return head;
//     }
// }
