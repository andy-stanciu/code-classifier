/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
// ex- 1->2->3->4 output 1->3->2->4
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        // make temp nodes odd and even
        ListNode o = head;
        ListNode e = o.next;
        // make another temp node x pts to even
        ListNode x = e;
        while (e != null && e.next != null) {
            // next of o is equal to next of o
            o.next = e.next;
            o = o.next;
            // next of e is equal to next of o
            e.next = o.next;
            // next of e is equal to next of e
            e = e.next;
        }
        // next of o is equal to x
        o.next = x;
        // return LL of odd even LL
        return head;
    }
}
