class Solution {

    public ListNode method1(ListNode head) {
        if (head == null)
            return null;
        ListNode var1 = head;
        ListNode var2 = head.next;
        ListNode var3 = var2;
        // Traverse the list, segregating odd and even nodes
        while (var2 != null && var2.next != null) {
            var1.next = var1.next.next;
            var2.next = var2.next.next;
            var1 = var1.next;
            var2 = var2.next;
        }
        // Connect the end of the odd list to the start of the even list
        var1.next = var3;
        // Return the modified list starting from the head
        return head;
    }
}
