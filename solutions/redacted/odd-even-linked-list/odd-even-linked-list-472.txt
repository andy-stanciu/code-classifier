/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null) {
            return null;
        }
        if (head.next == null) {
            return head;
        }
        ListNode var1 = head;
        ListNode var2 = head.next;
        //for store the starting the even list
        ListNode var3 = head.next;
        while (var1.next != null && var1.next.next != null) {
            // this condintion for odd size linkelist and even size linkedlist
            var1.next = var2.next;
            var1 = var2.next;
            var2.next = var1.next;
            var2 = var1.next;
        }
        // after compliting loop simple connect our odd list to the even list with evenStart node
        var1.next = var3;
        return head;
    }
}
