/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        // if(head == null || head.next == null)return head;
        // ListNode odd = new ListNode(0);
        // ListNode odd_ptr = odd;
        // ListNode even = new ListNode(0);
        // ListNode even_ptr = even;
        // int idx = 1;
        // while(head != null){
        //     if(idx % 2 == 0){
        //         even_ptr.next = head;
        //         even_ptr = even_ptr.next;
        //     }else{
        //         odd_ptr.next = head;
        //         odd_ptr = odd_ptr.next;
        //     }
        //     head = head.next;
        //     idx++;
        // }
        // even_ptr.next = null;
        // odd_ptr.next = even.next;
        // return odd.next;
        //2nd method easy hai
        ListNode temp = head;
        ListNode var1 = new ListNode(0);
        ListNode tempo = var1;
        ListNode var2 = new ListNode(0);
        ListNode tempe = var2;
        while (temp != null) {
            tempo.next = temp;
            temp = temp.next;
            tempo = tempo.next;
            tempe.next = temp;
            if (temp == null)
                break;
            temp = temp.next;
            tempe = tempe.next;
        }
        var1 = var1.next;
        var2 = var2.next;
        tempo.next = var2;
        return var1;
    }
}
