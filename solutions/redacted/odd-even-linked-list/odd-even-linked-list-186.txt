/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null) {
            return head;
        }
        ListNode temp = head;
        ArrayList<Integer> arr = new ArrayList<Integer>();
        int s = 0;
        int index = 0;
        while (temp != null) {
            if (s % 2 == 0) {
                arr.add(index, temp.val);
                index++;
            } else if (s % 2 != 0) {
                arr.add(index + arr.size() / 2, temp.val);
            }
            temp = temp.next;
            s++;
        }
        ListNode l = head;
        ListNode finalarr = l;
        for (int i = 0; i < arr.size(); i++) {
            finalarr.next = new ListNode(arr.get(i));
            finalarr = finalarr.next;
        }
        return head.next;
    }
}
