class Solution {

    public int evalRPN(String[] arr) {
        Stack<Integer> stk = new Stack<>();
        for (int i = 0; i < arr.length; i++) {
            if (arr[i].equals("+")) {
                int a = stk.pop();
                int b = stk.pop();
                int c = a + b;
                stk.push(c);
            } else if (arr[i].equals("*")) {
                int a = stk.pop();
                int b = stk.pop();
                int c = a * b;
                stk.push(c);
            } else if (arr[i].equals("-")) {
                int a = stk.pop();
                int b = stk.pop();
                int c = b - a;
                stk.push(c);
            } else if (arr[i].equals("/")) {
                int a = stk.pop();
                int b = stk.pop();
                int c = b / a;
                stk.push(c);
            } else {
                try {
                    int sample = Integer.parseInt(arr[i]);
                    stk.push(sample);
                } catch (NumberFormatException e) {
                    // Handle invalid input
                    System.out.println("Invalid input: " + arr[i]);
                }
            }
        }
        return stk.pop();
    }
}
