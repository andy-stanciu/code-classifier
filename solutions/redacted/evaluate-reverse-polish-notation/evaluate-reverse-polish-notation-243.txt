class Solution {

    public int evalRPN(String[] tokens) {
        //When a operator is encountered, pop last 2 elements and evaluate it and push back to stack
        //If operand in encountered push it onto stack
        Stack<Integer> st = new Stack<>();
        for (String token : tokens) {
            if (token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/")) {
                int num1 = st.pop();
                int num2 = st.pop();
                int val = 0;
                switch(token) {
                    case "+":
                        val = num2 + num1;
                        break;
                    case "-":
                        val = num2 - num1;
                        break;
                    case "*":
                        val = num2 * num1;
                        break;
                    case "/":
                        if (num1 != 0) {
                            val = num2 / num1;
                        }
                        ;
                        break;
                    default:
                        val = 0;
                }
                st.push(val);
            } else {
                st.push(Integer.valueOf(token));
            }
        }
        return st.pop();
    }
}
