class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (!(tokens[i].equals("+")) && !(tokens[i].equals("-")) && !(tokens[i].equals("*")) && (!tokens[i].equals("/"))) {
                int x1 = Integer.parseInt(tokens[i]);
                st.push(x1);
            } else {
                int x = st.pop();
                int y = st.pop();
                int x3 = comparisons(tokens[i], x, y);
                st.push(x3);
            }
        }
        return st.peek();
    }

    public int comparisons(String op, int x1, int x2) {
        if (op.equals("/"))
            return x2 / x1;
        else if (op.equals("*"))
            return x2 * x1;
        else if (op.equals("-"))
            return x2 - x1;
        else
            return x2 + x1;
    }
}
