class Solution {

    public int evalRPN(String[] tokens) {
        if (tokens.length == 1) {
            return Integer.parseInt(tokens[0]);
        }
        Stack<Integer> stack = new Stack<>();
        int res = 0;
        for (int i = 0; i < tokens.length; i++) {
            if (!tokens[i].equals("/") && !tokens[i].equals("*") && !tokens[i].equals("+") && !tokens[i].equals("-")) {
                stack.push(Integer.parseInt(tokens[i]));
            } else {
                int x = stack.pop();
                int y = stack.pop();
                String operator = tokens[i];
                if (operator.equals("/")) {
                    res = y / x;
                } else if (operator.equals("*")) {
                    res = y * x;
                } else if (operator.equals("-")) {
                    res = y - x;
                } else {
                    res = y + x;
                }
                stack.push(res);
            }
        }
        return res;
    }
}
