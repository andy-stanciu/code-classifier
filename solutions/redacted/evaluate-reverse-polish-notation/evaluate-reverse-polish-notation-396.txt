class Solution {

    public int evalRPN(String[] tokens) {
        ArrayDeque<Integer> stack = new ArrayDeque<>();
        Set<String> operators = Set.of("+", "-", "/", "*");
        for (String token : tokens) {
            if (operators.contains(token)) {
                int right = stack.pop();
                int left = stack.pop();
                int temp = mathy(left, right, token);
                stack.push(temp);
            } else {
                stack.push(Integer.valueOf(token));
            }
        }
        return stack.pop();
    }

    public int mathy(int operandA, int operandB, String op) {
        switch(op) {
            case "+":
                return operandA + operandB;
            case "*":
                return operandA * operandB;
            case "-":
                return operandA - operandB;
            case "/":
                if (operandB == 0)
                    return 0;
                return operandA / operandB;
        }
        return 0;
    }
}
