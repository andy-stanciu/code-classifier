class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            String token = tokens[i];
            if (!(token.equals("+") || token.equals("-") || token.equals("*") || token.equals("/"))) {
                stack.push(Integer.parseInt(token));
            } else {
                // Token is an operator
                int num2 = stack.pop();
                int num1 = stack.pop();
                stack.push(method1(num1, num2, token));
            }
        }
        return stack.pop();
    }

    private int method1(int num1, int num2, String operator) {
        if (operator.equals("+"))
            return num1 + num2;
        if (operator.equals("-"))
            return num1 - num2;
        if (operator.equals("*"))
            return num1 * num2;
        if (operator.equals("/"))
            return num1 / num2;
        throw new IllegalArgumentException("Invalid operator: " + operator);
    }
}
