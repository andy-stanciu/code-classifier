class Solution {

    private static final String PLUS = "+";

    private static final String MINUS = "-";

    private static final String MULTIPLY = "*";

    private static final String DIV = "/";

    public int evalRPN(String[] tokens) {
        Stack<String> stack = new Stack<>();
        for (String token : tokens) {
            if (!token.equals(PLUS) && !token.equals(MINUS) && !token.equals(MULTIPLY) && !token.equals(DIV)) {
                stack.push(token);
            } else {
                int b = Integer.parseInt(stack.pop());
                int a = Integer.parseInt(stack.pop());
                int res = compute(a, b, token);
                stack.push(String.valueOf(res));
            }
        }
        return Integer.parseInt(stack.pop());
    }

    private int compute(int a, int b, String operator) {
        int result = -1;
        switch(operator) {
            case PLUS:
                result = a + b;
                break;
            case MINUS:
                result = a - b;
                break;
            case MULTIPLY:
                result = a * b;
                break;
            case DIV:
                result = a / b;
            default:
        }
        return result;
    }
}
