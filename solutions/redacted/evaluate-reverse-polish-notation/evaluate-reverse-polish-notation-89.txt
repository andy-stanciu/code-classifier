class Solution {

    public int evalRPN(String[] tokens) {
        var stack = new Stack<Integer>();
        int temp1 = 0;
        int temp2 = 0;
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("/") || tokens[i].equals("*")) {
                switch(tokens[i]) {
                    case "+" ->
                        {
                            temp1 = stack.pop();
                            temp2 = stack.pop();
                            stack.push(temp1 + temp2);
                        }
                    case "-" ->
                        {
                            temp1 = stack.pop();
                            temp2 = stack.pop();
                            stack.push(temp2 - temp1);
                        }
                    case "*" ->
                        {
                            temp1 = stack.pop();
                            temp2 = stack.pop();
                            stack.push(temp1 * temp2);
                        }
                    case "/" ->
                        {
                            temp1 = stack.pop();
                            temp2 = stack.pop();
                            stack.push(temp2 / temp1);
                        }
                }
            } else {
                stack.push(Integer.parseInt(tokens[i]));
            }
        }
        return stack.peek();
    }
}
