class Solution {

    public int evalRPN(String[] tokens) {
        int n = tokens.length;
        Stack<Integer> s = new Stack<Integer>();
        for (int i = 0; i < n; i++) {
            if ((tokens[i].length() > 1 && (Integer.parseInt(tokens[i]) <= 0 || Integer.parseInt(tokens[i]) > 0)) || Character.isDigit(tokens[i].charAt(0))) {
                s.push(Integer.parseInt(tokens[i]));
            } else if (s.size() >= 2) {
                int num2 = s.pop();
                int num1 = s.pop();
                if (tokens[i].equals("/")) {
                    s.push(num1 / num2);
                } else if (tokens[i].equals("+")) {
                    s.push(num1 + num2);
                } else if (tokens[i].equals("*")) {
                    s.push(num1 * num2);
                } else if (tokens[i].equals("-")) {
                    s.push(num1 - num2);
                }
            }
        }
        return s.pop();
    }
}
