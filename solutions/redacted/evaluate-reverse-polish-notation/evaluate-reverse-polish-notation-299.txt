class Solution {

    private final List<String> VALID_OPERATORS = List.of("+", "-", "*", "/");

    public int evalRPN(String[] tokens) {
        Stack<Integer> operands = new Stack<>();
        for (String token : tokens) {
            if (VALID_OPERATORS.contains(token)) {
                int value_2 = operands.pop();
                int value_1 = operands.pop();
                operands.push(getValue(value_1, value_2, token));
            } else {
                operands.push(Integer.parseInt(token));
            }
        }
        return operands.pop();
    }

    private int getValue(int value_1, int value_2, String operand) {
        switch(operand) {
            case "+":
                return value_1 + value_2;
            case "-":
                return value_1 - value_2;
            case "*":
                return value_1 * value_2;
            case "/":
                return value_1 / value_2;
            default:
                return 0;
        }
    }
}
