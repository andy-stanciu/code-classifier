class Solution {

    Stack<Integer> stack = new Stack<>();

    public int Calculate(String s) {
        int val2 = stack.pop();
        int val1 = stack.pop();
        switch(s) {
            case "+":
                return val2 + val1;
            case "-":
                return val1 - val2;
            case "*":
                return val1 * val2;
            case "/":
                return val1 / val2;
            default:
                throw new IllegalArgumentException("Illegal operator");
        }
    }

    public int evalRPN(String[] tokens) {
        for (String s : tokens) {
            if (Objects.equals(s, "+") || Objects.equals(s, "-") || Objects.equals(s, "/") || Objects.equals(s, "*")) {
                int val = Calculate(s);
                stack.push(val);
            } else {
                stack.push(Integer.parseInt(s));
            }
        }
        return stack.peek();
    }
}
