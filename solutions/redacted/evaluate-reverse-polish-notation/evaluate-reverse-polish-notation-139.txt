class Solution {

    public int evalRPN(String[] t) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < t.length; i++) {
            if (t[i].equals("+") || t[i].equals("-") || t[i].equals("*") || t[i].equals("/")) {
                if (t[i].equals("+")) {
                    int n = st.pop();
                    int m = st.pop();
                    st.push(m + n);
                } else if (t[i].equals("-")) {
                    int n = st.pop();
                    int m = st.pop();
                    st.push(m - n);
                } else if (t[i].equals("*")) {
                    int n = st.pop();
                    int m = st.pop();
                    st.push(m * n);
                } else if (t[i].equals("/")) {
                    int n = st.pop();
                    int m = st.pop();
                    st.push(m / n);
                }
            } else {
                int a = Integer.parseInt(t[i]);
                st.push(a);
            }
        }
        return st.pop();
    }
}
