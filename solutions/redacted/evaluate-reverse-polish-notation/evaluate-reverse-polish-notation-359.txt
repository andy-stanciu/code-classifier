class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<Integer>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+")) {
                int Rtemp = st.pop();
                int Ltemp = st.pop();
                st.push(Ltemp + Rtemp);
            } else if (tokens[i].equals("-")) {
                int Rtemp = st.pop();
                int Ltemp = st.pop();
                st.push(Ltemp - Rtemp);
            } else if (tokens[i].equals("*")) {
                int Rtemp = st.pop();
                int Ltemp = st.pop();
                st.push(Ltemp * Rtemp);
            } else if (tokens[i].equals("/")) {
                int Rtemp = st.pop();
                int Ltemp = st.pop();
                st.push(Ltemp / Rtemp);
            } else
                st.push(Integer.parseInt(tokens[i]));
        }
        return st.pop();
    }
}
