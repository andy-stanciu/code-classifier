class Solution {

    Set<String> operands = Set.of("+", "-", "*", "/");

    public int evalRPN(String[] tokens) {
        Deque<Integer> deque = new ArrayDeque<>();
        int res = 0, first = 0, second = 0;
        String op = "";
        for (int i = 0; i < tokens.length; i++) {
            String token = tokens[i];
            if (operands.contains(token)) {
                second = deque.pop();
                first = deque.pop();
                op = tokens[i];
                switch(op) {
                    case "+":
                        res = first + second;
                        break;
                    case "-":
                        res = first - second;
                        break;
                    case "*":
                        res = first * second;
                        break;
                    case "/":
                        res = first / second;
                        break;
                    default:
                        break;
                }
                deque.push(res);
            } else {
                deque.push(Integer.parseInt(token));
            }
        }
        return deque.pop();
    }
}
