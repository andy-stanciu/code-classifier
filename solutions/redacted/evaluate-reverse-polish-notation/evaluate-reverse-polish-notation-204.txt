class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            //Evaluating all the possible operations on the 2 topmost stack
            //elements by popping them and then pushing the result back in
            //the stack
            if (tokens[i].equals("+")) {
                int t = st.pop();
                int k = st.pop();
                st.push(t + k);
            } else if (tokens[i].equals("*")) {
                int t = st.pop();
                int k = st.pop();
                st.push(t * k);
            } else if (tokens[i].equals("/")) {
                int t = st.pop();
                int k = st.pop();
                st.push(k / t);
            } else if (tokens[i].equals("-")) {
                int t = st.pop();
                int k = st.pop();
                st.push(k - t);
            } else {
                st.push(Integer.parseInt(tokens[i]));
                //push into the stack when a number comes.
            }
        }
        return st.peek();
    }
}
