class Solution {

    public int evalRPN(String[] tokens) {
        if (tokens == null)
            return 0;
        Stack<Integer> s = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            String str = tokens[i];
            if (isOperator(str)) {
                if (s.size() < 2)
                    return 0;
                s.push(calculate(s.pop(), s.pop(), str));
            } else {
                s.push(Integer.parseInt(str));
            }
        }
        return s.pop();
    }

    private boolean isOperator(String c) {
        return c.equals("+") || c.equals("-") || c.equals("*") || c.equals("/");
    }

    private int calculate(int y, int x, String c) {
        switch(c) {
            case "+":
                return (x + y);
            case "-":
                return (x - y);
            case "*":
                return (x * y);
            case "/":
                return (x / y);
        }
        return 0;
    }
}
