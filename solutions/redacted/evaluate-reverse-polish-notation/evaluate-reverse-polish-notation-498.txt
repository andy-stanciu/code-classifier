class Solution {

    private void calculate(Stack<Integer> st, int operator) {
        //operator value 0-> +, 1-> -, 2-> * , anyother val -> /
        if (st.size() < 2)
            return;
        int right = st.pop();
        int left = st.pop();
        int ans = 0;
        switch(operator) {
            case 0:
                {
                    ans = left + right;
                    break;
                }
            case 1:
                {
                    ans = left - right;
                    break;
                }
            case 2:
                {
                    ans = left * right;
                    break;
                }
            default:
                ans = left / right;
        }
        st.push(ans);
        return;
    }

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (String str : tokens) {
            // check if the str is an operator
            switch(str) {
                case "+":
                    calculate(st, 0);
                    break;
                case "-":
                    calculate(st, 1);
                    break;
                case "/":
                    calculate(st, 4);
                    break;
                case "*":
                    calculate(st, 2);
                    break;
                default:
                    {
                        // str is an integer
                        // convert the str into integer and push in stack
                        int num = Integer.parseInt(str);
                        st.push(num);
                    }
            }
        }
        return st.pop();
    }
}
