class Solution {

    private Set<String> ops = new HashSet<String>() {

        {
            add("+");
            add("-");
            add("*");
            add("/");
        }
    };

    public int evalRPN(String[] tokens) {
        Stack<Integer> stk = new Stack<>();
        for (String token : tokens) {
            if (!ops.contains(token)) {
                stk.push(Integer.parseInt(token));
                continue;
            }
            int second = stk.pop();
            int first = stk.pop();
            switch(token) {
                case "+":
                    stk.push(first + second);
                    break;
                case "-":
                    stk.push(first - second);
                    break;
                case "*":
                    stk.push(first * second);
                    break;
                case "/":
                    stk.push(first / second);
                    break;
            }
        }
        if (stk.size() != 1) {
            return -1;
        }
        return stk.peek();
    }
}
