class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (isOperator(tokens[i])) {
                int second = st.pop();
                int first = st.pop();
                int result = 0;
                switch(tokens[i]) {
                    case "+":
                        result = first + second;
                        break;
                    case "-":
                        result = first - second;
                        break;
                    case "*":
                        result = first * second;
                        break;
                    case "/":
                        int val = (first / second);
                        if (val < 0) {
                            result = (int) -Math.floor(-val);
                        } else {
                            result = (int) Math.floor(val);
                        }
                        break;
                }
                st.push(result);
            } else {
                st.push(Integer.parseInt(tokens[i]));
            }
        }
        return st.pop();
    }

    static boolean isOperator(String op) {
        return op.equals("+") || op.equals("-") || op.equals("*") || op.equals("/");
    }
}
