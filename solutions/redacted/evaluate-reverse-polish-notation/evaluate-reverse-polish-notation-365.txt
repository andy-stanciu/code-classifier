class Solution {

    public int evalRPN(String[] tokens) {
        int n = tokens.length;
        if (n == 0) {
            return 0;
        }
        if (n == 1) {
            return Integer.parseInt(tokens[0]);
        }
        Stack<Integer> stack = new Stack<>();
        int op1, op2 = 0;
        int result = 0;
        for (int i = 0; i < n; i++) {
            String c = tokens[i];
            if (c.equals("+")) {
                op2 = stack.pop();
                op1 = stack.pop();
                result = op1 + op2;
                stack.push(result);
            } else if (c.equals("-")) {
                op2 = stack.pop();
                op1 = stack.pop();
                result = op1 - op2;
                stack.push(result);
            } else if (c.equals("*")) {
                op2 = stack.pop();
                op1 = stack.pop();
                result = op1 * op2;
                stack.push(result);
            } else if (c.equals("/")) {
                op2 = stack.pop();
                op1 = stack.pop();
                result = op1 / op2;
                stack.push(result);
            } else {
                stack.add(Integer.parseInt(tokens[i]));
            }
        }
        return stack.pop();
    }
}
