class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        int p = 0;
        int m, n;
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("*") || tokens[i].equals("/") || tokens[i].equals("+") || tokens[i].equals("-")) {
                n = st.pop();
                m = st.pop();
                if (tokens[i].equals("*")) {
                    p = (n * m);
                } else if (tokens[i].equals("/")) {
                    p = (m / n);
                } else if (tokens[i].equals("+")) {
                    p = (n + m);
                } else if (tokens[i].equals("-")) {
                    p = (m - n);
                }
                st.push(p);
            } else {
                st.push(Integer.parseInt(tokens[i]));
            }
        }
        return st.peek();
    }
}
