class Solution {

    public Stack<String> st = new Stack<>();

    public int evalRPN(String[] tokens) {
        for (int i = 0; i < tokens.length; i++) {
            String curr = tokens[i];
            if (curr.equals("*") || curr.equals("-") || curr.equals("+") || curr.equals("/")) {
                calc(curr);
            } else {
                st.push(curr);
            }
        }
        return Integer.parseInt(st.pop());
    }

    public void calc(String sign) {
        String str1 = st.pop();
        String str2 = st.pop();
        int num1 = Integer.parseInt(str1);
        int num2 = Integer.parseInt(str2);
        if (sign.equals("*")) {
            int ans = num1 * num2;
            st.push(Integer.toString(ans));
        } else if (sign.equals("-")) {
            int ans = num2 - num1;
            st.push(Integer.toString(ans));
        } else if (sign.equals("+")) {
            int ans = num1 + num2;
            st.push(Integer.toString(ans));
        } else if (sign.equals("/")) {
            int ans = num2 / num1;
            st.push(Integer.toString(ans));
        }
    }
}
