class Solution {

    public int evalRPN(String[] tokens) {
        Stack<Integer> operands = new Stack<>();
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+")) {
                int operand1 = operands.pop();
                operands.push(operands.pop() + operand1);
            } else if (tokens[i].equals("-")) {
                int operand1 = operands.pop();
                operands.push(operands.pop() - operand1);
            } else if (tokens[i].equals("*")) {
                int operand1 = operands.pop();
                operands.push(operands.pop() * operand1);
            } else if (tokens[i].equals("/")) {
                int operand1 = operands.pop();
                operands.push(operands.pop() / operand1);
            } else {
                operands.push(Integer.parseInt(tokens[i]));
            }
        }
        return operands.pop();
    }
}
