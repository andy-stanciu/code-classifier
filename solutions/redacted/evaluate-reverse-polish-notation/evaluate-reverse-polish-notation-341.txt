class Solution {

    public int evalRPN(String[] tokens) {
        int result = 0;
        Stack<Integer> st = new Stack<>();
        int res = 0;
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("*") || tokens[i].equals("/")) {
                String op = tokens[i];
                int b = st.pop();
                int a = st.pop();
                switch(op) {
                    case "+":
                        res = a + b;
                        break;
                    case "-":
                        res = a - b;
                        break;
                    case "*":
                        res = a * b;
                        break;
                    case "/":
                        res = a / b;
                        break;
                    default:
                        break;
                }
                st.push(res);
            } else
                st.push(Integer.parseInt(tokens[i]));
        }
        if (!st.isEmpty())
            res = st.pop();
        return res;
    }
}
