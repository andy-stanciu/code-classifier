class Solution {

    public int method1(int[][] param1) {
        if (param1.length == 0) {
            return 0;
        }
        // Sort the intervals based on their start time
        Arrays.sort(param1, (a, b) -> a[0] - b[0]);
        int count = 0;
        int n = param1.length;
        // Pointer to the current interval
        int i = 0;
        // Pointer to the next interval
        int j = 1;
        while (j < n) {
            int[] current = param1[i];
            int[] next = param1[j];
            int cs = current[0];
            int ce = current[1];
            int ns = next[0];
            int ne = next[1];
            if (ce <= ns) {
                // No overlapping
                i = j;
                j++;
            } else if (ce <= ne) {
                // Overlapping and current interval ends before or at the same time as next interval
                j++;
                count++;
            } else {
                // Overlapping and current interval ends after next interval
                i = j;
                j++;
                count++;
            }
        }
        return count;
    }
}
