class Solution {

    public int method1(int[][] param1) {
        Arrays.sort(param1, (a, b) -> a[0] - b[0]);
        LinkedList<int[]> list = new LinkedList<>();
        list.add(param1[0]);
        for (int i = 1; i < param1.length; i++) {
            int[] curr = param1[i];
            int[] last = list.getLast();
            if (last[1] > curr[0]) {
                last[1] = Math.min(last[1], curr[1]);
                list.removeLast();
                list.add(last);
            } else {
                list.add(curr);
            }
        }
        return param1.length - list.size();
    }
}
// TC: O(n * logn) + O(n)
// SC: O(n) -> At worst case all the intervals can be non-overlapping
