class Solution {

    public int method1(int[][] param1) {
        if (param1.length == 0) {
            // No intervals to remove
            return 0;
        }
        // Sort the intervals based on the end time in ascending order
        Arrays.sort(param1, Comparator.comparingInt(a -> a[1]));
        // Number of non-overlapping intervals
        int count = 1;
        // End time of the first interval
        int end = param1[0][1];
        for (int i = 1; i < param1.length; i++) {
            // If the current interval\'s start time is after or equal to the previous interval\'s end time,
            // it is non-overlapping and can be included
            if (param1[i][0] >= end) {
                count++;
                end = param1[i][1];
            }
        }
        // Calculate the number of intervals to remove
        int removeCount = param1.length - count;
        return removeCount;
    }
}
