class Solution {

    public int method1(int[][] param1) {
        if (param1 == null || param1.length == 0)
            return 0;
        //Sort/Prioritise the intervals by their ending time first.
        Arrays.sort(param1, (a, b) -> a[1] - b[1]);
        // First interval is non-overlapping as nothing to compare it with.
        // Store the first interval\'s endpoint to later compare it with the start of the next interval
        int prevEnd = param1[0][1];
        // Counted the first interval alreadt as non-overlapping
        int var1 = 1;
        for (int i = 1; i < param1.length; i++) {
            // If the previous interval is already less than the start of the next interval.
            if (prevEnd <= param1[i][0]) {
                var1++;
                prevEnd = param1[i][1];
            }
        }
        return param1.length - var1;
    }
}
