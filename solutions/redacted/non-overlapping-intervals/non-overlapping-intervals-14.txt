class Solution {

    public int method1(int[][] param1) {
        if (param1.length == 0)
            return 0;
        // Sort intervals based on the start time
        Arrays.sort(param1, (a, b) -> Integer.compare(a[0], b[0]));
        int count = 0;
        int prevEnd = param1[0][1];
        // Iterate through the sorted intervals
        for (int i = 1; i < param1.length; i++) {
            if (param1[i][0] < prevEnd) {
                // Overlapping interval found, increment count and take the interval with the smallest end time
                count++;
                prevEnd = Math.min(prevEnd, param1[i][1]);
            } else {
                // Non-overlapping interval, update prevEnd
                prevEnd = param1[i][1];
            }
        }
        // Return the count of intervals to remove
        return count;
    }
}
