class Solution {

    public int method1(int[][] param1) {
        // this priorityQueue holdes the value sorted according to endTime of interval in ascending Order
        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> a[1] - b[1]);
        for (int[] a : param1) pq.add(a);
        // initialize the prev with the lowest endTiming interval
        int[] prev = pq.poll();
        int needToRemove = 0;
        while (pq.size() > 0) {
            int[] temp = pq.poll();
            if (temp[0] < prev[1]) {
                // if current  starting is less then previous ending then we need to remove current interval
                needToRemove++;
            } else {
                // update the previous to current
                prev = temp;
            }
        }
        return needToRemove;
    }
}
