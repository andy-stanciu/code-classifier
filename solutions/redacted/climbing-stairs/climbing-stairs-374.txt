class Solution {

    public int method1(int n) {
        // \uD544\uC694\uD55C \uCD1D \uBC29\uBC95\uC758 \uC218
        int cnt = 0;
        // \uD53C\uBCF4\uB098\uCE58 \uC218\uC5F4 \uD65C\uC6A9
        // x = (x - 1) + (x - 2)
        // \uAE30\uBCF8 \uAC12 \uC138\uD305
        int[] dp = new int[n];
        dp[0] = 1;
        // \uB9CC\uC57D, n\uC774 1 \uC774\uD558\uB77C\uBA74 \uBC14\uB85C \uB9AC\uD134
        if (n == 1)
            return dp[0];
        dp[1] = 2;
        // n\uC774 3 \uC774\uC0C1\uC774\uB77C\uBA74, \uC774\uC804 \uAC12\uC744 \uD65C\uC6A9\uD558\uC5EC dp[n]\uC744 \uAD6C\uD558\uAE30
        for (int i = 2; i < dp.length; i++) {
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        return dp[n - 1];
    }
}
