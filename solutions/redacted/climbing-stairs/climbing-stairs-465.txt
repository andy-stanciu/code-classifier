class Solution {

    public int method1(int n) {
        int[] dp = new int[n + 1];
        Arrays.fill(dp, -1);
        // Helper function for recursion with memoization
        return method2(n, dp);
    }

    // Helper function to include memoization
    private int method2(int n, int[] dp) {
        // Base cases
        // If there are 0 steps, 1 way to stay where you are
        if (n == 0)
            return 1;
        // If there is 1 step, only 1 way to climb it
        if (n == 1)
            return 1;
        // If the result for n has already been computed, return it
        if (dp[n] != -1)
            return dp[n];
        // Recursively calculate the number of ways to climb the stairs
        dp[n] = method2(n - 1, dp) + method2(n - 2, dp);
        return dp[n];
    }
}
