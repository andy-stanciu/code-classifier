class Solution {

    public Solution() {
        // Initialization
        // Base case:
        // reach floor_0 by doing nothing
        climbMethodTo.put(0, 1);
        // reach floor_1 with one step
        climbMethodTo.put(1, 1);
    }

    int method1(int n) {
        // look-up table, also known as memoization
        if (climbMethodTo.containsKey(n)) {
            return climbMethodTo.get(n);
        }
        // General cases
        // reach floor n from floor (n-1) as well as floor (n-2)
        climbMethodTo.put(n, method1(n - 1) + method1(n - 2));
        return climbMethodTo.get(n);
    }

    private HashMap<Integer, Integer> climbMethodTo = new HashMap<Integer, Integer>();
}
