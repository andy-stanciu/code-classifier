class Solution {

    public int method1(int n) {
        // The standard bottom up approach
        // without optimizing memory usage
        // Base Case, consider the example given.
        if (n <= 3) {
            return n;
        }
        int[] dp = new int[n + 1];
        dp[1] = 1;
        dp[2] = 2;
        // For stair, you can reach it either from
        // taking one step or taking two step
        // Eg. To reach 5th stair, you can go either from 4th stair
        // or from 3rd stair to the 5th.
        // Hence the relationship dp[i] = dp[i - 1] + dp[i - 2];
        for (int i = 3; i <= n; ++i) {
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        return dp[n];
    }
}
