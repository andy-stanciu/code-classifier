class Solution {

    private int getAll(int i, int n, int[] t) {
        // Reached the top
        if (i == n)
            return 1;
        // Exceeded the step count
        if (i > n)
            return 0;
        // Use the previously calculated result
        if (t[i] != -1)
            return t[i];
        // Calculate the number of ways from i by moving 1 or 2 steps
        t[i] = getAll(i + 1, n, t) + getAll(i + 2, n, t);
        return t[i];
    }

    public int method1(int n) {
        // DP array
        int[] t = new int[n + 1];
        // Initialize DP array to -1
        for (int i = 0; i <= n; i++) t[i] = -1;
        // Start from step 0
        return getAll(0, n, t);
    }
}
