class Solution {

    // memoization
    public int method1(int n) {
        return getPaths(n, new int[n + 1]);
    }

    public int getPaths(int n, int[] qb) {
        if (n == 0)
            return 1;
        if (n < 0)
            return 0;
        if (qb[n] != 0)
            return qb[n];
        int sm1 = getPaths(n - 1, qb);
        int sm2 = getPaths(n - 2, qb);
        int sum = sm1 + sm2;
        qb[n] = sum;
        return sum;
    }

    // Tabulation
    public int method1(int n) {
        int[] dp = new int[n + 1];
        dp[0] = 1;
        for (int i = 1; i <= n; i++) {
            if (i == 1) {
                dp[i] = dp[i - 1];
            } else {
                dp[i] = dp[i - 1] + dp[i - 2];
            }
        }
        return dp[n];
    }
}
