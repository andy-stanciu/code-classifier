class Solution {

    public void method1(int[][] matrix) {
        int i, j, t, last;
        //Finding transpose of the matrix
        for (i = 0; i < matrix.length; i++) {
            for (j = 0; j < i; j++) {
                //j will run till i as we need to visit elements only in the lower triangle
                t = matrix[i][j];
                //swapping elements in upper and lower triangle of matrix
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = t;
            }
        }
        // Reversing each row in the matrix
        for (i = 0; i < matrix.length; i++) {
            //for swapping with the elements at the end
            last = matrix.length - 1;
            for (j = 0; j < matrix[i].length / 2; j++) {
                //traversing till n/2 as the elements would again be swapped and will return the same matrix
                t = matrix[i][j];
                matrix[i][j] = matrix[i][last];
                matrix[i][last] = t;
                last--;
            }
        }
    }
}
