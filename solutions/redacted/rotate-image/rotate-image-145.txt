class Solution {

    public void method1(int[][] matrix) {
        // we first take transpose of the matric and then reverse every row to get the final matrix. As rotating matrix means rows->cols and cols-> rows.
        for (int i = 0; i < matrix.length; i++) {
            for (int j = i + 1; j < matrix[0].length; j++) {
                //in order to transpose we swap the elements as
                /* 1 2 3       1 4 7
                   4 5 6   ->  2 5 8 
                   7 8 9       3 6 9
                   thus if we check diagonal elements remain as it is and every other element ie., [i][j]th number is swapped with [j][i]th number.


                */
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
        //after this we have to reverse every row to get the final ans.
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix.length / 2; j++) {
                int temp = matrix[i][j];
                //matrix[i][matrix.length-1-j] every [i][j]element is moved to other half of matrix. the other half ends at n-1. so, every jth element will be swapped with n-1-jth number from right half.
                matrix[i][j] = matrix[i][matrix.length - 1 - j];
                matrix[i][matrix.length - 1 - j] = temp;
                ;
            }
        }
    }
}
