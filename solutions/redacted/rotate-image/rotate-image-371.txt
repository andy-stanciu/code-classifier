class Solution {

    public void method1(int[][] matrix) {
        int n = matrix.length;
        // Transpose the matrix (swap elements across the diagonal)
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                // Correct condition to ensure swapping above the diagonal
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
        // Apply reverse on each row to achieve 90-degree clockwise rotation
        for (int i = 0; i < n; i++) {
            reverse(matrix[i], 0, n - 1);
        }
    }

    // Reverse function for a given row of the matrix
    public static void reverse(int[] row, int i, int j) {
        while (i < j) {
            int temp = row[i];
            row[i] = row[j];
            row[j] = temp;
            i++;
            j--;
        }
    }
}
