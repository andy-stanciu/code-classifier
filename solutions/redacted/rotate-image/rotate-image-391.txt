class Solution {

    public void method1(int[][] matrix) {
        int n = matrix.length;
        for (int i = 0; i < matrix.length / 2; i++) {
            method1(matrix, i, n);
            n -= 2;
        }
    }

    public void method1(int[][] matrix, int offset, int size) {
        int n = matrix.length;
        for (int k = 0; k < size - 1; k++) {
            int prev = matrix[offset][offset], x = 1 + offset, y = offset;
            boolean toRight = true, toTop = false, isX = true;
            while (x < n - offset && y < n - offset && x >= offset && y >= offset) {
                int tmp = matrix[y][x];
                matrix[y][x] = prev;
                prev = tmp;
                if (x == n - 1 - offset && y == offset) {
                    isX = false;
                    toTop = false;
                } else if (x == n - 1 - offset && y == n - 1 - offset) {
                    isX = true;
                    toRight = false;
                } else if (x == offset && y == n - 1 - offset) {
                    isX = false;
                    toTop = true;
                }
                if (isX) {
                    if (toRight) {
                        x++;
                    } else {
                        x--;
                    }
                } else {
                    if (toTop) {
                        y--;
                    } else {
                        y++;
                    }
                }
            }
        }
    }
}
