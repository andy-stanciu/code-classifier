/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    static String ans(TreeNode root, String str, List<String> list) {
        if (root == null)
            return "";
        if (root != null) {
            if (root.left == null && root.right == null) {
                list.add(str += Integer.toString(root.val));
                return "";
            } else {
                str += Integer.toString(root.val) + "->";
                ans(root.left, str, list);
                ans(root.right, str, list);
            }
        }
        return "";
    }

    public List<String> method1(TreeNode root) {
        List<String> list = new ArrayList<String>();
        ans(root, "", list);
        return list;
    }
}
