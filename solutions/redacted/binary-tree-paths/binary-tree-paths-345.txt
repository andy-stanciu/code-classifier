/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> list = new ArrayList<>();
        method2(root, list, new StringBuilder());
        return list;
    }

    public void method2(TreeNode node, List<String> list, StringBuilder builder) {
        if (node == null)
            return;
        builder.append(node.val);
        if (node.left == null && node.right == null) {
            String path = builder.toString();
            list.add(path);
            return;
        }
        builder.append("->");
        method2(node.left, list, new StringBuilder(builder));
        method2(node.right, list, new StringBuilder(builder));
    }
}
