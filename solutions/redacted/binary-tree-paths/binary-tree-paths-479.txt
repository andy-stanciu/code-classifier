class Solution {

    // initialize String list
    public List<String> list = new ArrayList<String>();

    public List<String> method1(TreeNode root) {
        // run recursive method with initial conditions
        inOrderTraversal(root, "");
        // return String list
        return list;
    }

    public void inOrderTraversal(TreeNode node, String path) {
        // if node isn\'t null
        if (node != null) {
            // add node value to path string
            path += node.val;
            // if node is a leaf
            if (node.left == null && node.right == null) {
                // add path to String list
                list.add(path);
            } else // else (assume node isn\'t leaf)
            {
                // add pointer to path string
                path += "->";
            }
            // recursively call into left node
            inOrderTraversal(node.left, path);
            // recursively call into right node
            inOrderTraversal(node.right, path);
        }
    }
}
