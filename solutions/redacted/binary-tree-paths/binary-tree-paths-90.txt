/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> a = new ArrayList<>();
        dfs(root, a, "");
        for (int i = 0; i < a.size(); i++) {
            a.set(i, a.get(i).substring(2));
        }
        return a;
    }

    public void dfs(TreeNode node, List<String> a, String s) {
        if (node == null)
            return;
        if (node.left == null && node.right == null) {
            a.add(s + "->" + node.val);
        }
        s = s + "->" + node.val;
        dfs(node.left, a, s);
        dfs(node.right, a, s);
    }
}
