/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isLeaf(TreeNode node) {
        if (node == null)
            return false;
        if (node.left == null && node.right == null)
            return true;
        return false;
    }

    public void dfs(List<String> ans, TreeNode node, String temp) {
        if (node == null) {
            return;
        }
        temp = temp + node.val;
        if (isLeaf(node)) {
            ans.add(temp);
            return;
        }
        dfs(ans, node.left, temp + "->");
        dfs(ans, node.right, temp + "->");
    }

    public List<String> method1(TreeNode root) {
        List<String> ans = new ArrayList<String>();
        String temp = "";
        dfs(ans, root, temp);
        return ans;
    }
}
