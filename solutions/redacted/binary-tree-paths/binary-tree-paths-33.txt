class Solution {

    List<String> res = new ArrayList<>();

    public List<String> method1(TreeNode root) {
        if (root == null)
            return res;
        dfs(root, new ArrayList<Integer>());
        return res;
    }

    public void dfs(TreeNode root, ArrayList<Integer> path) {
        if (root == null)
            return;
        path.add(root.val);
        if (root.left == null && root.right == null) {
            StringBuilder sb = new StringBuilder();
            sb.append(path.get(0));
            for (int i = 1; i < path.size(); i++) {
                sb.append("->");
                sb.append(path.get(i));
            }
            res.add(sb.toString());
        }
        dfs(root.left, new ArrayList<Integer>(path));
        dfs(root.right, new ArrayList<Integer>(path));
    }
}
