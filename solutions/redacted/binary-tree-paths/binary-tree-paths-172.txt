/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> res = new ArrayList<>();
        String ls = "";
        method2(root, res, ls);
        return res;
    }

    public void method2(TreeNode root, List<String> res, String ls) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            ls = ls + Integer.toString(root.val);
            res.add(ls);
            // if (ls.length() > 2)
            ls = ls.substring(0, ls.length());
        }
        // ls = ls + Integer.toString(root.val);
        method2(root.left, res, ls + root.val + "->");
        // if (ls.length() > 2)
        // ls = ls.substring(0, ls.length()-1);
        // ls = ls + Integer.toString(root.val);
        method2(root.right, res, ls + root.val + "->");
        // if (ls.length() > 2)
        // ls = ls.substring(0, ls.length()-1);
    }
}
