/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    List<String> var1 = new ArrayList();

    public List<String> method1(TreeNode root) {
        StringBuffer sb = new StringBuffer();
        insertR(root, sb);
        return var1;
    }

    void insertR(TreeNode node, StringBuffer sb) {
        if (node != null) {
            sb.append(node.val);
        }
        if (node.left == null && node.right == null) {
            var1.add(sb.toString());
            return;
        } else {
            sb.append("->");
            if (node.left != null) {
                insertR(node.left, new StringBuffer(sb.toString()));
            }
            if (node.right != null) {
                insertR(node.right, new StringBuffer(sb.toString()));
            }
        }
    }
}
