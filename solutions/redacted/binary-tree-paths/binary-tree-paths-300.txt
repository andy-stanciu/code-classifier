/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> list = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        helper(root, list, sb);
        return list;
    }

    public void helper(TreeNode root, List<String> list, StringBuilder sb) {
        if (root == null)
            return;
        int originalLength = sb.length();
        if (root.left == null && root.right == null) {
            sb.append(root.val);
            list.add(sb.toString());
            sb.setLength(originalLength);
            return;
        }
        sb.append(root.val);
        sb.append("->");
        helper(root.left, list, sb);
        helper(root.right, list, sb);
        sb.setLength(originalLength);
    }
}
