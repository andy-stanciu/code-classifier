/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void method1(TreeNode root, ArrayList<String> result, StringBuilder sb) {
        if (root == null) {
            return;
        }
        int len = sb.length();
        sb.append(root.val);
        if (root.left == null && root.right == null) {
            result.add(sb.toString());
            sb.setLength(len);
            return;
        }
        sb.append("->");
        method1(root.left, result, sb);
        method1(root.right, result, sb);
        sb.setLength(len);
    }

    public List<String> method2(TreeNode root) {
        ArrayList<String> result = new ArrayList<>();
        StringBuilder output = new StringBuilder("");
        if (root == null)
            return result;
        else {
            method1(root, result, output);
        }
        return result;
    }
}
