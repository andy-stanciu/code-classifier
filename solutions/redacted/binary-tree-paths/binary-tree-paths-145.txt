class Solution {

    List<String> var1 = new ArrayList<>();

    public void backtrack(TreeNode root, StringBuilder path) {
        // Store the length before appending
        int len = path.length();
        if (root != null) {
            if (len != 0) {
                // Append arrow only if path is not empty
                path.append("->");
            }
            path.append(root.val);
            if (root.left == null && root.right == null) {
                // Leaf node found, add path to the list
                var1.add(path.toString());
            } else {
                // Continue traversing left subtree
                backtrack(root.left, path);
                // Continue traversing right subtree
                backtrack(root.right, path);
            }
            // Backtrack: restore the original length
            path.setLength(len);
        }
    }

    public List<String> method1(TreeNode root) {
        backtrack(root, new StringBuilder());
        return var1;
    }
}
