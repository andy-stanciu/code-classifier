/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> temp = new ArrayList<>();
        List<String> output = new ArrayList<>();
        method2(root, temp, output);
        return output;
    }

    public void method2(TreeNode node, List<String> temp, List<String> output) {
        if (node == null)
            return;
        temp.add(String.valueOf(node.val));
        if (node.left == null && node.right == null) {
            output.add(String.join("->", temp));
        } else {
            method2(node.left, new ArrayList<String>(temp), output);
            method2(node.right, new ArrayList<String>(temp), output);
        }
    }
}
