/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        // List to store paths
        List<String> var1 = new ArrayList<>();
        // call getPath function
        if (root != null) {
            getPath(root, "", var1);
        }
        // return paths list
        return var1;
    }

    void getPath(TreeNode node, String str, List<String> var1) {
        // check if not null
        if (node != null) {
            // add currNode val to path
            str += Integer.toString(node.val);
        }
        // check if currNode is leaf Node
        if (node.left == null && node.right == null) {
            var1.add(str);
        } else {
            if (node.left != null) {
                getPath(node.left, str + "->", var1);
            }
            if (node.right != null) {
                getPath(node.right, str + "->", var1);
            }
        }
    }
}
