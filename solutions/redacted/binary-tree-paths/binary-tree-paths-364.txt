/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static List<String> findPath(TreeNode root, String p, List<String> list) {
        if (root == null) {
            return list;
        }
        if (root.left == null && root.right == null) {
            list.add(p + root.val);
            return list;
        } else {
            findPath(root.left, p + root.val + "->", list);
            findPath(root.right, p + root.val + "->", list);
        }
        return list;
    }

    public List<String> method1(TreeNode root) {
        if (root == null) {
            return new ArrayList<String>();
        }
        return findPath(root, "", new ArrayList<String>());
    }
}
