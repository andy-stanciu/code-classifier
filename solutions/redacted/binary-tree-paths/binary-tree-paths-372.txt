/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        solve(ans, new ArrayList<Integer>(), root);
        return ans;
    }

    void solve(List<String> ans, List<Integer> store, TreeNode root) {
        if (root == null) {
            return;
        }
        store.add(root.val);
        if (root.left == null && root.right == null) {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < store.size() - 1; i++) {
                sb.append(store.get(i)).append("->");
            }
            sb.append(store.get(store.size() - 1));
            ans.add(sb.toString());
            store.remove(store.size() - 1);
            return;
        }
        solve(ans, store, root.left);
        solve(ans, store, root.right);
        store.remove(store.size() - 1);
    }
}
