/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> res = new ArrayList<>();
        String s = "";
        method2(root, res, s);
        return res;
    }

    public void method2(TreeNode node, List<String> param1, String s) {
        if (node == null) {
            return;
        }
        if (node.left == null && node.right == null) {
            param1.add(s + String.valueOf(node.val));
            s = "";
        }
        s = s + String.valueOf(node.val) + "->";
        method2(node.left, param1, s);
        method2(node.right, param1, s);
    }
}
