/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        ArrayList<String> temp = new ArrayList<>();
        ArrayList<String> res = new ArrayList<>();
        myFun(root, temp, res);
        return res;
    }

    public void myFun(TreeNode root, ArrayList<String> temp, ArrayList<String> res) {
        if (root == null) {
            return;
        }
        temp.add(String.valueOf(root.val));
        if (root.left == null && root.right == null) {
            res.add(String.join("->", temp));
            temp.remove(temp.size() - 1);
            return;
        }
        myFun(root.left, temp, res);
        myFun(root.right, temp, res);
        temp.remove(temp.size() - 1);
    }
}
