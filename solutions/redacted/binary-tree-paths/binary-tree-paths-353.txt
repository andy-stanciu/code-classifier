/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private List<String> result = new ArrayList<>();

    private static StringBuilder string = new StringBuilder();

    public List<String> method1(TreeNode root) {
        if (root != null) {
            StringBuilder tempString = new StringBuilder(string);
            string.append(root.val);
            if (root.left == null && root.right == null) {
                result.add(string.toString());
            } else {
                string.append("->");
                method1(root.left);
                method1(root.right);
            }
            string = tempString;
        }
        return result;
    }
}
