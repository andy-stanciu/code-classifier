/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<String> var1 = new ArrayList<>();

    public List<String> method1(TreeNode root) {
        preOrderTraversal(root, "");
        return var1;
    }

    private void preOrderTraversal(TreeNode curr, String path) {
        if (curr == null) {
            return;
        }
        if (curr.left == null && curr.right == null) {
            path += String.valueOf(curr.val);
            var1.add(path);
            return;
        }
        path += String.valueOf(curr.val) + "->";
        preOrderTraversal(curr.left, path);
        preOrderTraversal(curr.right, path);
    }
}
