/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> l = new ArrayList<>();
        rec(l, root, new ArrayList<>());
        return l;
    }

    public String convert(List<String> l) {
        String str = "";
        for (int i = 0; i < l.size(); i++) {
            if (i != l.size() - 1) {
                str = str + String.valueOf(l.get(i)) + "->";
            } else {
                str += String.valueOf(l.get(i));
            }
        }
        return str;
    }

    public void rec(List<String> l, TreeNode root, List<String> list) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            list.add(String.valueOf(root.val));
            l.add(convert(list));
            list.remove(list.size() - 1);
            return;
        }
        list.add(String.valueOf(root.val));
        rec(l, root.left, list);
        rec(l, root.right, list);
        list.remove(list.size() - 1);
        return;
    }
}
