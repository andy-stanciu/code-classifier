/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<String> li = new ArrayList<>();

    public List<String> method1(TreeNode root) {
        dfs(root, new StringBuilder());
        return li;
    }

    public void dfs(TreeNode root, StringBuilder tillNow) {
        if (root == null) {
            return;
        }
        tillNow.append(root.val).append("->");
        if (root.left == null && root.right == null) {
            tillNow.delete(tillNow.length() - 2, tillNow.length());
            li.add(tillNow.toString());
            return;
        }
        dfs(root.left, new StringBuilder(tillNow));
        dfs(root.right, new StringBuilder(tillNow));
    }
}
