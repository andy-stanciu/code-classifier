/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        //result list
        List<String> res = new ArrayList<>();
        helper(root, res, "");
        return res;
    }

    private void helper(TreeNode node, List<String> res, String path) {
        //no node
        if (node == null) {
            return;
        }
        //adding our node
        path += node.val;
        //base case
        if (node.left == null && node.right == null) {
            res.add(path);
        } else {
            //recursion on rest of children nodes
            path += "->";
            helper(node.left, res, path);
            helper(node.right, res, path);
        }
    }
}
