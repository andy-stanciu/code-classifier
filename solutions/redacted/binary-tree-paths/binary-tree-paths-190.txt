/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> li = new ArrayList<>();

    public void path(TreeNode root, StringBuilder s) {
        if (root == null) {
            return;
        }
        if (s.length() == 0) {
            s.append(root.val);
        } else {
            s.append("->").append(root.val);
        }
        if (root.left == null && root.right == null) {
            li.add(s.toString());
        }
        path(root.left, new StringBuilder(s));
        path(root.right, new StringBuilder(s));
    }

    public List<String> method1(TreeNode root) {
        StringBuilder str = new StringBuilder();
        path(root, str);
        return li;
    }
}
