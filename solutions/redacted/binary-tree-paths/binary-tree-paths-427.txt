/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> result = new ArrayList<>();
        List<String> var1 = new ArrayList<>();
        method2(root, result, var1);
        return result;
    }

    private void method2(TreeNode root, List<String> result, List<String> var1) {
        if (root == null) {
            return;
        }
        // add current nodes value to the pathlist string
        var1.add(Integer.toString(root.val));
        if (root.left == null && root.right == null) {
            result.add(String.join("->", var1));
        } else {
            method2(root.left, result, var1);
            method2(root.right, result, var1);
        }
        // backtracking, remove each val from string
        var1.remove(var1.size() - 1);
    }
}
