/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> result = new LinkedList<>();
        helper(root, new StringBuilder(), result);
        return result;
    }

    private static void helper(TreeNode root, StringBuilder builder, List<String> result) {
        if (root == null) {
            return;
        }
        builder.append(root.val);
        if (root.left == null && root.right == null) {
            result.add(builder.toString());
            return;
        }
        builder.append("->");
        int len = builder.length();
        if (root.left != null) {
            helper(root.left, builder, result);
            builder.setLength(len);
        }
        if (root.right != null) {
            helper(root.right, builder, result);
            builder.setLength(len);
        }
    }
}
