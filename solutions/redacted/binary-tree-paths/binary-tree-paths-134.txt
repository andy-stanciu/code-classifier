/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> output = new ArrayList<>();
        if (root != null) {
            backtrack(root, output, new StringBuilder());
        }
        return output;
    }

    private void backtrack(TreeNode root, List<String> output, StringBuilder sb) {
        if (root == null)
            return;
        // \uD604\uC7AC \uACBD\uB85C \uAE38\uC774\uB97C \uC800\uC7A5
        int len = sb.length();
        sb.append(root.val);
        if (root.left == null && root.right == null) {
            output.add(sb.toString());
        } else {
            sb.append("->");
            if (root.left != null)
                backtrack(root.left, output, sb);
            if (root.right != null)
                backtrack(root.right, output, sb);
        }
        // \uC6D0\uB798 \uAE38\uC774\uB85C \uBCF5\uC6D0
        sb.setLength(len);
    }
}
