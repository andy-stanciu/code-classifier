/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> ls = new ArrayList<>();
        path(root, "", ls);
        return ls;
    }

    private void path(TreeNode root, String ans, List ls) {
        //Pre Order Traversal
        if (root == null)
            return;
        ans += Integer.toString(root.val);
        if (root.left == null && root.right == null) {
            ls.add(ans);
            return;
        }
        ans += "->";
        path(root.left, ans, ls);
        path(root.right, ans, ls);
    }
}
