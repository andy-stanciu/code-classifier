/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> ans = new LinkedList();
        backtrack(root, ans, "");
        return ans;
    }

    void backtrack(TreeNode root, List<String> ans, String str) {
        if (root == null) {
            return;
        }
        //storing the original string for backtracking
        String tempstr = str;
        if (str == "")
            str = "" + root.val;
        else
            str = str + "->" + root.val;
        //if it is the end of the list then add it to the list of answers
        if (root.left == null && root.right == null)
            ans.add(new String(str));
        backtrack(root.left, ans, str);
        backtrack(root.right, ans, str);
        // restoring the original string
        str = tempstr;
    }
}
