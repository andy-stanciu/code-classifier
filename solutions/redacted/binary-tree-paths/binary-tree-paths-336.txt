/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static void path(TreeNode node, List<String> lt, String s) {
        if (node.left == null && node.right == null) {
            lt.add(s);
        }
        if (node.left != null) {
            path(node.left, lt, s + "->" + node.left.val);
        }
        if (node.right != null) {
            path(node.right, lt, s + "->" + node.right.val);
        }
    }

    public List<String> method1(TreeNode root) {
        List<String> lt = new ArrayList<>();
        String s = "";
        s += root.val;
        if (root != null) {
            path(root, lt, s);
        }
        return lt;
    }
}
