/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void method1(TreeNode root, List<String> res, List<String> temp) {
        if (root == null)
            return;
        temp.add(Integer.toString(root.val));
        if (//leaf node reached
        root.left == null && root.right == null) {
            StringBuilder sb = new StringBuilder();
            for (String s : temp) {
                sb.append(s);
                sb.append("->");
            }
            res.add(sb.substring(0, sb.length() - 2));
            return;
        }
        if (root.left != null) {
            method1(root.left, res, temp);
            temp.remove(temp.size() - 1);
        }
        if (root.right != null) {
            method1(root.right, res, temp);
            temp.remove(temp.size() - 1);
        }
    }

    public List<String> method2(TreeNode root) {
        List<String> res = new ArrayList<>();
        method1(root, res, new ArrayList<>());
        return res;
    }
}
