/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public void dfs(TreeNode root, ArrayList<String> list, String temp) {
        if (root == null) {
            return;
        }
        temp += root.val + "->";
        if (root.left == null && root.right == null) {
            String temp2 = temp;
            temp2 = temp2.substring(0, temp2.length() - 2);
            if (!list.contains(temp2)) {
                list.add(temp2);
            }
        }
        dfs(root.left, list, temp);
        dfs(root.right, list, temp);
    }

    public List<String> method1(TreeNode root) {
        ArrayList<String> list = new ArrayList<String>();
        dfs(root, list, "");
        System.out.println(list.size());
        return list;
    }
}
