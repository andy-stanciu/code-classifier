class Solution {

    public List<String> method1(TreeNode root) {
        List<String> res = new ArrayList<>();
        StringBuilder sb = new StringBuilder("");
        traverse(root, sb, res);
        return res;
    }

    public void traverse(TreeNode root, StringBuilder sb, List<String> res) {
        if (root == null) {
            return;
        }
        // track of sb length
        int len = sb.length();
        // add the current node value to sb.
        sb.append(root.val);
        if (root.left == null && root.right == null) {
            // if left and right of current root is null means it is leaf node hence, convert whole sb to string.
            res.add(sb.toString());
        } else {
            // else we are in middle of tree hence, we print -> and traverse root in left and right.
            sb.append("->");
            traverse(root.left, sb, res);
            traverse(root.right, sb, res);
        }
        // set length, append the string to the string builder
        sb.setLength(len);
    }
}
