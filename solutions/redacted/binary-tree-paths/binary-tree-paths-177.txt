/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        List<String> finalAns = new ArrayList<>();
        solve(root, ans, finalAns);
        return finalAns;
    }

    public void solve(TreeNode root, List<Integer> ans, List<String> finalAns) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            ans.add(root.val);
            StringBuilder sb = new StringBuilder("");
            for (int i = 0; i < ans.size() - 1; i++) {
                sb.append(ans.get(i));
                sb.append("->");
            }
            sb.append(ans.get(ans.size() - 1));
            finalAns.add(sb.toString());
            //            System.out.println(ans);
            ans.remove(ans.size() - 1);
            return;
        }
        ans.add(root.val);
        solve(root.left, ans, finalAns);
        solve(root.right, ans, finalAns);
        ans.remove(ans.size() - 1);
    }
}
