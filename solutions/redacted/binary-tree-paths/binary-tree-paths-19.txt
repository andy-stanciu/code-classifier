class Solution {

    public List<String> method1(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> result = new ArrayList<>();
        goDFS(root, list, result);
        StringBuilder sb = new StringBuilder();
        List<String> strings = new ArrayList<>();
        for (List<Integer> l : result) {
            for (int i = 0; i < l.size() - 1; i++) {
                sb.append(l.get(i)).append("->");
            }
            sb.append(l.get(l.size() - 1));
            strings.add(sb.toString());
            sb.setLength(0);
        }
        return strings;
    }

    private void goDFS(TreeNode node, List<Integer> list, List<List<Integer>> result) {
        if (node == null)
            return;
        list.add(node.val);
        if (node.left == null && node.right == null) {
            result.add(new ArrayList<>(list));
        }
        goDFS(node.left, list, result);
        goDFS(node.right, list, result);
        list.remove(list.size() - 1);
    }
}
