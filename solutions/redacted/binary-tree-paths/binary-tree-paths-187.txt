/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<String> method1(TreeNode root) {
        List<String> var1 = new ArrayList<>();
        if (root == null)
            return var1;
        dfs(root, "", var1);
        return var1;
    }

    private void dfs(TreeNode node, String path, List<String> var1) {
        if (node == null)
            return;
        if (node.left == null && node.right == null) {
            var1.add(path + node.val);
            return;
        }
        path += node.val + "->";
        dfs(node.left, path, var1);
        dfs(node.right, path, var1);
    }
}
