//Iterative DFS_Inorder
class Solution {

    public int method1(TreeNode root, int k) {
        Stack<TreeNode> stack = new Stack<>();
        while (root != null || !stack.isEmpty()) {
            while (root != null) {
                stack.push(root);
                root = root.left;
            }
            root = stack.pop();
            // Decrease k since we\'ve visited one element
            k--;
            if (k == 0) {
                // Break the loop as we\'ve found the kth smallest element
                break;
            }
            root = root.right;
        }
        // Return the value of the kth smallest element
        return root.val;
    }
}
