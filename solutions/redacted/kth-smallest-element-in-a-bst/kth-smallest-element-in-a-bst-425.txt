/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root, int k) {
        Integer[] res = new Integer[1];
        class Traverse {

            Traverse(TreeNode current, int[] k, Integer[] res) {
                if (current.left != null)
                    new Traverse(current.left, k, res);
                // Decrement k after checking
                if ((k[0]--) == 1)
                    res[0] = current.val;
                // If k becomes 0, stop traversing
                if (k[0] == 0)
                    return;
                if (current.right != null)
                    new Traverse(current.right, k, res);
            }
        }
        new Traverse(root, new int[] { k }, res);
        return res[0];
    }
}
