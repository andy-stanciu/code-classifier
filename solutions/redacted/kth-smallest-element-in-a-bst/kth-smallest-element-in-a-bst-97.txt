/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root, int k) {
        List<Integer> ans = new ArrayList<>();
        method2(root, ans);
        return ans.get(k - 1);
    }

    public void method2(TreeNode node, List<Integer> ans) {
        if (node == null) {
            return;
        }
        // visit the left subtree
        method2(node.left, ans);
        // write the values in a list
        ans.add(node.val);
        // visit the right subtree
        method2(node.right, ans);
    }
}
