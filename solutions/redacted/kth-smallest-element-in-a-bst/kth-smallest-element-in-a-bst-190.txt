/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root, int k) {
        int l = size(root.left);
        int r = size(root.right);
        if (l + 1 == k) {
            return root.val;
        } else if (l >= k) {
            return method1(root.left, k);
        } else {
            //in root.right tree
            return method1(root.right, k - l - 1);
        }
    }

    public int size(TreeNode root) {
        if (root == null) {
            return 0;
        } else if (root.left == null & root.right == null) {
            //is a leaf
            return 1;
        } else {
            if (root.left == null) {
                return size(root.right) + 1;
            } else if (root.right == null) {
                return size(root.left) + 1;
            } else {
                return size(root.right) + size(root.left) + 1;
            }
        }
    }
}
