/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root, int k) {
        PriorityQueue<Integer> var1 = new PriorityQueue<>();
        helper(root, var1, k);
        int ans = 0;
        //traverse kth element
        for (int i = 0; i < k; i++) {
            ans = var1.poll();
        }
        return ans;
    }

    public void helper(TreeNode node, PriorityQueue<Integer> var1, int k) {
        if (node == null) {
            return;
        }
        //In order traversal
        helper(node.left, var1, k);
        var1.offer(node.val);
        helper(node.right, var1, k);
    }
}
