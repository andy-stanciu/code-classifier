/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root, int k) {
        Queue<TreeNode> q = new LinkedList<>();
        List<Integer> l = new ArrayList<>();
        q.add(root);
        int tot = 0;
        while (!q.isEmpty()) {
            int n = q.size();
            for (int i = 0; i < n; i++) {
                TreeNode s = q.poll();
                l.add(s.val);
                if (s.left != null) {
                    q.add(s.left);
                }
                if (s.right != null) {
                    q.add(s.right);
                }
            }
            tot += n;
        }
        if (k > tot) {
            return -1;
        } else {
            Collections.sort(l);
            return l.get(k - 1);
        }
    }
}
