/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int ans = 0;

    int count = 0;

    public int method1(TreeNode root, int k) {
        method2(root, k);
        return ans;
        //2nd approach------------(2ms)
        // List<Integer>ar=new ArrayList<>();
        //inOrder(root,ar);
        // return ar.get(k-1);
    }

    //2nd approach--------------(2ms)
    // public void inOrder(TreeNode root,List<Integer>ar){
    //     if(root==null) return;
    //     inOrder(root.left,ar);
    //     ar.add(root.val);
    //     inOrder(root.right,ar);
    // }
    public void method2(TreeNode root, int k) {
        if (root == null)
            return;
        method2(root.left, k);
        count++;
        if (count == k) {
            ans = root.val;
            return;
        }
        method2(root.right, k);
    }
}
