/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    private int counter = 0;

    private int result;

    public int method1(TreeNode root, int k) {
        method2(root, k);
        return result;
    }

    // find kth smallest and early return
    public boolean method2(TreeNode root, int k) {
        // base case
        if (root == null)
            return false;
        // general case
        if (method2(root.left, k))
            return true;
        counter++;
        if (counter == k) {
            result = root.val;
            return true;
        }
        if (method2(root.right, k))
            return true;
        return false;
    }
}
