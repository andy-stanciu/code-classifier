class Solution {

    private static void rev(int[] arr, int low, int high) {
        int i = low, j = high;
        while (i < j) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
    }

    public void method1(int[] A) {
        // size of the array.
        int n = A.length;
        // Step 1: Find the break point:
        // break point
        int ind = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (A[i] < A[i + 1]) {
                // index i is the break point
                ind = i;
                break;
            }
        }
        // If break point does not exist:
        if (ind == -1) {
            // reverse the whole array:
            rev(A, 0, n - 1);
            return;
        }
        // Step 2: Find the next greater element
        //         and swap it with arr[ind]:
        for (int i = n - 1; i > ind; i--) {
            if (A[i] > A[ind]) {
                int tt = A[i];
                A[i] = A[ind];
                A[ind] = tt;
                break;
            }
        }
        // Step 3: reverse the right half:
        rev(A, ind + 1, n - 1);
        return;
    }
}
