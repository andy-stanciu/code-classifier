class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int ind = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                ind = i;
                break;
            }
        }
        if (ind != -1) {
            for (int i = n - 1; i >= ind; i--) {
                if (nums[i] > nums[ind]) {
                    nums = swap(i, ind, nums);
                    nums = reverse(ind + 1, nums);
                    return;
                }
            }
        }
        nums = reverse(0, nums);
        return;
    }

    public int[] reverse(int index, int[] nums) {
        int n = nums.length;
        int i = index;
        while (i < n) {
            int temp = nums[i];
            nums[i] = nums[n - 1];
            nums[n - 1] = temp;
            i++;
            n--;
        }
        return nums;
    }

    public int[] swap(int i, int ind, int[] nums) {
        int temp = nums[i];
        nums[i] = nums[ind];
        nums[ind] = temp;
        return nums;
    }
}
