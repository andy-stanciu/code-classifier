class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int i = n - 2;
        while (i >= 0 && nums[i] >= nums[i + 1]) {
            //Find the first decreasing element from the end of the array.
            i--;
        }
        if (i < 0) {
            reverse(nums, 0, n - 1);
            return;
        }
        int j = n - 1;
        while (nums[j] <= nums[i]) {
            //Finding the element just larger than nums[i] from right
            j--;
        }
        swap(nums, i, j);
        reverse(nums, i + 1, n - 1);
    }

    private void reverse(int[] nums, int l, int r) {
        while (l < r) {
            swap(nums, l++, r--);
        }
    }

    private void swap(int[] nums, int l, int r) {
        int temp = nums[l];
        nums[l] = nums[r];
        nums[r] = temp;
    }
}
