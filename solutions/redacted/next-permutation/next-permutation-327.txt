class Solution {

    public void method1(int[] nums) {
        int n = nums.length, breakPoint = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                breakPoint = i;
                break;
            }
        }
        if (breakPoint != -1) {
            for (int i = n - 1; i >= 0; i--) {
                if (nums[i] > nums[breakPoint]) {
                    int swap = nums[breakPoint];
                    nums[breakPoint] = nums[i];
                    nums[i] = swap;
                    break;
                }
            }
            reverse(nums, breakPoint + 1);
        } else
            reverse(nums, 0);
    }

    public void reverse(int[] nums, int k) {
        int n = nums.length;
        for (int i = 0; i < (n - k) / 2; i++) {
            int swap = nums[k + i];
            nums[k + i] = nums[n - i - 1];
            nums[n - i - 1] = swap;
        }
    }
}
