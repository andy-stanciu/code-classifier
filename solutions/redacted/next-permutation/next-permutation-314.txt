class Solution {

    public void method1(int[] nums) {
        int n = nums.length, index = -1;
        ;
        //finding the dip and storing the index
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        //if no dip present, reversing whole array
        if (index == -1) {
            rev(nums, 0, n);
        } else {
            for (int i = n - 1; i >= index; i--) {
                if (nums[i] > nums[index]) {
                    int temp = nums[i];
                    nums[i] = nums[index];
                    nums[index] = temp;
                    break;
                }
            }
            //reversing rest part
            rev(nums, index + 1, n);
        }
    }

    private void rev(int[] nums, int start, int end) {
        //for 0-based indexing
        end = end - 1;
        while (start <= end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}
