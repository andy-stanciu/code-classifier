class Solution {

    public void method1(int[] nums) {
        int n = nums.length, curr = n - 2;
        if (n == 1)
            return;
        if (nums[n - 1] > nums[n - 2]) {
            swap(nums, n - 1, n - 2);
            return;
        }
        while (curr >= 0 && nums[curr] >= nums[curr + 1]) {
            curr--;
        }
        if (curr == -1) {
            Arrays.sort(nums);
        } else {
            reverse(nums, curr + 1);
            int var1 = curr + 1;
            while (var1 < n && nums[var1] <= nums[curr]) var1++;
            if (var1 < n)
                swap(nums, curr, var1);
        }
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[j];
        nums[j] = nums[i];
        nums[i] = temp;
    }

    private void reverse(int[] nums, int i) {
        int n = nums.length - 1, last = n;
        while (i < last) {
            swap(nums, i, last);
            last--;
            i++;
        }
    }
}
