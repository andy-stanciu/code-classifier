class Solution {

    public void method1(int[] nums) {
        //part 1 find the breakthrough
        int n = nums.length;
        int ind = -1;
        int ind2 = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                ind = i;
                break;
            }
        }
        if (ind == -1) {
            reverse(nums, 0);
        } else {
            //part 2 next grater elemnt
            for (int i = n - 1; i > ind; i--) {
                if (nums[i] > nums[ind]) {
                    int remp = nums[i];
                    nums[i] = nums[ind];
                    nums[ind] = remp;
                    // ind2=i;
                    break;
                }
            }
            // swap(nums,ind,ind2);
            reverse(nums, ind + 1);
        }
    }

    public void reverse(int[] a, int s) {
        // int i, k, t;
        int n = a.length;
        int i = s, j = n - 1;
        while (i < j) {
            int temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            i++;
            j--;
        }
    }
}
