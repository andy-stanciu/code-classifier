class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int index = -1;
        // Step 1: Find the largest index \'i\' such that nums[i] < nums[i + 1]
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        // If no such index exists, the array is sorted in descending order
        if (index == -1) {
            // Sort the entire array in ascending order
            Arrays.sort(nums);
            return;
        }
        // Step 2: Find the largest index \'j\' greater than \'i\' such that nums[i] < nums[j]
        for (int i = n - 1; i > index; i--) {
            if (nums[i] > nums[index]) {
                // Step 3: Swap nums[index] and nums[j]
                int temp = nums[i];
                nums[i] = nums[index];
                nums[index] = temp;
                break;
            }
        }
        // Step 4: Sort the subarray nums[index + 1 to end]
        Arrays.sort(nums, index + 1, n);
    }
}
