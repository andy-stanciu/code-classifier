class Solution {

    public void method1(int[] nums) {
        int n = nums.length;
        int index = -1;
        // Step 1: Find the first decreasing element from the end
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        // Step 2: If no such element is found, reverse the entire array
        if (index == -1) {
            reverse(nums, 0, n - 1);
            return;
        }
        // Step 3: Find the element just larger than nums[index] from the end
        for (int i = n - 1; i > index; i--) {
            if (nums[i] > nums[index]) {
                // Swap the elements
                int temp = nums[i];
                nums[i] = nums[index];
                nums[index] = temp;
                break;
            }
        }
        // Step 4: Reverse the elements to the right of index
        reverse(nums, index + 1, n - 1);
    }

    private void reverse(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}
