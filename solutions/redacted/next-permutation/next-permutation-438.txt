class Solution {

    public void method1(int[] nums) {
        int ind = -1;
        int n = nums.length;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                ind = i;
                break;
            }
        }
        if (ind == -1) {
            reverse(nums, 0, nums.length - 1);
        } else if (ind != -1) {
            for (int i = nums.length - 1; i > ind; i--) {
                if (nums[i] > nums[ind]) {
                    swap(nums, i, ind);
                    break;
                }
            }
            reverse(nums, ind + 1, nums.length - 1);
        }
    }

    static void reverse(int[] n, int start, int end) {
        while (start < end) {
            int temp = n[start];
            n[start] = n[end];
            n[end] = temp;
            start++;
            end--;
        }
    }

    static void swap(int[] p, int l, int j) {
        int temp = p[l];
        p[l] = p[j];
        p[j] = temp;
    }
}
