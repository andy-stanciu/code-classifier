class Solution {

    public void method1(int[] nums) {
        int index = -1;
        int n = nums.length;
        //found the break point
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        if (index == -1) {
            reverse(nums, 0);
        } else {
            for (int i = n - 1; i >= index; i--) {
                if (nums[i] > nums[index]) {
                    //swap both in numsay
                    int temp = nums[index];
                    nums[index] = nums[i];
                    nums[i] = temp;
                    break;
                }
            }
            reverse(nums, index + 1);
        }
        //find from the back of the numsay the smallest no. which is just greater than the number at index
        //ab bas index+1 se leke n tak k elements ko sort krdena hai in numsay
    }

    public void reverse(int[] nums, int index) {
        //[5,4,3,2,1]  index=2   ==> [5,4,1,2,3]
        int start = index;
        int end = nums.length - 1;
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}
