class Solution {

    public void method1(int[] nums) {
        int i = nums.length - 2;
        while (i >= 0 && nums[i] >= nums[i + 1]) {
            //non increasing suffix ko find krne k liye
            i--;
        }
        if (i >= 0) {
            //if NIS mil gya h to succesor(j) se chalte h
            int j = nums.length - 1;
            while (nums[i] >= nums[j]) {
                // jb pivot(nis) j walw element se bada h j-- chota milte hi loop break and swap(ynhi hmko np mil gya)
                j--;
            }
            swap(nums, i, j);
        } else {
            // already descending order m h 54321 h to
            Arrays.sort(nums);
            return;
        }
        // swap ke bad bche hue element ko sort krne k liye 75321 to 12357 krne k liye
        reverse(nums, i + 1);
    }

    public static void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    public static void reverse(int[] nums, int start) {
        int i = start;
        int j = nums.length - 1;
        while (i < j) {
            swap(nums, i, j);
            i++;
            j--;
        }
    }
}
