class Solution {

    public void method1(int[] nums) {
        if (nums.length == 0 || nums.length == 1) {
            return;
        }
        int last = nums[nums.length - 1];
        int firstGIFromLast = -1;
        int i = nums.length - 2;
        // need >= for 5 1 1
        while (i >= 0 && nums[i] >= nums[i + 1]) {
            i--;
        }
        if (i >= 0) {
            int j = i + 1;
            int smallestGreaterThanI = nums[j];
            int smallestIndex = j;
            while (j < nums.length) {
                if (nums[j] > nums[i] && nums[j] < smallestGreaterThanI) {
                    smallestGreaterThanI = nums[j];
                    smallestIndex = j;
                }
                j++;
            }
            int temp = nums[smallestIndex];
            nums[smallestIndex] = nums[i];
            nums[i] = temp;
        } else {
            Arrays.sort(nums);
            return;
        }
        Arrays.sort(nums, i + 1, nums.length);
    }
}
