class Solution {

    public void swap(int[] nums, int a, int b) {
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }

    public void reverse(int[] nums, int a, int b) {
        while (a < b) {
            swap(nums, a++, b--);
        }
    }

    public void method1(int[] nums) {
        if (nums == null || nums.length <= 1) {
            return;
        }
        int index = -1;
        int n = nums.length;
        // Find the first decreasing element from the right
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                index = i;
                break;
            }
        }
        // If index is found, find the element just larger than nums[index] and swap
        if (index != -1) {
            for (int i = n - 1; i > index; i--) {
                if (nums[i] > nums[index]) {
                    swap(nums, i, index);
                    break;
                }
            }
        }
        // Reverse the elements after the index
        reverse(nums, index + 1, nums.length - 1);
    }
}
