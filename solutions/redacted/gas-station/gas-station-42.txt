class Solution {

    public int canCompleteCircuit(int[] param1, int[] cost) {
        int n = param1.length;
        if (n == 1 && param1[0] >= cost[0])
            return 0;
        int max = 0;
        int startindex = -1;
        for (int i = 0; i < param1.length; i++) {
            int flag = 0;
            if (param1[i] - cost[i] > 0) {
                startindex = i;
                int var1 = param1[startindex];
                int sindex = startindex;
                int k = 0;
                while (k < n) {
                    int var2 = (sindex + 1) % n;
                    if (var1 >= cost[sindex % n])
                        var1 -= cost[sindex % n];
                    else {
                        flag = 1;
                        break;
                    }
                    var1 += param1[(sindex + 1) % n];
                    sindex++;
                    k++;
                }
                if (var1 >= 0 && flag == 0)
                    return startindex;
            }
        }
        return -1;
    }
}
