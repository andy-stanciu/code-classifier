class Solution {

    public int canCompleteCircuit(int[] param1, int[] cost) {
        // Start from 1st station, we know after we reach 4th station, we only have
        // 4 gas left but the cost is 5, and we never stop
        // during station 1 - 3 because we still have surplus
        // of the gas, imagine we start from any
        // stations from 2-3, that would give us less gas when reach 4th station
        // so we will not consider any station from 1-3
        int currGain = 0;
        int totalGain = 0;
        int startPoint = 0;
        for (int i = 0; i < param1.length; i += 1) {
            currGain += param1[i] - cost[i];
            totalGain += param1[i] - cost[i];
            // if we found we not able to make to next station
            // from this i station, we also not able make from
            // any 0 - i station
            if (currGain < 0) {
                currGain = 0;
                startPoint = i + 1;
            }
        }
        if (totalGain >= 0) {
            return startPoint;
        }
        return -1;
    }
}
