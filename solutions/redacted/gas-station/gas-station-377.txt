class Solution {

    public int canCompleteCircuit(int[] param1, int[] cost) {
        int sum = 0, tank = 0, start = 0;
        for (int i = 0; i < param1.length; i++) {
            // \u7B97\u6BCF\u4E00\u7AD9\u79FB\u52D5\u6240\u8981\u4ED8\u51FA\u7684\u6210\u672C
            int diff = param1[i] - cost[i];
            // \u7E3D\u6210\u672C
            sum += diff;
            // \u5F9E start index \u51FA\u767C\uFF0C\u6C7D\u6CB9\u8B8A\u5316
            tank += diff;
            if (tank < 0) {
                // \u82E5\u6C7D\u6CB9\u4E0D\u5920\u8868\u793A\u4E0D\u6703\u662F\u9019\u500B start index
                tank = 0;
                start = i + 1;
            }
        }
        // \u7E3D\u6210\u672C < 0 \u8868\u793A\u6210\u672C\u5927\u65BC\u7372\u5229
        return sum < 0 ? -1 : start;
    }
}
// [5,1,2,3,4]
// [4,4,1,5,1]
// [1,-3,1,-2,3]
