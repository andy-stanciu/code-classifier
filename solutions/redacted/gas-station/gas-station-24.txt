// Greedy Approach (Watch the code, iykyk)
// TC: O M , SC: O 1
class Solution {

    public int canCompleteCircuit(int[] param1, int[] cost) {
        int n = param1.length;
        int var1 = 0;
        int costSum = 0;
        for (int i = 0; i < n; i++) {
            var1 += param1[i];
            costSum += cost[i];
        }
        if (var1 < costSum) {
            // if gasSum is less than costSum, then there can be no ans, return -1
            return -1;
        }
        // if your code reaches here means there has to be exactly on ans fromt the gas arr as per the ques
        int total = 0;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            // take the diff and keep adding in total
            total += param1[i] - cost[i];
            if (total < 0) {
                // if the curr i\'s total becomes negative then assume ur ans to be start from i + 1
                // make total 0
                total = 0;
                // first ith total > 0 will be the ans
                ans = i + 1;
            }
        }
        return ans;
    }
}
