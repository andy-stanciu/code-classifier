class Solution {

    public int sum(int[] arr) {
        int s = 0;
        for (int num : arr) s += num;
        return s;
    }

    public int canCompleteCircuit(int[] param1, int[] cost) {
        // check if solution exists or not
        if (sum(param1) < sum(cost)) {
            return -1;
        }
        // now it is gauranteed that a solution does exists
        int total = 0;
        // initial starting station
        int pos = 0;
        for (int i = 0; i < param1.length; i++) {
            total += param1[i] - cost[i];
            if (total < 0) {
                // this position is not valid, as we dont have enough fuel to travel
                // since we already knew that a solution actually exists
                // next expected position
                pos = i + 1;
                // reset total
                total = 0;
            }
            // if total >= 0, continue adding it to result,
            // That means, previous gas station did contributed values that are feasible
            // to travel to next station
        }
        return total >= 0 ? pos : -1;
    }
}
