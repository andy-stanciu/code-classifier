class Solution {

    public int canCompleteCircuit(int[] param1, int[] cost) {
        // total sum of gas using inbuilt function in java
        int var1 = Arrays.stream(param1).sum();
        // total sum of cost using inbuilt function in java
        int totalcost = Arrays.stream(cost).sum();
        // if totalcost is greater than totalgas then it is impossible to  cover circular track
        if (totalcost > var1)
            return -1;
        // if totalcost is less than totalgas  or totalcost is equal to totalgas then then it is 100% that their is any index present in gas array  by which we can complete a circular track
        int resultIndex = 0;
        int total = 0;
        for (int i = 0; i < param1.length; i++) {
            total += param1[i] - cost[i];
            if (total < 0) {
                // if total is less than 0 then this is not a correct index  we will move to next index and total is upadated to 0
                resultIndex = i + 1;
                total = 0;
            }
        }
        return resultIndex;
    }
}
