class Solution {

    public int canCompleteCircuit(int[] param1, int[] cost) {
        int cursum = 0;
        int totalsum = 0;
        int ind = 0;
        for (int i = 0; i < param1.length; i++) {
            cursum += param1[i] - cost[i];
            totalsum += param1[i] - cost[i];
            if (cursum < 0) {
                ind = i + 1;
                cursum = 0;
            }
        }
        if (totalsum < 0) {
            return -1;
        }
        return ind;
        //  int[][] a=new int[gas.length][3];
        //  for(int i=0;i<gas.length;i++){
        //      a[i][0]=i;
        //      a[i][1]=gas[i];
        //      a[i][2]=cost[i];
        //  }
        //  Arrays.sort(a,Comparator.comparingDouble(o->o[2]));
        //  int ind=a[0][0];
        //  int s=a[0][1];
        //  for(int i=1;i<gas.length;i++){
        //         if(a[i][2]>s){
        //             return -1;
        //         }else{
        //         s=s-a[i][1]+a[i-1][2];
        //      }
        //  }
        //      return ind;
    }
}
