class Solution {

    public int canCompleteCircuit(int[] param1, int[] cost) {
        //WE CAN EITHER USE SUM OF ARRAY OF TOTAL SUM OF DIFF!!
        //ITS MY PRIVACY YOU CANT QUESTION THAT \uD83D\uDE02\uD83D\uDE02!!!
        int var1 = param1.length, total = 0, ans = 0, ind = 0;
        for (int i = 0; i < var1; i++) {
            total += (param1[i] - cost[i]);
            ans += (param1[i] - cost[i]);
            if (ans < 0) {
                ans = 0;
                ind = i + 1;
            }
        }
        return total < 0 ? -1 : ind;
    }
}
//PERSONAL CLARIFICATIONS DONT MIND IT!!
// class Solution {
//     public int canCompleteCircuit(int[] gas, int[] cost) {
//         int ans=0;
//         int gas_len=gas.length,cost_len=cost.length;
//         // int cost_change=cost[cost_len-1];
//         // for(int i=cost_len-1;i>0;i--){
//         //     cost[i]=cost[i-1];
//         // }
//         // cost[0]=cost_change;
//         int val[]=new int[gas_len];
//         for(int i=0;i<gas_len;i++){
//             int iter=1;
//             int p=i+1,sum=gas[i];
//             while(iter<gas_len){
//                 sum=(sum+gas[p%gas_len]-cost[p%gas_len]);
//                 iter++;
//                 p++;
//             }
//             // val[i]=(sum>=cost[i])?cost[i]:Integer.MIN_VALUE;
//             val[i]=sum;
//         }
//         Map<Integer,Integer> mp=new HashMap<>();
//         for(int i=0;i<val.length;i++){
//             if(val[i]!=Integer.MIN_VALUE){
//                 mp.put(val[i],mp.getOrDefault(val[i],0)+1);
//             }
//         }
//         if(mp.size()==0) return -1;
//         else{
//             for(Map.Entry<Integer,Integer> set:mp.entrySet()){
//                 if(set.getValue()==1){
//                     ans=(int)set.getKey();
//                     break;
//                 }
//             }
//         }
//         return ans;
//     }
//     public static void testing(int[] arr){
//         for(int i:arr){
//             System.out.println(i);
//         }
//     }
// }
///   TIME LIMIT EXCEEDED !!! NO PROBLEM THE NEXT APPROACH
// class Solution {
//     public int canCompleteCircuit(int[] gas, int[] cost) {
//         int gas_len=gas.length,cost_len=cost.length;
//         int diff=0;
//         for(int i=0;i<gas_len;i++){
//             diff=gas[i]-cost[i];
//             if(diff>=0){
//                 int iter=1,p=i+1;
//                 while(iter<gas_len){
//                     diff=(diff+(gas[p%gas_len]-cost[p%gas_len]));
//                     if(diff<0){
//                         break;
//                     }
//                     iter++;
//                     p++;
//                 }
//                 if(diff>=0) return i;
//             }
//         }
//         return -1;
//     }
// }
