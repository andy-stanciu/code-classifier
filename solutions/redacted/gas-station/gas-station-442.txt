class Solution {

    public int canCompleteCircuit(int[] param1, int[] cost) {
        int i, j, n = param1.length;
        for (i = 0; i < n; i++) {
            param1[i] = (-cost[i] + param1[i]);
        }
        // storing difference of cost and gas
        int[] rs = new int[2 * n];
        for (i = 0; i < n; i++) {
            rs[i] = param1[i];
        }
        int ind = 0;
        for (i = n; i < (2 * n); i++) {
            rs[i] = rs[ind];
            ind++;
        }
        // start checking from 0th index
        ind = 0;
        while (true) {
            if (ind >= n) {
                break;
            }
            int test = 1, sum = 0;
            for (i = ind; i < ind + n; i++) {
                sum += rs[i];
                if (sum < 0) {
                    test = 0;
                    ind = i + 1;
                    break;
                }
            }
            if (test == 1) {
                return ind;
            }
            if (ind >= n) {
                break;
            }
        }
        return -1;
    }
}
