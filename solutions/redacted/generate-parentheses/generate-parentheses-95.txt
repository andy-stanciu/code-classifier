class Solution {

    public List<String> method1(int n) {
        List<String> ans = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        helper(0, 0, n, ans, sb);
        return ans;
    }

    public void helper(int open, int close, int n, List<String> ans, StringBuilder sb) {
        if (close == n && open == n) {
            ans.add(sb.toString());
            return;
        }
        if (open < n) {
            // Add an opening bracket
            sb.append("(");
            helper(open + 1, close, n, ans, sb);
            // Backtrack: remove last character added
            sb.deleteCharAt(sb.length() - 1);
        }
        if (close < open) {
            // We can only add a closing bracket if there are unmatched opening brackets
            // Add a closing bracket
            sb.append(")");
            helper(open, close + 1, n, ans, sb);
            // Backtrack: remove last character added
            sb.deleteCharAt(sb.length() - 1);
        }
    }
}
