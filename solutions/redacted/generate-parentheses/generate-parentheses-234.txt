class Solution {

    List<String> parenthesis = new ArrayList<>();

    public List<String> method1(int n) {
        dfs(0, 0, n, new StringBuilder());
        return parenthesis;
    }

    public void dfs(int open, int closed, int n, StringBuilder str) {
        if (open == n && closed == n) {
            parenthesis.add(str.toString());
            return;
        }
        if (open < n) {
            str.append("(");
            dfs(open + 1, closed, n, str);
            str.setLength(str.length() - 1);
        }
        if (closed < open) {
            str.append(")");
            dfs(open, closed + 1, n, str);
            str.setLength(str.length() - 1);
        }
    }
}
