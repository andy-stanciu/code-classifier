class Solution {

    public void solve(List<String> ans, int n, int open, int close, StringBuilder curr) {
        if (curr.length() == n * 2) {
            ans.add(curr.toString());
            return;
        }
        if (open < n) {
            curr.append("(");
            solve(ans, n, open + 1, close, curr);
            curr.delete(curr.length() - 1, curr.length());
            // System.out.println(curr.toString());
        }
        if (close < open) {
            curr.append(")");
            solve(ans, n, open, close + 1, curr);
            curr.delete(curr.length() - 1, curr.length());
            // System.out.println(curr.toString());
        }
        return;
    }

    public List<String> method1(int n) {
        List<String> ans = new ArrayList<>();
        StringBuilder str = new StringBuilder();
        solve(ans, n, 0, 0, str);
        return ans;
    }
}
