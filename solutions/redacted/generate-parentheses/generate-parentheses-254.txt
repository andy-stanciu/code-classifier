class Solution {

    public List<String> method1(int n) {
        List<String> list = new ArrayList<>();
        backtrack(list, new StringBuilder(), 0, 0, n);
        return list;
    }

    private void backtrack(List<String> list, StringBuilder sb, int open, int close, int max) {
        if (sb.length() == max * 2) {
            list.add(sb.toString());
            return;
        }
        int length = sb.length();
        if (open < max) {
            backtrack(list, sb.append("("), open + 1, close, max);
            sb.setLength(length);
        }
        if (close < open) {
            backtrack(list, sb.append(")"), open, close + 1, max);
            sb.setLength(length);
        }
    }
}
