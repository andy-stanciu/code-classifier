class Solution {

    public void helper(int n, int open, int close, String sb, List<String> list) {
        if (sb.length() == n * 2) {
            list.add(sb);
            return;
        }
        if (open < n) {
            helper(n, open + 1, close, sb + "(", list);
        }
        if (close < open) {
            helper(n, open, close + 1, sb + ")", list);
        }
    }

    public List<String> method1(int n) {
        List<String> list = new ArrayList<>();
        if (n == 0)
            return list;
        //StringBuilder sb=new StringBuilder();
        String sb = "";
        helper(n, 0, 0, sb, list);
        return list;
    }
}
