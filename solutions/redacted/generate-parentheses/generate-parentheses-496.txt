class Solution {

    private void helper(List<String> ans, StringBuilder sb, int close, int open, int n) {
        if (n == close && n == open) {
            ans.add(sb.toString());
            return;
        }
        if (open < n) {
            sb.append("(");
            helper(ans, sb, close, open + 1, n);
            sb.setLength(sb.length() - 1);
        }
        if (open > close) {
            sb.append(")");
            helper(ans, sb, close + 1, open, n);
            sb.setLength(sb.length() - 1);
        }
    }

    public List<String> method1(int n) {
        List<String> ans = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        helper(ans, sb, 0, 0, n);
        return ans;
    }
}
