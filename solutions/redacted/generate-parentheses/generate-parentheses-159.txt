class Solution {

    private void solve(int n, int open, int close, List<String> ans, String str) {
        // stop when open==close
        if (str.length() == 2 * n) {
            ans.add(str);
            return;
        }
        // add open parenthesis
        if (open < n) {
            solve(n, open + 1, close, ans, str + "(");
        }
        // add close parenthesis
        if (close < open) {
            solve(n, open, close + 1, ans, str + ")");
        }
    }

    public List<String> method1(int n) {
        List<String> ans = new ArrayList<>();
        int open = 0;
        int close = 0;
        String str = "";
        solve(n, open, close, ans, str);
        return ans;
    }
}
