class Solution {

    public void method1(List<String> result, String patt, int n, int noOfLeft, int open) {
        if (patt.length() == 2 * n) {
            result.add(patt);
            return;
        }
        if (noOfLeft == n) {
            method1(result, patt + ")", n, noOfLeft, open - 1);
        } else {
            if (open != 0)
                method1(result, patt + ")", n, noOfLeft, open - 1);
            method1(result, patt + "(", n, noOfLeft + 1, open + 1);
        }
    }

    public List<String> method2(int n) {
        if (n == 0)
            return new ArrayList<String>();
        List<String> res = new ArrayList<String>();
        method1(res, "", n, 0, 0);
        return res;
    }
}
