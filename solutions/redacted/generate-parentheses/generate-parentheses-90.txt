class Solution {

    public List<String> method1(int n) {
        List<String> res = new ArrayList<>();
        int openCount = 0, closeCount = 0;
        StringBuilder sb = new StringBuilder();
        return method2(res, sb, openCount, closeCount, n);
    }

    private List<String> method2(List<String> res, StringBuilder sb, int openCount, int closeCount, int n) {
        if (openCount == closeCount && openCount + closeCount == 2 * n) {
            res.add(sb.toString());
            return res;
        }
        if (openCount < n) {
            sb.append("(");
            openCount++;
            method2(res, sb, openCount, closeCount, n);
            sb.deleteCharAt(sb.length() - 1);
            openCount--;
        }
        if (closeCount < openCount) {
            sb.append(")");
            closeCount++;
            method2(res, sb, openCount, closeCount, n);
            sb.deleteCharAt(sb.length() - 1);
            closeCount--;
        }
        return res;
    }
}
