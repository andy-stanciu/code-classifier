class Solution {

    public List<String> method1(int n) {
        List<String> list = new ArrayList<String>();
        method2(n, n, "", list);
        return list;
    }

    // Function to generate all well-formed parenntheses
    void method2(int op, int cl, String cs, List<String> list) {
        if (op > cl)
            return;
        if (op == 0 && cl == 0) {
            list.add(cs);
        } else {
            if (op > 0)
                method2(op - 1, cl, cs + "(", list);
            if (cl > op)
                method2(op, cl - 1, cs + ")", list);
        }
    }
}
