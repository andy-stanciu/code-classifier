class Solution {

    List<String> res = new LinkedList<>();

    int max;

    public List<String> method1(int n) {
        if (n == 0)
            return res;
        max = n;
        backtrack(0, 0, new StringBuilder());
        return res;
    }

    public void backtrack(int left, int right, StringBuilder sb) {
        if (sb.length() == max * 2) {
            res.add(sb.toString());
            return;
        }
        if (left < max) {
            sb.append("(");
            backtrack(left + 1, right, sb);
            sb.deleteCharAt(sb.length() - 1);
        }
        if (right < left) {
            sb.append(")");
            backtrack(left, right + 1, sb);
            sb.deleteCharAt(sb.length() - 1);
        }
    }
}
