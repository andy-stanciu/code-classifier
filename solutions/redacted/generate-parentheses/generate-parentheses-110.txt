class Solution {

    List<String> ans = new ArrayList<>();

    public List<String> method1(int n) {
        if (n < 1)
            return ans;
        backtrack(0, 0, new StringBuilder(), n);
        return ans;
    }

    public void backtrack(int currLen, int currOpenNum, StringBuilder sb, int n) {
        if (currLen == 2 * n) {
            ans.add(sb.toString());
        }
        // Add left parenthesis
        if (currOpenNum < n) {
            sb.append("(");
            backtrack(currLen + 1, currOpenNum + 1, sb, n);
            sb.deleteCharAt(sb.length() - 1);
        }
        // If the num of right parenthesis is no more than left parenthesis
        // Add right parenthesis
        if (currLen - currOpenNum < currOpenNum) {
            sb.append(")");
            backtrack(currLen + 1, currOpenNum, sb, n);
            sb.deleteCharAt(sb.length() - 1);
        }
    }
}
