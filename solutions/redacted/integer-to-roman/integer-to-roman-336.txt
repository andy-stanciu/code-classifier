class Solution {

    public String method1(int num) {
        HashMap<Integer, String> numbersMap = new HashMap<>();
        numbersMap.put(1, "I");
        numbersMap.put(2, "II");
        numbersMap.put(3, "III");
        numbersMap.put(4, "IV");
        numbersMap.put(5, "V");
        numbersMap.put(6, "VI");
        numbersMap.put(7, "VII");
        numbersMap.put(8, "VIII");
        numbersMap.put(9, "IX");
        HashMap<Integer, String> tenthsMap = new HashMap<>();
        tenthsMap.put(1, "X");
        tenthsMap.put(2, "XX");
        tenthsMap.put(3, "XXX");
        tenthsMap.put(4, "XL");
        tenthsMap.put(5, "L");
        tenthsMap.put(6, "LX");
        tenthsMap.put(7, "LXX");
        tenthsMap.put(8, "LXXX");
        tenthsMap.put(9, "XC");
        HashMap<Integer, String> hundrethsMap = new HashMap<>();
        hundrethsMap.put(1, "C");
        hundrethsMap.put(2, "CC");
        hundrethsMap.put(3, "CCC");
        hundrethsMap.put(4, "CD");
        hundrethsMap.put(5, "D");
        hundrethsMap.put(6, "DC");
        hundrethsMap.put(7, "DCC");
        hundrethsMap.put(8, "DCCC");
        hundrethsMap.put(9, "CM");
        HashMap<Integer, String> thousandthsMap = new HashMap<>();
        thousandthsMap.put(1, "M");
        thousandthsMap.put(2, "MM");
        thousandthsMap.put(3, "MMM");
        String res = "";
        if (num >= 1000) {
            Integer th = num / 1000;
            Integer hd = num % 1000 / 100;
            Integer t = num % 100 / 10;
            Integer n = num % 10;
            res = convertNumber(th, thousandthsMap) + convertNumber(hd, hundrethsMap) + convertNumber(t, tenthsMap) + convertNumber(n, numbersMap);
        } else if (num < 1000 && num >= 100) {
            int hd = num % 1000 / 100;
            int t = num % 100 / 10;
            int n = num % 10;
            res = convertNumber(hd, hundrethsMap) + convertNumber(t, tenthsMap) + convertNumber(n, numbersMap);
        } else if (num < 100 && num >= 10) {
            int t = num % 100 / 10;
            int n = num % 10;
            res = convertNumber(t, tenthsMap) + convertNumber(n, numbersMap);
        } else {
            res = convertNumber(num, numbersMap);
        }
        return res;
    }

    public String convertNumber(Integer num, HashMap<Integer, String> numMap) {
        if (numMap.containsKey(num)) {
            return numMap.get(num);
        } else {
            return "";
        }
    }
}
