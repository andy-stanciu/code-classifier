class Solution {

    public String method1(int num) {
        //set up an empty string to push our roman digits to
        String var1 = "";
        //progressively remove thousands and hundreds etc. concatenating those digits onto the roman number until you reach 0
        while (num >= 1000) {
            num -= 1000;
            var1 = var1.concat("M");
        }
        while (num >= 900) {
            num -= 900;
            var1 = var1.concat("CM");
        }
        while (num >= 500) {
            num -= 500;
            var1 = var1.concat("D");
        }
        while (num >= 400) {
            num -= 400;
            var1 = var1.concat("CD");
        }
        while (num >= 100) {
            num -= 100;
            var1 = var1.concat("C");
        }
        while (num >= 90) {
            num -= 90;
            var1 = var1.concat("XC");
        }
        while (num >= 50) {
            num -= 50;
            var1 = var1.concat("L");
        }
        while (num >= 40) {
            num -= 40;
            var1 = var1.concat("XL");
        }
        while (num >= 10) {
            num -= 10;
            var1 = var1.concat("X");
        }
        while (num >= 9) {
            num -= 9;
            var1 = var1.concat("IX");
        }
        while (num >= 5) {
            num -= 5;
            var1 = var1.concat("V");
        }
        while (num >= 4) {
            num -= 4;
            var1 = var1.concat("IV");
        }
        while (num > 0) {
            num--;
            var1 = var1.concat("I");
        }
        //return the final roman number with all the digits
        return var1;
    }
}
