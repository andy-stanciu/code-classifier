class Solution {

    public String method1(int num) {
        int units = num % 10;
        int tens = num / 10 % 10;
        int hundreds = num / 100 % 10;
        int thousands = num / 1000 % 10;
        var sb = new StringBuilder();
        appendThousands(sb, thousands);
        appendHundreds(sb, hundreds);
        appendTens(sb, tens);
        appendUnits(sb, units);
        return sb.toString();
    }

    private void appendUnits(StringBuilder sb, int units) {
        if (units < 4) {
            while (units > 0) {
                sb.append("I");
                units--;
            }
        } else if (units > 4 && units < 9) {
            sb.append("V");
            while (units > 5) {
                sb.append("I");
                units--;
            }
        } else if (units == 4) {
            sb.append("IV");
        } else {
            sb.append("IX");
        }
    }

    private void appendTens(StringBuilder sb, int tens) {
        if (tens < 4) {
            while (tens > 0) {
                sb.append("X");
                tens--;
            }
        } else if (tens > 4 && tens < 9) {
            sb.append("L");
            while (tens > 5) {
                sb.append("X");
                tens--;
            }
        } else if (tens == 4) {
            sb.append("XL");
        } else {
            sb.append("XC");
        }
    }

    private void appendHundreds(StringBuilder sb, int hundreds) {
        if (hundreds < 4) {
            while (hundreds > 0) {
                sb.append("C");
                hundreds--;
            }
        } else if (hundreds > 4 && hundreds < 9) {
            sb.append("D");
            while (hundreds > 5) {
                sb.append("C");
                hundreds--;
            }
        } else if (hundreds == 4) {
            sb.append("CD");
        } else {
            sb.append("CM");
        }
    }

    private void appendThousands(StringBuilder sb, int thousands) {
        while (thousands > 0) {
            sb.append("M");
            thousands--;
        }
    }
}
