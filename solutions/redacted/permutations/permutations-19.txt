class Solution {

    public void swap(int i, int j, int[] nums) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    public void solve(int ind, int[] nums, List<List<Integer>> l) {
        if (ind == nums.length) {
            List<Integer> l1 = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                l1.add(nums[i]);
            }
            l.add(l1);
            return;
        }
        for (int i = ind; i < nums.length; i++) {
            swap(i, ind, nums);
            solve(ind + 1, nums, l);
            swap(i, ind, nums);
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> l = new ArrayList<>();
        solve(0, nums, l);
        return l;
    }
}
