class Solution {

    public void solve(int[] nums, List<List<Integer>> set, List<Integer> subset, int index) {
        // base case:
        if (index == nums.length) {
            set.add(new ArrayList(subset));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            //  skip already used elements:
            if (subset.contains(nums[i]))
                continue;
            subset.add(nums[i]);
            solve(nums, set, subset, index + 1);
            subset.remove(subset.size() - 1);
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        solve(nums, ans, new ArrayList<>(), 0);
        return ans;
    }
}
