class Solution {

    List<List<Integer>> a = new ArrayList<>();

    public void findp(List<Integer> str, List<Integer> ans) {
        if (str.size() == 0) {
            a.add(new ArrayList<Integer>(ans));
            return;
        }
        for (int i = 0; i < str.size(); i++) {
            //System.out.println("str"+str);
            int curr = str.get(i);
            List<Integer> newstr = new ArrayList<>();
            for (int j = 0; j < i; j++) newstr.add(str.get(j));
            for (int j = i + 1; j < str.size(); j++) newstr.add(str.get(j));
            ans.add(curr);
            findp(newstr, ans);
            ans.remove(Integer.valueOf(curr));
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<Integer> n = new ArrayList<>();
        //System.out.println("a"+a);
        for (int i = 0; i < nums.length; i++) {
            n.add(nums[i]);
        }
        findp(n, new ArrayList<>());
        // System.out.println("a"+a);
        return a;
    }
}
