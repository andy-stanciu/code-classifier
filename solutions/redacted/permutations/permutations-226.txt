class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        boolean[] check = new boolean[nums.length];
        per(nums, list, check, res);
        return res;
    }

    public void per(int[] nums, List<Integer> list, boolean[] check, List<List<Integer>> res) {
        int n = nums.length;
        if (list.size() == n) {
            List<Integer> list2 = new ArrayList<>();
            for (int x = 0; x < list.size(); x++) {
                list2.add(list.get(x));
            }
            res.add(list2);
            return;
        }
        for (int i = 0; i < n; i++) {
            if (check[i] == false) {
                list.add(nums[i]);
                check[i] = true;
                per(nums, list, check, res);
                check[i] = false;
                list.remove(list.size() - 1);
            }
        }
    }
}
