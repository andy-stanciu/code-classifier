class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(new ArrayList<>(), nums, result);
        return result;
    }

    private static void backtrack(List<Integer> combination, int[] nums, List<List<Integer>> result) {
        if (combination.size() == nums.length) {
            result.add(new ArrayList<>(combination));
            return;
        }
        for (int num : nums) {
            if (combination.contains(num)) {
                //key step
                continue;
            }
            combination.add(num);
            backtrack(combination, nums, result);
            combination.remove(combination.size() - 1);
        }
    }
}
