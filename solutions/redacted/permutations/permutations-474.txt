class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        Backtrack(list, new ArrayList<>(), nums);
        return list;
    }

    public static void Backtrack(List<List<Integer>> list, ArrayList<Integer> empty, int[] arr) {
        if (empty.size() == arr.length) {
            list.add(new ArrayList<>(empty));
            return;
        }
        for (int i : arr) {
            if (empty.contains(i)) {
                continue;
            }
            empty.add(i);
            Backtrack(list, empty, arr);
            empty.remove(empty.size() - 1);
        }
    }
}
