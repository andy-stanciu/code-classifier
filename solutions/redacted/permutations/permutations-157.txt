class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        calc(res, 0, temp, nums);
        return res;
    }

    void calc(List<List<Integer>> res, int idx, List<Integer> temp, int[] nums) {
        if (idx == nums.length) {
            res.add(new ArrayList<>(temp));
            return;
        }
        for (int i = idx; i < nums.length; i++) {
            swap(nums, i, idx);
            temp.add(nums[idx]);
            calc(res, idx + 1, temp, nums);
            temp.remove(temp.size() - 1);
            swap(nums, i, idx);
        }
    }

    void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
