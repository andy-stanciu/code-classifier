class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> permute(int[] nums) {
        if (nums.length == 0)
            return res;
        permuteBack(0, nums);
        return res;
    }

    void permuteBack(int i, int[] nums) {
        if (i == nums.length) {
            List<Integer> list = new ArrayList<>();
            for (int j = 0; j < nums.length; j++) {
                list.add(nums[j]);
            }
            res.add(list);
            return;
        }
        for (int it = i; it < nums.length; it++) {
            swap(nums, i, it);
            permuteBack(i + 1, nums);
            swap(nums, i, it);
        }
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
