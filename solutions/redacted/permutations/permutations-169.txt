class Solution {

    public void permutation(int a, int[] nums, List<List<Integer>> ans) {
        if (a == nums.length) {
            ArrayList<Integer> list = new ArrayList<>();
            for (int j = 0; j < nums.length; j++) {
                list.add(nums[j]);
            }
            ans.add(list);
            return;
        }
        for (int i = a; i < nums.length; i++) {
            swap(a, i, nums);
            permutation(a + 1, nums, ans);
            swap(a, i, nums);
        }
    }

    public void swap(int a, int i, int[] nums) {
        int temp = nums[a];
        nums[a] = nums[i];
        nums[i] = temp;
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        permutation(0, nums, ans);
        return ans;
    }
}
