class Solution {

    List<List<Integer>> ans;

    List<Integer> temp;

    public List<List<Integer>> permute(int[] nums) {
        int n = nums.length;
        boolean[] visited = new boolean[n];
        ans = new ArrayList<>();
        temp = new ArrayList<>();
        genPermutation(nums, visited, 0);
        return ans;
    }

    public void genPermutation(int[] arr, boolean[] visited, int idx) {
        if (idx == arr.length) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int i = 0; i < arr.length; i++) {
            if (!visited[i]) {
                temp.add(arr[i]);
                visited[i] = true;
                genPermutation(arr, visited, idx + 1);
                temp.remove(temp.size() - 1);
                visited[i] = false;
            }
        }
    }
}
