class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> current = new ArrayList<Integer>();
        boolean[] taken = new boolean[nums.length];
        getPermutation(nums, taken, current, result);
        return result;
    }

    public static void getPermutation(int[] nums, boolean[] taken, List<Integer> current, List<List<Integer>> result) {
        if (current.size() == nums.length) {
            result.add(new ArrayList(current));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (taken[i]) {
                continue;
            }
            taken[i] = true;
            current.add(nums[i]);
            getPermutation(nums, taken, current, result);
            current.remove(current.size() - 1);
            taken[i] = false;
        }
    }
}
