class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        boolean[] ismarked = new boolean[nums.length];
        method1(nums, new ArrayList<>(), ismarked, result);
        return result;
    }

    private void method1(int[] nums, List<Integer> comb, boolean[] ismarked, List<List<Integer>> result) {
        if (comb.size() == nums.length) {
            result.add(new ArrayList<>(comb));
            return;
        } else {
            for (int i = 0; i < nums.length; i++) {
                if (!ismarked[i]) {
                    ismarked[i] = true;
                    comb.add(nums[i]);
                    method1(nums, comb, ismarked, result);
                    comb.removeLast();
                    ismarked[i] = false;
                }
            }
        }
    }
}
