class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> res = new ArrayList<>();
        boolean[] b = new boolean[nums.length];
        helper(b, 0, nums, res, ans);
        return ans;
    }

    public static void helper(boolean[] b, int ind, int[] nums, List<Integer> res, List<List<Integer>> ans) {
        if (res.size() == nums.length) {
            ans.add(new ArrayList<>(res));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (b[i])
                continue;
            res.add(nums[i]);
            b[i] = true;
            helper(b, i + 1, nums, res, ans);
            b[i] = false;
            res.remove(res.size() - 1);
        }
    }
}
