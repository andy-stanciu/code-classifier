class Solution {

    public static void amrit(int[] nums, List<Integer> a, List<List<Integer>> ans, boolean[] valid) {
        if (a.size() == nums.length) {
            List<Integer> x = new ArrayList<>();
            for (int i = 0; i < a.size(); i++) {
                x.add(a.get(i));
            }
            ans.add(x);
            return;
        }
        for (int j = 0; j < nums.length; j++) {
            if (valid[j] == false) {
                a.add(nums[j]);
                valid[j] = true;
                amrit(nums, a, ans, valid);
                valid[j] = false;
                a.remove(a.size() - 1);
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> a = new ArrayList<>();
        boolean[] valid = new boolean[nums.length];
        amrit(nums, a, ans, valid);
        return ans;
    }
}
