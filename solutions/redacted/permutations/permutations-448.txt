class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> lis = new ArrayList<>();
        premutations(nums, 0, lis);
        return lis;
    }

    public int[] swap(int[] nums, int fi, int i) {
        int temp = nums[i];
        nums[i] = nums[fi];
        nums[fi] = temp;
        return nums;
    }

    public void premutations(int[] nums, int fi, List<List<Integer>> lis) {
        if (fi == nums.length - 1) {
            lis.add(toList(nums));
            return;
        }
        for (int i = fi; i < nums.length; i++) {
            swap(nums, fi, i);
            premutations(nums, fi + 1, lis);
            swap(nums, fi, i);
        }
        // return new ArrayList<>();
    }

    public List<Integer> toList(int[] nums) {
        List<Integer> intLis = new ArrayList<>();
        for (int i : nums) {
            intLis.add(i);
        }
        return intLis;
    }
}
