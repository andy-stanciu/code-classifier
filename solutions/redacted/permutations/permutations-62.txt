class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        get_subsets(ans, nums, 0);
        return ans;
    }

    private void get_subsets(List<List<Integer>> ans, int[] nums, int index) {
        if (index == nums.length) {
            List<Integer> subset = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) subset.add(nums[i]);
            ans.add(new ArrayList<>(subset));
            return;
        }
        for (int i = index; i < nums.length; i++) {
            swap(i, index, nums);
            get_subsets(ans, nums, index + 1);
            swap(i, index, nums);
        }
    }

    public void swap(int i, int j, int[] nums) {
        int t = nums[i];
        nums[i] = nums[j];
        nums[j] = t;
    }
}
