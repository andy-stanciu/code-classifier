public class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> finalList = new ArrayList<>();
        List<Integer> smallList = new ArrayList<>();
        permHelper(nums, smallList, finalList);
        return finalList;
    }

    private static void permHelper(int[] nums, List<Integer> smallList, List<List<Integer>> finalList) {
        // Base case
        if (smallList.size() == nums.length) {
            finalList.add(new ArrayList<>(smallList));
            return;
        }
        for (int i : nums) {
            if (!smallList.contains(i)) {
                smallList.add(i);
                permHelper(nums, smallList, finalList);
                smallList.remove(smallList.size() - 1);
            }
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums = { 1, 2, 3 };
        List<List<Integer>> var1 = solution.permute(nums);
        System.out.println(var1);
    }
}
