class Solution {

    void swap(int[] arr, int l, int r) {
        int temp = arr[l];
        arr[l] = arr[r];
        arr[r] = temp;
    }

    void helper(int[] arr, int l, int r, List<List<Integer>> list) {
        if (l == r) {
            List<Integer> lst = new ArrayList<>();
            for (int n : arr) {
                lst.add(n);
            }
            list.add(lst);
        } else {
            for (int i = l; i <= r; i++) {
                swap(arr, l, i);
                helper(arr, l + 1, r, list);
                swap(arr, l, i);
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        helper(nums, 0, nums.length - 1, list);
        return list;
    }
}
