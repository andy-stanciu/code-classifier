class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<>(), nums);
        return result;
    }

    private void backtrack(List<List<Integer>> resultList, ArrayList<Integer> tempList, int[] nums) {
        if (tempList.size() == nums.length) {
            resultList.add(new ArrayList<>(tempList));
            return;
        }
        for (int number : nums) {
            // Skip if we get same element
            if (tempList.contains(number))
                continue;
            // Add the new element
            tempList.add(number);
            // Go back to try other element
            backtrack(resultList, tempList, nums);
            // Remove the element
            tempList.remove(tempList.size() - 1);
        }
    }
}
