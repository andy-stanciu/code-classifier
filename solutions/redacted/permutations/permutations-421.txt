class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> solution = new ArrayList<>();
        backtrack(solution, new ArrayList<>(), nums);
        return solution;
    }

    @SuppressWarnings({ "unchecked", "rawtypes" })
    private void backtrack(List<List<Integer>> solution, ArrayList arrayList, int[] nums) {
        if (arrayList.size() == nums.length) {
            solution.add(new ArrayList<>(arrayList));
            return;
        }
        for (int num : nums) {
            if (arrayList.contains(num))
                continue;
            arrayList.add(num);
            backtrack(solution, arrayList, nums);
            arrayList.remove(arrayList.size() - 1);
        }
    }
}
