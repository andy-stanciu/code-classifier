class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        generatePermute(nums, result, new ArrayList<>(), nums.length, 0);
        return result;
    }

    public static void generatePermute(int[] nums, List<List<Integer>> result, ArrayList<Integer> current, int n, int index) {
        if (index == n) {
            result.add(new ArrayList<>(current));
            return;
        }
        for (int i = index; i < n; i++) {
            swap(nums, index, i);
            current.add(nums[index]);
            generatePermute(nums, result, current, n, index + 1);
            current.remove(current.size() - 1);
            swap(nums, index, i);
        }
    }

    public static void swap(int[] nums, int x, int y) {
        int temp = nums[x];
        nums[x] = nums[y];
        nums[y] = temp;
    }
}
