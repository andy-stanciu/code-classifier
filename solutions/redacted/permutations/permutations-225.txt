class Solution {

    private void helper(int idx, List<List<Integer>> ans, int[] nums) {
        if (idx == nums.length) {
            List<Integer> li = new ArrayList<>();
            for (int n : nums) {
                li.add(n);
            }
            ans.add(new ArrayList<>(li));
            return;
        }
        for (int i = idx; i < nums.length; i++) {
            swap(i, idx, nums);
            helper(idx + 1, ans, nums);
            swap(i, idx, nums);
        }
    }

    private void swap(int a, int b, int[] nums) {
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        helper(0, ans, nums);
        return ans;
    }
}
