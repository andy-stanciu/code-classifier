class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        boolean[] visited = new boolean[nums.length];
        permutecombination(ans, nums, new ArrayList(), visited);
        return ans;
    }

    void permutecombination(List<List<Integer>> ans, int[] nums, List<Integer> cur, boolean[] visited) {
        if (cur.size() == nums.length) {
            ans.add(new ArrayList(cur));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (visited[i] == true)
                continue;
            cur.add(nums[i]);
            visited[i] = true;
            permutecombination(ans, nums, cur, visited);
            cur.remove(cur.size() - 1);
            visited[i] = false;
        }
    }
}
