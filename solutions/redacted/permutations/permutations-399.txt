class Solution {

    List<List<Integer>> res;

    public List<List<Integer>> permute(int[] arr) {
        res = new ArrayList<>();
        List<Integer> nums = Arrays.stream(arr).boxed().collect(Collectors.toList());
        traverse(nums, new ArrayList<>());
        return res;
    }

    public void traverse(List<Integer> existingList, List<Integer> newList) {
        for (int i = 0; i < existingList.size(); i++) {
            int currVal = existingList.get(i);
            newList.add(currVal);
            existingList.remove(Integer.valueOf(currVal));
            if (existingList.size() == 0) {
                res.add(new ArrayList(newList));
            } else {
                traverse(existingList, newList);
            }
            newList.remove(Integer.valueOf(currVal));
            if (i > existingList.size())
                existingList.add(currVal);
            else
                existingList.add(i, currVal);
        }
    }
}
