class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        if (nums == null || nums.length == 0) {
            return ans;
        }
        backtrack(nums, new ArrayList<>(), ans);
        return ans;
    }

    public void backtrack(int[] nums, List<Integer> tempList, List<List<Integer>> ans) {
        if (tempList.size() == nums.length) {
            ans.add(new ArrayList<>(tempList));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!tempList.contains(nums[i])) {
                tempList.add(nums[i]);
                backtrack(nums, tempList, ans);
                tempList.remove(tempList.size() - 1);
            }
        }
    }
}
