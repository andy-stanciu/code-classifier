class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> permuteList = new ArrayList<>();
        createPermute(permuteList, 0, nums);
        return permuteList;
    }

    public void createPermute(List<List<Integer>> permuteList, int index, int[] nums) {
        if (index == nums.length - 1) {
            List<Integer> tempList = new ArrayList<>();
            for (int n : nums) {
                tempList.add(n);
            }
            permuteList.add(new ArrayList<>(tempList));
        }
        for (int i = index; i < nums.length; i++) {
            swapValues(nums, index, i);
            createPermute(permuteList, index + 1, nums);
            swapValues(nums, index, i);
        }
    }

    public void swapValues(int[] nums, int index, int i) {
        int temp = nums[index];
        nums[index] = nums[i];
        nums[i] = temp;
    }
}
