class Solution {

    public void solve(List<List<Integer>> ans, int[] vis, int[] nums, List<Integer> temp) {
        int n = nums.length;
        if (temp.size() == n) {
            ans.add(new ArrayList(temp));
            return;
        }
        for (int i = 0; i < n; i++) {
            if (vis[i] == 1)
                continue;
            // now we have 2 choices either include the unvisited element now or discard it and include in future
            temp.add(nums[i]);
            vis[i] = 1;
            solve(ans, vis, nums, temp);
            vis[i] = 0;
            temp.remove(temp.indexOf(nums[i]));
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        int n = nums.length;
        int[] vis = new int[n];
        List<List<Integer>> ans = new ArrayList<>();
        solve(ans, vis, nums, new ArrayList());
        return ans;
    }
}
