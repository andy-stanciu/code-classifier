class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();
        boolean[] check = new boolean[nums.length];
        append(nums, check, list, ds);
        return list;
    }

    private void append(int[] nums, boolean[] check, List<List<Integer>> list, List<Integer> ds) {
        if (nums.length == ds.size()) {
            list.add(new ArrayList<>(ds));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (!check[i]) {
                check[i] = true;
                ds.add(nums[i]);
                append(nums, check, list, ds);
                check[i] = false;
                ds.remove(ds.size() - 1);
            }
        }
    }
}
