class Solution {

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> resultl = new ArrayList<>();
        backtrack(resultl, new ArrayList<>(), nums);
        return resultl;
    }

    public void backtrack(List<List<Integer>> resultl, List<Integer> tempList, int[] nums) {
        if (tempList.size() == nums.length) {
            resultl.add(new ArrayList<>(tempList));
        }
        for (int n : nums) {
            if (tempList.contains(n))
                continue;
            tempList.add(n);
            backtrack(resultl, tempList, nums);
            tempList.remove(tempList.size() - 1);
        }
    }
}
