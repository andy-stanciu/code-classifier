class Solution {

    private List<List<Integer>> ans;

    private void solve(int n, int[] nums, List<Integer> take, boolean[] dup) {
        if (take.size() == n) {
            ans.add(new ArrayList<>(take));
            return;
        }
        for (int i = 0; i < n; i++) {
            if (!dup[i]) {
                take.add(nums[i]);
                dup[i] = true;
                solve(n, nums, take, dup);
                dup[i] = false;
                take.remove(take.size() - 1);
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        ans = new ArrayList<>();
        List<Integer> take = new ArrayList<>();
        boolean[] dup = new boolean[nums.length];
        solve(nums.length, nums, take, dup);
        return ans;
    }
}
