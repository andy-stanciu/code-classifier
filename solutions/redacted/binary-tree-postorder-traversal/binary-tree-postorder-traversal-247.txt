/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    Stack<Integer> stack = new Stack<>();

    public List<Integer> method1(TreeNode root) {
        if (root == null) {
            return new ArrayList();
        }
        stack.push(root.val);
        method2(root, stack);
        List<Integer> result = new ArrayList();
        while (!stack.isEmpty()) {
            result.add(stack.pop());
        }
        return result;
    }

    private void method2(TreeNode root, Stack<Integer> stack) {
        if (root == null) {
            return;
        }
        if (root.right != null) {
            stack.push(root.right.val);
            method2(root.right, stack);
        }
        if (root.left != null) {
            stack.push(root.left.val);
            method2(root.left, stack);
        }
    }
}
