/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> method1(TreeNode root) {
        //double stack
        //s1 s2, insert into s1, pop s1, put s1\'s left and right into s1
        //push s1\'popped to s2
        Stack<TreeNode> s1 = new Stack<>();
        Stack<Integer> s2 = new Stack<>();
        List<Integer> result = new LinkedList<>();
        if (root == null) {
            return result;
        }
        s1.push(root);
        while (!s1.isEmpty()) {
            TreeNode removed = s1.pop();
            s2.push(removed.val);
            if (removed.left != null) {
                s1.push(removed.left);
            }
            if (removed.right != null) {
                s1.push(removed.right);
            }
        }
        while (!s2.isEmpty()) {
            result.add(s2.pop());
        }
        return result;
    }
}
