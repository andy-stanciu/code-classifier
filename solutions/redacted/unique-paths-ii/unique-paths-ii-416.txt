//Space Optimization
class Solution {

    public int method1(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        int[] dp = new int[m];
        for (int i = 0; i < n; i++) {
            int[] temp = new int[m];
            for (int j = 0; j < m; j++) {
                if (i == 0 && j == 0 && grid[i][j] != 1) {
                    temp[j] = 1;
                } else {
                    int left = 0;
                    int up = 0;
                    if (j > 0 && grid[i][j] != 1) {
                        left = temp[j - 1];
                    }
                    if (i > 0 && grid[i][j] != 1) {
                        up = dp[j];
                    }
                    temp[j] = left + up;
                }
            }
            dp = temp;
        }
        return dp[m - 1];
    }
}
