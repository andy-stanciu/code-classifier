class Solution {

    public int method1(int[][] obstacleGrid) {
        int[][] dp = new int[obstacleGrid.length][obstacleGrid[0].length];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return helper(obstacleGrid, obstacleGrid.length - 1, obstacleGrid[0].length - 1, dp);
    }

    public int helper(int[][] mat, int i, int j, int[][] dp) {
        if (i == 0 && j == 0) {
            return (mat[0][0] == 1) ? 0 : 1;
        }
        if (i < 0 || j < 0) {
            return 0;
        }
        if (mat[i][j] == 1) {
            return 0;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        int left = helper(mat, i - 1, j, dp);
        int right = helper(mat, i, j - 1, dp);
        return dp[i][j] = (left + right);
    }
}
