class Solution {

    public int method1(int[][] obstacleGrid) {
        if (obstacleGrid[0][0] == 1 || obstacleGrid[obstacleGrid.length - 1][obstacleGrid[0].length - 1] == 1) {
            //base case
            return 0;
        }
        boolean flag = false;
        int[][] dp = new int[obstacleGrid.length][obstacleGrid[0].length];
        for (int j = 0; j < dp[0].length; j++) {
            //first row
            if (flag || obstacleGrid[0][j] == 1) {
                dp[0][j] = 0;
                flag = true;
            } else {
                dp[0][j] = 1;
            }
        }
        flag = false;
        for (int i = 0; i < dp.length; i++) {
            //first column
            if (flag || obstacleGrid[i][0] == 1) {
                dp[i][0] = 0;
                flag = true;
            } else {
                dp[i][0] = 1;
            }
        }
        for (int i = 1; i < dp.length; i++) {
            for (int j = 1; j < dp[0].length; j++) {
                if (obstacleGrid[i][j] == 1) {
                    dp[i][j] = 0;
                    continue;
                } else {
                    dp[i][j] = dp[i][j - 1] + dp[i - 1][j];
                }
            }
        }
        return dp[dp.length - 1][dp[0].length - 1];
    }
}
