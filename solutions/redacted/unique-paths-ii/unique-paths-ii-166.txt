class Solution {

    int[][] dp;

    public int method1(int[][] obs) {
        int m = obs.length;
        int n = obs[0].length;
        dp = new int[m][n];
        return dfs(0, 0, m, n, obs);
    }

    public int dfs(int i, int j, int m, int n, int[][] obs) {
        if (i < 0 || j < 0 || i >= m || j >= n || obs[i][j] == 1) {
            return 0;
        }
        if (i == m - 1 && j == n - 1) {
            return 1;
        }
        if (dp[i][j] > 0) {
            return dp[i][j];
        }
        int right = dfs(i, j + 1, m, n, obs);
        int down = dfs(i + 1, j, m, n, obs);
        dp[i][j] = right + down;
        return dp[i][j];
    }
}
