class Solution {

    public int method1(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        if (grid[m - 1][n - 1] == 1) {
            return 0;
        }
        int[][] dp = new int[m][n];
        dp[m - 1][n - 1] = 1;
        for (int j = n - 2; j >= 0; j--) {
            if (grid[m - 1][j] == 1) {
                dp[m - 1][j] = 0;
            } else {
                dp[m - 1][j] = dp[m - 1][j + 1];
            }
            System.out.println(dp[m - 1][j]);
        }
        for (int i = m - 2; i >= 0; i--) {
            for (int j = n - 1; j >= 0; j--) {
                if (grid[i][j] == 1) {
                    dp[i][j] = 0;
                } else if (j == n - 1) {
                    dp[i][j] = dp[i + 1][j];
                } else {
                    dp[i][j] = dp[i + 1][j] + dp[i][j + 1];
                }
                System.out.println(dp[i][j]);
            }
        }
        return dp[0][0];
    }
}
