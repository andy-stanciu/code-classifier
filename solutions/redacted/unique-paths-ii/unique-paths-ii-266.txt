class Solution {

    public int method1(int[][] ob) {
        int m = ob.length, n = ob[0].length;
        if (ob.length == 1 && ob[0].length == 1 && ob[m - 1][n - 1] == 0) {
            return 1;
        }
        if (ob.length == 1 && ob[0].length == 1 && ob[m - 1][n - 1] == 1) {
            return 0;
        }
        if (ob[0][0] == 1) {
            return 0;
        }
        if (ob[m - 1][n - 1] == 1) {
            return 0;
        }
        int[][] dp = new int[m][n];
        for (int[] r : dp) {
            Arrays.fill(r, -1);
        }
        sol(ob, m - 1, n - 1, dp);
        return dp[m - 1][n - 1];
    }

    public int sol(int[][] obs, int i, int j, int[][] dp) {
        if (i == 0 && j == 0) {
            return 1;
        }
        if (i < 0 || j < 0 || obs[i][j] == 1) {
            return 0;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        int up = sol(obs, i - 1, j, dp);
        int l = sol(obs, i, j - 1, dp);
        dp[i][j] = up + l;
        return dp[i][j];
    }
}
