class Solution {

    public int method1(int[][] grid) {
        int ROWS = grid.length;
        int COLS = grid[0].length;
        long[][] dp = new long[ROWS][COLS];
        // Handle last row
        for (int i = COLS - 1; i >= 0; i--) {
            if (grid[ROWS - 1][i] != 1)
                dp[ROWS - 1][i] = -1;
            else
                break;
        }
        // Handle last column
        for (int i = ROWS - 1; i >= 0; i--) {
            if (grid[i][COLS - 1] != 1)
                dp[i][COLS - 1] = -1;
            else
                break;
        }
        // Fill the dp table
        for (int i = ROWS - 2; i >= 0; i--) {
            for (int j = COLS - 2; j >= 0; j--) {
                if (grid[i][j] != 1) {
                    dp[i][j] = dp[i + 1][j] + dp[i][j + 1];
                }
            }
        }
        // Return result
        return (int) -dp[0][0];
    }
}
