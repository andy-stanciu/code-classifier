public class Solution {

    public int method1(int[][] obstacleGrid) {
        // \uADF8\uB9AC\uB4DC\uC758 \uD589\uACFC \uC5F4 \uD06C\uAE30
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        // \uACBD\uB85C \uC218\uB97C \uC800\uC7A5\uD560 2D \uBC30\uC5F4
        int[][] dp = new int[m][n];
        // \uC2DC\uC791 \uC704\uCE58\uAC00 \uC7A5\uC560\uBB3C\uC778 \uACBD\uC6B0 \uACBD\uB85C \uC218\uB294 0
        if (obstacleGrid[0][0] == 1 || obstacleGrid[m - 1][n - 1] == 1) {
            return 0;
        }
        // \uC2DC\uC791 \uC704\uCE58 \uCD08\uAE30\uD654
        dp[0][0] = 1;
        // \uCCAB \uBC88\uC9F8 \uD589: \uC7A5\uC560\uBB3C\uC774 \uC5C6\uC73C\uBA74 \uACBD\uB85C \uC218\uB97C \uC774\uC5B4\uAC10
        for (int j = 1; j < n; j++) {
            dp[0][j] = (obstacleGrid[0][j] == 0) ? dp[0][j - 1] : 0;
        }
        // \uCCAB \uBC88\uC9F8 \uC5F4: \uC7A5\uC560\uBB3C\uC774 \uC5C6\uC73C\uBA74 \uACBD\uB85C \uC218\uB97C \uC774\uC5B4\uAC10
        for (int i = 1; i < m; i++) {
            dp[i][0] = (obstacleGrid[i][0] == 0) ? dp[i - 1][0] : 0;
        }
        // \uB098\uBA38\uC9C0 \uADF8\uB9AC\uB4DC\uC758 \uAC01 \uC704\uCE58\uC5D0 \uB300\uD574 \uACBD\uB85C \uC218 \uACC4\uC0B0
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (obstacleGrid[i][j] == 0) {
                    // \uC704\uCABD\uACFC \uC67C\uCABD \uACBD\uB85C \uC218\uC758 \uD569
                    dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
                } else {
                    // \uC7A5\uC560\uBB3C\uC774 \uC788\uB294 \uACBD\uC6B0 \uACBD\uB85C \uC218\uB294 0
                    dp[i][j] = 0;
                }
            }
        }
        // \uC624\uB978\uCABD \uC544\uB798 \uBAA8\uC11C\uB9AC\uC758 \uACBD\uB85C \uC218 \uBC18\uD658
        return dp[m - 1][n - 1];
    }
}
