class Solution {

    int[][] dp;

    public int method1(int[][] arr) {
        int m = arr.length;
        int n = arr[0].length;
        dp = new int[m + 1][n + 1];
        for (int i = 0; i <= m; i++) {
            for (int j = 0; j <= n; j++) {
                dp[i][j] = -1;
            }
        }
        return traverse(arr, m, n, 0, 0);
    }

    public int traverse(int[][] arr, int m, int n, int i, int j) {
        if (i > m - 1 || j > n - 1) {
            return 0;
        }
        if (arr[i][j] == 1) {
            return 0;
        }
        if (i == m - 1 && j == n - 1) {
            return 1;
        }
        if (dp[i + 1][j] == -1)
            dp[i + 1][j] = traverse(arr, m, n, i + 1, j);
        if (dp[i][j + 1] == -1)
            dp[i][j + 1] = traverse(arr, m, n, i, j + 1);
        return dp[i + 1][j] + dp[i][j + 1];
    }
}
