class Solution {

    public int method1(int[][] obstacleGrid) {
        int[][] dp = new int[obstacleGrid.length][obstacleGrid[0].length];
        for (int[] i : dp) {
            Arrays.fill(i, -1);
        }
        return help(obstacleGrid, 0, 0, dp);
    }

    public int help(int[][] board, int r, int c, int[][] dp) {
        if (r == board.length - 1 && c == board[0].length - 1 && board[r][c] != 1) {
            return 1;
        }
        if (board[r][c] == 1) {
            dp[r][c] = 0;
        }
        if (dp[r][c] != -1) {
            return dp[r][c];
        }
        int a = 0, b = 0;
        if (r < board.length - 1)
            a = help(board, r + 1, c, dp);
        if (c < board[0].length - 1)
            b = help(board, r, c + 1, dp);
        dp[r][c] = a + b;
        return dp[r][c];
    }
}
