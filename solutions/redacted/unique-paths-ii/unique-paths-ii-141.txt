class Solution {

    public int method1(int[][] obstacleGrid) {
        int i = obstacleGrid.length;
        int j = obstacleGrid[0].length;
        int[][] dp = new int[i][j];
        for (int[] row : dp) Arrays.fill(row, -1);
        return path(0, 0, obstacleGrid, dp);
    }

    public static int path(int i, int j, int[][] obstacleGrid, int[][] dp) {
        if (i >= obstacleGrid.length || j >= obstacleGrid[0].length)
            return 0;
        if (obstacleGrid[i][j] == 1)
            return 0;
        if (i == obstacleGrid.length - 1 && j == obstacleGrid[0].length - 1)
            return 1;
        if (dp[i][j] != -1)
            return dp[i][j];
        else
            return dp[i][j] = path(i + 1, j, obstacleGrid, dp) + path(i, j + 1, obstacleGrid, dp);
    }
}
