class Solution {

    public int helper(int[][] grid, int i, int j, int m, int n, int[][] dp) {
        if (i < 0 || i >= m || j < 0 || j >= n) {
            return 0;
        }
        if (grid[i][j] == 1) {
            return 0;
        }
        if (i == 0 && j == 0) {
            return 1;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        int var1 = helper(grid, i - 1, j, m, n, dp);
        int var2 = helper(grid, i, j - 1, m, n, dp);
        return dp[i][j] = var1 + var2;
    }

    public int method1(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];
        for (int[] d : dp) {
            Arrays.fill(d, -1);
        }
        return helper(grid, m - 1, n - 1, m, n, dp);
    }
}
