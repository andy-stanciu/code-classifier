class Solution {

    public int method1(int[][] obstacleGrid) {
        int m = obstacleGrid.length, n = obstacleGrid[0].length;
        if (obstacleGrid[m - 1][n - 1] == 1)
            return 0;
        int[] dp = new int[n];
        dp[0] = 1;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                // This is the only trick. Every DP question, to identify this unique logic is the most challenging step.
                if (obstacleGrid[i][j] == 1)
                    dp[j] = 0;
                else if (j - 1 >= 0)
                    dp[j] += obstacleGrid[i][j - 1] == 1 ? 0 : dp[j - 1];
            }
        }
        return dp[n - 1];
    }
}
