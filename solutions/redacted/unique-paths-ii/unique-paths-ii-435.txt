class Solution {

    private int helper(int[][] grid, int n, int m, int i, int j, int[][] dp) {
        if (i == n || j == m || grid[i][j] == 1) {
            return 0;
        }
        if (i == n - 1 && j == m - 1) {
            return 1;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        int w1 = helper(grid, n, m, i + 1, j, dp);
        int w2 = helper(grid, n, m, i, j + 1, dp);
        return dp[i][j] = w1 + w2;
    }

    public int method1(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        int[][] dp = new int[n][m];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return helper(grid, n, m, 0, 0, dp);
    }
}
