class Solution {

    private int rec(int[][] grid, int n, int m, int[][] dp) {
        if (n < 0 || m < 0 || grid[n][m] == 1)
            return 0;
        if (n == 0 && m == 0)
            return 1;
        if (dp[n][m] != -1)
            return dp[n][m];
        dp[n][m] = rec(grid, n - 1, m, dp) + rec(grid, n, m - 1, dp);
        return dp[n][m];
    }

    public int method1(int[][] obstacleGrid) {
        int n = obstacleGrid.length;
        int m = obstacleGrid[0].length;
        int[][] dp = new int[n][m];
        for (int[] arr : dp) Arrays.fill(arr, -1);
        return rec(obstacleGrid, n - 1, m - 1, dp);
    }
}
