class Solution {

    //this class holds the Frequency of character
    class Pair implements Comparable<Pair> {

        //Comparable will help to sort this in decending order
        char ch;

        int freq;

        Pair(char ch, int freq) {
            this.ch = ch;
            this.freq = freq;
        }

        //comparable has one abstract method which we have to implement
        //this compareTo method compare provided element with current element
        //and according tpo that it sorts the list
        public int compareTo(Pair p) {
            //this will sort in decending order
            return p.freq - this.freq;
            //If we want to sort in ascending order then we have to write above line as ->
            //return this.freq - p.freq;
        }
    }

    public String method1(String s) {
        //ASCII of \'z\' is 122
        int[] arr = new int[123];
        for (//store and increase the frequency of each character which is present in String
        //store and increase the frequency of each character which is present in String
        char ch : s.toCharArray()) arr[ch]++;
        ArrayList<Pair> list = new ArrayList<>();
        //as ASCII of \'0\' starts from 48 so, we can simply start our loop
        //from 48 to 122 this will cover all Alphabets and Digits
        for (int i = 48; i < 123; i++) {
            if (//that means this char is exist in the string
            arr[i] > 0)
                list.add(new Pair((char) i, arr[i]));
        }
        //sort the list
        Collections.sort(list);
        StringBuilder ans = new StringBuilder();
        for (Pair p : list) {
            int count = p.freq;
            //now take each character and add it in the StringBuilder
            while (count-- > 0) ans.append(p.ch);
        }
        return ans.toString();
    }
}
