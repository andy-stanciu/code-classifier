class Solution {

    class Class1 {

        char ch;

        int freq;

        public Class1(char ch, int freq) {
            this.ch = ch;
            this.freq = freq;
        }
    }

    public String method1(String s) {
        Map<Character, Integer> charOccurence = new HashMap<>();
        PriorityQueue<Class1> charFrequencies = new PriorityQueue<>((a, b) -> b.freq - a.freq);
        for (char ch : s.toCharArray()) {
            charOccurence.put(ch, charOccurence.getOrDefault(ch, 0) + 1);
        }
        for (Map.Entry<Character, Integer> entrySet : charOccurence.entrySet()) {
            charFrequencies.add(new Class1(entrySet.getKey(), entrySet.getValue()));
        }
        StringBuilder res = new StringBuilder();
        while (!charFrequencies.isEmpty()) {
            Class1 item = charFrequencies.poll();
            int count = item.freq;
            while (count > 0) {
                res.append(String.valueOf(item.ch));
                count--;
            }
        }
        return res.toString();
    }
}
