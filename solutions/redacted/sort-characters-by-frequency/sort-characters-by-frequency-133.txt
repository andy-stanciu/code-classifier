class Solution {

    public String method1(String s) {
        Map<String, Long> map = Arrays.asList(s.split("")).stream().collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));
        List<Long> list = map.values().stream().sorted().toList();
        LinkedHashMap<String, Long> res = new LinkedHashMap<>();
        for (int i = 0; i < list.size(); i++) {
            for (Map.Entry<String, Long> e : map.entrySet()) {
                if (e.getValue().equals(list.get(i))) {
                    res.put(e.getKey(), list.get(i));
                }
            }
        }
        StringBuilder str = new StringBuilder();
        for (Map.Entry<String, Long> e : res.entrySet()) {
            for (long i = 0L; i < e.getValue(); i++) {
                str.append(e.getKey());
            }
        }
        return str.reverse().toString();
    }
}
