class Solution {

    class Pair {

        int freq;

        char ch;

        Pair(int fq, char ch) {
            this.freq = fq;
            this.ch = ch;
        }
    }

    public String method1(String s) {
        Map<Character, Integer> map = new HashMap<>();
        for (char c : s.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        PriorityQueue<Pair> pq = new PriorityQueue<>((a, b) -> b.freq - a.freq);
        for (Map.Entry<Character, Integer> en : map.entrySet()) {
            int fq = en.getValue();
            char ch = en.getKey();
            pq.add(new Pair(fq, ch));
        }
        StringBuilder sb = new StringBuilder("");
        while (!pq.isEmpty()) {
            Pair p = pq.poll();
            int freq = p.freq;
            char ch = p.ch;
            while (freq > 0) {
                sb.append(ch);
                freq--;
            }
        }
        return sb.toString();
    }
}
