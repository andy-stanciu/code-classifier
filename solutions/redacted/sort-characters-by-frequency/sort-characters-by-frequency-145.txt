public class Solution {

    public String method1(String s) {
        // Step 1: Create an array for counting frequency of characters
        // covers ASCII values for all characters
        int[] freq = new int[128];
        // Step 2: Count the frequency of each character in the string
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            freq[c]++;
        }
        // Step 3: Sort characters based on frequency
        // We will create a list of characters and sort it based on their frequency
        StringBuilder result = new StringBuilder();
        while (true) {
            int maxFreq = 0;
            char maxChar = 0;
            // Find the character with the maximum frequency
            for (int i = 0; i < freq.length; i++) {
                if (freq[i] > maxFreq) {
                    maxFreq = freq[i];
                    maxChar = (char) i;
                }
            }
            // If no character has frequency greater than 0, we are done
            if (maxFreq == 0) {
                break;
            }
            // Append the character `maxChar` `maxFreq` times to the result
            for (int i = 0; i < maxFreq; i++) {
                result.append(maxChar);
            }
            // Set the frequency of `maxChar` to 0 after processing it
            freq[maxChar] = 0;
        }
        return result.toString();
    }
}
