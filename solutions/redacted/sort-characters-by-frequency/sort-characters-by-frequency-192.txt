class Solution {

    // Creating a class Pair Which Implements Comparable
    class Pair implements Comparable<Pair> {

        char c;

        int count;

        Pair(char c, int count) {
            this.c = c;
            this.count = count;
        }

        // Overriding the compareTo Method
        public int compareTo(Pair o) {
            return this.count - o.count;
        }
    }

    public String method1(String s) {
        Map<Character, Integer> map = new HashMap<>();
        PriorityQueue<Pair> maxHeap = new PriorityQueue<>(Collections.reverseOrder());
        char[] arr = s.toCharArray();
        for (char ch : arr) {
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        System.out.println(map);
        Set<Character> keys = map.keySet();
        for (char key : keys) {
            maxHeap.add(new Pair(key, map.get(key)));
        }
        StringBuilder ans = new StringBuilder();
        while (!maxHeap.isEmpty()) {
            Pair p = maxHeap.poll();
            int k = p.count;
            char ch = p.c;
            while (k-- > 0) {
                ans.append(ch);
            }
        }
        return ans.toString();
    }
}
