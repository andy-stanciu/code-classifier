class Solution {

    public String method1(String s) {
        if (s == null || s.length() <= 1) {
            return s;
        }
        // Count Frequency
        Map<Character, Integer> freq = new HashMap<>();
        for (char c : s.toCharArray()) {
            freq.put(c, freq.getOrDefault(c, 0) + 1);
        }
        // Create & Fill Buckets
        int maxFreq = Collections.max(freq.values());
        List<Character>[] buckets = new List[maxFreq + 1];
        for (int i = 0; i <= maxFreq; i++) {
            buckets[i] = new ArrayList<Character>();
        }
        for (Character key : freq.keySet()) {
            buckets[freq.get(key)].add(key);
        }
        // Build ans
        StringBuilder ans = new StringBuilder();
        for (int i = maxFreq; i >= 1; i--) {
            if (buckets[i] == null)
                continue;
            for (Character c : buckets[i]) {
                for (int j = 0; j < i; j++) {
                    ans.append(c);
                }
            }
        }
        return ans.toString();
    }
}
