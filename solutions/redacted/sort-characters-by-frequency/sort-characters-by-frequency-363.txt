class Solution {

    public String method1(String s) {
        Map<Character, Integer> map = new HashMap<>();
        // Count character frequencies
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        // Create a min-heap based on frequency using PriorityQueue
        Queue<Character> minHeap = new PriorityQueue<>((a, b) -> Integer.compare(map.get(b), map.get(a)));
        minHeap.addAll(map.keySet());
        // Construct the result string with characters sorted by frequency
        StringBuilder result = new StringBuilder();
        while (!minHeap.isEmpty()) {
            char ch = minHeap.poll();
            for (int i = 0; i < map.get(ch); i++) {
                result.append(ch);
            }
        }
        return result.toString();
    }
}
