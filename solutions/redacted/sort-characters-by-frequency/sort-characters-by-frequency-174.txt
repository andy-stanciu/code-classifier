class Solution {

    public String method1(String s) {
        // Step 1: Create a frequency map to count occurrences of each character
        Map<Character, Integer> map = new HashMap<>();
        StringBuilder sb = new StringBuilder();
        List<Character>[] arr = new ArrayList[s.length() + 1];
        // Populate the frequency map
        for (char c : s.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        // Step 2: Distribute characters into buckets based on their frequency
        map.keySet().forEach(c -> {
            int freq = map.get(c);
            if (arr[freq] == null) {
                arr[freq] = new ArrayList<>();
            }
            arr[freq].add(c);
        });
        // Step 3: Build the result string by iterating from highest frequency to lowest
        for (int i = arr.length - 1; i >= 0; i--) {
            if (arr[i] != null) {
                for (Character c : arr[i]) {
                    for (int j = 1; j <= i; j++) {
                        sb.append(c);
                    }
                }
            }
        }
        // Return the final sorted string
        return sb.toString();
    }
}
