class Solution {

    public String method1(String s) {
        PriorityQueue<Pair<Integer, Character>> p = new PriorityQueue<>((a, b) -> b.getKey().compareTo(a.getKey()));
        Map<Character, Integer> m = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            m.put(s.charAt(i), m.getOrDefault(s.charAt(i), 0) + 1);
        }
        for (Map.Entry<Character, Integer> e : m.entrySet()) {
            p.add(new Pair<>(e.getValue(), e.getKey()));
        }
        StringBuilder sb = new StringBuilder();
        while (!p.isEmpty()) {
            Pair<Integer, Character> pair = p.poll();
            for (int i = 0; i < pair.getKey(); i++) {
                sb.append(pair.getValue());
            }
        }
        return sb.toString();
    }
}
