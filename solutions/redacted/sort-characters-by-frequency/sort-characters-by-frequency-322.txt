class Solution {

    public String method1(String inputString) {
        HashMap<Character, Integer> charCountMap = new HashMap<Character, Integer>();
        // Converting given string to char array
        char[] strArray = inputString.toCharArray();
        // checking each char of strArray
        for (char c : strArray) {
            if (charCountMap.containsKey(c)) {
                // If char is present in charCountMap,
                // incrementing it\'s count by 1
                charCountMap.put(c, charCountMap.get(c) + 1);
            } else {
                // If char is not present in charCountMap,
                // putting this char to charCountMap with 1 as it\'s value
                charCountMap.put(c, 1);
            }
        }
        // Convert HashMap entries to a List
        List<Map.Entry<Character, Integer>> entryList = new ArrayList<>(charCountMap.entrySet());
        // Sort the List based on the values (occurrences) in decreasing order
        Collections.sort(entryList, (entry1, entry2) -> entry2.getValue().compareTo(entry1.getValue()));
        // Build the sorted string
        StringBuilder var1 = new StringBuilder();
        for (Map.Entry<Character, Integer> entry : entryList) {
            char character = entry.getKey();
            int var2 = entry.getValue();
            // Append each character according to its frequency
            for (int i = 0; i < var2; i++) {
                var1.append(character);
            }
        }
        return var1.toString();
    }
}
