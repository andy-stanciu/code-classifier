class Solution {

    public String method1(String s) {
        var charFreqs = s.chars().mapToObj(Character::toString).collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));
        var pq = new PriorityQueue<>(Map.Entry.<String, Long>comparingByValue().reversed());
        pq.addAll(charFreqs.entrySet());
        return Stream.generate(pq::poll).takeWhile(Objects::nonNull).map(e -> e.getKey().repeat(e.getValue().intValue())).collect(Collectors.joining());
    }
}
