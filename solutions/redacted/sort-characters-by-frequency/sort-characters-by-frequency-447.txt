class Solution {

    public String method1(String s) {
        // Array to store frequencies of characters (ASCII range)
        int[] arr = new int[255];
        // Count frequencies of characters
        for (char ch : s.toCharArray()) {
            arr[ch]++;
        }
        // StringBuilder to store sorted string
        StringBuilder ans = new StringBuilder();
        // Continue until all characters are processed
        while (true) {
            // Find index of character with maximum frequency
            int maxFreqIndex = max(arr);
            // If no character left with non-zero frequency, break
            if (maxFreqIndex == -1)
                break;
            // Append character with maximum frequency to the result string
            int max = arr[maxFreqIndex];
            char val = (char) maxFreqIndex;
            while (max > 0) {
                ans.append(val);
                max--;
            }
            // Set frequency of processed character to zero
            arr[maxFreqIndex] = 0;
        }
        return ans.toString();
    }

    // Function to find the index of character with maximum frequency
    public int max(int[] arr) {
        int maxFreq = 0;
        int maxIndex = 0;
        // Iterate through the array to find the character with maximum frequency
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] > maxFreq) {
                maxFreq = arr[i];
                maxIndex = i;
            }
        }
        // If all frequencies are zero, return -1
        if (maxFreq == 0)
            return -1;
        // Otherwise, return the index of character with maximum frequency
        return maxIndex;
    }
}
