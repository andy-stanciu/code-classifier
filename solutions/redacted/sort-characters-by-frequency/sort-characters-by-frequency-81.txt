class Pair implements Comparable<Pair> {

    public Character ch;

    public int freq;

    Pair(Character ch, int freq) {
        this.ch = ch;
        this.freq = freq;
    }

    @Override
    public int compareTo(Pair other) {
        // decreasing order
        return other.freq - this.freq;
    }
}

class Solution {

    public String method1(String s) {
        int[] count = new int[256];
        for (char x : s.toCharArray()) {
            count[x]++;
        }
        PriorityQueue<Pair> pq = new PriorityQueue();
        for (int i = 0; i < 256; i++) {
            if (count[i] > 0) {
                pq.add(new Pair((char) (i), count[i]));
            }
        }
        StringBuilder resultSb = new StringBuilder();
        while (!pq.isEmpty()) {
            Pair pair = pq.poll();
            // String.valueOf(ch).repeat(n)
            resultSb.append(String.valueOf(pair.ch).repeat(pair.freq));
        }
        return resultSb.toString();
    }
}
