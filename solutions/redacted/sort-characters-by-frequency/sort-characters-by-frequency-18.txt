public class Solution {

    public String method1(String s) {
        // Count the frequency of each character
        Map<Character, Integer> var1 = new HashMap<>();
        for (char c : s.toCharArray()) {
            var1.put(c, var1.getOrDefault(c, 0) + 1);
        }
        // Convert the frequency map to a list of pairs (or entries)
        List<Map.Entry<Character, Integer>> list = new ArrayList<>(var1.entrySet());
        // Sort the list by frequency in descending order
        Collections.sort(list, (a, b) -> b.getValue().compareTo(a.getValue()));
        // Build the result string
        StringBuilder result = new StringBuilder();
        for (Map.Entry<Character, Integer> entry : list) {
            for (int i = 0; i < entry.getValue(); i++) {
                result.append(entry.getKey());
            }
        }
        return result.toString();
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        String s = "tree";
        System.out.println(solution.method1(s));
    }
}
