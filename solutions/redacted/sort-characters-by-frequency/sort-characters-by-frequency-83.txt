class Solution {

    static Map<Character, Integer> calculateFreq(String s) {
        Map<Character, Integer> freq = new HashMap<>();
        for (char c : s.toCharArray()) {
            freq.put(c, freq.getOrDefault(c, 0) + 1);
        }
        return freq;
    }

    public String method1(String s) {
        StringBuilder ans = new StringBuilder();
        Map<Character, Integer> map = calculateFreq(s);
        PriorityQueue<Map.Entry<Character, Integer>> maxHeap = new PriorityQueue<>((entry1, entry2) -> entry2.getValue().compareTo(entry1.getValue()));
        maxHeap.addAll(map.entrySet());
        while (!maxHeap.isEmpty()) {
            Map.Entry<Character, Integer> entry = maxHeap.remove();
            for (int i = 0; i < entry.getValue(); i++) {
                ans.append(entry.getKey());
            }
        }
        return ans.toString();
    }
}
