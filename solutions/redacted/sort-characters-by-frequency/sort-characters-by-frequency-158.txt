class Solution {

    public String method1(String s) {
        if (null == s || s.length() <= 2)
            return s;
        StringBuilder sb = new StringBuilder();
        Map<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            int cnt = map.getOrDefault(s.charAt(i), 0);
            map.put(s.charAt(i), cnt + 1);
        }
        method2(map).forEach(e -> {
            int cnt = e.getValue();
            while (cnt > 0) {
                sb.append(e.getKey());
                cnt--;
            }
        });
        return sb.toString();
    }

    private List<Map.Entry<Character, Integer>> method2(Map<Character, Integer> hm) {
        List<Map.Entry<Character, Integer>> list = new LinkedList<Map.Entry<Character, Integer>>(hm.entrySet());
        // Sort the list in descinding using lambda expression
        Collections.sort(list, (i1, i2) -> i2.getValue().compareTo(i1.getValue()));
        return list;
    }
}
