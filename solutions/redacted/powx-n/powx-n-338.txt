class Solution {

    double ans = 1;

    public double myPow(double x, int n) {
        // using divide and conquor (iterative)......
        // double ans =1;
        // long temp = n;
        // if(temp < 0){
        //     temp *=-1;
        // }
        // while( temp > 0){
        //     if(temp % 2 == 1){
        //         ans *= x;
        //     }
        //     // (16 -> 2^4 or 2^2 * 2^2)
        //     x *= x; // square of x;
        //     temp /= 2; // power gets half...
        // }
        // if(n < 0){
        //     return (1/ans);
        // }
        // return ans;
        // Divide and conquor(using RECURSION....)
        long temp = n;
        if (temp < 0) {
            temp *= -1;
        }
        findPow(x, temp);
        if (n < 0) {
            return 1 / ans;
        }
        return ans;
    }

    void findPow(double x, long temp) {
        if (temp <= 0) {
            return;
        }
        //if power is even
        if (temp % 2 == 1) {
            ans *= x;
        }
        //sq x
        x *= x;
        temp /= 2;
        findPow(x, temp);
    }
}
