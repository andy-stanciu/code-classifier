class Solution {

    public double myPow(double x, int n) {
        if (x == 0.0) {
            return 0;
        }
        return calculate(x, n);
    }

    // use long for n to prevent overflow.
    private double calculate(double x, long n) {
        if (n == 0) {
            return 1;
        }
        if (n < 0) {
            return 1 / calculate(x, Math.abs(n));
        }
        if (n % 2 == 0) {
            return calculate(x * x, n / 2);
        }
        // n is odd
        return x * calculate(x * x, (n - 1) / 2);
    }
}
