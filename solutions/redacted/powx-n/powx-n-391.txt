class Solution {

    private double fastPow(double x, long n, long mod) {
        double result = 1;
        while (n != 0) {
            if ((n & 1) != 0) {
                result = (result * (x % mod)) % mod;
            }
            x = (x % mod * x % mod) % mod;
            n = n / 2;
        }
        return result;
    }

    public double myPow(double x, int n) {
        if (n < 0) {
            return 1 / fastPow(x, n, 1000000007);
        } else {
            return fastPow(x, n, 1000000007);
        }
    }
}
