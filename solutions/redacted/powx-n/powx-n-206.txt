class Solution {

    public double myPow(double x, int n) {
        long N = n;
        if (n < 0) {
            x = (1 / x);
            N = -N;
            return pow(x, N);
        } else {
            return pow(x, N);
        }
    }

    private double pow(double x, long n) {
        if (n == 0)
            return 1;
        if (n == 1)
            return x;
        //lets divide the n into 2 parts
        // and it will have 2 cases
        //case-1 : even
        if (n % 2 == 0) {
            double half = pow(x, n / 2);
            return half * half;
        } else {
            //case-2 :odd
            double half = pow(x, n / 2);
            return x * half * half;
        }
    }
}
