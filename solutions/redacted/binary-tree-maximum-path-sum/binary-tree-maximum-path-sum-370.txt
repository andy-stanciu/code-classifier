/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxValue = Integer.MIN_VALUE;

    public int method1(TreeNode root) {
        calculateCurrentMax(root);
        return maxValue;
    }

    public int calculateCurrentMax(TreeNode root) {
        if (root == null)
            return 0;
        int left = calculateCurrentMax(root.left);
        int right = calculateCurrentMax(root.right);
        int current = root.val;
        int maxCurrent = Math.max(current, Math.max(current + right, current + left));
        maxValue = Math.max(maxValue, Math.max(maxCurrent, left + right + current));
        return maxCurrent;
    }
}
