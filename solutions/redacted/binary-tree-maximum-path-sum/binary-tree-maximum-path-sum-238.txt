/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxDepth(TreeNode root, int[] param1) {
        if (root == null)
            return 0;
        int lh = Math.max(0, maxDepth(root.left, param1));
        int rh = Math.max(0, maxDepth(root.right, param1));
        param1[0] = Math.max(param1[0], lh + rh + root.val);
        return root.val + Math.max(lh, rh);
    }

    public int method1(TreeNode root) {
        int[] param1 = new int[] { root.val };
        maxDepth(root, param1);
        return param1[0];
    }
}
