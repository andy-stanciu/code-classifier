/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int var1 = -10001;

    public int method1(TreeNode root) {
        method2(root);
        return var1;
    }

    public int method2(TreeNode root) {
        if (root == null) {
            return 0;
        }
        //if the value from left and right are less than root value itself
        var1 = Math.max(var1, root.val);
        int var2 = method2(root.left);
        int var3 = method2(root.right);
        //if maximum sum is not from the root node
        var1 = Math.max(var1, root.val + var2 + var3);
        //if it is from the root we have to return max form left or right
        int temp = root.val + Math.max(var2, var3);
        var1 = Math.max(var1, temp);
        //we should return if it is positive some else return 0
        return temp > 0 ? temp : 0;
    }
}
