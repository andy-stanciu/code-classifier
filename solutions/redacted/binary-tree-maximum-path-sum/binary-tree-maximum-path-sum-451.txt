/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = Integer.MIN_VALUE;

    int var1 = 0;

    public int method1(TreeNode root) {
        method2(root);
        return max;
    }

    public int method2(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int k = root.val + method2(root.left);
        int k1 = root.val + method2(root.right);
        int internal = k + k1 - root.val;
        if (internal > max) {
            max = internal;
        }
        if (max < root.val) {
            max = root.val;
        }
        if (k > max) {
            max = k;
        }
        if (k1 > max) {
            max = k1;
        }
        //   System.out.println(root.val+" "+k+" "+k1);
        if (root.val > k && root.val > k1) {
            return root.val;
        }
        return Math.max(k, k1);
    }
}
