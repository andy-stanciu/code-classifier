class Solution {

    private int var1 = Integer.MIN_VALUE;

    public int var1(TreeNode root) {
        method1(root);
        return var1;
    }

    private int method1(TreeNode root) {
        if (root == null)
            return 0;
        // Recursively find the maximum path sum for left and right subtrees
        int leftMax = Math.max(method1(root.left), 0);
        int rightMax = Math.max(method1(root.right), 0);
        // Calculate the maximum path sum passing through the current node
        int currMax = root.val + leftMax + rightMax;
        // Update the global maximum path sum
        var1 = Math.max(var1, currMax);
        // Return the maximum path sum extending from the current node
        return root.val + Math.max(leftMax, rightMax);
    }
}
