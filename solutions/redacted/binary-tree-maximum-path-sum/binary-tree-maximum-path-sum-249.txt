/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        ans = Integer.MIN_VALUE;
        int temp = traverse(root);
        return ans;
    }

    int ans;

    public int traverse(TreeNode root) {
        if (root.left == null && root.right == null) {
            ans = Math.max(ans, root.val);
            return root.val;
        }
        int l = 0, r = 0;
        if (root.left != null) {
            l = traverse(root.left);
        }
        if (root.right != null) {
            r = traverse(root.right);
        }
        ans = Math.max(ans, Math.max(root.val, Math.max(root.val + l, Math.max(root.val + r, root.val + l + r))));
        return Math.max(root.val, root.val + Math.max(l, r));
    }
}
