/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int ans = Integer.MIN_VALUE;

    int f(TreeNode root) {
        if (root == null)
            return Integer.MIN_VALUE;
        int left = f(root.left);
        int right = f(root.right);
        int temp = Math.max(left, right);
        if (temp != Integer.MIN_VALUE)
            ans = Math.max(ans, temp);
        if (left < 0 && right < 0) {
            ans = Math.max(ans, root.val);
            return root.val;
        } else if (left > 0 && right > 0)
            ans = Math.max(ans, root.val + left + right);
        if (temp != Integer.MIN_VALUE) {
            ans = Math.max(ans, root.val + temp);
            return root.val + temp;
        } else
            return root.val;
    }

    public int method1(TreeNode root) {
        f(root);
        return ans;
    }
}
