/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        int[] arr = new int[] { Integer.MIN_VALUE };
        if (root.left == null && root.right == null) {
            return root.val;
        }
        method2(root, arr);
        return arr[0];
    }

    public int method2(TreeNode root, int[] arr) {
        if (root == null) {
            return 0;
        }
        int var1 = Math.max(0, method2(root.left, arr));
        int var2 = Math.max(0, method2(root.right, arr));
        arr[0] = Math.max(arr[0], var1 + var2 + root.val);
        return root.val + Math.max(var1, var2);
    }
}
