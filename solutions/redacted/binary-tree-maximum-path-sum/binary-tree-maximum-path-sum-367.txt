class Solution {

    private int res = Integer.MIN_VALUE;

    public int method1(TreeNode root) {
        solve(root);
        return res;
    }

    private int solve(TreeNode root) {
        if (root == null)
            return 0;
        // Calculate the maximum path sum for the left and right subtrees
        int left = Math.max(0, solve(root.left));
        int right = Math.max(0, solve(root.right));
        // Update the global maximum path sum considering the current node
        res = Math.max(res, left + right + root.val);
        // Return the maximum straight path sum for the current subtree
        return Math.max(left, right) + root.val;
    }
}
