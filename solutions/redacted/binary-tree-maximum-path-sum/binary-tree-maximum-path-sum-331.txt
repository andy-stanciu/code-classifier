/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = Integer.MIN_VALUE;

    int traversal(TreeNode root) {
        if (root == null)
            return 0;
        if (root.left == null && root.right == null) {
            max = Math.max(max, root.val);
            return root.val;
        }
        // get left max value
        int lh = traversal(root.left);
        //get right max Vale
        int rh = traversal(root.right);
        int max1 = Math.max(root.val + lh, root.val + rh);
        int max2 = Math.max(root.val, root.val + lh + rh);
        max = Math.max(Math.max(max1, max2), max);
        return Math.max(root.val, max1);
    }

    public int method1(TreeNode root) {
        traversal(root);
        return max;
    }
}
