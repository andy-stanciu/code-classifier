/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max;

    public int method1(TreeNode root) {
        max = Integer.MIN_VALUE;
        ;
        max(root);
        return max;
    }

    private int max(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int left = 0;
        int right = 0;
        if (root.left != null) {
            left = max(root.left);
        }
        if (root.right != null) {
            right = max(root.right);
        }
        left = left < 0 ? 0 : left;
        right = right < 0 ? 0 : right;
        if (left + right + root.val > max) {
            max = left + right + root.val;
        }
        return Math.max(root.val + left, root.val + right);
    }
}
