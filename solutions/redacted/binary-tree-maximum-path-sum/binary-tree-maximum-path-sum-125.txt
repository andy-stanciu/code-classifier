/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        if (root.left == null && root.right == null)
            return root.val;
        int[] ans = new int[1];
        ans[0] = Integer.MIN_VALUE;
        traversal(root, ans);
        return ans[0];
    }

    public int traversal(TreeNode root, int[] A) {
        if (root == null)
            return -10001;
        A[0] = Math.max(A[0], root.val);
        int left = traversal(root.left, A);
        int right = traversal(root.right, A);
        if (left <= 0 && right <= 0)
            return root.val;
        int max = Math.max(left, right);
        A[0] = Math.max(A[0], max);
        A[0] = Math.max(A[0], max + root.val);
        A[0] = Math.max(A[0], left + right + root.val);
        if (max < 0 && root.val > 0)
            return root.val;
        return max + root.val;
    }
}
