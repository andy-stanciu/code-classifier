/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int ans = Integer.MIN_VALUE;

    public int method1(TreeNode root) {
        traverse(root);
        return this.ans;
    }

    private int traverse(TreeNode root) {
        if (root == null)
            return 0;
        int val = root.val;
        int left = traverse(root.left);
        int right = traverse(root.right);
        int returnValue = max(val, val + left, val + right);
        this.ans = max(this.ans, returnValue, val + left + right);
        return returnValue;
    }

    private int max(int a, int b, int c) {
        int max = Math.max(a, b);
        return Math.max(max, c);
    }
}
