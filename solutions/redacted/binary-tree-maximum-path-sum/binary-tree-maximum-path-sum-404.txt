/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max;

    public int method1(TreeNode root) {
        /**
         *              1
         *            2   3
         *          4   5
         *               T                      T               T
         *              root , left , right , root + left , root + right , left + root + right
         *
         *               4 , 5 , 6 , 7
         */
        max = -100000;
        dfs(root);
        return max;
    }

    public int dfs(TreeNode root) {
        if (root == null) {
            return -100000;
        }
        if (root.left == null && root.right == null) {
            max = Math.max(max, root.val);
            return root.val;
        }
        int left = dfs(root.left);
        int right = dfs(root.right);
        int var1 = left + root.val;
        int var2 = right + root.val;
        int var3 = left + right + root.val;
        max = Math.max(max, Math.max(root.val, Math.max(var1, Math.max(var2, Math.max(var3, Math.max(left, right))))));
        return Math.max(root.val, Math.max(var1, var2));
    }
}
