/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxVal = 0;

    public int method1(TreeNode root) {
        maxVal = root.val;
        int maxVal1 = method2(root, 0);
        if (maxVal1 > maxVal)
            maxVal = maxVal1;
        return maxVal;
    }

    public int method2(TreeNode node, int prevVal) {
        if (node == null)
            return 0;
        int var1 = 0;
        if (node.left != null)
            var1 = method2(node.left, node.val);
        int var2 = 0;
        if (node.right != null)
            var2 = method2(node.right, node.val);
        int var3 = node.val;
        var3 += var1 > 0 ? var1 : 0;
        var3 += var2 > 0 ? var2 : 0;
        if (var3 > maxVal) {
            maxVal = var3;
        }
        if (node.val > maxVal)
            maxVal = node.val;
        int retVal = Math.max(node.val, Math.max(var1 + node.val, var2 + node.val));
        return retVal;
    }
}
