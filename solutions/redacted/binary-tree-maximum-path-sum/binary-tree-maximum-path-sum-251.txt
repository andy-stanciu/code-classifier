/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int answer = Integer.MIN_VALUE;

    public int method1(TreeNode root) {
        if (root == null) {
            return 0;
        }
        helper(root);
        return answer;
    }

    public int helper(TreeNode root) {
        int var1 = 0;
        int var2 = 0;
        if (root.left != null) {
            var1 = Math.max(helper(root.left), 0);
        }
        if (root.right != null) {
            var2 = Math.max(helper(root.right), 0);
        }
        if (var1 + var2 + root.val > answer) {
            answer = var1 + var2 + root.val;
        }
        return Math.max(var1, var2) + root.val;
    }
}
