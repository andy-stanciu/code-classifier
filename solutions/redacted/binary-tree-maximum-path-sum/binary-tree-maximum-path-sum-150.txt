/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    // initilizing the maxvalue
    int maxvalue;

    public int method1(TreeNode root) {
        // defining the max value
        maxvalue = Integer.MIN_VALUE;
        practice(root);
        // maxvalue returning
        return maxvalue;
    }

    public int practice(TreeNode root) {
        // for root when go to null
        if (root == null)
            return 0;
        // getting the left part of tree value
        int left = Math.max(0, practice(root.left));
        // getting the right of the tree value.
        int right = Math.max(0, practice(root.right));
        //sum up the root with this
        maxvalue = Math.max(maxvalue, left + right + root.val);
        // returning the value
        return Math.max(left, right) + root.val;
    }
}
