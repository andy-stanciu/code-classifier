/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
/**
 *                        1
 *                     /     \\
 *             ->    2         3
 *                 /   \\     /   \\
 *                5    6    4     1
 */
class Solution {

    private int var1 = Integer.MIN_VALUE;

    public int method1(TreeNode root) {
        if (root == null)
            return 0;
        internal(root);
        return var1;
    }

    private int internal(TreeNode root) {
        if (root == null)
            return 0;
        int left = internal(root.left);
        int right = internal(root.right);
        int var2 = Math.max(root.val, Math.max(root.val + left, Math.max(root.val + right, (root.val + left + right))));
        if (var2 > var1) {
            var1 = var2;
        }
        return Math.max(root.val, root.val + Math.max(left, right));
    }
}
