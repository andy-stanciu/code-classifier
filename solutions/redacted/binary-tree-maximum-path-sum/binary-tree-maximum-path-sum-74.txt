/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int max = Integer.MIN_VALUE;

    public int method1(TreeNode root) {
        total(root);
        return max;
    }

    public int total(TreeNode root) {
        if (root == null)
            return 0;
        int left = total(root.left);
        int right = total(root.right);
        //System.out.println(" root "+ root.val + " left "+ left + " right "+ right);
        int var1 = root.val + left + right;
        if (root.val + left + right > max) {
            //sum = root.val+left+right;
            max = var1;
            //System.out.println("left and right "+ sum);
        }
        if (root.val + left > max) {
            var1 = root.val + left;
            max = var1;
            //System.out.println("left "+ sum);
        }
        if (root.val + right > max) {
            var1 = root.val + right;
            max = var1;
            //System.out.println("right "+ sum);
        }
        if (max < root.val) {
            var1 = root.val;
            max = var1;
            //System.out.println("root "+ sum);
        }
        //System.out.println(" sum " + sum);
        if (left > right)
            var1 = root.val + left;
        else
            var1 = root.val + right;
        if (var1 < root.val)
            return root.val;
        return var1;
    }
}
