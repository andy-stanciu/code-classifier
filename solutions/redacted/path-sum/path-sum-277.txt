/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static void solve(TreeNode root, int param1, int param2, boolean[] flag) {
        if (root == null) {
            return;
        }
        param2 = param2 + root.val;
        solve(root.left, param1, param2, flag);
        solve(root.right, param1, param2, flag);
        if (root.left == null && root.right == null) {
            if (param2 == param1) {
                flag[0] = true;
            }
        }
        param2 = param2 - root.val;
        return;
    }

    public boolean method1(TreeNode root, int param1) {
        int param2 = 0;
        boolean[] flag = { false };
        solve(root, param1, param2, flag);
        return flag[0];
    }
}
