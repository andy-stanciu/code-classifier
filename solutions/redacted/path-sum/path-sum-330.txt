/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root, int param1) {
        boolean bl1 = false;
        boolean bl2 = false;
        if (root == null)
            return false;
        if (root.val == param1 && root.left == null && root.right == null)
            return true;
        if (root.left != null)
            bl1 = checkNextNode(root.val, root.left, param1);
        if (root.right != null)
            bl2 = checkNextNode(root.val, root.right, param1);
        return bl1 || bl2;
    }

    private boolean checkNextNode(int currentInt, TreeNode node, int param1) {
        int num = currentInt + node.val;
        boolean bl1 = false;
        boolean bl2 = false;
        if (num == param1 && node.left == null && node.right == null)
            return true;
        if (node.left != null)
            bl1 = checkNextNode(num, node.left, param1);
        if (node.right != null)
            bl2 = checkNextNode(num, node.right, param1);
        return bl1 || bl2;
    }
}
