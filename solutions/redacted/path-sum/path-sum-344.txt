/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    private boolean hasFound = false;

    public boolean method1(TreeNode root, int param1) {
        readTree(root, param1, 0);
        return hasFound;
    }

    private void readTree(TreeNode node, int param1, int param2) {
        if (node == null || hasFound)
            return;
        if (node.left == null && node.right == null && (node.val + param2 == param1))
            hasFound = true;
        readTree(node.left, param1, param2 + node.val);
        readTree(node.right, param1, param2 + node.val);
    }
}
