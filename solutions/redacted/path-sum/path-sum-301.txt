/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    static ArrayList<Integer> list = new ArrayList<>();

    public boolean method1(TreeNode root, int param1) {
        if (root == null) {
            return false;
        }
        if (root.left == null && root.right == null) {
            int var1 = 0;
            for (int i = 0; i < list.size(); i++) {
                var1 = var1 + list.get(i);
            }
            var1 += root.val;
            if (var1 == param1) {
                list.clear();
                return true;
            }
        }
        list.add(root.val);
        boolean b = method1(root.left, param1);
        boolean f = method1(root.right, param1);
        if (!list.isEmpty()) {
            list.remove(list.size() - 1);
        }
        return b || f;
    }

    public boolean method2(TreeNode root, int param1) {
        if (root == null) {
            return false;
        }
        return method1(root, param1);
    }
}
