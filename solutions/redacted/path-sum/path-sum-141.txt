/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root, int param1) {
        return calc(root, param1);
    }

    //     class Solution {
    //     public boolean hasPathSum(TreeNode root, int targetSum) {
    //         return  calc(root, targetSum);
    //     }
    //     boolean calc(TreeNode root, int target){
    //         if(root == null) return false;
    //         if(root.left == null && root.right == null && root.val == target) return true;
    //         if(calc(root.left, target-root.val) || calc(root.right , target-root.val)) return true;
    //         return false;
    //     }
    // }
    boolean calc(TreeNode root, int param2) {
        if (root == null)
            return false;
        int val = param2 - root.val;
        if (root.left == null && root.right == null) {
            if (val == 0)
                return true;
            return false;
        }
        if (calc(root.left, val) || calc(root.right, val))
            return true;
        return false;
    }
}
