/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root, int param1) {
        if (root == null) {
            return false;
        }
        if (root.left == null && root.right == null) {
            return param1 == root.val;
        }
        int var1 = param1 - root.val;
        return method1(root.left, var1) || method1(root.right, var1);
    }

    public static void main(String[] args) {
        TreeNode root = new TreeNode(5);
        root.left = new TreeNode(4);
        root.right = new TreeNode(8);
        root.left.left = new TreeNode(11);
        root.left.left.left = new TreeNode(7);
        root.left.left.right = new TreeNode(2);
        root.right.left = new TreeNode(13);
        root.right.right = new TreeNode(4);
        root.right.right.right = new TreeNode(1);
        Solution solution = new Solution();
        System.out.println(solution.method1(root, 22));
        System.out.println(solution.method1(root, 27));
        System.out.println(solution.method1(root, 26));
        System.out.println(solution.method1(null, 0));
    }
}
