/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root, int param1) {
        if (root == null) {
            return false;
        }
        Stack<TreeNode> var1 = new Stack();
        Stack<Integer> var2 = new Stack();
        var1.push(root);
        var2.push(root.val);
        while (!var1.isEmpty()) {
            TreeNode temp = var1.pop();
            int tempVal = var2.pop();
            if (temp.left == null && temp.right == null && tempVal == param1) {
                return true;
            }
            if (temp.left != null) {
                var1.push(temp.left);
                var2.push(tempVal + temp.left.val);
            }
            if (temp.right != null) {
                var1.push(temp.right);
                var2.push(tempVal + temp.right.val);
            }
        }
        return false;
    }
}
