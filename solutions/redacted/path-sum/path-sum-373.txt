/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private boolean deep(TreeNode node, int param1) {
        if (node == null) {
            if (param1 == 0) {
                return true;
            }
            return false;
        }
        if (node.left == null && node.right != null) {
            return deep(node.right, param1 - node.val);
        } else if (node.right == null && node.left != null) {
            return deep(node.left, param1 - node.val);
        }
        return deep(node.left, param1 - node.val) || deep(node.right, param1 - node.val);
    }

    public boolean method1(TreeNode root, int param2) {
        if (root == null) {
            return false;
        }
        return deep(root, param2);
    }
}
