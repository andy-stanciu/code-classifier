/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    ArrayList<Integer> arr = new ArrayList<>();

    public boolean method1(TreeNode root, int param1) {
        if (root == null) {
            return false;
        }
        dfs(root, 0);
        return arr.contains(param1);
    }

    public void dfs(TreeNode root, int prev) {
        if (root == null) {
            return;
        }
        prev += root.val;
        dfs(root.left, prev);
        dfs(root.right, prev);
        if (root.left == null && root.right == null) {
            arr.add(prev);
            return;
        }
    }
}
