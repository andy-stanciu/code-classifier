/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int target;

    public boolean method1(TreeNode root, int param1) {
        target = param1;
        return dfsPreOrder(root, 0);
    }

    public boolean dfsPreOrder(TreeNode node, int curr) {
        if (node == null) {
            return false;
        }
        curr += node.val;
        if (node.left == null && node.right == null)
            return curr == target;
        boolean left = dfsPreOrder(node.left, curr);
        boolean right = dfsPreOrder(node.right, curr);
        return left || right;
    }
}
