class Solution {

    public boolean method1(TreeNode root, int param1) {
        if (root == null) {
            // If the current node is null, there\'s no path, so return false.
            return false;
        }
        if (root.left == null && root.right == null) {
            // If the current node is a leaf node (has no children),
            // check if the targetSum equals the value of this leaf node.
            return param1 == root.val;
        }
        // Recursively check if there is a path with the remaining sum
        // after subtracting the current node\'s value from the targetSum.
        boolean left = method1(root.left, param1 - root.val);
        boolean right = method1(root.right, param1 - root.val);
        // Return true if either the left subtree or the right subtree
        // contains a path sum that equals the remaining targetSum.
        return left || right;
    }
}
