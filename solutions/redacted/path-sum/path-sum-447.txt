/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root, int param1) {
        if (root == null)
            return false;
        if (isLeaf(root))
            return root.val == param1;
        return DFS(root, param1, 0);
    }

    private boolean DFS(TreeNode root, int param1, int param2) {
        if (root == null)
            return false;
        if (isLeaf(root)) {
            param2 = root.val + param2;
            if (param2 == param1)
                return true;
            else {
                param2 = param2 - root.val;
                return false;
            }
        }
        return DFS(root.left, param1, param2 + root.val) || DFS(root.right, param1, param2 + root.val);
    }

    private boolean isLeaf(TreeNode root) {
        if (root == null)
            return false;
        if (root.left == null && root.right == null)
            return true;
        return false;
    }
}
