class Solution {

    public boolean method1(TreeNode root, int param1) {
        // Call the helper method with the root node, target sum, and an initial prefix sum of 0
        return method1(root, param1, 0);
    }

    public boolean method1(TreeNode node, int param1, int prefix) {
        if (node == null) {
            // If the node is null, there\'s no path, return false
            return false;
        }
        // Add the current node\'s value to the prefix sum
        prefix += node.val;
        // If the node is a leaf (has no children)
        if (node.left == null && node.right == null) {
            // Check if the current prefix sum equals the target sum
            return prefix == param1;
        }
        // Recursively call for the left and right subtrees
        boolean l = method1(node.left, param1, prefix);
        boolean r = method1(node.right, param1, prefix);
        // Return true if either of the subtrees has a valid path
        return l || r;
    }
}
