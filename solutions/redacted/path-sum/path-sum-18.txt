/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root, int param1) {
        if (root == null) {
            return false;
        }
        return method2(root, param1, 0);
    }

    private boolean method2(TreeNode node, int param1, int param2) {
        if (node == null) {
            return false;
        }
        param2 += node.val;
        if (node.left == null && node.right == null) {
            return param2 == param1;
        }
        boolean var1 = method2(node.left, param1, param2);
        boolean var2 = method2(node.right, param1, param2);
        return var1 || var2;
    }
}
