/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean traverse(TreeNode root, int cur, int target) {
        if (root == null) {
            return false;
        }
        if (root.left == null && root.right == null && cur == target) {
            return true;
        }
        boolean left = false;
        boolean right = false;
        if (root.left != null) {
            left = traverse(root.left, cur + root.left.val, target);
        }
        if (root.right != null) {
            right = traverse(root.right, cur + root.right.val, target);
        }
        return left || right;
    }

    public boolean method1(TreeNode root, int param1) {
        if (root == null) {
            return false;
        }
        return traverse(root, root.val, param1);
    }
}
