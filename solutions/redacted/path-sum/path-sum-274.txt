/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root, int t) {
        //using inorder traversal
        boolean[] check = new boolean[1];
        check[0] = false;
        int var1 = 0;
        //Stack<Integer>s2 = new Stack<>();
        PreOrder(root, t, check, var1);
        return check[0];
    }

    public void PreOrder(TreeNode root, int t, boolean[] check, int var1) {
        if (root == null) {
            return;
        }
        var1 += root.val;
        if (root.left == null && root.right == null && var1 == t) {
            check[0] = true;
        }
        PreOrder(root.left, t, check, var1);
        PreOrder(root.right, t, check, var1);
        var1 -= root.val;
    }
}
