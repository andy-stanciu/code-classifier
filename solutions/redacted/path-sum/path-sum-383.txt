class Solution {

    public boolean method1(TreeNode root, int param1) {
        // Base case: If the root is null, return false
        if (root == null)
            return false;
        // If the current node is a leaf node and its value equals the targetSum, return true
        if (root.left == null && root.right == null && root.val == param1)
            return true;
        // Recursively check if there exists a path with the remaining sum in the left or right subtree
        return method1(root.left, param1 - root.val) || method1(root.right, param1 - root.val);
    }
}
