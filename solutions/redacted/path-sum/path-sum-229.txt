/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
//  class Solution {
//     public boolean hasPathSum(TreeNode root, int targetSum) {
//         int cur = 0;
//         sum(root , targetsum , cur)
//     }
//     public int hasPathSum(TreeNode root, int target , int cur) {
//         if(root == null) return 0;
//         if(sum + root.val > target ) return 0;
//         sum = sum + root.val;
//         if(sum == target) return 0;
//     }
// }
class Solution {

    public boolean method1(TreeNode root, int target) {
        int var1 = 0;
        return method2(root, target, var1);
    }

    public boolean method2(TreeNode root, int target, int var1) {
        if (root == null)
            return false;
        var1 = var1 + root.val;
        if (var1 == target && root.right == null && root.left == null)
            return true;
        if (var1 != target && root.right == null && root.left == null)
            return false;
        if (method2(root.left, target, var1))
            return true;
        if (method2(root.right, target, var1))
            return true;
        return false;
    }
}
