class Solution {

    public int method1(int[] nums) {
        int n = nums.length;
        int i, j = 0, len;
        Arrays.sort(nums);
        for (i = 0; i < n; i++) {
            if (nums[j] != nums[i]) {
                j++;
                nums[j] = nums[i];
            }
        }
        len = j + 1;
        if (len > 2) {
            return nums[len - 3];
        } else {
            return nums[len - 1];
        }
    }
}
// int n = nums.length;
// int count = 1;
// int f= 0;
// for(int i=n-1;i>0;i--){
// if(nums[i] == nums[i-1]){
// f = f + 1; // for checking how many times max or second max value repeating
// }
// else{
// count = count + 1; // for getting distinct max value count (until 3rd max value)
// }
// if(count == 3){
// return nums[n-count-f]; // n=total value , count = 3, flag = how many times max or second max repeating
// }
// }
// return nums[n-1];
//     }
