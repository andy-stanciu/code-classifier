class Solution {

    public int method1(int[] nums) {
        if (nums == null)
            return -1;
        Arrays.sort(nums);
        Set<Integer> seen = new HashSet<>();
        int cnt = 0;
        int max = Integer.MIN_VALUE;
        for (int i = nums.length - 1; i >= 0; i--) {
            if (!seen.contains(nums[i])) {
                cnt++;
                if (cnt == 3) {
                    return nums[i];
                }
                if (nums[i] > max)
                    max = nums[i];
                seen.add(nums[i]);
            }
        }
        return max;
        // POV, you don\'t understand the question & what they are asking.
        // Your understanding is to return the 3rd non-duplicate item.
        // Actually, you\'re supposed to third largest number.
        // Get pranked.
        // Set<Integer> seen = new HashSet<>();
        // int cnt = 0;
        // int max = Integer.MIN_VALUE;
        // for (int i = 0; i < nums.length; i++) {
        //     if (!seen.contains(nums[i])) {
        //         cnt++;
        //         if (cnt == 3)
        //             return nums[i];
        //     }
        //     if (nums[i] > max)
        //         max = nums[i];
        //     seen.add(nums[i]);
        // }
        // return max;
    }
}
