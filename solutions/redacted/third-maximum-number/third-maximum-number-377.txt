class Solution {

    public int method1(int[] nums) {
        int n = nums.length;
        insertionSort(nums, n);
        int index = 0;
        int dup = 0;
        for (int i = 1; i < nums.length; i++) {
            index++;
            if (nums[i] == nums[i - 1])
                dup++;
            if (index - dup == 2)
                return nums[index];
        }
        return nums[0];
    }

    public void insertionSort(int[] arr, int len) {
        for (int i = 0; i < len - 1; i++) {
            for (int j = i + 1; j > 0; j--) {
                if (arr[j] > arr[j - 1])
                    swap(arr, j, j - 1);
            }
        }
    }

    public void swap(int[] arr, int first, int second) {
        int temp = arr[first];
        arr[first] = arr[second];
        arr[second] = temp;
    }
}
