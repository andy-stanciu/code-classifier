class Solution {

    public int lengthOfLIS(int[] nums) {
        int len = nums.length;
        int endInd = 0;
        int[] minNumWithSeqLen = new int[len];
        Arrays.fill(minNumWithSeqLen, Integer.MAX_VALUE);
        for (int i = 0; i < len; i++) {
            int nextSeq = 1 + bSearch(minNumWithSeqLen, nums[i], endInd);
            if (minNumWithSeqLen[nextSeq] > nums[i]) {
                minNumWithSeqLen[nextSeq] = nums[i];
            }
            if (endInd <= nextSeq) {
                endInd = nextSeq + 1;
            }
        }
        return endInd;
    }

    private int bSearch(int[] nums, int targ, int hi) {
        int lo = 0, nm = -1;
        while (lo <= hi) {
            int mid = lo + (hi - lo) / 2;
            if (nums[mid] < targ) {
                nm = mid;
                lo = mid + 1;
            } else
                hi = mid - 1;
        }
        return nm;
    }
}
