class Solution {

    public int lengthOfLIS(int[] nums) {
        // greedy + binary search for place
        int n = nums.length;
        int[] g = new int[n];
        int m = 0;
        for (int i = 0; i < n; ++i) {
            int p = lowerBound(g, 0, m, nums[i]);
            if (p == m) {
                g[m++] = nums[i];
            } else {
                g[p] = nums[i];
            }
        }
        return m;
    }

    private int lowerBound(int[] nums, int start, int end, int target) {
        int l = start, r = end;
        while (l < r) {
            int mid = (l + r) >>> 1;
            if (nums[mid] < target) {
                l = mid + 1;
            } else {
                r = mid;
            }
        }
        return l;
    }
}
