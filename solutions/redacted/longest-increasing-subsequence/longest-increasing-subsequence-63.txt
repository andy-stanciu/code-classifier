class Solution {

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        recursion(nums, 0, n - 1, new int[n]);
        return max;
    }

    int max = 1;

    public int recursion(int[] arr, int index, int n, int[] dp) {
        if (index == n) {
            dp[index] = 1;
            return index;
        }
        if (dp[index] != 0) {
            return index;
        }
        int count = 0;
        for (int i = index + 1; i <= n; i++) {
            int temp = recursion(arr, i, n, dp);
            if (arr[index] < arr[temp]) {
                count = Math.max(count, dp[temp]);
            }
        }
        dp[index] = count + 1;
        max = Math.max(max, dp[index]);
        return index;
    }
}
