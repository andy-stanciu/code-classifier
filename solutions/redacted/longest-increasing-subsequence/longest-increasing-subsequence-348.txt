class Solution {

    public int solve(int i, int n, int prev, int[] a, int[][] dp) {
        if (i == n + 1)
            return 0;
        if (dp[i][prev] != -1)
            return dp[i][prev];
        int len = solve(i + 1, n, prev, a, dp);
        if (p == 0 || a[i - 1] > a[prev - 1]) {
            len = Math.max(len, 1 + solve(i + 1, n, i, a, dp));
        }
        return dp[i][prev] = len;
    }

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[][] dp = new int[n + 1][n + 1];
        for (int i = 0; i <= n; i++) {
            Arrays.fill(dp[i], -1);
        }
        return solve(1, nums.length, 0, nums, dp);
    }
}
