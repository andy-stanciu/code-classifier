class Solution {

    public int lengthOfLIS(int[] nums) {
        List<Integer> temp = new ArrayList<>();
        int len = 1;
        temp.add(nums[0]);
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > temp.get(temp.size() - 1)) {
                temp.add(nums[i]);
                len++;
            } else {
                int idx = lowerBound(temp, nums[i]);
                temp.set(idx, nums[i]);
            }
        }
        return len;
    }

    public int lowerBound(List<Integer> temp, int n) {
        int low = 0, high = temp.size() - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (temp.get(mid) == n)
                return mid;
            if (temp.get(mid) < n)
                low = mid + 1;
            else
                high = mid - 1;
        }
        return low;
    }
}
