class Solution {

    public int lengthOfLIS(int[] nums) {
        int[][] dp = new int[nums.length + 1][nums.length + 1];
        for (int[] row : dp) Arrays.fill(row, -1);
        return lengthOfLIS(nums, 0, -1, dp);
    }

    public int lengthOfLIS(int[] nums, int i, int prev, int[][] dp) {
        if (i == nums.length)
            return 0;
        if (prev != -1 && dp[i][prev] != -1)
            return dp[i][prev];
        int take = 0;
        if (prev == -1 || nums[i] > nums[prev])
            take = 1 + lengthOfLIS(nums, i + 1, i, dp);
        int not_take = lengthOfLIS(nums, i + 1, prev, dp);
        if (prev != -1)
            dp[i][prev] = Math.max(take, not_take);
        return Math.max(take, not_take);
    }
}
