class Solution {

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[] answer = new int[n];
        Arrays.fill(answer, Integer.MIN_VALUE);
        int start = -1;
        for (int i = 0; i < n; i++) {
            if (start == -1) {
                answer[start + 1] = nums[i];
                start++;
            } else if (answer[start] < nums[i]) {
                answer[start + 1] = nums[i];
                start++;
            } else if (answer[start] != nums[i]) {
                int index = getIndex(answer, 0, start, nums[i]);
                if (index != -1 && answer[index] != nums[i]) {
                    answer[index] = nums[i];
                }
            }
        }
        int counter = 0;
        for (int i : answer) {
            if (i == Integer.MIN_VALUE) {
                break;
            }
            counter++;
        }
        return counter;
    }

    public int getIndex(int[] nums, int i, int j, int target) {
        int index = -1;
        while (i <= j) {
            int mid = i + ((j - i) / 2);
            if (nums[mid] >= target) {
                index = mid;
                j = mid - 1;
            } else if (nums[mid] < target) {
                i = mid + 1;
            } else {
                j = mid - 1;
            }
        }
        return index;
    }
}
