class Solution {

    public int lengthOfLIS(int[] nums) {
        ArrayList<Integer> arr = new ArrayList<>();
        // arr index represents length of list and val represents last ele of that length
        int ans = 1;
        arr.add(nums[0]);
        for (int i = 1; i < nums.length; i++) {
            // check if it can directly be added to end of arraylist
            if (nums[i] > arr.get(arr.size() - 1)) {
                arr.add(nums[i]);
                ans = arr.size();
            } else {
                // do a binary search over all possible cases
                int start = 0;
                int end = arr.size() - 1;
                int insert = -1;
                while (start <= end) {
                    int mid = (start + end) / 2;
                    if (nums[i] <= arr.get(mid)) {
                        insert = mid;
                        end = mid - 1;
                    } else {
                        start = mid + 1;
                    }
                }
                if (insert != -1 && arr.get(insert) > nums[i]) {
                    arr.set(insert, nums[i]);
                }
            }
        }
        return ans;
    }
}
