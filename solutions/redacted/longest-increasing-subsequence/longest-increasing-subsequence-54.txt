class Solution {

    public int lengthOfLIS(int[] nums) {
        int N = nums.length;
        int[] cur = new int[N + 1];
        int[] next = new int[N + 1];
        Arrays.fill(cur, 0);
        Arrays.fill(next, 0);
        for (int index = N - 1; index >= 0; index--) {
            for (int prev_index = index - 1; prev_index >= -1; prev_index--) {
                //prev=index-1
                int notTaken = 0 + next[prev_index + 1];
                int taken = (int) -1e6;
                if (prev_index == -1 || nums[index] > nums[prev_index]) {
                    // index+1 for j as we shifted -1 AS 0
                    taken = 1 + next[index + 1];
                }
                cur[prev_index + 1] = Math.max(notTaken, taken);
            }
            for (int i = 0; i <= N; i++) {
                next[i] = cur[i];
            }
        }
        return next[-1 + 1];
    }
}
