class Solution {

    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        ArrayList<Integer> lis = new ArrayList<>();
        int len = 1;
        lis.add(nums[0]);
        for (int i = 1; i < n; i++) {
            if (nums[i] > lis.get(len - 1)) {
                lis.add(nums[i]);
                len = len + 1;
            } else {
                lis.set(binarySearch(lis, nums[i]), nums[i]);
            }
        }
        return len;
    }

    public int binarySearch(ArrayList<Integer> ls, int key) {
        int low = 0;
        int high = ls.size() - 1;
        int mid = 0;
        while (low <= high) {
            mid = low + (high - low) / 2;
            if (ls.get(mid) == key) {
                return mid;
            } else if (ls.get(mid) < key) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return low;
    }
}
