class Solution {

    public int getMax(int[] arr) {
        //
        int max = 0;
        for (int i = 0; i < arr.length; i++) {
            max = Math.max(max, arr[i]);
        }
        return max;
    }

    public int lengthOfLIS(int[] nums) {
        if (nums.length == 0) {
            return 0;
        }
        // dont need extra as last is always 1.
        int[] dynamicA = new int[nums.length];
        // 1 all have at least one sequence
        Arrays.fill(dynamicA, 1);
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j < i; j++) {
                // this is critical start at 0 and go to i
                if (nums[i] > nums[j]) {
                    // something special!
                    dynamicA[i] = Math.max(dynamicA[i], dynamicA[j] + 1);
                }
            }
        }
        return getMax(dynamicA);
    }
}
