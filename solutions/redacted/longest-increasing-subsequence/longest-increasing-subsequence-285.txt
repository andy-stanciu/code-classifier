class Solution {

    public int lengthOfLIS(int[] nums) {
        int maxLength = 1;
        int[] length = new int[nums.length];
        if (nums.length == 0) {
            //base case 1
            return 0;
        }
        for (int i = 0; i < nums.length; i++) {
            length[i] = 1;
        }
        for (int i = 1; i < nums.length; i++) {
            for (int j = 0; j < i; j++) {
                //loop through all substring ending with numbers on the left and find the one with maxlength
                if (nums[j] < nums[i]) {
                    //but the tail number of the substring must be smaller than the current element
                    length[i] = Math.max(length[i], length[j] + 1);
                }
            }
            //update maxLength
            maxLength = Math.max(maxLength, length[i]);
        }
        return maxLength;
    }
}
