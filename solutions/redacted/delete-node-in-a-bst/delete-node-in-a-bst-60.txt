class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return root;
        if (root.val == key)
            return method2(root.left, root.right);
        method3(root.left, root, true, key);
        method3(root.right, root, false, key);
        return root;
    }

    private TreeNode method2(TreeNode left, TreeNode right) {
        if (left == null && right == null)
            return null;
        if (left == null)
            return right;
        if (right == null)
            return left;
        if (right.left == null)
            right.left = method2(left, right.left);
        else
            method2(left, right.left);
        return right;
    }

    private void method3(TreeNode root, TreeNode prev, boolean isLeft, int val) {
        if (root == null)
            return;
        if (root.val == val) {
            if (isLeft)
                prev.left = method2(root.left, root.right);
            else
                prev.right = method2(root.left, root.right);
            root.left = null;
            root.right = null;
        }
        if (val < root.val)
            method3(root.left, root, true, val);
        else
            method3(root.right, root, false, val);
    }
}
