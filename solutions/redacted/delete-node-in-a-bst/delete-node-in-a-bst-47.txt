/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return root;
        if (root.val == key) {
            root = method2(root, key);
        } else if (root.val < key) {
            root.right = method1(root.right, key);
        } else {
            root.left = method1(root.left, key);
        }
        return root;
    }

    private TreeNode method2(TreeNode root, int key) {
        if (root.left == null && root.right == null)
            return null;
        if (root.left == null)
            return root.right;
        if (root.right == null)
            return root.left;
        TreeNode helper = root.right;
        while (helper.left != null) helper = helper.left;
        helper.left = root.left;
        return root.right;
    }
}
