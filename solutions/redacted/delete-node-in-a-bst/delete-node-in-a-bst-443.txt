class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return null;
        if (root.val > key)
            root.left = method1(root.left, key);
        else if (root.val < key)
            root.right = method1(root.right, key);
        else {
            // root.val == key
            if (// with one or no child ode
            root.left == null)
                // with one or no child ode
                return root.right;
            else if (//with one or no child node
            root.right == null)
                //with one or no child node
                return root.left;
            else {
                int var1 = method2(root.right);
                root.val = var1;
                // to delete the replacement
                root.right = method1(root.right, var1);
            }
        }
        return root;
    }

    public int method2(TreeNode root) {
        int var1 = root.val;
        while (root != null) {
            var1 = root.val;
            root = root.left;
        }
        return var1;
    }
}
