/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode getSuccessor(TreeNode curr) {
        curr = curr.right;
        while (curr != null && curr.left != null) {
            curr = curr.left;
        }
        return curr;
    }

    public TreeNode method1(TreeNode root, int val) {
        if (root == null)
            return null;
        if (root.val > val)
            root.left = method1(root.left, val);
        else if (root.val < val)
            root.right = method1(root.right, val);
        else {
            if (//0 child
            root.left == null && root.right == null)
                return null;
            else if (//1 child(left)
            root.left == null)
                return root.right;
            else if (//1 child(right)
            root.right == null)
                return root.left;
            else {
                TreeNode succ = getSuccessor(root);
                root.val = succ.val;
                root.right = method1(root.right, succ.val);
            }
        }
        return root;
    }
}
