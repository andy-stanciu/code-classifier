/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public TreeNode method1(TreeNode root, int key) {
        TreeNode dummy = root;
        if (root == null)
            return root;
        if (root.val == key) {
            return helper(root);
        }
        while (root != null) {
            if (root.val > key) {
                if (root.left != null && root.left.val == key) {
                    root.left = helper(root.left);
                } else {
                    root = root.left;
                }
            } else {
                if (root.right != null && root.right.val == key) {
                    root.right = helper(root.right);
                } else {
                    root = root.right;
                }
            }
        }
        return dummy;
    }

    public TreeNode helper(TreeNode root) {
        if (root.left == null)
            return root.right;
        if (root.right == null)
            return root.left;
        TreeNode rightChild = root.right;
        TreeNode lastRight = method2(root.left);
        lastRight.right = rightChild;
        return root.left;
    }

    public TreeNode method2(TreeNode root) {
        while (root.right != null) {
            root = root.right;
        }
        return root;
    }
}
