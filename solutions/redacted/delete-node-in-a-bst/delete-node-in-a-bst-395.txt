/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode method1(TreeNode root, int key) {
        return helper(root, key);
    }

    private TreeNode helper(TreeNode param1, int key) {
        if (param1 == null) {
            return null;
        }
        if (param1.val == key) {
            if (param1.left == null) {
                return param1.right;
            }
            return fix(param1.left, param1.right);
        }
        param1.left = helper(param1.left, key);
        param1.right = helper(param1.right, key);
        return param1;
    }

    private TreeNode fix(TreeNode fix, TreeNode fixer) {
        if (fixer == null) {
            return fix;
        }
        if (fix.val < fixer.val) {
            fixer.left = fix(fix, fixer.left);
        }
        if (fix.val > fixer.val) {
            fixer.right = fix(fix, fixer.right);
        }
        return fixer;
    }
}
