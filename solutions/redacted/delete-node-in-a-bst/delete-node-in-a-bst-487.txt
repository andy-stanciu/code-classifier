/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static TreeNode method1(TreeNode root) {
        if (root.left == null) {
            return root;
        } else {
            return method1(root.left);
        }
    }

    public TreeNode method2(TreeNode root, int key) {
        if (root == null) {
            return null;
        }
        if (key < root.val) {
            root.left = method2(root.left, key);
        } else if (key > root.val) {
            root.right = method2(root.right, key);
        } else {
            if (root.left != null && root.right != null) {
                TreeNode temp = root;
                TreeNode var1 = method1(temp.right);
                root.val = var1.val;
                root.right = method2(root.right, var1.val);
            } else if (root.left != null) {
                root = root.left;
            } else if (root.right != null) {
                root = root.right;
            } else {
                root = null;
            }
        }
        return root;
    }
}
