/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    TreeNode connect(TreeNode rightSideFromRoot, TreeNode leftSideFromRoot) {
        if (rightSideFromRoot == null) {
            return leftSideFromRoot;
        }
        rightSideFromRoot.left = connect(rightSideFromRoot.left, leftSideFromRoot);
        return rightSideFromRoot;
    }

    TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return root;
        if (root.val == key) {
            return connect(root.right, root.left);
        }
        if (root.val > key) {
            root.left = method1(root.left, key);
        } else {
            root.right = method1(root.right, key);
        }
        return root;
    }

    public TreeNode method2(TreeNode root, int key) {
        return method1(root, key);
    }
}
