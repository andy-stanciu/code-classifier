/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode method1(TreeNode root, int X) {
        if (root == null) {
            return root;
        }
        if (root.val < X) {
            root.right = method1(root.right, X);
        } else if (root.val > X) {
            root.left = method1(root.left, X);
        } else {
            //voila
            //case 1:- leaf Node
            if (root.left == null && root.right == null) {
                return null;
            }
            //case 2:- Single Child
            if (root.left == null) {
                return root.right;
            } else if (root.right == null) {
                return root.left;
            }
            //case 3:- Both Children
            TreeNode IS = method2(root.right);
            root.val = IS.val;
            root.right = method1(root.right, IS.val);
        }
        return root;
    }

    public static TreeNode method2(TreeNode root) {
        while (root.left != null) {
            root = root.left;
        }
        return root;
    }
}
