/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return null;
        if (root.val == key) {
            TreeNode left = root.left;
            TreeNode right = root.right;
            if (left == null)
                return root.right;
            if (right == null)
                return root.left;
            TreeNode var1;
            var1 = method2(right);
            var1.left = left;
            return var1;
        } else if (root.val > key) {
            root.left = method1(root.left, key);
        } else {
            root.right = method1(root.right, key);
        }
        return root;
    }

    private TreeNode method2(TreeNode param1) {
        if (param1 == null)
            return null;
        TreeNode head = param1;
        TreeNode prev = param1;
        while (param1.left != null) {
            prev = param1;
            param1 = param1.left;
        }
        prev.left = param1.right;
        if (head == param1) {
            return head;
        } else {
            return new TreeNode(param1.val, null, head);
        }
    }
}
