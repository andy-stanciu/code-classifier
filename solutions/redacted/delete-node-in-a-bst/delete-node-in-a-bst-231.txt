/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    boolean isFound = false;

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return root;
        if (root.val == key) {
            isFound = true;
            if (root.right != null) {
                method2(root.right, root.left);
                root = root.right;
            } else {
                root = root.left;
            }
        } else {
            root.right = method1(root.right, key);
            if (!isFound)
                root.left = method1(root.left, key);
        }
        return root;
    }

    private void method2(TreeNode root, TreeNode param1) {
        if (param1 == null)
            return;
        if (root.val <= param1.val) {
            if (root.right != null) {
                method2(root.right, param1);
            } else {
                root.right = param1;
            }
        } else {
            if (root.left != null) {
                method2(root.left, param1);
            } else {
                root.left = param1;
            }
        }
    }
}
