/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode search(TreeNode root, int key) {
        if (root == null)
            return null;
        if (key == root.val)
            return del(root, root);
        if (root.val < key)
            root.right = search(root.right, key);
        else
            root.left = search(root.left, key);
        return root;
    }

    public TreeNode smax(TreeNode k) {
        if (k.right == null)
            return k;
        return smax(k.right);
    }

    public TreeNode del(TreeNode root, TreeNode k) {
        if (k.left == null)
            return k.right;
        if (k.right == null)
            return k.left;
        TreeNode b = smax(k.left);
        b.right = k.right;
        return k.left;
    }

    public TreeNode method1(TreeNode root, int key) {
        return search(root, key);
    }
}
