/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode method1(TreeNode root, int key) {
        ArrayList<Integer> list = new ArrayList<>();
        method3(root, list, key);
        return method2(list, 0, list.size() - 1);
    }

    private TreeNode method2(List<Integer> list, int start, int end) {
        if (start > end) {
            return null;
        }
        int mid = (start + end) / 2;
        TreeNode temp = new TreeNode(list.get(mid));
        temp.left = method2(list, start, mid - 1);
        temp.right = method2(list, mid + 1, end);
        return temp;
    }

    private void method3(TreeNode param1, List<Integer> list, int key) {
        if (param1 == null) {
            return;
        }
        method3(param1.left, list, key);
        if (param1.val != key) {
            list.add(param1.val);
        }
        method3(param1.right, list, key);
    }
}
