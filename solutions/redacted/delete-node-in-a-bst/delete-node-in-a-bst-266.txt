/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode method1(TreeNode root, int key) {
        if (root == null)
            return null;
        if (root.val == key) {
            if (root.left == null && root.right == null) {
                return null;
            }
            if (root.left == null) {
                return root.right;
            }
            if (root.right == null) {
                return root.left;
            }
            TreeNode farLeft = method2(root.right);
            farLeft.left = root.left;
            return root.right;
        } else {
            root.right = method1(root.right, key);
            root.left = method1(root.left, key);
            return root;
        }
    }

    public TreeNode method2(TreeNode param1) {
        if (param1.left == null)
            return param1;
        return method2(param1.left);
    }
}
