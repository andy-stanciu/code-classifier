/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode method1(TreeNode root, int key) {
        return method3(root, key);
    }

    private int method2(TreeNode param1) {
        if (param1.left == null) {
            return param1.val;
        } else {
            return method2(param1.left);
        }
    }

    private TreeNode method3(TreeNode param1, int key) {
        if (param1 == null) {
            return null;
        }
        if (key < param1.val) {
            param1.left = method3(param1.left, key);
        } else if (key > param1.val) {
            param1.right = method3(param1.right, key);
        } else {
            // key == node.key found node to delete
            if (param1.left == null) {
                return param1.right;
            } else if (param1.right == null) {
                return param1.left;
            } else {
                param1.val = method2(param1.right);
                param1.right = method3(param1.right, param1.val);
            }
        }
        return param1;
    }
}
