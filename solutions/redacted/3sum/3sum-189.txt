class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> allTriplets = new ArrayList<List<Integer>>();
        int i = 0;
        int n = nums.length - 1;
        while (i <= n) {
            if (i == 0 || nums[i] != nums[i - 1]) {
                int a = nums[i];
                int l = i + 1;
                int r = n;
                int target = 0 - a;
                while (l < r) {
                    int sum = nums[l] + nums[r];
                    if (sum > target) {
                        r--;
                    } else if (sum < target) {
                        l++;
                    } else {
                        List<Integer> triplet = new ArrayList<>();
                        triplet.add(a);
                        triplet.add(nums[l]);
                        triplet.add(nums[r]);
                        allTriplets.add(triplet);
                        while (l < r && nums[l] == nums[l + 1]) l++;
                        while (l < r && nums[r] == nums[r - 1]) r--;
                        l++;
                        r--;
                    }
                }
            }
            i++;
        }
        return allTriplets;
    }
}
