class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList<>();
        for (int i = 0; i < nums.length; i++) {
            // Handle Duplicate part - 1
            if (i == 0 || nums[i] != nums[i - 1]) {
                int first = nums[i];
                twoSum(first, nums, i + 1, result);
            }
        }
        return result;
    }

    public void twoSum(int first, int[] nums, int index, List<List<Integer>> result) {
        int left = index, right = nums.length - 1;
        while (left < right) {
            int sum = first + nums[left] + nums[right];
            if (sum == 0) {
                List<Integer> list = new ArrayList<>();
                list.add(first);
                list.add(nums[left]);
                list.add(nums[right]);
                result.add(list);
                left++;
                right--;
                // Handle Duplicate Part -2
                while (right > left && nums[right] == nums[right + 1]) {
                    right--;
                }
            } else if (sum < 0) {
                left++;
            } else {
                right--;
            }
        }
    }
}
