/*
 * Idea: Fixing on element and using 2 pointer technique on the rest of the elements.
 */
class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        List<List<Integer>> com = new ArrayList<>();
        int prev = -100000;
        for (int i = 0; i < n; i++) {
            if (prev == nums[i]) {
                continue;
            }
            int f1 = nums[i];
            int l = i + 1;
            int r = n - 1;
            int target = -f1;
            while (l < r) {
                if (nums[l] + nums[r] == target) {
                    List<Integer> tmp = new ArrayList<>();
                    tmp.add(f1);
                    tmp.add(nums[l]);
                    tmp.add(nums[r]);
                    com.add(tmp);
                    while (l < r && nums[l] == nums[l + 1]) l++;
                    l++;
                    while (l < r && nums[r] == nums[r - 1]) r--;
                    r--;
                } else if (nums[l] + nums[r] > target) {
                    r--;
                } else {
                    l++;
                }
            }
            prev = nums[i];
        }
        return com;
    }
}
