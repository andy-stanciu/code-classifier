// class Solution {
//     public List<List<Integer>> threeSum(int[] nums) {
//         Arrays.sort(nums);
//         List<List<Integer>> finallist = new ArrayList<List<Integer>>();
//         List<Integer> dl = new ArrayList<>();
//         for(int i=0;i<nums.length;i++){
//             int target=nums[i]; //-2
//             int j=i+1;
//             int k=nums.length-1;
//             while(j<k){
//                 if(nums[j]+nums[k]+target==0){
//                     dl.add(nums[i]);
//                     dl.add(nums[j]);
//                     dl.add(nums[k]);
//                 }
//                 j++;
//                 k--;
//             }
//             finallist.add(dl);
//             // dl.clear();
//         }
//         return finallist;
//     }
// }
class Solution {

    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            int j = i + 1;
            int k = nums.length - 1;
            while (j < k) {
                int total = nums[i] + nums[j] + nums[k];
                if (total > 0) {
                    k--;
                } else if (total < 0) {
                    j++;
                } else {
                    res.add(Arrays.asList(nums[i], nums[j], nums[k]));
                    j++;
                    while (nums[j] == nums[j - 1] && j < k) {
                        j++;
                    }
                }
            }
        }
        return res;
    }
}
