class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> threeSum(int[] nums) {
        int n = nums.length;
        Arrays.sort(nums);
        if (n < 3) {
            return result;
        }
        for (int i = 0; i < n - 2; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            int target = -nums[i];
            twoSum(nums, target, i + 1, n - 1);
        }
        return result;
    }

    void twoSum(int[] nums, int target, int i, int j) {
        while (i < j) {
            int sum = nums[i] + nums[j];
            if (sum > target) {
                j--;
            } else if (sum < target) {
                i++;
            } else {
                while (i < j && nums[i] == nums[i + 1]) i++;
                while (i < j && nums[j] == nums[j - 1]) j--;
                result.add(Arrays.asList(nums[i], nums[j], -target));
                i++;
                j--;
            }
        }
    }
}
