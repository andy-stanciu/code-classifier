class Solution {

    public void method1(int[][] board) {
        int m = board[0].length;
        int n = board.length;
        int[][] copy = new int[n][m];
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                copy[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                count = live(copy, m, n, i, j + 1) + live(copy, m, n, i + 1, j + 1) + live(copy, m, n, i + 1, j) + live(copy, m, n, i + 1, j - 1) + live(copy, m, n, i, j - 1) + live(copy, m, n, i - 1, j - 1) + live(copy, m, n, i - 1, j) + live(copy, m, n, i - 1, j + 1);
                if (count < 2 || count > 3)
                    board[i][j] = 0;
                else if (count == 3)
                    board[i][j] = 1;
            }
        }
    }

    public int live(int[][] copy, int m, int n, int i, int j) {
        if (i < 0 || i > n - 1 || j < 0 || j > m - 1)
            return 0;
        return copy[i][j];
    }
}
