class Solution {

    public void method1(int[][] board) {
        int len = board.length;
        int len2 = board[0].length;
        int[][] result = new int[len][len2];
        int[][] target = new int[][] { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, -1 }, { 1, 0 }, { 1, 1 } };
        for (int i = 0; i < len; i++) {
            for (int j = 0; j < len2; j++) {
                int cnt = getCnt(board, target, i, j);
                if (cnt < 2 || cnt > 3) {
                    result[i][j] = 0;
                    continue;
                }
                if (cnt == 3) {
                    result[i][j] = 1;
                    continue;
                }
                result[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < len; i++) {
            for (int j = 0; j < len2; j++) {
                board[i][j] = result[i][j];
            }
        }
    }

    private int getCnt(int[][] board, int[][] target, int i, int j) {
        int cnt = 0;
        for (int k = 0; k < target.length; k++) {
            int i2 = i + target[k][0];
            int j2 = j + target[k][1];
            if (i2 < 0 || i2 >= board.length || j2 < 0 || j2 >= board[0].length) {
                continue;
            }
            if (board[i2][j2] == 1) {
                cnt++;
            }
        }
        return cnt;
    }
}
