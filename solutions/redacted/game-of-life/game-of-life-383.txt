class Solution {

    public void method1(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        int[][] t = new int[n + 2][m + 2];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                t[i + 1][j + 1] = board[i][j];
            }
        }
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (t[i][j] == 1) {
                    if (countLives(i, j, t) < 2) {
                        board[i - 1][j - 1] = 0;
                    } else if (countLives(i, j, t) > 3) {
                        board[i - 1][j - 1] = 0;
                    }
                } else {
                    if (countLives(i, j, t) == 3) {
                        board[i - 1][j - 1] = 1;
                    }
                }
            }
        }
    }

    public static int countLives(int i, int j, int[][] matrix) {
        int[] arrI = { i - 1, i - 1, i - 1, i, i + 1, i + 1, i + 1, i };
        int[] arrJ = { j - 1, j, j + 1, j + 1, j + 1, j, j - 1, j - 1 };
        int count = 0;
        for (int k = 0; k < arrI.length; k++) {
            if (matrix[arrI[k]][arrJ[k]] == 1) {
                count++;
            }
        }
        return count;
    }
}
