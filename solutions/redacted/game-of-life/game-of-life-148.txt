class Solution {

    public void method1(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] answer = new int[m][n];
        int[] r = { 0, 0, 1, -1, 1, -1, 1, -1 };
        int[] c = { 1, -1, 0, 0, 1, 1, -1, -1 };
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int dead = 0;
                int live = 0;
                for (int k = 0; k < 8; k++) {
                    int row = i + r[k];
                    int col = j + c[k];
                    if (row >= 0 && row < m && col >= 0 && col < n) {
                        if (grid[row][col] == 1)
                            live++;
                        else
                            dead++;
                    }
                }
                if (grid[i][j] == 1 && live < 2)
                    answer[i][j] = 0;
                else if (grid[i][j] == 1 && live >= 2 && live <= 3)
                    answer[i][j] = 1;
                else if (grid[i][j] == 1 && live > 3)
                    answer[i][j] = 0;
                else if (grid[i][j] == 0 && live == 3)
                    answer[i][j] = 1;
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                grid[i][j] = answer[i][j];
            }
        }
    }
}
