//Solution Without using any Extra Space
class Solution {

    public void method1(int[][] board) {
        int r = board.length;
        int c = board[0].length;
        int[] x_axis = { 1, 1, 0, -1, -1, -1, 0, 1 };
        int[] y_axis = { 0, 1, 1, 1, 0, -1, -1, -1 };
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                int count = 0;
                for (int k = 0; k < 8; k++) {
                    if (isSafe(i + x_axis[k], j + y_axis[k], r, c) && Math.abs(board[i + x_axis[k]][j + y_axis[k]]) == 1)
                        count++;
                }
                if (board[i][j] == 0) {
                    if (count == 3) {
                        board[i][j] = 2;
                    }
                } else {
                    if (count < 2 || count > 3) {
                        board[i][j] = -1;
                    }
                }
            }
        }
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (board[i][j] == 0 || board[i][j] == 1)
                    continue;
                else if (board[i][j] == -1)
                    board[i][j] = 0;
                else if (board[i][j] == 2)
                    board[i][j] = 1;
            }
        }
    }

    public boolean isSafe(int x, int y, int r, int c) {
        return (x >= 0 && y >= 0 && x < r && y < c);
    }
}
//Solutiob By creating a copy Matrix
// class Solution {
//     public void gameOfLife(int[][] board) {
//         int r=board.length;int c=board[0].length;
//         int copy[][]=new int[r][c];
//         int x_axis[]={1,1,0,-1,-1,-1,0,1};
//         int y_axis[]={0,1,1,1,0,-1,-1,-1};
//         for(int i=0;i<r;i++){
//             for(int j=0;j<c;j++){
//                 int count=0;
//                 for(int k=0;k<8;k++){
//                     if(isSafe(i+x_axis[k],j+y_axis[k],r,c)
//                     && board[i+x_axis[k]][j+y_axis[k]]==1)count++;
//                 }
//                 if(board[i][j]==0){
//                     if(count==3){
//                         copy[i][j]=1;
//                     }else copy[i][j]=0;
//                 }else{
//                     if(count < 2 || count > 3){
//                         copy[i][j]=0;
//                     }else copy[i][j]=1;
//                 }
//             }
//         }
//          for(int i=0;i<r;i++){
//             for(int j=0;j<c;j++){
//                 board[i][j]=copy[i][j];
//             }
//         }
//     }
//     public boolean isSafe(int x,int y,int r,int c){
//         return (x>=0 && y>=0 && x<r && y<c);
//     }
// }
