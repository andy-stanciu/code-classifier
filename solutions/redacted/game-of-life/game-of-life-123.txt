class Solution {

    public int getLiveCells(int[][] board, int row, int col, int n, int m) {
        int count = 0;
        for (int i = row - 1; i <= row + 1; i++) {
            for (int j = col - 1; j <= col + 1; j++) {
                if (i >= 0 && i < n && j >= 0 && j < m && (i != row || j != col)) {
                    if (board[i][j] == 1 || board[i][j] == 3) {
                        count++;
                    }
                }
            }
        }
        return count;
    }

    public void method1(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int liveCells = getLiveCells(board, i, j, n, m);
                // die->live
                if (liveCells == 3 && board[i][j] == 0) {
                    board[i][j] = 2;
                }
                // live->die
                if (liveCells > 3 && board[i][j] == 1) {
                    board[i][j] = 3;
                }
                // live->die
                if (liveCells < 2 && board[i][j] == 1) {
                    board[i][j] = 3;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == 2) {
                    board[i][j] = 1;
                }
                if (board[i][j] == 3) {
                    board[i][j] = 0;
                }
            }
        }
    }
}
