class Solution {

    public void method1(int[][] board) {
        int[][] extra = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                extra[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                extra[i][j] = use(board, i, j);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = extra[i][j];
            }
        }
    }

    public int use(int[][] board, int i, int j) {
        int newX1 = i + 1;
        int newX2 = i - 1;
        int newY1 = j + 1;
        int newY2 = j - 1;
        int count1 = 0, count0 = 0;
        if (newX2 >= 0 && newY2 >= 0) {
            if (board[newX2][newY2] == 0)
                count0++;
            else
                count1++;
        }
        if (newY1 < board[0].length && newX2 >= 0) {
            if (board[newX2][newY1] == 0)
                count0++;
            else
                count1++;
        }
        if (newY2 >= 0 && newX1 < board.length) {
            if (board[newX1][newY2] == 0)
                count0++;
            else
                count1++;
        }
        if (newY1 < board[0].length && newX1 < board.length) {
            if (board[newX1][newY1] == 0)
                count0++;
            else
                count1++;
        }
        if (newX1 < board.length) {
            if (board[newX1][j] == 0)
                count0++;
            else
                count1++;
        }
        if (newX2 >= 0) {
            if (board[newX2][j] == 0)
                count0++;
            else
                count1++;
        }
        if (newY2 >= 0) {
            if (board[i][newY2] == 0)
                count0++;
            else
                count1++;
        }
        if (newY1 < board[0].length) {
            if (board[i][newY1] == 0)
                count0++;
            else
                count1++;
        }
        if (count1 > 3 || count1 < 2) {
            return 0;
        } else {
            if (count1 == 3)
                return 1;
            else {
                if (board[i][j] == 1) {
                    return 1;
                } else {
                    return 0;
                }
            }
        }
    }
}
