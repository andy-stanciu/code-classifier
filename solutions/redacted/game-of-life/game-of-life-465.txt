class Solution {

    public void method1(int[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                int ones = checkBackground(board, i, j);
                if (board[i][j] == 0) {
                    if (ones == 3)
                        board[i][j] = -1;
                } else {
                    if (ones < 2 || ones > 3) {
                        board[i][j] = 2;
                    }
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == -1) {
                    board[i][j] = 1;
                } else if (board[i][j] == 2) {
                    board[i][j] = 0;
                }
            }
        }
    }

    int checkBackground(int[][] board, int i, int j) {
        int count = 0;
        if (check(board, i + 1, j))
            count++;
        if (check(board, i + 1, j + 1))
            count++;
        if (check(board, i + 1, j - 1))
            count++;
        if (check(board, i - 1, j))
            count++;
        if (check(board, i - 1, j + 1))
            count++;
        if (check(board, i - 1, j - 1))
            count++;
        if (check(board, i, j - 1))
            count++;
        if (check(board, i, j + 1))
            count++;
        return count;
    }

    boolean check(int[][] board, int i, int j) {
        if (i < 0 || i >= board.length || j < 0 || j >= board[i].length)
            return false;
        if (board[i][j] <= 0)
            return false;
        if (board[i][j] >= 1)
            return true;
        return true;
    }
}
