class Solution {

    public void method1(int[][] board) {
        int[][] ans = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                //valid rows
                int[] nbrs = new int[8];
                if (i > 0) {
                    // up
                    nbrs[0] = board[i - 1][j];
                }
                if (i < board.length - 1) {
                    //down
                    nbrs[1] = board[i + 1][j];
                }
                if (j > 0) {
                    // left
                    nbrs[2] = board[i][j - 1];
                }
                if (j < board[0].length - 1) {
                    // right
                    nbrs[3] = board[i][j + 1];
                }
                if (i > 0 && j > 0) {
                    //lup
                    nbrs[4] = board[i - 1][j - 1];
                }
                if (i > 0 && j < board[0].length - 1) {
                    //rup
                    nbrs[5] = board[i - 1][j + 1];
                }
                if (i < board.length - 1 && j > 0) {
                    //ld
                    nbrs[6] = board[i + 1][j - 1];
                }
                if (i < board.length - 1 && j < board[0].length - 1) {
                    // rd
                    nbrs[7] = board[i + 1][j + 1];
                }
                //total alive near me
                int sum = 0;
                for (int x : nbrs) {
                    sum += x;
                }
                //is me alive
                if (board[i][j] == 0) {
                    if (sum == 3) {
                        ans[i][j] = 1;
                    }
                } else {
                    if (sum == 2 || sum == 3) {
                        ans[i][j] = 1;
                    }
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }
}
