class Solution {

    public void method1(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        int[][] ans = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int count = 0;
                //Up
                if (i - 1 >= 0 && matrix[i - 1][j] == 1) {
                    count++;
                }
                //Down
                if (i + 1 < m && matrix[i + 1][j] == 1) {
                    count++;
                }
                //Left
                if (j - 1 >= 0 && matrix[i][j - 1] == 1) {
                    count++;
                }
                //Right
                if (j + 1 < n && matrix[i][j + 1] == 1) {
                    count++;
                }
                //Diagonals
                if (i - 1 >= 0 && j - 1 >= 0 && matrix[i - 1][j - 1] == 1) {
                    count++;
                }
                if (i - 1 >= 0 && j + 1 < n && matrix[i - 1][j + 1] == 1) {
                    count++;
                }
                if (i + 1 < m && j + 1 < n && matrix[i + 1][j + 1] == 1) {
                    count++;
                }
                if (i + 1 < m && j - 1 >= 0 && matrix[i + 1][j - 1] == 1) {
                    count++;
                }
                if (count < 2 || count > 3) {
                    ans[i][j] = 0;
                } else if (count == 3) {
                    ans[i][j] = 1;
                } else {
                    ans[i][j] = matrix[i][j];
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = ans[i][j];
            }
        }
    }
}
