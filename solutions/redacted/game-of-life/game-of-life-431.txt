class Solution {

    public void method1(int[][] board) {
        /* original  |  new  | state
                0        0      0
                1        0      1
                0        1      2
                1        1      3
        */
        int r = board.length;
        int c = board[0].length;
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                int n = countNeighbours(board, i, j, r, c);
                if (board[i][j] == 1) {
                    if (n == 3 || n == 2)
                        board[i][j] = 3;
                } else if (n == 3)
                    board[i][j] = 2;
            }
        }
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (board[i][j] == 1)
                    board[i][j] = 0;
                else if (board[i][j] == 2 || board[i][j] == 3)
                    board[i][j] = 1;
            }
        }
    }

    public int countNeighbours(int[][] board, int r, int c, int rows, int cols) {
        int count = 0;
        for (int i = r - 1; i < r + 2; i++) {
            for (int j = c - 1; j < c + 2; j++) {
                if ((i == r && j == c) || i < 0 || j < 0 || i >= rows || j >= cols)
                    continue;
                else if (board[i][j] == 1 || board[i][j] == 3)
                    count++;
            }
        }
        return count;
    }
}
