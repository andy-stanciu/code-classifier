class Solution {

    int[][] DIR = { { -1, 0 }, { -1, -1 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, 0 }, { 1, -1 }, { 1, 1 } };

    public void method1(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int[][] result = new int[m][n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int count1s = 0;
                for (int k = 0; k < DIR.length; k++) {
                    int new_i = i + DIR[k][0];
                    int new_j = j + DIR[k][1];
                    if (new_i < m && new_i >= 0 && new_j >= 0 && new_j < n) {
                        if (board[new_i][new_j] == 1) {
                            count1s++;
                        }
                    }
                }
                if (board[i][j] == 1) {
                    if (count1s < 2) {
                        result[i][j] = 0;
                    } else if (count1s >= 2 && count1s <= 3) {
                        result[i][j] = 1;
                    } else if (count1s > 3) {
                        result[i][j] = 0;
                    } else {
                        result[i][j] = board[i][j];
                    }
                } else {
                    if (count1s == 3) {
                        result[i][j] = 1;
                    } else {
                        result[i][j] = board[i][j];
                    }
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                board[i][j] = result[i][j];
            }
        }
    }
}
