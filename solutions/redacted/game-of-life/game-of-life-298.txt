class Solution {

    public void method1(int[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                int temp = 0;
                temp += find_live(i + 1, j - 1, board);
                temp += find_live(i + 1, j, board);
                temp += find_live(i + 1, j + 1, board);
                temp += find_live(i, j + 1, board);
                temp += find_live(i, j - 1, board);
                temp += find_live(i - 1, j - 1, board);
                temp += find_live(i - 1, j + 1, board);
                temp += find_live(i - 1, j, board);
                if (board[i][j] == 0) {
                    if (temp == 3) {
                        board[i][j] = 2;
                    }
                } else {
                    if (temp < 2)
                        board[i][j] = 3;
                    else if (temp < 4)
                        board[i][j] = 1;
                    else
                        board[i][j] = 3;
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == 2)
                    board[i][j] = 1;
                else if (board[i][j] == 3)
                    board[i][j] = 0;
            }
        }
    }

    int find_live(int i, int j, int[][] board) {
        if (i >= 0 && i < board.length) {
            if (j >= 0 && j < board[i].length) {
                if (board[i][j] == 1 || board[i][j] == 3) {
                    return 1;
                }
            }
        }
        return 0;
    }
}
