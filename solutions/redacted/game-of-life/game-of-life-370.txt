class Solution {

    public int check(int[][] board, int r, int c) {
        int maxr = board.length;
        int maxc = board[0].length;
        int count = 0;
        if (board[r][c] == 0) {
            if (r + 1 < maxr && board[r + 1][c] == 1)
                count++;
            if (c + 1 < maxc && board[r][c + 1] == 1)
                count++;
            if (r + 1 < maxr && c + 1 < maxc && board[r + 1][c + 1] == 1)
                count++;
            if (r - 1 >= 0 && board[r - 1][c] == 1)
                count++;
            if (c - 1 >= 0 && board[r][c - 1] == 1)
                count++;
            if (c - 1 >= 0 && r - 1 >= 0 && board[r - 1][c - 1] == 1)
                count++;
            if (c - 1 >= 0 && r + 1 < maxr && board[r + 1][c - 1] == 1)
                count++;
            if (r - 1 >= 0 && c + 1 < maxc && board[r - 1][c + 1] == 1)
                count++;
            if (count == 3)
                return 1;
        } else {
            if (r + 1 < maxr && board[r + 1][c] == 1)
                count++;
            if (c + 1 < maxc && board[r][c + 1] == 1)
                count++;
            if (r + 1 < maxr && c + 1 < maxc && board[r + 1][c + 1] == 1)
                count++;
            if (r - 1 >= 0 && board[r - 1][c] == 1)
                count++;
            if (c - 1 >= 0 && board[r][c - 1] == 1)
                count++;
            if (c - 1 >= 0 && r - 1 >= 0 && board[r - 1][c - 1] == 1)
                count++;
            if (c - 1 >= 0 && r + 1 < maxr && board[r + 1][c - 1] == 1)
                count++;
            if (r - 1 >= 0 && c + 1 < maxc && board[r - 1][c + 1] == 1)
                count++;
            if (count < 2 || count > 3)
                return 0;
            else
                return 1;
        }
        return 0;
    }

    public void method1(int[][] board) {
        int[][] ans = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                ans[i][j] = check(board, i, j);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }
}
