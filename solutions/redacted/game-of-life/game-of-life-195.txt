class Solution {

    public void method1(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int count = 0;
                if (board[i][j] == 1) {
                    count = 1;
                }
                if (i - 1 >= 0 && j - 1 >= 0 && board[i - 1][j - 1] % 10 == 1) {
                    count += 10;
                }
                if (i - 1 >= 0 && j >= 0 && board[i - 1][j] % 10 == 1) {
                    count += 10;
                }
                if (i - 1 >= 0 && j + 1 < n && board[i - 1][j + 1] % 10 == 1) {
                    count += 10;
                }
                if (i >= 0 && j + 1 < n && board[i][j + 1] % 10 == 1) {
                    count += 10;
                }
                if (i + 1 < m && j + 1 < n && board[i + 1][j + 1] % 10 == 1) {
                    count += 10;
                }
                if (i + 1 < m && j >= 0 && board[i + 1][j] % 10 == 1) {
                    count += 10;
                }
                if (i + 1 < m && j - 1 >= 0 && board[i + 1][j - 1] % 10 == 1) {
                    count += 10;
                }
                if (i >= 0 && j - 1 >= 0 && board[i][j - 1] % 10 == 1) {
                    count += 10;
                }
                board[i][j] = count;
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] % 10 == 1) {
                    if (board[i][j] / 10 < 2) {
                        board[i][j] = 0;
                    } else if (board[i][j] / 10 == 2 || board[i][j] / 10 == 3) {
                        board[i][j] = 1;
                    } else {
                        board[i][j] = 0;
                    }
                } else {
                    if (board[i][j] / 10 == 3) {
                        board[i][j] = 1;
                    } else {
                        board[i][j] = 0;
                    }
                }
            }
        }
    }
}
