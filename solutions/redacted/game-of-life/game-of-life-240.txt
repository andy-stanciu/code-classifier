class Solution {

    public void method1(int[][] board) {
        for (int i = 0; i < board.length; i++) {
            int[] arr = board[i];
            for (int j = 0; j < arr.length; j++) {
                int count = count(board, i, j);
                if (board[i][j] == 0 && count == 3) {
                    board[i][j] = -1;
                } else if (board[i][j] == 1 && count > 3) {
                    board[i][j] = 2;
                } else if (board[i][j] == 1 && count < 2) {
                    board[i][j] = 2;
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            int[] arr = board[i];
            for (int j = 0; j < arr.length; j++) {
                if (board[i][j] == 2)
                    board[i][j] = 0;
                else if (board[i][j] == -1)
                    board[i][j] = 1;
            }
        }
    }

    private int count(int[][] board, int i, int j) {
        int count = 0;
        if (i - 1 != -1) {
            count += board[i - 1][j] == -1 ? 0 : board[i - 1][j] == 2 ? 1 : board[i - 1][j];
        }
        if (j - 1 != -1) {
            count += board[i][j - 1] == -1 ? 0 : board[i][j - 1] == 2 ? 1 : board[i][j - 1];
        }
        if (i + 1 != board.length) {
            count += board[i + 1][j] == -1 ? 0 : board[i + 1][j] == 2 ? 1 : board[i + 1][j];
        }
        if (j + 1 != board[0].length) {
            count += board[i][j + 1] == -1 ? 0 : board[i][j + 1] == 2 ? 1 : board[i][j + 1];
        }
        if (i + 1 != board.length && j + 1 != board[0].length) {
            count += board[i + 1][j + 1] == -1 ? 0 : board[i + 1][j + 1] == 2 ? 1 : board[i + 1][j + 1];
        }
        if (i - 1 != -1 && j - 1 != -1) {
            count += board[i - 1][j - 1] == -1 ? 0 : board[i - 1][j - 1] == 2 ? 1 : board[i - 1][j - 1];
        }
        if (i + 1 != board.length && j - 1 != -1) {
            count += board[i + 1][j - 1] == -1 ? 0 : board[i + 1][j - 1] == 2 ? 1 : board[i + 1][j - 1];
        }
        if (i - 1 != -1 && j + 1 != board[0].length) {
            count += board[i - 1][j + 1] == -1 ? 0 : board[i - 1][j + 1] == 2 ? 1 : board[i - 1][j + 1];
        }
        return count;
    }
}
