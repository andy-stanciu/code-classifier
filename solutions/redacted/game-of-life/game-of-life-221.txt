class Solution {

    public static int[][] addBorder(int[][] matrix) {
        int rows = matrix.length;
        int cols = matrix[0].length;
        // Expand the matrix by adding two rows and two columns
        int[][] expandedMatrix = new int[rows + 2][cols + 2];
        // Copy the original matrix into the center of the expanded matrix
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                expandedMatrix[i + 1][j + 1] = matrix[i][j];
            }
        }
        // Return the expanded matrix
        return expandedMatrix;
    }

    public void method1(int[][] board) {
        int[][] matrix = addBorder(board);
        int liveNeighbours = 0;
        for (int i = 1; i < matrix.length - 1; i++) {
            for (int j = 1; j < matrix[0].length - 1; j++) {
                liveNeighbours = matrix[i + 1][j] + matrix[i - 1][j] + matrix[i][j + 1] + matrix[i][j - 1] + matrix[i + 1][j + 1] + matrix[i - 1][j - 1] + matrix[i + 1][j - 1] + matrix[i - 1][j + 1];
                if (matrix[i][j] == 0 && liveNeighbours == 3) {
                    board[i - 1][j - 1] = 1;
                } else if (matrix[i][j] == 1) {
                    if (liveNeighbours < 2 || liveNeighbours > 3) {
                        board[i - 1][j - 1] = 0;
                    }
                }
            }
        }
    }
}
