class Solution {

    int[][] dir = new int[][] { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, -1 }, { 1, 0 }, { 1, 1 } };

    public void method1(int[][] board) {
        //row
        int n = board.length;
        int m = board[0].length;
        int[][] ans = new int[n][m];
        // int row[]={-1,-1,0,1,1,1,0,-1};
        // int col[]={0,1,1,1,0,-1,-1,-1};
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int count = 0;
                for (int[] d : dir) {
                    int p = i + d[0];
                    int q = j + d[1];
                    if (p >= 0 && p < n && q >= 0 && q < m && board[p][q] == 1) {
                        count++;
                    }
                }
                if (board[i][j] == 1) {
                    if (count == 2 || count == 3) {
                        ans[i][j] = 1;
                    }
                } else {
                    if (count == 3) {
                        ans[i][j] = 1;
                    }
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                board[i][j] = ans[i][j];
            }
        }
    }
}
