class Solution {

    public void method1(int[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                setVal(board, i, j);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] == 2) {
                    board[i][j] = 1;
                } else if (board[i][j] == 3) {
                    board[i][j] = 0;
                }
            }
        }
    }

    private void setVal(int[][] board, int row, int column) {
        int[][] directions = { { 0, 1 }, { 1, 0 }, { 0, -1 }, { -1, 0 }, { 1, 1 }, { 1, -1 }, { -1, -1 }, { -1, 1 } };
        int ones = 0;
        for (int[] dir : directions) {
            int newRow = row + dir[0];
            int newCol = column + dir[1];
            if (inRange(newRow, newCol, board)) {
                if (board[newRow][newCol] == 1 || board[newRow][newCol] == 3) {
                    ones++;
                    if (ones > 3) {
                        break;
                    }
                }
            }
        }
        if (board[row][column] == 0) {
            if (ones == 3) {
                board[row][column] = 2;
            }
        } else {
            if (ones < 2 || ones > 3) {
                board[row][column] = 3;
            }
        }
    }

    private boolean inRange(int row, int col, int[][] board) {
        return row >= 0 && col >= 0 && row < board.length && col < board[0].length;
    }
}
