class Solution {

    public void method1(int[][] board) {
        int live = 0;
        int[][] direction = { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, -1 }, { 0, 1 }, { 1, -1 }, { 1, 0 }, { 1, 1 } };
        int[][] newboard = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                live = 0;
                for (int k = 0; k < 8; k++) {
                    int curr_x = i + direction[k][0];
                    int curr_y = j + direction[k][1];
                    if (curr_x >= 0 && curr_y >= 0 && curr_x < board.length && curr_y < board[0].length && board[curr_x][curr_y] == 1) {
                        live++;
                    }
                }
                if (board[i][j] == 1) {
                    if (live < 2) {
                        newboard[i][j] = 0;
                    } else if (live == 2 || live == 3) {
                        newboard[i][j] = 1;
                    } else {
                        newboard[i][j] = 0;
                    }
                } else {
                    if (live == 3) {
                        newboard[i][j] = 1;
                    } else {
                        newboard[i][j] = 0;
                    }
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = newboard[i][j];
            }
        }
    }
}
