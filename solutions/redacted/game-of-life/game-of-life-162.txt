class Solution {

    private boolean save(int[][] board, int row, int col) {
        return board.length > row && board[0].length > col && row >= 0 && col >= 0;
    }

    public void method1(int[][] board) {
        int[] a = { 1, -1, 0, 1, -1, 0, 1, -1 };
        int[] b = { 0, 0, -1, -1, -1, 1, 1, 1 };
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] > 0) {
                    for (int k = 0; k < 8; k++) {
                        if (save(board, i + a[k], j + b[k]) && board[i + a[k]][j + b[k]] > 0) {
                            board[i][j]++;
                        }
                    }
                } else {
                    for (int k = 0; k < 8; k++) {
                        if (save(board, i + a[k], j + b[k]) && board[i + a[k]][j + b[k]] > 0) {
                            board[i][j]--;
                        }
                    }
                }
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (board[i][j] > 0) {
                    if (board[i][j] < 3) {
                        board[i][j] = 0;
                    } else if (board[i][j] <= 4) {
                        board[i][j] = 1;
                    } else if (board[i][j] > 4) {
                        board[i][j] = 0;
                    }
                } else {
                    if (board[i][j] == -3) {
                        board[i][j] = 1;
                    } else {
                        board[i][j] = 0;
                    }
                }
            }
        }
    }
}
