class Solution {

    public void method1(int[][] board) {
        int n = board.length;
        int m = board[0].length;
        int[][] matrix = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                matrix[i][j] = board[i][j];
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int count = 0;
                int value = board[i][j];
                //check all 8 nghbrs
                //1.col-1
                if (j > 0 && board[i][j - 1] == 1) {
                    count++;
                }
                //2.col-1,row-1
                if (j > 0 && i > 0 && board[i - 1][j - 1] == 1) {
                    count++;
                }
                //3.row-1
                if (i > 0 && board[i - 1][j] == 1) {
                    count++;
                }
                //4.col+1 ,row-1
                if (i > 0 && j < m - 1 && board[i - 1][j + 1] == 1) {
                    count++;
                }
                //5.col+1
                if (j < m - 1 && board[i][j + 1] == 1) {
                    count++;
                }
                //6.col+1,row+1
                if (j < m - 1 && i < n - 1 && board[i + 1][j + 1] == 1) {
                    count++;
                }
                //7.row+1
                if (i < n - 1 && board[i + 1][j] == 1) {
                    count++;
                }
                //8.col-1,row+1
                if (j > 0 && i < n - 1 && board[i + 1][j - 1] == 1) {
                    count++;
                }
                if ((value == 1) && (count < 2 || count > 3)) {
                    matrix[i][j] = 0;
                }
                // else if((value==1) && (count==2 || count==3)){
                //    board[i][j]=1;
                // }
                if (value == 0 && count == 3) {
                    matrix[i][j] = 1;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                board[i][j] = matrix[i][j];
            }
        }
    }
}
