class Solution {

    public void method1(int[][] board) {
        // 0   0 =>   0
        // 1   1 =>   1
        // 0   1 =>   2
        // 1   0 =>   3
        // 1 will be 1 if lives == [2, 3]
        // 0 will be 1 if lives = 3
        int m = board.length;
        int n = board[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int ones = 0;
                for (int k = -1; k < 2; k++) {
                    for (int l = -1; l < 2; l++) {
                        if ((l == 0 && k == 0) || i + k == -1 || i + k == m || j + l == -1 || j + l == n || board[i + k][j + l] == 0 || board[i + k][j + l] == 2) {
                            continue;
                        }
                        ones++;
                    }
                }
                if (board[i][j] == 1) {
                    if (!(ones == 2 || ones == 3)) {
                        board[i][j] = 3;
                    }
                } else if (ones == 3) {
                    board[i][j] = 2;
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] == 2) {
                    board[i][j] = 1;
                } else if (board[i][j] == 3) {
                    board[i][j] = 0;
                }
            }
        }
    }
}
