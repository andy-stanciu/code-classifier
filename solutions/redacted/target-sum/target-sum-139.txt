class Solution {

    public int solve(int[] nums, int i, int param1, int k, int[][][] dp) {
        if (i >= nums.length) {
            if (param1 == k) {
                return 1;
            } else {
                return 0;
            }
        }
        if (param1 >= 0) {
            if (dp[i][0][param1] == Integer.MIN_VALUE) {
                int x = solve(nums, i + 1, param1 + nums[i], k, dp);
                int y = solve(nums, i + 1, param1 - nums[i], k, dp);
                dp[i][0][param1] = x + y;
            }
            return dp[i][0][param1];
        } else {
            if (dp[i][1][-1 * param1] == Integer.MIN_VALUE) {
                int x = solve(nums, i + 1, param1 + nums[i], k, dp);
                int y = solve(nums, i + 1, param1 - nums[i], k, dp);
                dp[i][1][-1 * param1] = x + y;
            }
            return dp[i][1][-1 * param1];
        }
    }

    public int method1(int[] nums, int param2) {
        int[][][] dp = new int[nums.length][2][1001];
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j < 2; j++) {
                for (int k = 0; k < 1001; k++) {
                    dp[i][j][k] = Integer.MIN_VALUE;
                }
            }
        }
        return solve(nums, 0, 0, param2, dp);
    }
}
