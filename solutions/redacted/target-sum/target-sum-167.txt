class Solution {

    public int method1(int[] nums, int param1) {
        int total = 0;
        for (int i : nums) {
            total += i;
        }
        if ((total - param1) < 0 || (total - param1) % 2 == 1)
            return 0;
        int tar = (total - param1) / 2;
        int n = nums.length;
        int[][] dp = new int[n][tar + 1];
        for (int[] a : dp) {
            Arrays.fill(a, -1);
        }
        return solve(nums, dp, tar, n - 1);
    }

    public int solve(int[] nums, int[][] dp, int param1, int ind) {
        if (ind == 0) {
            if (nums[0] == 0 && param1 == 0)
                return 2;
            if (param1 == 0 || nums[0] == param1)
                return 1;
            return 0;
        }
        if (dp[ind][param1] != -1) {
            return dp[ind][param1];
        }
        int take = 0;
        if (nums[ind] <= param1) {
            take = solve(nums, dp, param1 - nums[ind], ind - 1);
        }
        int not_take = solve(nums, dp, param1, ind - 1);
        dp[ind][param1] = (take + not_take);
        return dp[ind][param1];
    }
}
