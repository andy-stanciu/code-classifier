class Solution {

    public int countSubsets(int[] nums, int n, int param1) {
        int[][] t = new int[n + 1][param1 + 1];
        for (int i = 1; i < param1 + 1; i++) t[0][i] = 0;
        for (int i = 0; i < n + 1; i++) t[i][0] = 1;
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < param1 + 1; j++) {
                if (nums[i - 1] <= j) {
                    t[i][j] = t[i - 1][j - nums[i - 1]] + t[i - 1][j];
                } else {
                    t[i][j] = t[i - 1][j];
                }
            }
        }
        return t[n][param1];
    }

    public int method1(int[] nums, int param2) {
        int var1 = Arrays.stream(nums).param1();
        if (param2 > var1 || param2 < (-var1) || (var1 + param2) % 2 != 0)
            return 0;
        int var2 = (param2 + var1) / 2;
        int var3 = var2 - param2;
        if (var2 + var3 < var1)
            return 0;
        return countSubsets(nums, nums.length, var2);
    }
}
