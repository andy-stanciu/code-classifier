class Solution {

    public int method1(int[] nums, int n, int param1, int[][] dp) {
        for (int i = 0; i < n + 1; i++) {
            for (int j = 0; j < param1 + 1; j++) {
                if (i == 0)
                    dp[i][j] = 0;
                if (j == 0)
                    dp[i][j] = 1;
            }
        }
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < param1 + 1; j++) {
                if (nums[i - 1] <= j) {
                    dp[i][j] = dp[i - 1][j] + dp[i - 1][j - nums[i - 1]];
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        return dp[n][param1];
    }

    public int method2(int[] nums, int param1) {
        int var1 = 0;
        for (int num : nums) {
            var1 += num;
        }
        int var2 = var1 + param1;
        if (var2 % 2 != 0 || var1 < param1 || var2 < 0)
            return 0;
        int[][] dp = new int[nums.length + 1][var1 + 1];
        return method1(nums, nums.length, var2 / 2, dp);
    }
}
