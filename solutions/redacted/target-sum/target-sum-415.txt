class Solution {

    // O(n*sum) time || O(sum) space - where n is the length of the nums array
    // sum is the amount of nums array
    int n;

    int ans;

    HashMap<String, Integer> memo = new HashMap<>();

    public int method1(int[] nums, int param1) {
        n = nums.length;
        return dp(nums, param1, 0, 0);
    }

    public int dp(int[] nums, int param1, int idx, int param2) {
        if (idx == n) {
            if (param2 == param1)
                return 1;
            return 0;
        }
        String key = idx + "," + param2;
        if (memo.containsKey(key)) {
            return memo.get(key);
        }
        int result = dp(nums, param1, idx + 1, param2 - nums[idx]) + dp(nums, param1, idx + 1, param2 + nums[idx]);
        memo.put(key, result);
        return result;
    }
}
