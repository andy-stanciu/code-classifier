class Solution {

    public int method1(int[] nums, int param1) {
        int var1 = 0;
        for (int i : nums) {
            var1 += i;
        }
        int[][] dp = new int[nums.length][2001];
        for (int[] a : dp) {
            Arrays.fill(a, -1);
        }
        return possibilities(nums, param1, 0, 0, dp);
    }

    public int possibilities(int[] nums, int param1, int index, int param2, int[][] dp) {
        if (param2 == param1 && index == nums.length) {
            return 1;
        }
        if (index >= nums.length) {
            return 0;
        }
        if (dp[index][param2 + 1000] != -1) {
            return dp[index][param2 + 1000];
        }
        int ans1 = possibilities(nums, param1, index + 1, param2 + nums[index], dp);
        int ans2 = possibilities(nums, param1, index + 1, param2 - nums[index], dp);
        return dp[index][param2 + 1000] = (ans1 + ans2);
    }
}
