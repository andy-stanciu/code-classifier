class Solution {

    int total = 0;

    public int method1(int[] nums, int param1) {
        for (int a : nums) {
            total += a;
        }
        int[][] dp = new int[nums.length][2 * total + 1];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return helperMem(nums, 0, 0, param1, dp);
    }

    public int helperMem(int[] nums, int i, int param2, int param1, int[][] dp) {
        if (i == nums.length) {
            if (param2 == param1)
                return 1;
            else
                return 0;
        } else {
            if (dp[i][param2 + total] != -1)
                return dp[i][param2 + total];
            int pos = helperMem(nums, i + 1, param2 + nums[i], param1, dp);
            int neg = helperMem(nums, i + 1, param2 - nums[i], param1, dp);
            return dp[i][param2 + total] = pos + neg;
        }
    }
}
