class Solution {

    public int method1(int[] nums, int param1) {
        int var1 = 0;
        for (int i : nums) {
            var1 += i;
        }
        if (Math.abs(param1) > var1)
            return 0;
        int[][] dp = new int[nums.length][param1 + 2 * var1 + 1];
        for (int i = 0; i < nums.length; i++) {
            Arrays.fill(dp[i], -1);
        }
        return solve(nums.length, 0, param1, var1, nums, dp);
    }

    public int solve(int n, int ind, int param1, int var1, int[] nums, int[][] dp) {
        if (ind == n) {
            if (param1 == 0)
                return 1;
            else
                return 0;
        }
        if (dp[ind][param1 + var1] != -1)
            return dp[ind][param1 + var1];
        return dp[ind][param1 + var1] = solve(n, ind + 1, param1 - nums[ind], var1, nums, dp) + solve(n, ind + 1, param1 + nums[ind], var1, nums, dp);
    }
}
