class Solution {

    public int method1(int[] nums, int param1) {
        // Call the helper function to count the number of ways
        return countExp(nums, param1, 0, 0);
    }

    // Helper function to count the number of ways
    static int countExp(int[] nums, int param1, int index, int param2) {
        // Base case: If we have reached the end of the array
        if (index == nums.length) {
            // If the sum is equal to the target, return 1 (valid way), else return 0
            if (param2 == param1)
                return 1;
            else
                return 0;
        }
        // Recursive case:
        // Count the number of ways by considering the current element in two scenarios:
        // 1. Add the current element to the sum and move to the next index
        // 2. Subtract the current element from the sum and move to the next index
        return countExp(nums, param1, index + 1, param2 + nums[index]) + countExp(nums, param1, index + 1, param2 - nums[index]);
    }
}
