class olution {

    int ans = 0;

    public int method1(int[] nums, int param1) {
        // so now any of the point we can either take the negative value or the positive value here so now
        // here we have to make the sum to the targer here so now length should be eqal to num here only so now
        // here
        helper(nums, param1, 0);
        return ans;
    }

    void helper(int[] arr, int param1, int index) {
        // so nwo here we we have find the our target to the zero then only we can do that here
        if (index == arr.length) {
            if (param1 == 0) {
                ans++;
            }
            return;
            // so here as we have return it from this point so index would not go out of bound here
        }
        // so now here just normaly we have to just get teh call here
        helper(arr, param1 - arr[index], index + 1);
        helper(arr, param1 + arr[index], index + 1);
    }
}

class Solution {

    public int method1(int[] nums, int param1) {
        return helper(nums, param1, 0);
    }

    int helper(int[] arr, int param1, int index) {
        if (index == arr.length) {
            if (param1 == 0) {
                return 1;
            }
            return 0;
        }
        return helper(arr, param1 - arr[index], index + 1) + helper(arr, param1 + arr[index], index + 1);
    }
}
