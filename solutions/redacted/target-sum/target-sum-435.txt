class Solution {

    public int method1(int[] nums, int param1) {
        int var1 = 0, count = 0;
        int len = nums.length;
        for (int i = 0; i < len; i++) {
            var1 += nums[i];
            if (nums[i] == 0)
                count++;
        }
        if (param1 > var1 || (param1 + var1) % 2 == 1)
            return 0;
        var1 = (param1 + var1) / 2;
        int[][] dp = new int[len + 1][var1 + 1];
        for (int i = 0; i <= len; i++) dp[i][0] = 1;
        for (int i = 1; i <= var1; i++) dp[0][i] = 0;
        for (int i = 1; i <= len; i++) {
            for (int j = 1; j <= var1; j++) {
                if (nums[i - 1] > j || nums[i - 1] == 0)
                    dp[i][j] = dp[i - 1][j];
                else {
                    dp[i][j] = dp[i - 1][j] + dp[i - 1][j - nums[i - 1]];
                }
            }
        }
        return (int) Math.pow(2, count) * dp[len][var1];
    }
}
