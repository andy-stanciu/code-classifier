class Solution {

    int arrlen;

    int var1;

    int[] nums;

    HashMap<String, Integer> memo;

    public int method1(int[] nums, int var1) {
        this.memo = new HashMap<>();
        this.arrlen = nums.length;
        this.var1 = var1;
        this.nums = nums;
        return method2(0, 0);
    }

    public int method2(int idx, int param1) {
        if (idx >= this.arrlen) {
            if (param1 == this.var1) {
                return 1;
            } else {
                return 0;
            }
        }
        if (this.memo.containsKey(Integer.toString(idx) + "_" + Integer.toString(param1))) {
            return this.memo.get(Integer.toString(idx) + "_" + Integer.toString(param1));
        }
        int var2 = param1 + this.nums[idx];
        int var3 = param1 - this.nums[idx];
        int x = method2(idx + 1, var2);
        int y = method2(idx + 1, var3);
        this.memo.put(Integer.toString(idx) + "_" + Integer.toString(param1), x + y);
        return x + y;
    }
}
