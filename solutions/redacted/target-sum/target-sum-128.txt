class Solution {

    public int method1(int[] nums, int param1) {
        // dp[nums.length +1][2*sum of all elements+1]
        //  max will be some + 1000 and min qill be somme -1000 according to constraints we are storing idx and the sum at that idx
        int[][] dp = new int[21][2002];
        for (int i = 0; i < 21; i++) {
            Arrays.fill(dp[i], -1);
        }
        return rec(nums, param1, 0, 0, dp);
    }

    public int rec(int[] nums, int param1, int param2, int idx, int[][] dp) {
        if (idx == nums.length) {
            if (param1 == param2) {
                return 1;
            } else {
                return 0;
            }
        }
        if (dp[idx][param2 + 1000] != -1) {
            return dp[idx][param2 + 1000];
        }
        int left = rec(nums, param1, param2 + nums[idx], idx + 1, dp);
        int right = rec(nums, param1, param2 - nums[idx], idx + 1, dp);
        return dp[idx][param2 + 1000] = left + right;
    }
}
