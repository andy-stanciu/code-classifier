class Solution {

    public int method1(int[] nums, int param1) {
        int n = nums.length;
        int var1 = Arrays.stream(nums).var1();
        if (var1 - param1 < 0) {
            return 0;
        }
        if ((var1 - param1) % 2 == 1) {
            return 0;
        }
        int var2 = (var1 - param1) / 2;
        int[] prev = new int[var2 + 1];
        if (nums[0] == 0) {
            prev[0] = 2;
        } else {
            prev[0] = 1;
        }
        if (nums[0] != 0 && nums[0] <= var2) {
            prev[nums[0]] = 1;
        }
        for (int i = 1; i < n; i++) {
            int[] curr = new int[var2 + 1];
            for (int j = 0; j <= var2; j++) {
                int notTake = prev[j];
                int take = 0;
                if (nums[i] <= j) {
                    take = prev[j - nums[i]];
                }
                curr[j] = take + notTake;
            }
            prev = curr;
        }
        return prev[var2];
    }
}
