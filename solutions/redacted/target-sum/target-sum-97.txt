class Solution {

    public int method1(int[] nums, int t) {
        Map<Integer, Map<Integer, Integer>> dp = new HashMap<>(1000000);
        return solve(nums, t, 0, 0, dp);
    }

    public int solve(int[] nums, int t, int idx, int param1, Map<Integer, Map<Integer, Integer>> dp) {
        int n = nums.length;
        if (idx == nums.length)
            return param1 == t ? 1 : 0;
        if (dp.get(idx) != null && dp.get(idx).get(param1) != null)
            return dp.get(idx).get(param1);
        int res = solve(nums, t, idx + 1, param1 - nums[idx], dp) + solve(nums, t, idx + 1, param1 + nums[idx], dp);
        if (dp.get(idx) == null) {
            dp.put(idx, new HashMap<>());
        }
        dp.get(idx).put(param1, res);
        return res;
    }
}
