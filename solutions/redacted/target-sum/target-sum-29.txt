class Solution {

    Map<Pair<Integer, Integer>, Integer> cache = new HashMap<>();

    int[] nums;

    int var1;

    public int method1(int[] nums, int var1) {
        this.nums = nums;
        this.var1 = var1;
        return dfs(0, 0);
    }

    private int dfs(int index, /* element to be checked */
    int param1) {
        if (index >= nums.length) {
            return param1 == var1 ? 1 : 0;
        }
        Pair<Integer, Integer> cacheKey = new Pair(index, param1);
        Integer cacheValue = cache.get(cacheKey);
        if (cacheValue != null) {
            return cacheValue;
        }
        int value = dfs(index + 1, param1 + nums[index]) + dfs(index + 1, param1 - nums[index]);
        cache.put(cacheKey, value);
        return value;
    }
}
