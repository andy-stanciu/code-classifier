class Solution {

    public int method1(int[] nums, int param1) {
        int var1 = 0;
        for (int i = 0; i < nums.length; i++) {
            var1 += nums[i];
        }
        int s1 = (param1 + var1) / 2;
        if (var1 < param1)
            return 0;
        if ((var1 + param1) < 0 || ((var1 + param1) % 2) != 0)
            return 0;
        else
            return CountSub(nums, s1);
    }

    public int CountSub(int[] nums, int s1) {
        int n = nums.length;
        int[][] dp = new int[n + 1][s1 + 1];
        for (int i = 0; i < n + 1; i++) {
            for (int j = 0; j < s1 + 1; j++) {
                if (i == 0)
                    dp[i][j] = 0;
                if (j == 0)
                    dp[i][j] = 1;
            }
        }
        for (int i = 1; i < n + 1; i++) {
            for (int j = 0; j < s1 + 1; j++) {
                if (nums[i - 1] <= j)
                    dp[i][j] = dp[i - 1][j - nums[i - 1]] + dp[i - 1][j];
                else
                    dp[i][j] = dp[i - 1][j];
            }
        }
        return dp[n][s1];
    }
}
