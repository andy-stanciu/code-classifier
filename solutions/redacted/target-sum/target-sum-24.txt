class Solution {

    /* Total ways to form the given target, when all possibilities 
    of elements from index -> nums-1 have been considered */
    public int totalWays(int[] nums, int param1, int index) {
        /**
         * Base condition : At 0th index
         */
        if (index == 0) {
            int ways = 0;
            /**
             * Need to consider both of these conditions separately,
             *            Since, for nums[index]=0, both of the condition will satisfy
             *            Hence it need to be counted twice
             */
            if ((param1 - nums[index] == 0))
                ways++;
            if (param1 + nums[index] == 0)
                ways++;
            return ways;
        }
        int addition = totalWays(nums, param1 + nums[index], index - 1);
        int subtraction = totalWays(nums, param1 - nums[index], index - 1);
        return addition + subtraction;
    }

    public int method1(int[] nums, int param1) {
        int n = nums.length;
        return totalWays(nums, param1, n - 1);
    }
}
