class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1 || s.length() <= numRows) {
            return s;
        }
        StringBuilder[] rows = new StringBuilder[numRows];
        for (int i = 0; i < numRows; i++) {
            rows[i] = new StringBuilder();
        }
        int count = 0;
        while (count < s.length()) {
            for (int k = 0; k < numRows && count < s.length(); k++) {
                rows[k].append(s.charAt(count));
                if (count < s.length()) {
                    count++;
                } else {
                    break;
                }
            }
            for (int l = numRows - 2; l > 0 && count < s.length(); l--) {
                rows[l].append(s.charAt(count));
                if (count < s.length()) {
                    count++;
                } else {
                    break;
                }
            }
            if (count >= s.length()) {
                break;
            }
        }
        StringBuilder result = new StringBuilder();
        for (StringBuilder row : rows) {
            result.append(row);
        }
        return result.toString();
    }
}
