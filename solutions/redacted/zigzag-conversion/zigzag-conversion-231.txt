class Solution {

    public String convert(String s, int numRows) {
        //If length of string or numRoes is 1 return the String
        if (s.length() == 1 || numRows == 1) {
            return s;
        }
        int temp = 0;
        StringBuilder sb = new StringBuilder();
        int cnt = 0;
        while (temp < numRows) {
            int j = temp;
            cnt = 0;
            //The logic lies in finding the pattern of constant difference and finding a simple equation that satisfies all conditions
            while (j >= 0 && j < s.length()) {
                sb.append(s.charAt(j));
                if (temp == numRows - 1 || temp == 0) {
                    j = j + (2 * numRows) - 2;
                } else {
                    if (cnt % 2 == 0) {
                        j = j + 2 * (numRows - temp) - 2;
                    } else {
                        j = j + 2 * temp;
                    }
                    cnt++;
                }
            }
            temp++;
        }
        return sb.toString();
    }
}
