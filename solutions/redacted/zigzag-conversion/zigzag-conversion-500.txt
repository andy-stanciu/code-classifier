class Solution {

    public String convert(String s, int numRows) {
        if (numRows <= 1)
            return s;
        int length = s.length();
        int jump = 2 * numRows - 2;
        StringBuilder sb = new StringBuilder();
        for (int row = 0; row < numRows; row++) {
            int p = row, q = (2 * (jump - row)) % jump;
            while (p < length) {
                sb.append(s.charAt(p));
                int secondJump = p + q;
                if (q != 0 && secondJump < length)
                    sb.append(s.charAt(secondJump));
                p += jump;
            }
        }
        return sb.toString();
    }
}
