class Solution {

    public String convert(String s, int numRows) {
        // If there\'s only one row, return the string as it is
        if (numRows == 1)
            return s;
        StringBuilder result = new StringBuilder();
        // The length of one cycle in the zigzag pattern
        int cycleLen = 2 * (numRows - 1);
        // Loop through each row
        for (int i = 0; i < numRows; i++) {
            // Loop through each character in the string
            for (int j = 0; j + i < s.length(); j += cycleLen) {
                // Append the character from the current row
                result.append(s.charAt(j + i));
                // If it\'s not the first or last row, append the character from the zigzag part of the cycle
                if (i != 0 && i != numRows - 1 && j + cycleLen - i < s.length()) {
                    result.append(s.charAt(j + cycleLen - i));
                }
            }
        }
        return result.toString();
    }
}
