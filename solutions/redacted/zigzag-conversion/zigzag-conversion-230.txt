class Solution {

    public String convert(String s, int n) {
        // Edge case: if number of rows is 1, return the original string
        if (n == 1) {
            return s;
        }
        String[] st = new String[n];
        for (int i = 0; i < n; i++) {
            // Initialize each string in the array
            st[i] = "";
        }
        int id = 0;
        int len = s.length();
        // Loop through the characters in the string
        while (id < len) {
            // Going down the rows
            for (int i = 0; i < n && id < len; i++) {
                st[i] += s.charAt(id++);
            }
            // Going up the rows
            for (int i = n - 2; i > 0 && id < len; i--) {
                st[i] += s.charAt(id++);
            }
        }
        // Concatenate all rows into the final result
        StringBuilder res = new StringBuilder();
        for (String row : st) {
            res.append(row);
        }
        return res.toString();
    }
}
