class Solution {

    public String convert(String str, int numRows) {
        StringBuilder strResult = new StringBuilder();
        int var1 = numRows - 2;
        int symbolsRead = 0;
        int stringLength = str.length();
        int charPointer = 0;
        int lengthToNextChar = 0;
        int rowNumber = 1;
        boolean var2 = false;
        while (symbolsRead < stringLength) {
            if (charPointer + lengthToNextChar >= stringLength) {
                rowNumber++;
                charPointer = rowNumber - 1;
                var2 = false;
            } else {
                charPointer += lengthToNextChar;
            }
            char readChar = str.charAt(charPointer);
            strResult.append(readChar);
            if (var2) {
                int var4 = rowNumber - 1;
                int lengthToGoDown = rowNumber - 1;
                lengthToNextChar = var4 + lengthToGoDown;
            } else {
                int numberOfCellsToGoDown = numRows - rowNumber;
                int var3;
                if (rowNumber == 1)
                    var3 = var1 + 1;
                else if (rowNumber == numRows)
                    var3 = var1 + 1 + numRows - 1;
                else
                    var3 = var1 + 1 - rowNumber;
                lengthToNextChar = Math.max(numberOfCellsToGoDown + var3, 1);
            }
            symbolsRead++;
            var2 = (rowNumber == 1 || rowNumber == numRows) ? false : !var2;
        }
        return strResult.toString();
    }
}
