class Solution {

    public String convert(String s, int numRows) {
        int cycleLen = (numRows == 1) ? 1 : numRows * 2 - 2;
        StringBuilder sb = new StringBuilder();
        for (int row = 0; row < numRows; row++) {
            int cycleInc = cycleLen;
            int inc = cycleInc - 2 * row;
            if (row == 0 || row == numRows - 1) {
                // Here a larger increment is used because on the top and bottom
                // rows is larger beause they intersect only the corners of the
                // zigzag pattern
                cycleInc *= 2;
                inc = cycleLen;
            }
            for (int i = row; i < s.length(); i += inc, inc = cycleInc - inc) {
                // Copy elements using an alternating increment.
                // Two iterations increments by a total of cycleLen
                sb.append(s.charAt(i));
            }
        }
        return sb.toString();
    }
}
