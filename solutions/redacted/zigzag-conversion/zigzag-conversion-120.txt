class Solution {

    public String convert(String s, int numRows) {
        StringBuilder sb = new StringBuilder();
        int stringLength = s.length();
        for (int row = 0; row < numRows; row++) {
            // 1 row - step = 1
            // 2 row - step = 2
            // 3 row - step = 4
            // 4 row - step = 6
            // step = 1 + max(0, numRows-1) + max(0, numRows-2)
            // for first and last row we have step =
            int i = row;
            int downHeight = numRows - row;
            int upHeight = row + 1;
            int stepDown = method1(downHeight);
            int stepUp = method1(upHeight);
            boolean firstRow = row == 0;
            boolean lastRow = row == numRows - 1;
            boolean downDirection = true;
            while (i < stringLength) {
                sb.append(s.charAt(i));
                if (firstRow) {
                    i += stepDown;
                } else if (lastRow) {
                    i += stepUp;
                } else if (downDirection) {
                    i += stepDown;
                    downDirection = !downDirection;
                } else {
                    i += stepUp;
                    downDirection = !downDirection;
                }
            }
        }
        return sb.toString();
    }

    private int method1(int rows) {
        return rows + Math.max(0, rows - 2);
    }
}
