class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1) {
            return s;
        }
        int n = s.length();
        StringBuilder str = new StringBuilder();
        int stepSize = 2 * numRows - 2;
        int l = 0;
        int r = stepSize;
        while (l <= r) {
            List<Character> l1 = new ArrayList<>();
            for (int i = l; i < n; i = i + stepSize) {
                l1.add(s.charAt(i));
            }
            List<Character> l2 = new ArrayList<>();
            if (l != r && (r - l) != stepSize) {
                for (int i = r; i < n; i = i + stepSize) {
                    l2.add(s.charAt(i));
                }
            }
            int p = 0;
            int q = 0;
            while (p < l1.size() || q < l2.size()) {
                if (p < l1.size()) {
                    str.append(l1.get(p));
                    p++;
                }
                if (q < l2.size()) {
                    str.append(l2.get(q));
                    q++;
                }
            }
            l++;
            r--;
        }
        return str.toString();
    }
}
