class Solution {

    String word;

    String[] var1;

    int numRows;

    public String convert(String s, int numRows) {
        this.word = s;
        this.numRows = numRows;
        var1 = new String[numRows];
        Arrays.fill(var1, "");
        return method1();
    }

    private String method1() {
        if (word.length() <= numRows || numRows < 2)
            return word;
        int[] mids = getMids();
        int ln = word.length(), j = 0, ch = 0;
        while (ch < ln) {
            if (j == numRows) {
                for (Integer m : mids) {
                    method2(m, ch);
                    ch++;
                }
                j = 0;
            }
            method2(j, ch);
            j++;
            ch++;
        }
        return String.join("", var1);
    }

    private void method2(int j, int i) {
        if (Objects.isNull(var1[j]))
            var1[j] = "";
        if (i > word.length() - 1)
            return;
        var1[j] += word.charAt(i);
    }

    private int[] getMids() {
        int[] m = new int[numRows - 2];
        for (int i = 0; i < numRows - 2; i++) {
            m[i] = (numRows - 2) - i;
        }
        return m;
    }
}
