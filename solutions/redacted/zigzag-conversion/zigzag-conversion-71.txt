class Solution {

    public String convert(String s, int numRows) {
        //Checking Conditions
        if (s.length() <= numRows || numRows == 1) {
            return s;
        }
        StringBuilder str = new StringBuilder(s.length());
        //For the starting row
        int increaseForFirstAndLastRow = (numRows > 1) ? 2 * (numRows - 1) : 1;
        for (int i = 0; i < s.length(); i += increaseForFirstAndLastRow) {
            str.append(s.charAt(i));
        }
        //For the Middle Rows
        for (int i = 1; i < numRows - 1; i++) {
            int upblockInc = 2 * i;
            int downblockInc = 2 * (numRows - i - 1);
            int j = 0;
            int iterator = i;
            while (iterator < s.length()) {
                if (j % 2 == 0) {
                    str.append(s.charAt(iterator));
                    iterator += downblockInc;
                } else {
                    str.append(s.charAt(iterator));
                    iterator += upblockInc;
                }
                j++;
            }
        }
        //For the Ending Row
        for (int i = numRows - 1; i < s.length(); i += increaseForFirstAndLastRow) {
            str.append(s.charAt(i));
        }
        //Final Answer to string
        String a = str.toString();
        return a;
    }
}
