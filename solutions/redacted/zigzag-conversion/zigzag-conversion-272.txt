class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1 && numRows >= s.length()) {
            return s;
        }
        StringBuilder[] row = new StringBuilder[numRows];
        for (int i = 0; i < numRows; i++) {
            row[i] = new StringBuilder();
        }
        int i = 0;
        while (i < s.length()) {
            for (int count = 0; count < numRows && i < s.length(); count++) {
                row[count].append(s.charAt(i++));
            }
            for (int zCount = numRows - 2; zCount >= 1 && i < s.length(); zCount--) {
                row[zCount].append(s.charAt(i++));
            }
        }
        StringBuilder str = new StringBuilder();
        for (StringBuilder r : row) {
            str.append(r);
        }
        return str.toString();
    }
}
