class Solution {

    public String convert(String s, int numRows) {
        if (numRows == 1)
            return s;
        // no of zigzags we\'ll have
        int k = (2 * numRows) - 2;
        char[] arr = s.toCharArray();
        int n = arr.length;
        int noOfBlocks = (int) Math.ceil((double) n / k);
        //System.out.println(n + " " + k + " " + noOfBlocks);
        StringBuilder sb = new StringBuilder();
        // add the first letter of the zigzag
        for (int i = 0; i < noOfBlocks; i++) {
            if (i * k < n)
                sb.append(arr[i * k]);
        }
        // getting the middle ones
        for (int i = 1; i < numRows - 1; i++) {
            for (int j = 0; j < noOfBlocks; j++) {
                // get the first element of the block
                if ((j * k) + i < n)
                    sb.append(arr[(j * k) + i]);
                // get the second element of the block
                if ((j * k) + k - i < n)
                    sb.append(arr[(j * k) + k - i]);
            }
        }
        // add the middle letter of the zigzag
        for (int i = 0; i < noOfBlocks; i++) {
            if ((i * k) + numRows - 1 < n)
                sb.append(arr[(i * k) + numRows - 1]);
        }
        return sb.toString();
    }
}
