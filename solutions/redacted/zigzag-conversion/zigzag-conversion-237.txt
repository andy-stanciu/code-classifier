class Solution {

    public String convert(String s, int numRows) {
        StringBuilder str = new StringBuilder("");
        int i = 1;
        int n = s.length();
        int j = 0;
        int k = 0;
        // Edge cases
        if (numRows == 1 || numRows >= n) {
            return s;
        }
        // Process the first row
        while (j < n) {
            str.append(s.charAt(j));
            j += (numRows - 1) * 2;
        }
        // Process middle rows
        while (i < numRows - 1 && i < n - 1) {
            j = i;
            while (j < n) {
                str.append(s.charAt(j));
                k = j + (numRows - 1 - i) * 2;
                if (k < n) {
                    str.append(s.charAt(k));
                }
                j += (numRows - 1) * 2;
            }
            i++;
        }
        // Process the last row
        j = numRows - 1;
        while (j < n) {
            str.append(s.charAt(j));
            j += (numRows - 1) * 2;
        }
        return str.toString();
    }
}
