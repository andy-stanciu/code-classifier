/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> al = new ArrayList<>();

    public void solve(TreeNode root, String s, int param1, int target) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            param1 = param1 + root.val;
            s = s + "," + root.val;
            if (param1 == target) {
                String[] str = s.split(",");
                List<String> a = new ArrayList<>(Arrays.asList(str));
                List<Integer> ans = new ArrayList<>();
                for (int i = 1; i < a.size(); i++) {
                    ans.add(Integer.valueOf(a.get(i)));
                }
                al.add(ans);
            }
            return;
        }
        solve(root.left, s + "," + root.val, param1 + root.val, target);
        solve(root.right, s + "," + root.val, param1 + root.val, target);
    }

    public List<List<Integer>> method1(TreeNode root, int param2) {
        solve(root, "", 0, param2);
        return al;
    }
}
