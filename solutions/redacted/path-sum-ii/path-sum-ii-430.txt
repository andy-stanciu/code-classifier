/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static void Helper(TreeNode root, List<Integer> list, int k, List<List<Integer>> listans) {
        if (root == null) {
            return;
        }
        if (k - root.val == 0 && root.left == null && root.right == null) {
            list.add(root.val);
            listans.add(new ArrayList<>(list));
            list.remove(list.size() - 1);
            return;
        }
        list.add(root.val);
        k = k - root.val;
        Helper(root.left, list, k, listans);
        Helper(root.right, list, k, listans);
        list.remove(list.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> listans = new ArrayList<>();
        Helper(root, list, param1, listans);
        return listans;
    }
}
