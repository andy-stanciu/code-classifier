/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        dfs(root, param1, new ArrayList<>(), 0, ans);
        return ans;
    }

    private void dfs(TreeNode root, int param1, List<Integer> param2, int method1, List<List<Integer>> ans) {
        if (root == null)
            return;
        method1 += root.val;
        param2.add(root.val);
        if (root.left == null && root.right == null) {
            if (method1 == param1)
                ans.add(new ArrayList<>(param2));
            return;
        }
        if (root.left != null) {
            dfs(root.left, param1, param2, method1, ans);
            param2.remove(param2.size() - 1);
        }
        if (root.right != null) {
            dfs(root.right, param1, param2, method1, ans);
            param2.remove(param2.size() - 1);
        }
    }
}
