/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        rootToLeaf(root, param1, new ArrayList<Integer>(), ans);
        return ans;
    }

    int var1 = 0;

    void rootToLeaf(TreeNode root, int param1, ArrayList<Integer> temp, List<List<Integer>> ans) {
        if (root == null)
            return;
        var1 += root.val;
        temp.add(root.val);
        if (root.left == null && root.right == null && var1 == param1) {
            ans.add(new ArrayList<>(temp));
        }
        rootToLeaf(root.left, param1, temp, ans);
        rootToLeaf(root.right, param1, temp, ans);
        var1 -= root.val;
        temp.remove(temp.size() - 1);
    }
}
