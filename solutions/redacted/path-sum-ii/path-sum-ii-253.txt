class Solution {

    List<List<Integer>> results = new LinkedList<>();

    int var1;

    public List<List<Integer>> method1(TreeNode root, int var1) {
        this.var1 = var1;
        dfs(root, 0, new LinkedList<>());
        return results;
    }

    private void dfs(TreeNode node, int param1, List<Integer> values) {
        if (node == null) {
            return;
        }
        param1 += node.val;
        values.add(node.val);
        if (param1 == var1 && isLeaf(node)) {
            results.add(values);
        } else {
            dfs(node.left, param1, new LinkedList<>(values));
            dfs(node.right, param1, new LinkedList<>(values));
        }
    }

    private boolean isLeaf(TreeNode node) {
        return node.left == null && node.right == null;
    }
}
