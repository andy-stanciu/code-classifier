/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root != null) {
            dfs(root, param1, 0, new ArrayList<>());
        }
        return res;
    }

    public void dfs(TreeNode root, int param2, int param3, ArrayList<Integer> ans) {
        param3 += root.val;
        ans.add(root.val);
        if (root.left == null && root.right == null && param3 == param2) {
            res.add(ans);
        }
        if (root.left != null) {
            dfs(root.left, param2, param3, new ArrayList<>(ans));
        }
        if (root.right != null) {
            dfs(root.right, param2, param3, new ArrayList<>(ans));
        }
    }
}
