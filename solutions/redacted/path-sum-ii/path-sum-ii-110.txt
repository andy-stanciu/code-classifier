/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        dfs(root, result, param1, new ArrayList<>());
        return result;
    }

    public void dfs(TreeNode root, List<List<Integer>> result, int param1, List<Integer> temp) {
        if (root == null)
            return;
        param1 = param1 - root.val;
        temp.add(root.val);
        if (param1 == 0 && root.left == null && root.right == null) {
            result.add(new ArrayList<>(temp));
            return;
        }
        if (root.left != null) {
            dfs(root.left, result, param1, temp);
            temp.remove(temp.size() - 1);
        }
        if (root.right != null) {
            dfs(root.right, result, param1, temp);
            temp.remove(temp.size() - 1);
        }
    }
}
