/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public List<List<Integer>> ans = new ArrayList<>();

    public List<Integer> list = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null) {
            return ans;
        }
        dfs(root, param1);
        return ans;
    }

    public void dfs(TreeNode node, int param2) {
        if (node == null) {
            return;
        }
        list.add(node.val);
        if (param2 == node.val && (node.left == null && node.right == null)) {
            ans.add(new ArrayList<>(list));
        } else {
            dfs(node.left, param2 - node.val);
            dfs(node.right, param2 - node.val);
        }
        list.remove(list.size() - 1);
    }
}
