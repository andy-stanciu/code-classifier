class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> inner = new ArrayList<>();
        findans(root, param1, list, inner);
        return list;
    }

    private void findans(TreeNode root, int param1, List<List<Integer>> outer, List<Integer> inner) {
        //base case
        if (root == null)
            return;
        inner.add(root.val);
        if (root.left == null && root.right == null && root.val == param1) {
            //base case
            outer.add(new ArrayList<>(inner));
        } else {
            findans(root.left, param1 - root.val, outer, inner);
            findans(root.right, param1 - root.val, outer, inner);
        }
        inner.remove(inner.size() - 1);
    }
}
