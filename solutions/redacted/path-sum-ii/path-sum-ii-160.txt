/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        dfs(root, param1, 0, new ArrayList<>(), result);
        return result;
    }

    public static void dfs(TreeNode root, int param1, int param2, List<Integer> sublist, List<List<Integer>> result) {
        if (root == null)
            return;
        sublist.add(root.val);
        param2 += root.val;
        if (root.left == null && root.right == null && param2 == param1) {
            result.add(new ArrayList<>(sublist));
        }
        dfs(root.left, param1, param2, sublist, result);
        dfs(root.right, param1, param2, sublist, result);
        sublist.remove(sublist.size() - 1);
    }
}
