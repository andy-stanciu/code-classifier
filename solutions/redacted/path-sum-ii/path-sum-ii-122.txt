class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        dfs(root, new ArrayList<>(), res, param1, 0);
        return res;
    }

    private void dfs(TreeNode root, List<Integer> cur, List<List<Integer>> res, int target, int param2) {
        if (root == null)
            return;
        param2 += root.val;
        cur.add(root.val);
        if (param2 == target && root.left == null && root.right == null) {
            res.add(new ArrayList<>(cur));
        }
        dfs(root.left, cur, res, target, param2);
        dfs(root.right, cur, res, target, param2);
        cur.remove(cur.size() - 1);
    }
}
