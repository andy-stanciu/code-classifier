class Solution {

    List<List<Integer>> list = new ArrayList<>();

    List<Integer> var1 = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        dfs(root, param1);
        return list;
    }

    public void dfs(TreeNode root, int param1) {
        //Code tp execute during recurssive function call
        if (root == null) {
            return;
        }
        param1 = param1 - root.val;
        var1.add(root.val);
        if (param1 == 0 && root.left == null && root.right == null) {
            list.add(new ArrayList<>(var1));
        }
        //Recurssive function calls
        dfs(root.left, param1);
        dfs(root.right, param1);
        //Operation to perform while backtracking
        var1.remove(var1.size() - 1);
    }
}
