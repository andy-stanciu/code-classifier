/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        helper(root, param1, result, new ArrayList());
        return result;
    }

    private void helper(TreeNode root, int param1, List<List<Integer>> result, List<Integer> current) {
        if (root == null) {
            return;
        }
        current.add(root.val);
        param1 -= root.val;
        if (root.right == null && root.left == null && param1 == 0) {
            result.add(new ArrayList(current));
        } else {
            helper(root.left, param1, result, current);
            helper(root.right, param1, result, current);
        }
        current.remove(current.size() - 1);
    }
}
