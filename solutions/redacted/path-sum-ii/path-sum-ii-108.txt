/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    static void backtrack(TreeNode root, int param1, List<Integer> list, List<List<Integer>> ans) {
        if (root == null) {
            return;
        }
        list.add(root.val);
        if (param1 == root.val && root.left == null && root.right == null) {
            ans.add(new ArrayList<>(list));
        } else {
            backtrack(root.left, param1 - root.val, list, ans);
            backtrack(root.right, param1 - root.val, list, ans);
        }
        list.remove(list.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> ans = new ArrayList<>();
        backtrack(root, param1, list, ans);
        return ans;
    }
}
