/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> a = new ArrayList<List<Integer>>();
        List<Integer> b = new ArrayList<>();
        method2(root, param1, 0, a, b);
        return a;
    }

    public void method2(TreeNode root, int param1, int param2, List<List<Integer>> a, List<Integer> b) {
        if (root == null) {
            return;
        }
        param2 += root.val;
        b.add(root.val);
        if (root.left == null && root.right == null) {
            if (param2 == param1) {
                a.add(new ArrayList<>(b));
            }
        }
        method2(root.left, param1, param2, a, b);
        method2(root.right, param1, param2, a, b);
        b.remove(b.size() - 1);
        return;
    }
}
