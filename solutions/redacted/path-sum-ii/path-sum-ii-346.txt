class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> var1 = new ArrayList<>();
        helper(root, param1, 0, var1, result);
        return result;
    }

    private void helper(TreeNode root, int param1, int param2, List<Integer> var1, List<List<Integer>> result) {
        if (root == null) {
            return;
        }
        param2 += root.val;
        var1.add(root.val);
        if (root.left == null && root.right == null) {
            if (param2 == param1) {
                result.add(new ArrayList<>(var1));
            }
        }
        helper(root.left, param1, param2, var1, result);
        helper(root.right, param1, param2, var1, result);
        // Remove the last added element when backtracking
        var1.remove(var1.size() - 1);
    }
}
