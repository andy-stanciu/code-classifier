/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        method2(root, param1);
        return ans;
    }

    int var1;

    List<Integer> var2 = new ArrayList<>();

    private void method2(TreeNode node, int param1) {
        if (node == null) {
            return;
        }
        var1 += node.val;
        var2.add(node.val);
        if (node.left == null && node.right == null) {
            // leaf node
            if (var1 == param1) {
                List<Integer> neww = new ArrayList<>(var2);
                ans.add(neww);
            }
        }
        method2(node.left, param1);
        method2(node.right, param1);
        var1 -= node.val;
        var2.remove(var2.size() - 1);
    }
}
