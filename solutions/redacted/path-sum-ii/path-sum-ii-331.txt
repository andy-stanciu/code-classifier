/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> var1 = new ArrayList<>();
        if (root == null) {
            return var1;
        }
        method2(root, root.val, param1, new ArrayList<>(Arrays.asList(root.val)), var1);
        return var1;
    }

    public void method2(TreeNode root, int param2, int param1, List<Integer> param3, List<List<Integer>> var1) {
        if (root.left == null && root.right == null) {
            if (param2 == param1) {
                var1.add(new ArrayList<>(param3));
            }
            return;
        }
        if (root.left != null) {
            param3.add(root.left.val);
            method2(root.left, param2 + root.left.val, param1, param3, var1);
            param3.remove(param3.size() - 1);
        }
        if (root.right != null) {
            param3.add(root.right.val);
            method2(root.right, param2 + root.right.val, param1, param3, var1);
            param3.remove(param3.size() - 1);
        }
    }
}
