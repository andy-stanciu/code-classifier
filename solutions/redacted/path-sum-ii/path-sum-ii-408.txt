/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        dfs(root, param1, new ArrayList<>());
        return ans;
    }

    private void dfs(TreeNode root, int x, List<Integer> tmp) {
        if (root == null)
            return;
        tmp.add(root.val);
        dfs(root.left, x - root.val, tmp);
        if (root.left == null && root.right == null && x - root.val == 0) {
            List<Integer> a = new ArrayList<>();
            for (int r : tmp) a.add(r);
            ans.add(a);
        }
        dfs(root.right, x - root.val, tmp);
        tmp.remove(tmp.size() - 1);
    }
}
