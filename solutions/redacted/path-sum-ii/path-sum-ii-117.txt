/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        final List<List<Integer>> var1 = new ArrayList();
        method2(root, param1, 0, var1, new ArrayList<Integer>());
        return var1;
    }

    private void method2(TreeNode root, int param1, int param2, List<List<Integer>> var1, List<Integer> currentList) {
        if (root == null)
            return;
        param2 += root.val;
        currentList.add(root.val);
        if (root.left == null && root.right == null && param1 == param2) {
            var1.add(currentList);
        } else {
            method2(root.left, param1, param2, var1, new ArrayList<Integer>(currentList));
            method2(root.right, param1, param2, var1, new ArrayList<Integer>(currentList));
        }
    }
}
