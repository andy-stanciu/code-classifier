/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ll = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<Integer> var1 = new ArrayList<>();
        traversal(root, param1, 0, var1);
        return ll;
    }

    public void traversal(TreeNode root, int param2, int param3, List<Integer> var1) {
        if (root != null)
            param3 = param3 + root.val;
        else
            return;
        var1.add(root.val);
        if (root.left == null && root.right == null) {
            if (param3 == param2) {
                ll.add(var1);
            }
            return;
        }
        if (root.left != null) {
            traversal(root.left, param2, param3, new ArrayList<>(var1));
        }
        if (root.right != null) {
            traversal(root.right, param2, param3, new ArrayList<>(var1));
        }
        return;
    }
}
