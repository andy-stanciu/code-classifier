class Solution {

    public void method1(TreeNode root, int param1, List<Integer> param2, List<List<Integer>> ans) {
        if (root.left == null && root.right == null) {
            if (param1 - root.val == 0) {
                param2.add(root.val);
                List<Integer> base = new ArrayList<>();
                for (int val : param2) {
                    base.add(val);
                }
                ans.add(base);
                param2.remove(param2.size() - 1);
            }
            return;
        }
        param2.add(root.val);
        if (root.left != null) {
            method1(root.left, param1 - root.val, param2, ans);
        }
        if (root.right != null) {
            method1(root.right, param1 - root.val, param2, ans);
        }
        param2.remove(param2.size() - 1);
    }

    public List<List<Integer>> method2(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        List<Integer> param2 = new ArrayList<>();
        method1(root, param1, param2, ans);
        return ans;
    }
}
