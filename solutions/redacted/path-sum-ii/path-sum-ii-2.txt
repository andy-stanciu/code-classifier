/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> sublist = new ArrayList<>();
        fncn(list, sublist, root, param1);
        return list;
    }

    public void fncn(List<List<Integer>> list, List<Integer> sublist, TreeNode node, int param2) {
        if (node == null)
            return;
        param2 -= node.val;
        sublist.add(node.val);
        if (param2 == 0 && node.left == null && node.right == null) {
            list.add(new ArrayList<Integer>(sublist));
        }
        fncn(list, sublist, node.left, param2);
        fncn(list, sublist, node.right, param2);
        sublist.remove(sublist.size() - 1);
    }
}
