/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int target) {
        List<List<Integer>> res = new ArrayList();
        List<Integer> list = new ArrayList();
        if (root == null)
            return res;
        helper(res, root, target, list);
        return res;
    }

    private void helper(List<List<Integer>> res, TreeNode root, int target, List<Integer> list) {
        if (root != null) {
            list.add(root.val);
            target = target - root.val;
        }
        if (root == null)
            return;
        if (root.left == null && root.right == null && target == 0) {
            res.add(new ArrayList(list));
            list.remove(list.size() - 1);
            return;
        }
        helper(res, root.left, target, list);
        helper(res, root.right, target, list);
        list.remove(list.size() - 1);
        return;
    }
}
