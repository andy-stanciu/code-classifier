/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> list = new ArrayList<>();
        ArrayList<Integer> arr = new ArrayList<>();
        function(root, param1, list, arr, 0);
        return list;
    }

    public void function(TreeNode root, int target, List<List<Integer>> list, ArrayList<Integer> arr, int param2) {
        if (root == null) {
            return;
        }
        param2 += root.val;
        arr.add(root.val);
        if (root.left == null && root.right == null) {
            if (param2 == target) {
                list.add(new ArrayList<>(arr));
            }
        }
        function(root.left, target, list, arr, param2);
        function(root.right, target, list, arr, param2);
        arr.remove(arr.size() - 1);
    }
}
