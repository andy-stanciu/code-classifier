/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> result = new ArrayList<>();

    int target = 0;

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null) {
            return result;
        }
        target = param1;
        helper(root);
        return result;
    }

    Stack<Integer> st = new Stack<>();

    int var1 = 0;

    void helper(TreeNode root) {
        if (root.left == null && root.right == null) {
            var1 += root.val;
            st.push(root.val);
            if (var1 == target) {
                List<Integer> l = new ArrayList<>();
                for (Integer x : st) {
                    l.add(x);
                }
                result.add(l);
            }
            var1 -= st.pop();
        }
        st.push(root.val);
        var1 += root.val;
        if (root.left != null) {
            helper(root.left);
        }
        if (root.right != null) {
            helper(root.right);
        }
        var1 -= st.pop();
    }
}
