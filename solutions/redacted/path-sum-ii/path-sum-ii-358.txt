/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    static void method1(TreeNode root, int param1, List<Integer> arr, List<List<Integer>> ans, int t) {
        if (root == null) {
            return;
        }
        param1 = param1 + root.val;
        arr.add(root.val);
        if (root.left == null && root.right == null) {
            if (param1 == t) {
                ans.add(new ArrayList<>(arr));
            }
        }
        method1(root.left, param1, arr, ans, t);
        method1(root.right, param1, arr, ans, t);
        arr.remove(arr.size() - 1);
        param1 = param1 - root.val;
    }

    public List<List<Integer>> method2(TreeNode root, int param2) {
        List<List<Integer>> ans = new ArrayList<>();
        method1(root, 0, new ArrayList<>(), ans, param2);
        return ans;
    }
}
