/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> a = new ArrayList<>();
        List<Integer> aa = new ArrayList<>();
        s(root, param1, a, aa);
        return a;
    }

    public void s(TreeNode root, int t, List<List<Integer>> a, List<Integer> aa) {
        if (root == null)
            return;
        aa.add(root.val);
        if (root.left == null && root.right == null && t == root.val) {
            a.add(new ArrayList<>(aa));
        } else {
            s(root.left, t - root.val, a, aa);
            s(root.right, t - root.val, a, aa);
        }
        aa.remove(aa.size() - 1);
    }
}
