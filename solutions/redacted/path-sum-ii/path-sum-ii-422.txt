/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    ArrayList<List<Integer>> list = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        method2(root, param1, new ArrayList<>());
        return list;
    }

    void method2(TreeNode node, int target, List<Integer> res) {
        if (node == null)
            return;
        res.add(node.val);
        if (node.val == target && node.left == null && node.right == null)
            list.add(res);
        method2(node.left, target - node.val, new ArrayList<>(res));
        method2(node.right, target - node.val, new ArrayList<>(res));
    }
}
