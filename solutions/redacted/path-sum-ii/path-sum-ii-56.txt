/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        List<Integer> var1 = new ArrayList<Integer>();
        backtrack(root, var1, param1, ans);
        return ans;
    }

    public void backtrack(TreeNode node, List<Integer> var1, int param2, List<List<Integer>> ans) {
        if (node == null)
            return;
        var1.add(node.val);
        if (node.left == null && node.right == null && param2 == node.val)
            ans.add(new ArrayList<>(var1));
        backtrack(node.left, var1, param2 - node.val, ans);
        backtrack(node.right, var1, param2 - node.val, ans);
        var1.remove(var1.size() - 1);
    }
}
