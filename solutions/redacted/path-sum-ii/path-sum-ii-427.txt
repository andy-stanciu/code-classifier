/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public void helper(TreeNode root, ArrayList<Integer> al, int target) {
        if (root == null)
            return;
        if (root.left == null && root.right == null && (target - root.val) == 0) {
            al.add(root.val);
            res.add(new ArrayList<>(al));
            al.remove(al.size() - 1);
            return;
        }
        al.add(root.val);
        helper(root.left, al, target - root.val);
        helper(root.right, al, target - root.val);
        al.remove(al.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        ArrayList<Integer> al = new ArrayList<>();
        helper(root, al, param1);
        return res;
    }
}
