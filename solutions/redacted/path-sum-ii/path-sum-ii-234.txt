/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> mainlist = new ArrayList<>();

    public void helper(int param1, int param2, TreeNode root, ArrayList<Integer> list) {
        if (root == null) {
            return;
        }
        param1 += root.val;
        list.add(root.val);
        if (root.left == null && root.right == null && param1 == param2) {
            // Create a new ArrayList to store a copy of the current path
            mainlist.add(new ArrayList<>(list));
        }
        helper(param1, param2, root.left, list);
        helper(param1, param2, root.right, list);
        list.remove(list.size() - 1);
        return;
    }

    public List<List<Integer>> method1(TreeNode root, int param3) {
        if (root == null) {
            return mainlist;
        }
        ArrayList<Integer> list = new ArrayList<>();
        helper(0, param3, root, list);
        return mainlist;
    }
}
