/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null)
            return new ArrayList<>();
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> var1 = new ArrayList<>();
        method2(root, param1, result, var1);
        return result;
    }

    private void method2(TreeNode curr, int param1, List<List<Integer>> result, List<Integer> temp) {
        if (curr == null) {
            return;
        }
        param1 -= curr.val;
        if (curr.left == null && curr.right == null) {
            if (param1 == 0) {
                temp.add(curr.val);
                result.add(new ArrayList<>(temp));
                temp.remove(temp.size() - 1);
                return;
            }
        }
        temp.add(curr.val);
        method2(curr.left, param1, result, temp);
        method2(curr.right, param1, result, temp);
        temp.remove(temp.size() - 1);
    }
}
