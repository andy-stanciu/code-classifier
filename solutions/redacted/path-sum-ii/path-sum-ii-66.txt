class Solution {

    List<List<Integer>> var1 = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        method2(root, param1, new ArrayList<>());
        return var1;
    }

    void method2(TreeNode node, int param1, List<Integer> current) {
        if (node == null)
            return;
        current.add(node.val);
        if (node.left == null && node.right == null && node.val == param1) {
            var1.add(current);
            return;
        }
        method2(node.left, param1 - node.val, new ArrayList<>(current));
        method2(node.right, param1 - node.val, new ArrayList<>(current));
    }
}
// TC: O(n) - We visit every node of the tree
// SC: O(h) - where h is the height of the tree
