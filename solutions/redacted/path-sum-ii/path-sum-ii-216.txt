/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<Integer> ls = new ArrayList<>();
        List<List<Integer>> res = new ArrayList<>();
        method2(root, param1, res, ls);
        return res;
    }

    public void method2(TreeNode root, int param1, List<List<Integer>> res, List<Integer> ls) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            if (param1 - root.val == 0) {
                ls.add(root.val);
                res.add(new ArrayList<>(ls));
                ls.remove(ls.size() - 1);
            }
            return;
        }
        ls.add(root.val);
        method2(root.left, param1 - root.val, res, ls);
        ls.remove(ls.size() - 1);
        ls.add(root.val);
        method2(root.right, param1 - root.val, res, ls);
        ls.remove(ls.size() - 1);
    }
}
