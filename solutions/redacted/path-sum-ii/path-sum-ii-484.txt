class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        if (root == null)
            return res;
        param1 -= root.val;
        if (root.left == null && root.right == null) {
            // leaf reached
            if (param1 == 0) {
                // valid path, add the val of the current node to the list
                List curr = new ArrayList<>();
                curr.add(root.val);
                res.add(curr);
            }
            return res;
        }
        // get all valid paths in the left subtree
        res.addAll(method1(root.left, param1));
        // get all valid paths in the right subtree
        res.addAll(method1(root.right, param1));
        for (// add the val of the current node to the valid paths
        // add the val of the current node to the valid paths
        List l : res) l.add(0, root.val);
        return res;
    }
}
