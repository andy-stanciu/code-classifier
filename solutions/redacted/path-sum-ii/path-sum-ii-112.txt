class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        if (root == null)
            return res;
        if (root.left == null && root.right == null && param1 != root.val)
            return res;
        List<Integer> arr = new ArrayList<>();
        arr.add(root.val);
        method2(res, arr, root, param1 - root.val);
        return res;
    }

    private void method2(List<List<Integer>> res, List<Integer> arr, TreeNode node, int target) {
        if (target == 0 && node.left == null && node.right == null) {
            res.add(new ArrayList<>(arr));
            return;
        }
        if (node.left != null) {
            arr.add(node.left.val);
            method2(res, arr, node.left, target - node.left.val);
            arr.remove(arr.size() - 1);
        }
        if (node.right != null) {
            arr.add(node.right.val);
            method2(res, arr, node.right, target - node.right.val);
            arr.remove(arr.size() - 1);
        }
    }
}
