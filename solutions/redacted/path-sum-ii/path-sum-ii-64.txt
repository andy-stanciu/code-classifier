class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList();
        dfs(root, res, new ArrayList<Integer>(), param1);
        return res;
    }

    private void dfs(TreeNode root, List<List<Integer>> res, List<Integer> temp, int param1) {
        if (root == null)
            return;
        temp.add(root.val);
        if (root.left == null && root.right == null && param1 == root.val)
            res.add(new ArrayList<Integer>(temp));
        dfs(root.left, res, temp, param1 - root.val);
        dfs(root.right, res, temp, param1 - root.val);
        temp.remove(temp.size() - 1);
    }
}
