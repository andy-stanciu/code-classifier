class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> var1 = new ArrayList<>();
        List<Integer> var2 = new ArrayList<>();
        if (root == null)
            return var1;
        // helper function
        hf(var1, var2, param1, root);
        return var1;
    }

    public void hf(List<List<Integer>> var1, List<Integer> var2, int target, TreeNode root) {
        // base case
        if (root == null)
            return;
        var2.add(root.val);
        if (root.right == null && root.left == null && root.val == target) {
            var1.add(new ArrayList<>(var2));
        }
        hf(var1, var2, target - root.val, root.left);
        hf(var1, var2, target - root.val, root.right);
        // backtracking
        var2.remove(var2.size() - 1);
    }
}
