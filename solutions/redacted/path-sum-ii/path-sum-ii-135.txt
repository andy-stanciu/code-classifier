/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans;

    public void help(TreeNode root, List<Integer> pres, int ps, int ts) {
        if (root == null)
            return;
        if (root.left == null && root.right == null)
            System.out.println(ps);
        if (ps == ts && root.left == null && root.right == null)
            ans.add(pres);
        if (root.left != null) {
            List<Integer> lal = new ArrayList<>();
            lal.addAll(pres);
            lal.add(root.left.val);
            help(root.left, lal, ps + root.left.val, ts);
        }
        if (root.right != null) {
            List<Integer> ral = new ArrayList<>();
            ral.addAll(pres);
            ral.add(root.right.val);
            help(root.right, ral, ps + root.right.val, ts);
        }
    }

    public List<List<Integer>> method1(TreeNode root, int ts) {
        ans = new ArrayList<>();
        if (root == null)
            return ans;
        help(root, List.of(root.val), root.val, ts);
        return ans;
    }
}
