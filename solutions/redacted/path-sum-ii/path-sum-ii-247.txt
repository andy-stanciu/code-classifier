/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> solve = new ArrayList<>();
        dfs(root, param1, solve, res);
        return res;
    }

    private void dfs(TreeNode node, int param1, List<Integer> solve, List<List<Integer>> res) {
        if (node == null)
            return;
        solve.add(node.val);
        if (node.left == null && node.right == null && node.val == param1) {
            res.add(new ArrayList<Integer>(solve));
        } else {
            dfs(node.left, param1 - node.val, solve, res);
            dfs(node.right, param1 - node.val, solve, res);
        }
        solve.remove(solve.size() - 1);
    }
}
