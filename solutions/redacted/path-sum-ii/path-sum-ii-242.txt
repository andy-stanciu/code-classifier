/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private void solve(TreeNode root, int param1, List<Integer> param2, List<List<Integer>> ans, int param3) {
        if (root == null)
            return;
        param2.add(root.val);
        param3 += root.val;
        if (root.left == null && root.right == null && param1 == param3)
            ans.add(new ArrayList<>(param2));
        if (root.left != null)
            solve(root.left, param1, param2, ans, param3);
        if (root.right != null)
            solve(root.right, param1, param2, ans, param3);
        param2.remove(param2.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> param2 = new ArrayList<>();
        solve(root, param1, param2, ans, 0);
        return ans;
    }
}
