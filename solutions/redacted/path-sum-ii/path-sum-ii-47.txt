class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> listResult = new ArrayList<>();
        goDFS(root, 0, param1, new ArrayList<>(), listResult);
        return listResult;
    }

    private void goDFS(TreeNode node, int param2, int param1, ArrayList<Integer> list, List<List<Integer>> listResult) {
        if (node == null)
            return;
        param2 += node.val;
        list.add(node.val);
        if (node.left == null && node.right == null && param2 == param1) {
            listResult.add(new ArrayList<>(list));
        }
        goDFS(node.left, param2, param1, list, listResult);
        goDFS(node.right, param2, param1, list, listResult);
        list.remove(list.size() - 1);
    }
}
