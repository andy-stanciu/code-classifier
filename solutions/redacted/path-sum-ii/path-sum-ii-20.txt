class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        getAns(root, param1, 0, ans, new ArrayList<>());
        return ans;
    }

    private void getAns(TreeNode root, int target, int param2, List<List<Integer>> ans, List<Integer> subAns) {
        if (root == null)
            return;
        param2 += root.val;
        if (param2 == target) {
            if (root.left == null && root.right == null) {
                subAns.add(root.val);
                ans.add(new ArrayList<>(subAns));
                subAns.remove(subAns.size() - 1);
                return;
            }
        }
        subAns.add(root.val);
        getAns(root.left, target, param2, ans, subAns);
        getAns(root.right, target, param2, ans, subAns);
        subAns.remove(subAns.size() - 1);
    }
}
