/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> var1 = new ArrayList<>();
        if (root != null)
            traverse(root, var1, list, param1);
        return list;
    }

    public void traverse(TreeNode root, List<Integer> var1, List<List<Integer>> list, int param2) {
        var1.add(root.val);
        if (root.left == null && root.right == null) {
            int var2 = 0;
            for (int i = 0; i < var1.size(); i++) {
                var2 += var1.get(i);
            }
            if (var2 == param2) {
                list.add(new ArrayList<>(var1));
                // path.clear();
            }
        }
        if (root.left != null)
            traverse(root.left, var1, list, param2);
        if (root.right != null)
            traverse(root.right, var1, list, param2);
        var1.remove(var1.size() - 1);
    }
}
