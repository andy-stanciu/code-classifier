/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans;

    public void solve(TreeNode root, int param1, int param2, List<Integer> temp) {
        if (root == null) {
            return;
        }
        temp.add(root.val);
        if (root.left == null && root.right == null && param1 + root.val == param2) {
            ans.add(new ArrayList<>(temp));
        } else {
            solve(root.left, param1 + root.val, param2, temp);
            solve(root.right, param1 + root.val, param2, temp);
        }
        temp.remove(temp.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param2) {
        ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        List<Integer> temp = new ArrayList<>();
        solve(root, 0, param2, temp);
        return ans;
    }
}
