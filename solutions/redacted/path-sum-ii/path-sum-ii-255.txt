/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> res = new ArrayList<>();
        solve(new ArrayList<>(), root, param1, 0, res);
        return res;
    }

    private void solve(List<Integer> temp, TreeNode root, int target, int param2, List<List<Integer>> res) {
        if (root == null)
            return;
        param2 += root.val;
        temp.add(root.val);
        if (root.left == null && root.right == null && param2 == target) {
            res.add(new ArrayList<>(temp));
            //return;
        }
        solve(temp, root.left, target, param2, res);
        solve(temp, root.right, target, param2, res);
        temp.remove(temp.size() - 1);
    }
}
