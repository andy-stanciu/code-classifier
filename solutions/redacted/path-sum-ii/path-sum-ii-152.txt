/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        ArrayList<Integer> ans = new ArrayList<>();
        helper(root, ans, result, param1);
        return result;
    }

    public void helper(TreeNode root, ArrayList<Integer> ans, List<List<Integer>> result, int param1) {
        if (root == null)
            return;
        ans.add(root.val);
        if (root.left == null && root.right == null && root.val == param1) {
            result.add(new ArrayList<>(ans));
        } else {
            helper(root.left, ans, result, param1 - root.val);
            helper(root.right, ans, result, param1 - root.val);
        }
        ans.removeLast();
    }
}
