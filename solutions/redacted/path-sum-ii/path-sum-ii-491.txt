class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null)
            return result;
        List<Integer> var1 = new ArrayList<>();
        Stack<TreeNode> nodeStack = new Stack<>();
        Stack<Integer> var2 = new Stack<>();
        Stack<List<Integer>> var3 = new Stack<>();
        nodeStack.push(root);
        var2.push(param1 - root.val);
        var1.add(root.val);
        var3.push(var1);
        while (!nodeStack.isEmpty()) {
            TreeNode curr = nodeStack.pop();
            int var4 = var2.pop();
            var1 = var3.pop();
            if (curr.left == null && curr.right == null && var4 == 0) {
                result.add(var1);
            }
            if (curr.left != null) {
                nodeStack.push(curr.left);
                var2.push(var4 - curr.left.val);
                List<Integer> var5 = new ArrayList<>(var1);
                var5.add(curr.left.val);
                var3.push(var5);
            }
            if (curr.right != null) {
                nodeStack.push(curr.right);
                var2.push(var4 - curr.right.val);
                var1.add(curr.right.val);
                var3.push(var1);
            }
        }
        return result;
    }
}
