/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ar = new ArrayList<>();
        List<Integer> l1 = new ArrayList<>();
        solve(ar, l1, root, param1);
        return ar;
    }

    public static void solve(List<List<Integer>> ar, List<Integer> l1, TreeNode root, int param2) {
        if (root == null)
            return;
        if (root.left == null && root.right == null && param2 - root.val == 0) {
            l1.add(root.val);
            ar.add(l1);
        } else {
            l1.add(root.val);
            List<Integer> l2 = new ArrayList<>(l1);
            solve(ar, l1, root.left, param2 - root.val);
            solve(ar, l2, root.right, param2 - root.val);
        }
    }
}
