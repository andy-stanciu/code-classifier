/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    //store the current sum so we can check if target sum is reached
    public static int[] arr = new int[1];

    //stores final response which list of list
    List<List<Integer>> res = new ArrayList<>();

    List<Integer> list = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null) {
            return res;
        }
        arr[0] = arr[0] + root.val;
        list.add(root.val);
        List<List<Integer>> left = method1(root.left, param1);
        List<List<Integer>> right = method1(root.right, param1);
        if (root.left == null && root.right == null && param1 == arr[0]) {
            List<Integer> li = new ArrayList<>();
            for (int i : list) {
                li.add(i);
            }
            res.add(li);
        }
        list.remove(list.size() - 1);
        arr[0] = arr[0] - root.val;
        return res;
    }
}
