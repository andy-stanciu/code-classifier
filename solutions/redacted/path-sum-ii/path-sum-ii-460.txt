class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        return method1(root, new ArrayList<>(), 0, param1);
    }

    private List<List<Integer>> method1(TreeNode node, List<Integer> param2, int param3, int param1) {
        if (node == null) {
            return Collections.emptyList();
        }
        if (node.left == null && node.right == null) {
            if (param3 + node.val == param1) {
                List<Integer> result = new ArrayList<>();
                result.addAll(param2);
                result.add(node.val);
                return Arrays.asList(result);
            } else {
                return Collections.emptyList();
            }
        }
        List<Integer> var1 = new ArrayList<>();
        var1.addAll(param2);
        var1.add(node.val);
        List<List<Integer>> finalResult = new ArrayList<>();
        finalResult.addAll(method1(node.left, var1, param3 + node.val, param1));
        finalResult.addAll(method1(node.right, var1, param3 + node.val, param1));
        return finalResult;
    }
}
