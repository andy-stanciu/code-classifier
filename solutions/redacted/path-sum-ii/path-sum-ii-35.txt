/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null)
            return ans;
        method1(root, 0, param1, new ArrayList<>());
        return ans;
    }

    private void method1(TreeNode root, int param2, int param1, List<Integer> currList) {
        if (root == null) {
            return;
        }
        currList.add(root.val);
        if (root.left == null && root.right == null && param2 + root.val == param1) {
            ans.add(new ArrayList<>(currList));
        } else {
            method1(root.left, param2 + root.val, param1, currList);
            method1(root.right, param2 + root.val, param1, currList);
        }
        currList.remove(currList.size() - 1);
    }
}
