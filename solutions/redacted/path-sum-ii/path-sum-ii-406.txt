class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        dfs(root, param1, new ArrayList<>(), ans);
        return ans;
    }

    private void dfs(TreeNode root, int param1, List<Integer> param2, List<List<Integer>> ans) {
        if (root == null)
            return;
        if (root.val == param1 && root.left == null && root.right == null) {
            param2.add(root.val);
            ans.add(new ArrayList<>(param2));
            param2.remove(param2.size() - 1);
            return;
        }
        param2.add(root.val);
        dfs(root.left, param1 - root.val, param2, ans);
        dfs(root.right, param1 - root.val, param2, ans);
        param2.remove(param2.size() - 1);
    }
}
