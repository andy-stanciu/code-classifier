/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> var1 = new ArrayList<>();
        method2(root, new ArrayList<>(), var1, param1);
        return var1;
    }

    private void method2(TreeNode cur, List<Integer> param2, List<List<Integer>> var1, int target) {
        if (cur == null) {
            return;
        }
        param2.add(cur.val);
        target -= cur.val;
        if (cur.left == null && cur.right == null) {
            if (target == 0) {
                var1.add(new ArrayList<>(param2));
            }
            param2.remove(param2.size() - 1);
            return;
        }
        method2(cur.left, param2, var1, target);
        method2(cur.right, param2, var1, target);
        param2.remove(param2.size() - 1);
    }
}
