/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null) {
            return new ArrayList();
        }
        List<List<Integer>> var1 = new ArrayList();
        method2(root, param1, 0, var1, new ArrayList());
        return var1;
    }

    public void method2(TreeNode node, int param1, int param2, List<List<Integer>> var1, List<Integer> param3) {
        param2 = param2 + node.val;
        param3.add(node.val);
        if (node.left == node.right && param2 == param1) {
            var1.add(new ArrayList(param3));
            return;
        }
        if (node.left != null) {
            method2(node.left, param1, param2, var1, param3);
            param3.remove(param3.size() - 1);
        }
        if (node.right != null) {
            method2(node.right, param1, param2, var1, param3);
            param3.remove(param3.size() - 1);
        }
        return;
    }
}
