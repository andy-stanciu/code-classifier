/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ll = new ArrayList<>();
        check(root, param1, ans, ll);
        return ans;
    }

    public void check(TreeNode root, int param2, List<List<Integer>> ans, List<Integer> ll) {
        if (root == null) {
            return;
        }
        ll.add(root.val);
        if (root.left == null && root.right == null) {
            int var1 = 0;
            for (int val : ll) {
                var1 += val;
            }
            if (var1 == param2) {
                ans.add(new ArrayList<>(ll));
            }
        }
        check(root.left, param2, ans, ll);
        check(root.right, param2, ans, ll);
        ll.remove(ll.size() - 1);
    }
}
