/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<>(), root, param1);
        return result;
    }

    private void backtrack(List<List<Integer>> result, List<Integer> tempList, TreeNode root, int remaining) {
        if (root == null)
            return;
        tempList.add(root.val);
        remaining -= root.val;
        if (root.left == null && root.right == null && remaining == 0) {
            result.add(new ArrayList<>(tempList));
        } else {
            backtrack(result, tempList, root.left, remaining);
            backtrack(result, tempList, root.right, remaining);
        }
        tempList.remove(tempList.size() - 1);
    }
}
