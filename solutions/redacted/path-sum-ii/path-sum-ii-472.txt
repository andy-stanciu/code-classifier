class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> var1 = new ArrayList<>();
        method2(root, param1, 0, var1, result);
        return result;
    }

    private void method2(TreeNode root, int param1, int valueTillParent, List<Integer> var1, List<List<Integer>> result) {
        if (root == null)
            return;
        var1.add(root.val);
        method2(root.left, param1, root.val + valueTillParent, var1, result);
        method2(root.right, param1, root.val + valueTillParent, var1, result);
        if (root.left == null && root.right == null && root.val + valueTillParent == param1) {
            //add path to result
            List<Integer> innerList = new ArrayList<Integer>(var1);
            result.add(innerList);
        }
        var1.remove(var1.size() - 1);
    }
}
