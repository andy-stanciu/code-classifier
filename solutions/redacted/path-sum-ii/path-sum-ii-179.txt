/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    static List<List<Integer>> l;

    public static void fn(int t, TreeNode r, ArrayList<Integer> ak) {
        if (r == null)
            return;
        if (r.left == null && r.right == null) {
            if (t - r.val == 0) {
                ak.add(r.val);
                l.add(new ArrayList(ak));
                ak.remove(ak.size() - 1);
            }
            return;
        }
        t -= r.val;
        ak.add(r.val);
        fn(t, r.left, ak);
        fn(t, r.right, ak);
        ak.remove(ak.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode r, int t) {
        l = new ArrayList<>();
        fn(t, r, new ArrayList<>());
        return l;
    }
}
