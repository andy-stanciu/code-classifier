/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        method1(root, 0, param1, new ArrayList<>());
        return res;
    }

    private void method1(TreeNode node, int param2, int param1, List<Integer> param3) {
        if (node == null) {
            return;
        }
        param3.add(node.val);
        param2 += node.val;
        if (node.left == null && node.right == null) {
            if (param2 == param1) {
                res.add(new ArrayList<>(param3));
            }
            param3.remove(param3.size() - 1);
            return;
        }
        method1(node.left, param2, param1, param3);
        method1(node.right, param2, param1, param3);
        param3.remove(param3.size() - 1);
    }
}
