/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> ans;

    public List<List<Integer>> method1(TreeNode root, int param1) {
        ans = new ArrayList<>();
        if (root == null)
            return ans;
        List<Integer> k = new ArrayList<>();
        helper(root, param1, k, 0);
        return ans;
    }

    public void helper(TreeNode root, int t, List<Integer> k, int param2) {
        if (root.right == null && root.left == null) {
            if (param2 + root.val == t) {
                k.add(root.val);
                ans.add(new ArrayList<>(k));
                k.remove(k.size() - 1);
            }
            return;
        }
        k.add(root.val);
        if (root.left != null) {
            helper(root.left, t, k, param2 + root.val);
        }
        if (root.right != null) {
            helper(root.right, t, k, param2 + root.val);
        }
        k.remove(k.size() - 1);
    }
}
