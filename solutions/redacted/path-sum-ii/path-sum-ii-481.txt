class Solution {

    private List<List<Integer>> result = new ArrayList<List<Integer>>();

    private List<Integer> list = new ArrayList();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        if (root == null) {
            return new ArrayList();
        }
        dfs(root, param1);
        return this.result;
    }

    private void dfs(TreeNode root, int param2) {
        this.list.add(root.val);
        param2 = param2 - root.val;
        if (root.left == null && root.right == null && param2 == 0) {
            //if we have reached the leaf node and remaining sum is also zero then our targetsum is attached so add it to list
            this.result.add(new ArrayList(this.list));
        }
        if (root.left != null) {
            //transverse left side and check
            dfs(root.left, param2);
        }
        if (root.right != null) {
            //transverse right side and check
            dfs(root.right, param2);
        }
        //bactrack
        this.list.remove(this.list.size() - 1);
    }
}
