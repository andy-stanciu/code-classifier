/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> list = new ArrayList<>();

    List<Integer> list1 = new ArrayList<>();

    public void helper(TreeNode root, int param1) {
        if (root != null) {
            list1.add(root.val);
            if (root.left == root.right) {
                if (root.val == param1)
                    list.add(new ArrayList<Integer>(list1));
                return;
            }
            if (root.left != null) {
                helper(root.left, param1 - root.val);
                list1.remove(list1.size() - 1);
            }
            if (root.right != null) {
                helper(root.right, param1 - root.val);
                list1.remove(list1.size() - 1);
            }
        }
    }

    public List<List<Integer>> method1(TreeNode root, int param1) {
        helper(root, param1);
        return list;
    }
}
