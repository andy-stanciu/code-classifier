/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root, int param1) {
        List<List<Integer>> result = new ArrayList();
        method2(root, param1, result, new ArrayList<>());
        return result;
    }

    public void method2(TreeNode root, int param1, List<List<Integer>> result, List<Integer> param2) {
        if (root == null) {
            return;
        }
        param2.add(root.val);
        if (isLeaf(root) && param1 == root.val) {
            result.add(new ArrayList<>(param2));
        } else {
            method2(root.left, param1 - root.val, result, param2);
            method2(root.right, param1 - root.val, result, param2);
        }
        param2.remove(param2.size() - 1);
    }

    boolean isLeaf(TreeNode root) {
        return root.left == null && root.right == null;
    }
}
