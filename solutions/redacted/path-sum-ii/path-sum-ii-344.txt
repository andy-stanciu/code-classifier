/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private List<List<Integer>> var1 = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root, int param1) {
        int var2 = 0;
        List<Integer> var3 = new ArrayList<>();
        method2(root, var2, param1, var3);
        return var1;
    }

    private void method2(TreeNode root, int var2, int param1, List<Integer> var3) {
        if (root == null) {
            return;
        }
        var3.add(root.val);
        if (root.left == null && root.right == null && var2 + root.val == param1) {
            var1.add(new ArrayList<>(var3));
        }
        method2(root.left, var2 + root.val, param1, var3);
        method2(root.right, var2 + root.val, param1, var3);
        var3.remove(var3.size() - 1);
    }
}
