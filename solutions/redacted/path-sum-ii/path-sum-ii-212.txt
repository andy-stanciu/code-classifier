class Solution {

    public void helper(List<List<Integer>> ans, List<Integer> arr, TreeNode root, int param1) {
        if (root == null)
            return;
        if (root.left == null && root.right == null) {
            arr.add(root.val);
            if (param1 == root.val) {
                List<Integer> a = new ArrayList<>();
                for (int i = 0; i < arr.size(); i++) {
                    a.add(arr.get(i));
                }
                ans.add(a);
            }
            arr.remove(arr.size() - 1);
            return;
        }
        arr.add(root.val);
        helper(ans, arr, root.left, param1 - root.val);
        helper(ans, arr, root.right, param1 - root.val);
        arr.remove(arr.size() - 1);
    }

    public List<List<Integer>> method1(TreeNode root, int param2) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> arr = new ArrayList<>();
        helper(ans, arr, root, param2);
        return ans;
    }
}
