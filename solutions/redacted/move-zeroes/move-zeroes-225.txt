class Solution {

    public void method1(int[] nums) {
        // Loop through each number
        // Keep a left reference on each zero encountered
        // Keep a right reference that is looking for a non-zero value to swap with left
        // Else, if right is non-zero, swap with left, increment left
        // Example:
        // nums: 1, 0, 2, 0, 3]
        // left = 0, right = 0
        // no-op swap
        // left = 1, right = 1,
        // no-op swap
        // left = 1, right = 2
        // real swap, nums: [1, 2, 0, 0, 3]
        // left = 2, right = 3
        // increment right only
        // left = 2, right = 4
        // swap left/right
        // nums: [1, 2, 3, 0, 0]
        // return nums
        int left = 0;
        for (int right = 0; right < nums.length; right++) {
            if (nums[right] != 0) {
                swap(nums, left, right);
                left++;
            }
        }
    }

    private void swap(int[] nums, int idx1, int idx2) {
        if (idx1 == idx2) {
            return;
        }
        int temp = nums[idx1];
        nums[idx1] = nums[idx2];
        nums[idx2] = temp;
    }
}
