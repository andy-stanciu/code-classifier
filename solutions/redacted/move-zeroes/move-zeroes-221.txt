class Solution {

    public void method1(int[] nums) {
        int zeroIndex = findNextZeroIndex(nums, 0);
        int nextNumIndex = findNextNumIndex(nums, zeroIndex);
        int len = nums.length;
        while (zeroIndex < len && zeroIndex < nextNumIndex && nextNumIndex < len) {
            swap(nums, zeroIndex, nextNumIndex);
            zeroIndex = findNextZeroIndex(nums, zeroIndex + 1);
            nextNumIndex = findNextNumIndex(nums, zeroIndex + 1);
        }
    }

    public static int findNextNumIndex(int[] nums, int curIndex) {
        int numIndex = curIndex;
        int len = nums.length;
        while (numIndex < len && nums[numIndex] == 0) {
            numIndex++;
        }
        return numIndex;
    }

    public static int findNextZeroIndex(int[] nums, int curIndex) {
        int zeroIndex = curIndex;
        int len = nums.length;
        while (zeroIndex < len && nums[zeroIndex] != 0) {
            zeroIndex++;
        }
        return zeroIndex;
    }

    public static void swap(int[] nums, int x, int y) {
        int temp = nums[x];
        nums[x] = nums[y];
        nums[y] = temp;
    }
}
