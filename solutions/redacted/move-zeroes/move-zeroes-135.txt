class Solution {

    public void method1(int[] nums) {
        // Base case null check and check for 0 or single element input
        if (nums == null || nums.length <= 1)
            return;
        // Tracks the index of the left-most 0 in the array during iteration
        int leftMostZeroIndex = 0;
        // Iterate through input array of numbers, moving all 0\'s to the end
        // of the array and maintaining relative order of non-zero elements
        for (int i = 0; i < nums.length; i++) {
            // 0\'s are found to the left of the current non-zero number, swap the 0 and non-zero entry in array
            if (nums[i] != 0 && leftMostZeroIndex++ < i) {
                // Swap 0 and non-zero elements
                // Set index of left-most 0 to non-zero entry at curr index
                nums[leftMostZeroIndex - 1] = nums[i];
                // Set curr index value to 0
                nums[i] = 0;
            }
        }
    }
}
