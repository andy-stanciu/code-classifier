class Solution {

    public int[] method1(int[] nums, int target) {
        if (nums.length == 2)
            return new int[] { 0, 1 };
        //brute force O(n^2) time
        // for(int i = 0; i < nums.length; i++){
        //     for(int j = i + 1; j < nums.length; j++){
        //         if(nums[i] + nums[j] == target){
        //             return new int[]{i, j}
        //         }
        //     }
        // }
        //O(n) time & space
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            Integer compIndex = map.get(nums[i]);
            if (compIndex != null) {
                return new int[] { i, compIndex };
            }
            map.put(target - nums[i], i);
        }
        return nums;
    }
}
