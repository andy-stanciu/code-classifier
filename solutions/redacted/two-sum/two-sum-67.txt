class Solution {

    public int[] method1(int[] nums, int target) {
        int n = nums.length;
        Map<Integer, Integer> numsMap = new HashMap<>();
        for (int i = 0; i < n; i++) {
            int currentNumber = nums[i];
            int difference = target - currentNumber;
            if (numsMap.containsKey(difference)) {
                // currentNumber\uC5D0 \uB354\uD574\uC11C target\uC744 \uB9CC\uB4E4 \uC218 \uC788\uB294 \uAC12\uC774 \uAE30\uC874\uC5D0 \uC874\uC7AC\uD55C\uB2E4\uBA74
                // \uADF8 \uB188\uC758 \uC8FC\uC18C\uC640 \uD604\uC7AC \uC8FC\uC18C\uB97C \uB54C\uB824\uB123\uC5B4
                return new int[] { numsMap.get(difference), i };
            }
            // \uD604\uC7AC \uC694\uC18C\uC758 \uAC12\uACFC idx\uB97C map\uC5D0 \uC800\uC7A5
            numsMap.put(currentNumber, i);
        }
        return new int[0];
    }
}
