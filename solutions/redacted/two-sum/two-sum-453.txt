class Solution {

    public int[] method1(int[] nums, int target) {
        int[] sorted_arr = Arrays.stream(nums).sorted().toArray();
        int left = 0, right = sorted_arr.length - 1;
        while (left < right) {
            int var1 = sorted_arr[left] + sorted_arr[right];
            if (sorted_arr[left] + sorted_arr[right] == target) {
                left = sorted_arr[left];
                right = sorted_arr[right];
                break;
            } else if (var1 < target) {
                left++;
            } else {
                right--;
            }
        }
        int leftIndex = Solution.indexOf(nums, left);
        int rightIndex = left == right ? Solution.indexOf(nums, right, leftIndex + 1) : Solution.indexOf(nums, right);
        return new int[] { leftIndex, rightIndex };
    }

    private static int indexOf(int[] array, int element) {
        for (int i = 0; i < array.length; i++) {
            if (array[i] == element)
                return i;
        }
        return -1;
    }

    private static int indexOf(int[] array, int element, int start) {
        for (int i = start; i < array.length; i++) {
            if (array[i] == element)
                return i;
        }
        return -1;
    }
}
