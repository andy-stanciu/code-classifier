class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        int len1 = nums1.length;
        int len2 = nums2.length;
        int max1 = nums1[0];
        int max2 = nums2[0];
        for (int i = 0; i < nums1.length; i++) {
            if (nums1[i] > max1)
                max1 = nums1[i];
        }
        for (int i = 0; i < nums2.length; i++) {
            if (nums2[i] > max2)
                max2 = nums2[i];
        }
        int[] count1 = new int[max1 + 1];
        int[] count2 = new int[max2 + 1];
        for (int i = 0; i < len1; i++) {
            count1[nums1[i]]++;
        }
        for (int i = 0; i < len2; i++) {
            count2[nums2[i]]++;
        }
        ArrayList<Integer> result = new ArrayList<>();
        int max = Math.min(max1, max2);
        for (int i = 0; i <= max; i++) {
            while (count1[i] > 0 && count2[i] > 0) {
                result.add(i);
                count1[i]--;
                count2[i]--;
            }
        }
        int[] intersectArray = new int[result.size()];
        for (int k = 0; k < result.size(); k++) {
            intersectArray[k] = result.get(k);
        }
        return intersectArray;
    }
}
