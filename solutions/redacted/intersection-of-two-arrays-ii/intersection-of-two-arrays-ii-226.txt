class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        // HashMap Solution
        // HashMap<Integer,Integer> hm=new HashMap<>();
        // List<Integer> list=new ArrayList<>();
        // for(int i=0;i<nums1.length;i++){
        //     if(hm.containsKey(nums1[i])){
        //         hm.put(nums1[i],hm.get(nums1[i])+1);
        //     }
        //     else{
        //         hm.put(nums1[i],1);
        //     }
        // }
        // for(int i=0;i<nums2.length;i++){
        //     if(hm.containsKey(nums2[i]) && hm.get(nums2[i])>0){
        //         list.add(nums2[i]);
        //         hm.put(nums2[i],hm.get(nums2[i])-1);
        //     }
        // }
        // int [] result=new int[list.size()];
        // for(int i=0;i<list.size();i++){
        //     result[i]=list.get(i);
        // }
        // return result;
        // Binary Search
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        ArrayList<Integer> arr = new ArrayList<Integer>();
        int i = 0, j = 0;
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] < nums2[j]) {
                i++;
            } else if (nums1[i] > nums2[j]) {
                j++;
            } else {
                arr.add(nums1[i]);
                i++;
                j++;
            }
        }
        int[] ans = new int[arr.size()];
        int k = 0;
        while (k < arr.size()) {
            ans[k] = arr.get(k);
            k++;
        }
        return ans;
    }
}
