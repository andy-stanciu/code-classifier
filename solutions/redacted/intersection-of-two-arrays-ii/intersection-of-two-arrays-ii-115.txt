class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        int count = 0;
        List<Integer> li = new ArrayList<>();
        HashMap<Integer, Integer> hm = new HashMap<>();
        HashMap<Integer, Integer> hm2 = new HashMap<>();
        for (int i = 0; i < nums1.length; i++) {
            hm.put(nums1[i], hm.getOrDefault(nums1[i], 0) + 1);
        }
        for (int i = 0; i < nums2.length; i++) {
            if (hm.containsKey(nums2[i]))
                hm2.put(nums2[i], hm2.getOrDefault(nums2[i], 0) + 1);
        }
        for (Integer Key : hm.keySet()) {
            if (hm2.containsKey(Key)) {
                int x = Math.min(hm.get(Key), hm2.get(Key));
                while (x-- > 0) {
                    li.add(Key);
                }
            }
        }
        int[] result = new int[li.size()];
        for (int i = 0; i < li.size(); i++) {
            result[i] = li.get(i);
        }
        return result;
    }
}
