class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer, Integer> m1 = new HashMap<>();
        Map<Integer, Integer> m2 = new HashMap<>();
        for (int i = 0; i < nums1.length; i++) {
            m1.put(nums1[i], m1.getOrDefault(nums1[i], 0) + 1);
        }
        for (int i = 0; i < nums2.length; i++) {
            m2.put(nums2[i], m2.getOrDefault(nums2[i], 0) + 1);
        }
        Set<Integer> s = m1.keySet();
        List<Integer> l = new ArrayList<>();
        for (int i : s) {
            if (m2.containsKey(i)) {
                int min = Math.min(m2.get(i), m1.get(i));
                for (int j = 0; j < min; j++) {
                    l.add(i);
                }
            }
        }
        int[] a = new int[l.size()];
        for (int i = 0; i < l.size(); i++) {
            a[i] = l.get(i);
        }
        return a;
    }
}
