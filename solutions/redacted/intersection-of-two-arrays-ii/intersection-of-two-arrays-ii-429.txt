class Solution {

    public int[] intersect(int[] nums1, int[] nums2) {
        List<Integer> list = new ArrayList<>();
        if (nums1.length > nums2.length) {
            for (int i = 0; i < nums2.length; i++) {
                Arrays.sort(nums1);
                if (BinarySearch(nums1, nums2[i])) {
                    list.add(nums2[i]);
                }
            }
        } else {
            for (int i = 0; i < nums1.length; i++) {
                Arrays.sort(nums2);
                if (BinarySearch(nums2, nums1[i])) {
                    list.add(nums1[i]);
                }
            }
        }
        int[] var1 = new int[list.size()];
        for (int k = 0; k < list.size(); k++) {
            var1[k] = list.get(k);
        }
        return var1;
    }

    boolean BinarySearch(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] == target) {
                nums[mid] = -1;
                return true;
            } else if (nums[mid] > target) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return false;
    }
}
