class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        HashMap<Integer, HashSet<Integer>> graph = new HashMap();
        int[] indegree = new int[param1];
        for (int[] req : prerequisites) {
            graph.putIfAbsent(req[1], new HashSet());
            graph.get(req[1]).add(req[0]);
            indegree[req[0]]++;
        }
        Queue<Integer> queue = new LinkedList();
        for (int i = 0; i < param1; i++) {
            if (indegree[i] == 0)
                queue.add(i);
        }
        int total = 0;
        int[] result = new int[param1];
        while (!queue.isEmpty()) {
            int var1 = queue.poll();
            if (graph.containsKey(var1)) {
                for (int neighbor : graph.get(var1)) {
                    indegree[neighbor]--;
                    if (indegree[neighbor] == 0) {
                        queue.add(neighbor);
                    }
                }
            }
            result[total++] = var1;
        }
        return total == param1 ? result : new int[0];
    }
}
