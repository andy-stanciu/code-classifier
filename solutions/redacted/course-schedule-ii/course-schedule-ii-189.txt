class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        ArrayList<Integer>[] graph = new ArrayList[param1];
        for (int i = 0; i < graph.length; i++) graph[i] = new ArrayList<Integer>();
        for (int[] temp : prerequisites) {
            graph[temp[1]].add(temp[0]);
        }
        int[] indegree = new int[param1];
        for (int i = 0; i < param1; i++) {
            for (int u : graph[i]) indegree[u]++;
        }
        ArrayDeque<Integer> q = new ArrayDeque<>();
        for (int i = 0; i < indegree.length; i++) {
            if (indegree[i] == 0)
                q.add(i);
        }
        int i = 0;
        int[] ans = new int[graph.length];
        int count = 0;
        while (!q.isEmpty()) {
            int u = q.removeFirst();
            count++;
            ans[i++] = u;
            for (int v : graph[u]) {
                indegree[v]--;
                if (indegree[v] == 0)
                    q.add(v);
            }
        }
        if (count == param1)
            return ans;
        return new int[] {};
    }
}
