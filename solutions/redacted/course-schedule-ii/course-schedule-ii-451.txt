class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        int[] degree = new int[param1];
        Map<Integer, List<Integer>> map = new HashMap<>();
        for (int[] pre : prerequisites) {
            int a = pre[0];
            int b = pre[1];
            degree[a]++;
            List<Integer> list = map.get(b);
            if (list == null) {
                list = new ArrayList<>();
            }
            list.add(a);
            map.put(b, list);
        }
        int[] res = new int[param1];
        int k = 0;
        Deque<Integer> queue = new ArrayDeque<>();
        for (int i = 0; i < param1; i++) {
            if (degree[i] == 0) {
                queue.offer(i);
                res[k++] = i;
            }
        }
        while (queue.size() > 0) {
            Integer num = queue.pop();
            List<Integer> ll = map.get(num);
            if (ll != null) {
                for (int j : ll) {
                    if (--degree[j] == 0) {
                        queue.offer(j);
                        res[k++] = j;
                    }
                }
            }
        }
        return k == param1 ? res : new int[0];
    }
}
