class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        List<Integer>[] adj = new List[param1];
        int[] indegree = new int[param1];
        int p = 0;
        int[] ans = new int[param1];
        for (int[] pre : prerequisites) {
            int var1 = pre[0];
            int prerequisite = pre[1];
            if (adj[prerequisite] == null) {
                adj[prerequisite] = new ArrayList<>();
            }
            adj[prerequisite].add(var1);
            indegree[var1]++;
        }
        Queue<Integer> queue = new LinkedList<>();
        for (int i = 0; i < param1; i++) {
            if (indegree[i] == 0) {
                queue.offer(i);
            }
        }
        while (!queue.isEmpty()) {
            int cur = queue.poll();
            ans[p] = cur;
            p++;
            if (adj[cur] != null) {
                for (int next : adj[cur]) {
                    indegree[next]--;
                    if (indegree[next] == 0) {
                        queue.offer(next);
                    }
                }
            }
        }
        if (p != param1) {
            return new int[0];
        }
        return ans;
    }
}
