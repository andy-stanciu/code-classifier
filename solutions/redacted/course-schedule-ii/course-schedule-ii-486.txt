class Solution {

    public int[] findOrder(int param1, int[][] prerequisites) {
        List<List<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < param1; i++) adj.add(new ArrayList<>());
        for (int[] t : prerequisites) adj.get(t[1]).add(t[0]);
        Queue<Integer> q = new LinkedList<>();
        boolean[] vis = new boolean[param1];
        int[] indegree = new int[param1];
        for (int i = 0; i < param1; i++) {
            for (int it : adj.get(i)) indegree[it]++;
        }
        for (int i = 0; i < param1; i++) {
            if (indegree[i] == 0)
                q.add(i);
        }
        int ind = 0;
        int[] topo = new int[param1];
        while (!q.isEmpty()) {
            int t = q.poll();
            topo[ind++] = t;
            for (int it : adj.get(t)) {
                indegree[it]--;
                if (indegree[it] == 0)
                    q.add(it);
            }
        }
        if (ind == param1)
            return topo;
        return new int[] {};
    }
}
