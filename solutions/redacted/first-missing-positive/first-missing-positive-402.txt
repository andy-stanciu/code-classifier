class Solution {

    // Method to find the first missing positive integer in an array
    public static int method1(int[] nums) {
        // Remove duplicates from the array nums
        nums = removeDuplicates(nums);
        // Create a boolean array arr to mark presence of numbers
        boolean[] arr = new boolean[nums.length + 1];
        // Mark numbers present in nums within the valid range
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            if (num > 0 && num <= nums.length)
                arr[num] = true;
        }
        // Find the smallest missing positive integer
        for (int i = 1; i < arr.length; i++) {
            if (!arr[i])
                return i;
        }
        // If all integers from 1 to nums.length are present, return nums.length + 1
        return arr.length;
    }

    // Method to remove duplicates from an array and return a new array
    public static int[] removeDuplicates(int[] nums) {
        // If array is empty, return an empty array
        if (nums.length == 0)
            return new int[0];
        // Sort the input array nums
        Arrays.sort(nums);
        // Initialize index j to track unique elements in nums
        int j = 0;
        // Remove duplicates by copying unique elements to the beginning of nums
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] != nums[i + 1])
                nums[j++] = nums[i];
        }
        // Copy the last element to nums[j] to ensure it\'s included
        nums[j++] = nums[nums.length - 1];
        // Create a new array result of size j to store unique elements
        int[] result = new int[j];
        for (int k = 0; k < j; k++) result[k] = nums[k];
        // Return the array containing unique elements
        return result;
    }

    // Method to find the largest positive number in an array
    public static int biggestNumPos(int[] arr) {
        // Initialize max to the first element in arr
        int max = arr[0];
        // Iterate through the array to find the maximum positive number
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max && arr[i] > 0)
                max = arr[i];
        }
        // Return the maximum positive number found
        return max;
    }
}
