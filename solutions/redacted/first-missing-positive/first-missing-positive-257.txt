class Solution {

    public int method1(int[] nums) {
        int n = nums.length;
        int i = 0;
        // Place each number in its correct index if it is within the valid range
        while (i < n) {
            // Ensure nums[i] is in the correct range and not already in the correct position
            if (nums[i] > 0 && nums[i] <= n && nums[i] != nums[nums[i] - 1]) {
                // Swap nums[i] with nums[nums[i] - 1]
                int correct = nums[i] - 1;
                int temp = nums[i];
                nums[i] = nums[correct];
                nums[correct] = temp;
            } else {
                // Move to the next index if the current number is out of place or already in its correct place
                i++;
            }
        }
        // Find the first missing positive integer
        for (int j = 0; j < n; j++) {
            if (nums[j] != j + 1) {
                return j + 1;
            }
        }
        // If all numbers from 1 to n are present, the missing number is n + 1
        return n + 1;
    }
}
