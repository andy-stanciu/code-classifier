class Solution {

    public int method1(int[] nums) {
        int n = nums.length;
        int min = findmin(nums);
        int max = findmax(nums);
        if (1 != min) {
            return 1;
        }
        HashMap<Integer, Boolean> v = new HashMap<Integer, Boolean>();
        for (int i = 0; i != n; i++) {
            if (nums[i] > 0) {
                v.put(nums[i], true);
            }
        }
        int i = 1;
        while (true) {
            if (i > 0 && !v.getOrDefault(i, false)) {
                return i;
            }
            i++;
        }
    }

    private static int findmin(int[] arr) {
        int min = Integer.MAX_VALUE;
        int n = arr.length;
        for (int i = 0; i != n; i++) {
            if (arr[i] < min && 0 < arr[i]) {
                min = arr[i];
            }
        }
        return min;
    }

    private static int findmax(int[] arr) {
        int max = Integer.MIN_VALUE;
        int n = arr.length;
        for (int i = 0; i != n; i++) {
            if (max < arr[i]) {
                max = arr[i];
            }
        }
        return max;
    }
}
