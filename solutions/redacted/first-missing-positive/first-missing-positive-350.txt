class Solution {

    public int method1(int[] nums) {
        int i = 0;
        while (i < nums.length) {
            int correct = nums[i] - 1;
            if (nums[i] > 0 && nums[i] <= nums.length && nums[i] != nums[correct]) {
                swap(nums, i, correct);
            } else {
                i++;
            }
        }
        // List<Integer> myList = new ArrayList<>();
        for (int j = 0; j < nums.length; j++) {
            if (nums[j] != j + 1) {
                return (j + 1);
            }
        }
        return nums.length + 1;
    }

    void swap(int[] arr, int param1, int second) {
        int temp = arr[param1];
        arr[param1] = arr[second];
        arr[second] = temp;
    }
}
/*Arrays.sort(nums);
        if(nums[0]>0 && nums[0]!=1){
            return 1;
        }
        int check =1;
        for(int i=0;i<nums.length;i++){
            if(nums[i]>0){
                int j=i;
                while(j<nums.length){
                    if(nums[j]!=check){
                        return check;
                    }
                    else{
                        j++;
                        check++;
                    }
                }
            }
        }
        return check;*/
