class Solution {

    public int method1(int[] nums) {
        int index = 0;
        int n = nums.length;
        // Placing value of arrays in their equivalent indices
        while (index < n) {
            // Ignore numbers out of range (negative numbers and numbers greater than length of the array
            if (nums[index] > 0 && nums[index] <= n) {
                // And Validate if the value of current index value not in correct index  position
                int currentIndexValue = nums[index];
                int currentIndexValueAsIndexValue = nums[nums[index] - 1];
                if (currentIndexValue != currentIndexValueAsIndexValue) {
                    swap(nums, index, nums[index] - 1);
                } else {
                    index++;
                }
            } else {
                index++;
            }
        }
        // Loop through the array again and find the first number that is not at its correct index
        for (int i = 0; i < n; i++) {
            if (nums[i] != i + 1) {
                return i + 1;
            }
        }
        return nums.length + 1;
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
