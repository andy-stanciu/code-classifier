class Solution {

    public int method1(int[] nums) {
        int n = nums.length;
        int i = 0;
        // Step 1: Place numbers in their correct positions
        while (i < n) {
            if (nums[i] > 0 && nums[i] <= n && nums[i] != nums[nums[i] - 1]) {
                // Swap nums[i] with nums[nums[i] - 1]
                int temp = nums[nums[i] - 1];
                nums[nums[i] - 1] = nums[i];
                nums[i] = temp;
            } else {
                i++;
            }
        }
        // Step 2: Find the first missing positive
        for (int j = 0; j < n; j++) {
            if (nums[j] != j + 1) {
                return j + 1;
            }
        }
        // If all numbers from 1 to n are present, return n + 1
        return n + 1;
    }
}
