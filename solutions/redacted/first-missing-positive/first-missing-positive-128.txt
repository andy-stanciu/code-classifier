class Solution {

    public int method1(int[] nums) {
        int i = 0;
        int i = 0;
        while (//nums[i] <nums.length with this we ignore arrayIndexBound error
        i < nums.length) //nums[i] != nums[nums[i]-1] with this duplicacy is removed
        {
            if (nums[i] > 0 && nums[i] < nums.length && nums[i] != nums[nums[i] - 1])
                swap(nums, i, nums[i] - 1);
            else
                i++;
        }
        for (i = 0; i < nums.length; i++) {
            if (nums[i] != i + 1)
                return i + 1;
        }
        return nums.length + 1;
    }

    public void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
