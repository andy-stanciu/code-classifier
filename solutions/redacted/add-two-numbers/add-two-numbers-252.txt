/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int digit = 0;
        int carry = 0;
        ListNode result = null;
        while (l1 != null || l2 != null) {
            int d1 = (l1 != null) ? l1.val : 0;
            int d2 = (l2 != null) ? l2.val : 0;
            digit = (d1 + d2 + carry) % 10;
            carry = (d1 + d2 + carry) / 10;
            l1 = (l1 != null) ? l1.next : null;
            l2 = (l2 != null) ? l2.next : null;
            ListNode newNode = new ListNode(digit);
            newNode.next = result;
            result = newNode;
        }
        if (carry != 0) {
            ListNode newNode = new ListNode(carry);
            newNode.next = result;
            result = newNode;
        }
        ListNode prev = null;
        ListNode curr = result;
        ListNode next = null;
        while (curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        result = prev;
        return result;
    }
}
