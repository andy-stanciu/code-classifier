/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode head = new ListNode(-1);
        ListNode cur = head;
        int remainder = 0;
        int curSum = 0;
        while (l1 != null || l2 != null) {
            curSum = remainder;
            if (l1 != null) {
                curSum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                curSum += l2.val;
                l2 = l2.next;
            }
            remainder = curSum / 10;
            int nodeValue = curSum % 10;
            cur.next = new ListNode(nodeValue);
            cur = cur.next;
        }
        if (remainder == 1) {
            cur.next = new ListNode(1);
        }
        return head.next;
    }
}
