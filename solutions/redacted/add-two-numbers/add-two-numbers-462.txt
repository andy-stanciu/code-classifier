/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode answer = new ListNode(0, null);
        int dig = 0;
        int diga = 0;
        int digb = 0;
        int rem = 0;
        int base = 0;
        ListNode a = l1;
        ListNode b = l2;
        ListNode c = answer;
        // if (a == null || b == null){
        //     return null;
        // }
        while (a != null || b != null) {
            if (a == null) {
                diga = 0;
            } else {
                diga = a.val;
            }
            if (b == null) {
                digb = 0;
            } else {
                digb = b.val;
            }
            dig = diga + digb + rem;
            rem = dig / 10;
            base = dig % 10;
            c.next = new ListNode(base, null);
            if (a == null) {
                ;
            } else {
                a = a.next;
            }
            if (b == null) {
                ;
            } else {
                b = b.next;
            }
            c = c.next;
        }
        if (rem > 0) {
            c.next = new ListNode(rem, null);
        }
        answer = answer.next;
        return answer;
    }
}
