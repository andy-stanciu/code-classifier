/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int sum = l1.val + l2.val;
        int r = sum % 10;
        int q = sum / 10;
        if (l1.next != null || l2.next != null) {
            ListNode l1_next = l1.next == null ? new ListNode(q) : new ListNode(q + l1.next.val, l1.next.next);
            ListNode l2_next = l2.next == null ? new ListNode(0) : l2.next;
            return new ListNode(r, method1(l1_next, l2_next));
        }
        if (q > 0) {
            return new ListNode(r, new ListNode(q));
        }
        return new ListNode(r);
    }
}
