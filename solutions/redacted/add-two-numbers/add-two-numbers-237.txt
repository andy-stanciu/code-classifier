/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode resultHead = new ListNode(0);
        ListNode resultTail = resultHead;
        int carryOn = 0;
        while (l1 != null || l2 != null || carryOn != 0) {
            ListNode newTail = new ListNode();
            int l1Value = 0;
            if (l1 != null) {
                l1Value = l1.val;
                l1 = l1.next;
            }
            int l2Value = 0;
            if (l2 != null) {
                l2Value = l2.val;
                l2 = l2.next;
            }
            resultTail.val = (carryOn + l1Value + l2Value) % 10;
            carryOn = (carryOn + l1Value + l2Value) / 10;
            if (l1 != null || l2 != null || carryOn != 0) {
                resultTail.next = newTail;
                resultTail = newTail;
            }
        }
        return resultHead;
    }
}
