/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode fake = new ListNode(-1);
        ListNode cur = fake;
        int carry = 0;
        while (l1 != null || l2 != null) {
            int val = carry;
            ListNode node = null;
            if (l1 != null) {
                val += l1.val;
                node = l1;
                l1 = l1.next;
            }
            if (l2 != null) {
                val += l2.val;
                if (node == null) {
                    node = l2;
                }
                l2 = l2.next;
            }
            carry = val / 10;
            val %= 10;
            node.val = val;
            node.next = null;
            cur.next = node;
            cur = cur.next;
        }
        if (carry > 0) {
            cur.next = new ListNode(1);
        }
        return fake.next;
    }
}
