/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode rhead = new ListNode();
        ListNode r = rhead;
        int sum, promo = 0;
        do {
            sum = promo + ((l1 != null) ? l1.val : 0) + ((l2 != null) ? l2.val : 0);
            r.val = sum % 10;
            promo = sum / 10;
            l1 = (l1 != null) ? l1.next : null;
            l2 = (l2 != null) ? l2.next : null;
            if (!(l1 != null || l2 != null || promo > 0)) {
                // no value for the next decimal place, done
                break;
            }
            r.next = new ListNode();
            r = r.next;
        } while (true);
        return rhead;
    }
}
