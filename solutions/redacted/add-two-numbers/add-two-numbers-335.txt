/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        StringBuilder sb1 = new StringBuilder();
        while (l1 != null) {
            sb1.append(l1.val);
            l1 = l1.next;
        }
        BigInteger b1 = new BigInteger(sb1.reverse().toString());
        StringBuilder sb2 = new StringBuilder();
        while (l2 != null) {
            sb2.append(l2.val);
            l2 = l2.next;
        }
        BigInteger b2 = new BigInteger(sb2.reverse().toString());
        BigInteger res = b1.add(b2);
        String[] splits = res.toString().split("");
        ListNode last = null;
        int n = splits.length;
        for (int i = 0; i < n; i++) {
            ListNode now = new ListNode(Integer.parseInt(splits[i]), last);
            last = now;
        }
        return last;
    }
}
