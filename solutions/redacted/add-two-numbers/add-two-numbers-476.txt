/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int num_to_pass = 0, num1 = 0, num2 = 0;
        ListNode ans = new ListNode();
        ListNode temp = ans;
        while (num_to_pass != 0 || l1 != null || l2 != null) {
            if (l1 == null) {
                num1 = 0;
            } else {
                num1 = l1.val;
            }
            if (l2 == null) {
                num2 = 0;
            } else {
                num2 = l2.val;
            }
            int var1 = (num_to_pass + num1 + num2) % 10;
            temp.next = new ListNode(var1);
            num_to_pass = (num_to_pass + num1 + num2) / 10;
            if (l1 != null) {
                l1 = l1.next;
            }
            if (l2 != null) {
                l2 = l2.next;
            }
            temp = temp.next;
        }
        return ans.next;
    }
    // public int pass(int num){
    //     if(num>=10){
    //         return num/10;
    //     }
    //     else{
    //         return 0;
    //     }
    // }
}
