/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode cur1 = l1, cur2 = l2;
        int carry = 0;
        ListNode dummy = new ListNode(-1);
        ListNode cur = dummy;
        while (cur1 != null && cur2 != null) {
            int val = cur1.val + cur2.val + carry;
            carry = val / 10;
            ListNode node = new ListNode(val % 10);
            cur.next = node;
            cur = node;
            cur1 = cur1.next;
            cur2 = cur2.next;
        }
        while (cur1 != null) {
            int val = cur1.val + carry;
            carry = val / 10;
            ListNode node = new ListNode(val % 10);
            cur.next = node;
            cur = node;
            cur1 = cur1.next;
        }
        while (cur2 != null) {
            int val = cur2.val + carry;
            carry = val / 10;
            ListNode node = new ListNode(val % 10);
            cur.next = node;
            cur = node;
            cur2 = cur2.next;
        }
        if (carry > 0) {
            ListNode node = new ListNode(carry);
            cur.next = node;
            cur = node;
        }
        return dummy.next;
    }
}
