/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode head = new ListNode(-1);
        ListNode curr = head;
        ListNode head1 = l1;
        ListNode head2 = l2;
        while (head1 != null || head2 != null) {
            int sum = carry;
            if (head1 != null) {
                sum += head1.val;
                head1 = head1.next;
            }
            if (head2 != null) {
                sum += head2.val;
                head2 = head2.next;
            }
            ListNode temp = new ListNode(sum % 10);
            curr.next = temp;
            curr = temp;
            carry = sum / 10;
        }
        if (carry != 0) {
            ListNode temp = new ListNode(carry);
            curr.next = temp;
        }
        return head.next;
    }
}
