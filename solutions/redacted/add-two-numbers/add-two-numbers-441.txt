class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        var list = new ArrayList<Integer>();
        var remainder = 0;
        while (true) {
            int node1Val = 0;
            int node2Val = 0;
            int tmpVal = 0;
            if (l1 != null) {
                node1Val = l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                node2Val = l2.val;
                l2 = l2.next;
            }
            if (remainder > 0) {
                tmpVal += remainder;
                remainder = 0;
            }
            tmpVal += (node1Val + node2Val);
            if (tmpVal > 9) {
                tmpVal = tmpVal % 10;
                remainder = 0;
            }
            list.add(tmpVal);
            if (l1 == null && l2 == null) {
                if (remainder != 0) {
                    list.add(remainder);
                }
                break;
            }
        }
        var head = new ListNode(arrayList.get(0));
        var node = head;
        for (int i = 1; i < list.size(); i++) {
            node.next = new ListNode(list.get(i));
            node = node.next;
        }
        return head;
    }
}
