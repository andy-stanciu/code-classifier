/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode l3 = new ListNode();
        ListNode start = l3;
        int carryOver = 0;
        while (true) {
            int newVal = l1.val + l2.val + carryOver;
            carryOver = 0;
            if (newVal > 9)
                carryOver = 1;
            newVal = newVal % 10;
            l3.val = newVal;
            if (l1.next == null) {
                if (l2.next == null) {
                    if (carryOver == 1)
                        l3.next = new ListNode(1);
                    return start;
                }
                l1.next = new ListNode(0);
            }
            if (l2.next == null) {
                if (l1.next == null) {
                    if (carryOver == 1)
                        l3.next = new ListNode(1);
                    return start;
                }
                l2.next = new ListNode(0);
            }
            l1 = l1.next;
            l2 = l2.next;
            l3.next = new ListNode();
            l3 = l3.next;
        }
    }
}
