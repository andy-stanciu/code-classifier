class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        int carry = 0;
        ListNode node = new ListNode(0, null);
        ListNode result = node;
        while (temp1 != null && temp2 != null) {
            int sum = temp1.val + temp2.val + carry;
            carry = 0;
            if (sum > 9) {
                sum = sum % 10;
                carry = 1;
            }
            node.val = sum;
            if (temp1.next != null && temp2.next != null) {
                node.next = new ListNode(0, null);
                node = node.next;
            }
            temp1 = temp1.next;
            temp2 = temp2.next;
        }
        while (temp1 != null) {
            int sum = temp1.val + carry;
            // System.out.println("Sum: "+sum);
            carry = 0;
            if (sum > 9) {
                sum = sum % 10;
                carry = 1;
            }
            if (temp1 != null) {
                node.next = new ListNode(0, null);
                node = node.next;
                node.val = sum;
            }
            temp1 = temp1.next;
        }
        while (temp2 != null) {
            int sum = temp2.val + carry;
            carry = 0;
            if (sum > 9) {
                sum = sum % 10;
                carry = 1;
            }
            if (temp2 != null) {
                node.next = new ListNode(0, null);
                node = node.next;
                node.val = sum;
            }
            temp2 = temp2.next;
        }
        if (carry == 1) {
            node.next = new ListNode(1, null);
        }
        return result;
    }
}
