/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode newNode = null;
        ListNode head = null;
        int i = 0;
        int carry = 0;
        while (l1 != null || l2 != null || carry != 0) {
            int current = carry;
            if (l1 != null) {
                current += l1.val;
                carry = 0;
                l1 = l1.next;
            }
            if (l2 != null) {
                current += l2.val;
                carry = 0;
                l2 = l2.next;
            }
            if (current > 9) {
                carry = current / 10;
                current = current % 10;
            } else if (l1 == null && l2 == null && carry < 9) {
                carry = 0;
            }
            ListNode temp = new ListNode(current);
            if (head == null) {
                newNode = temp;
                head = temp;
            } else {
                newNode.next = temp;
                newNode = temp;
            }
            i++;
        }
        return head;
    }
}
