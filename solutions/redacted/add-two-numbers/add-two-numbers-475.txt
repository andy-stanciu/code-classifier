/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(-1);
        ListNode curr = dummy;
        int c = 0;
        while (l1 != null && l2 != null) {
            int a = l1.val + l2.val + c;
            c = a / 10;
            a = a % 10;
            l1.val = a;
            curr.next = l1;
            l1 = l1.next;
            l2 = l2.next;
            curr = curr.next;
        }
        while (l1 != null) {
            int a = l1.val + c;
            c = a / 10;
            a = a % 10;
            l1.val = a;
            curr.next = l1;
            l1 = l1.next;
            curr = curr.next;
        }
        while (l2 != null) {
            int a = l2.val + c;
            c = a / 10;
            a = a % 10;
            l2.val = a;
            curr.next = l2;
            l2 = l2.next;
            curr = curr.next;
        }
        for (int i = c; i > 0; i = i / 10) {
            ListNode t = new ListNode(c % 10);
            curr.next = t;
            curr = curr.next;
        }
        return dummy.next;
    }
}
