/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode result = l1;
        int carry = 0;
        ListNode l1Prev = null;
        ;
        while (l1 != null && l2 != null) {
            l1.val += l2.val + carry;
            if (10 <= l1.val) {
                l1.val -= 10;
                carry = 1;
            } else {
                carry = 0;
            }
            l1Prev = l1;
            l1 = l1.next;
            l2 = l2.next;
        }
        if (l1 == null) {
            l1Prev.next = l2;
        }
        while (carry > 0) {
            if (l1Prev.next == null) {
                l1Prev.next = new ListNode(0);
            }
            l1Prev.next.val += carry;
            if (10 <= l1Prev.next.val) {
                l1Prev.next.val -= 10;
                carry = 1;
            } else {
                carry = 0;
            }
            l1Prev = l1Prev.next;
        }
        return result;
    }
}
