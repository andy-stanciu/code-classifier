/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public static ListNode method1(ListNode head1, ListNode head2) {
        ListNode t1 = head1;
        ListNode t2 = head2;
        int carry = 0;
        ListNode dummy = new ListNode(-1);
        ListNode temp = dummy;
        while (t1 != null || t2 != null || carry != 0) {
            int sum = 0;
            if (t1 != null) {
                sum = sum + t1.val;
                t1 = t1.next;
            }
            if (t2 != null) {
                sum = sum + t2.val;
                t2 = t2.next;
            }
            sum = sum + carry;
            carry = sum / 10;
            ListNode xnode = new ListNode(sum % 10);
            temp.next = xnode;
            temp = temp.next;
        }
        return dummy.next;
    }
}
