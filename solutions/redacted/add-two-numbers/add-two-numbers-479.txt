/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int remaining = 0;
        ListNode prev = null;
        ListNode head = l1;
        while (l1 != null && l2 != null) {
            l1.val += l2.val + remaining;
            remaining = l1.val / 10;
            l1.val %= 10;
            prev = l1;
            l1 = l1.next;
            l2 = l2.next;
        }
        ListNode curr = null;
        if (l1 != null) {
            prev.next = l1;
            curr = l1;
        } else if (l2 != null) {
            prev.next = l2;
            curr = l2;
        }
        while (curr != null) {
            curr.val += remaining;
            remaining = curr.val / 10;
            curr.val %= 10;
            prev = curr;
            curr = curr.next;
        }
        if (remaining > 0) {
            prev.next = new ListNode(remaining);
        }
        return head;
    }
}
