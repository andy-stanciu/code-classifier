/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode result = new ListNode(0);
        ListNode temp = result;
        int carry = 0;
        while (l1 != null & l2 != null) {
            int sum = l1.val + l2.val + carry;
            carry = 0;
            if (sum > 9) {
                sum -= 10;
                carry = 1;
            }
            temp.next = new ListNode(sum);
            l1 = l1.next;
            l2 = l2.next;
            temp = temp.next;
        }
        while (l1 != null) {
            int sum = l1.val + carry;
            carry = 0;
            if (sum > 9) {
                sum = 0;
                carry = 1;
            }
            temp.next = new ListNode(sum);
            l1 = l1.next;
            temp = temp.next;
        }
        while (l2 != null) {
            int sum = l2.val + carry;
            carry = 0;
            if (sum > 9) {
                sum = 0;
                carry = 1;
            }
            temp.next = new ListNode(sum);
            l2 = l2.next;
            temp = temp.next;
        }
        temp.next = carry == 1 ? new ListNode(1) : null;
        return result.next;
    }
}
