class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        return sumNodeVals(l1, l2, 0);
    }

    private ListNode sumNodeVals(ListNode l1, ListNode l2, int carry) {
        if (l1 == null && l2 == null) {
            if (carry != 0) {
                return new ListNode(carry, null);
            }
            return null;
        } else if (l1 == null) {
            int sum = l2.val + carry;
            ListNode newNode = sumNodeVals(null, l2.next, sum / 10);
            return new ListNode(sum % 10, newNode);
        } else if (l2 == null) {
            int sum = l1.val + carry;
            ListNode newNode = sumNodeVals(l1.next, null, sum / 10);
            return new ListNode(sum % 10, newNode);
        } else {
            int sum = l1.val + l2.val + carry;
            ListNode newNode = sumNodeVals(l1.next, l2.next, sum / 10);
            return new ListNode(sum % 10, newNode);
        }
    }
}
