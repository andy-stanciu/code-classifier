/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode output = new ListNode();
        ListNode temp = output;
        int remaining = 0;
        while (l1 != null || l2 != null) {
            int sum = remaining;
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }
            if (sum > 9) {
                output.val = sum % 10;
                remaining = 1;
            } else {
                output.val = sum;
                remaining = 0;
            }
            if (l1 != null || l2 != null) {
                output.next = new ListNode();
                output = output.next;
            }
        }
        if (remaining == 1) {
            output.next = new ListNode();
            output = output.next;
            output.val = remaining;
        } else {
            output = null;
        }
        return temp;
    }
}
