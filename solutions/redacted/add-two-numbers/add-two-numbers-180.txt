class Solution {

    private ListNode method1(ListNode first, ListNode second) {
        int carry = 0;
        ListNode dummy = new ListNode(-1);
        ListNode ans = dummy;
        while (first != null && second != null) {
            int sum = carry + first.val + second.val;
            int digit = sum % 10;
            ans.next = new ListNode(digit);
            ans = ans.next;
            carry = sum / 10;
            first = first.next;
            second = second.next;
        }
        while (first != null) {
            int sum = carry + first.val;
            int digit = sum % 10;
            ans.next = new ListNode(digit);
            ans = ans.next;
            carry = sum / 10;
            first = first.next;
        }
        while (second != null) {
            int sum = carry + second.val;
            int digit = sum % 10;
            ans.next = new ListNode(digit);
            ans = ans.next;
            carry = sum / 10;
            second = second.next;
        }
        while (carry != 0) {
            int sum = carry;
            int digit = sum % 10;
            ans.next = new ListNode(digit);
            ans = ans.next;
            carry = sum / 10;
        }
        return dummy.next;
    }

    public ListNode method2(ListNode first, ListNode second) {
        ListNode ans = method1(first, second);
        return ans;
    }
}
