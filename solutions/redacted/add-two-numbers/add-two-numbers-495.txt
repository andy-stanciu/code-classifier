/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode head = helper(l1, l2, 0);
        return head;
    }

    public static ListNode helper(ListNode l1, ListNode l2, int carry) {
        if (l1 == null && l2 == null) {
            if (carry == 1) {
                carry = 0;
                return new ListNode(1);
            }
            return null;
        }
        if (l1 == null) {
            int val = l2.val + carry;
            if (val >= 10) {
                val %= 10;
                carry = 1;
            } else {
                carry = 0;
            }
            l2.val = val;
            l2.next = helper(l1, l2.next, carry);
            return l2;
        }
        if (l2 == null) {
            int val = l1.val + carry;
            if (val >= 10) {
                val %= 10;
                carry = 1;
            } else {
                carry = 0;
            }
            l1.val = val;
            l1.next = helper(l1.next, l2, carry);
            return l1;
        } else {
            int val = l1.val + l2.val + carry;
            if (val >= 10) {
                val %= 10;
                carry = 1;
            } else {
                carry = 0;
            }
            l1.val = val;
        }
        l1.next = helper(l1.next, l2.next, carry);
        return l1;
    }
}
