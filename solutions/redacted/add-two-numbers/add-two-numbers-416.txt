/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode result = new ListNode();
        ListNode temp = result;
        boolean isCarryOver = false;
        while (l1 != null || l2 != null || temp != null) {
            int sum = 0;
            if (l1 != null || l2 != null) {
                sum = l1.val + l2.val;
                if ((l1.next == null && l2.next == null) || l1.next != null && l2.next != null) {
                    l1 = l1.next;
                    l2 = l2.next;
                } else if (l1.next == null) {
                    l1.val = 0;
                    l2 = l2.next;
                } else if (l2.next == null) {
                    l2.val = 0;
                    l1 = l1.next;
                }
            }
            sum = isCarryOver ? sum + 1 : sum;
            temp.val = sum % 10;
            if (sum >= 10)
                isCarryOver = true;
            else
                isCarryOver = false;
            if (l1 == null && l2 == null) {
                if (isCarryOver) {
                    temp.next = new ListNode();
                    temp = temp.next;
                } else {
                    temp = null;
                }
            } else {
                temp.next = new ListNode();
                temp = temp.next;
            }
        }
        return result;
    }
}
