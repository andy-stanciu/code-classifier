/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode node = new ListNode(l1.val + l2.val);
        ListNode ans = node;
        int carry = 0;
        while (l1 != null && l2 != null) {
            int lastd = (l1.val + l2.val + carry) % 10;
            ans.next = new ListNode(lastd);
            carry = (l1.val + l2.val + carry) / 10;
            l1 = l1.next;
            l2 = l2.next;
            ans = ans.next;
        }
        while (l1 != null) {
            ans.next = new ListNode((l1.val + carry) % 10);
            carry = (l1.val + carry) / 10;
            l1 = l1.next;
            ans = ans.next;
        }
        while (l2 != null) {
            ans.next = new ListNode((l2.val + carry) % 10);
            carry = (l2.val + carry) / 10;
            l2 = l2.next;
            ans = ans.next;
        }
        if (carry != 0) {
            ans.next = new ListNode(carry);
        }
        return node.next;
    }
}
