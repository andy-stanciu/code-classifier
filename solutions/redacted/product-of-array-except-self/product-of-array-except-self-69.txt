class Solution {

    public int[] method1(int[] nums) {
        int length = nums.length;
        int[] prodFromLeft = new int[length];
        int[] prodFromRight = new int[length];
        prodFromLeft[0] = nums[0];
        prodFromRight[length - 1] = nums[length - 1];
        method2(prodFromLeft, prodFromRight, nums);
        return method3(prodFromLeft, prodFromRight);
    }

    private void method2(int[] prodFromLeft, int[] prodFromRight, int[] nums) {
        for (int i = 1; i < nums.length; i++) {
            prodFromLeft[i] = nums[i] * prodFromLeft[i - 1];
            int rightIndex = nums.length - i - 1;
            prodFromRight[rightIndex] = nums[rightIndex] * prodFromRight[rightIndex + 1];
        }
    }

    private int[] method3(int[] prodFromLeft, int[] prodFromRight) {
        int items = prodFromLeft.length;
        int[] var1 = new int[items];
        for (int i = 0; i < items; i++) {
            int fromLeft = i > 0 ? prodFromLeft[i - 1] : 1;
            int fromRight = i < items - 1 ? prodFromRight[i + 1] : 1;
            var1[i] = fromLeft * fromRight;
        }
        return var1;
    }
}
