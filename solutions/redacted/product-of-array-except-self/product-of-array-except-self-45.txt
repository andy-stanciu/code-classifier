class Solution {

    public int[] method1(int[] nums) {
        //    int n = nums.length;
        //    int before = 1;
        //    int after = 1;
        //    int[] res = new int[n];
        //    for(int i=0; i<n; i++){
        //     res[i]= before;
        //     before = before*nums[i];
        //    }
        //    for(int i=n-1; i>=0; i--){
        //     res[i]= res[i]*after;
        //     after = after*nums[i];
        //    }
        //    return res;
        // ---------------------------------------------------------------------------------------------------------------------------------------------------------------//
        // int n = nums.length;
        // int[] res = new int[n];
        // for(int i=0; i<n; i++){
        //     int pro =1;
        //     for(int j=0; j<n; j++){        // code is correct but it dosen\'t accept bcz of the n^2 time comp throws time limit exceeded
        //         if(i != j){
        //            pro *= nums[j];
        //         }
        //     }
        //     res[i] = pro;
        // }
        // return res;
        // -----------------------------------------------------------------------------------//
        int[] prefix = new int[nums.length];
        int[] suffix = new int[nums.length];
        prefix[0] = 1;
        for (int i = 1; i < nums.length; i++) {
            prefix[i] = prefix[i - 1] * nums[i - 1];
        }
        suffix[nums.length - 1] = 1;
        for (int i = nums.length - 2; i >= 0; i--) {
            suffix[i] = suffix[i + 1] * nums[i + 1];
        }
        int[] ans = new int[nums.length];
        for (int i = 0; i < ans.length; i++) {
            ans[i] = prefix[i] * suffix[i];
        }
        return ans;
    }
}
