//the logic here is quite simple
//we start traversing the array and keep track of two things
// 1 > zerocount
// 2 > product
//if the zeros in the array are more than once then it is sure that the complete array
//product will be zero because for 1 zero the other location which has zero wil make the product
//equals to zero
//now remian two cases the array has 1 zero or has no zero
//no zero case is simple we simply divide the product that position element of the array
//for 1 zero we can be sure that every element of the array will be zero leaving the position which
//it self is zero in the initial array
//you would have notices i have taken a variable which stores the index of first zero
//so we simply change the element of thatposition in the answer array and change it
//to the product and return the array as rest of the elements will be zero
//I hope the explanation was clear :)
class Solution {

    public int[] method1(int[] nums) {
        int[] ans = new int[nums.length];
        int[] var1 = new int[nums.length];
        int var2 = 1, zero_count = 0, zeroIndex = 0;
        boolean firstZeroIndexFound = false;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                if (!firstZeroIndexFound) {
                    zeroIndex = i;
                    firstZeroIndexFound = true;
                }
                zero_count++;
            } else {
                var2 = nums[i] * var2;
            }
        }
        if (zero_count > 1)
            return ans;
        if (zero_count == 1) {
            ans[zeroIndex] = var2;
            return ans;
        }
        for (int i = 0; i < nums.length; i++) {
            ans[i] = var2 / nums[i];
        }
        return ans;
    }
}
