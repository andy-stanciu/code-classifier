class Solution {

    public int[] method1(int[] nums) {
        /*Easiest solution passed-->19/24 testcase Exceeded time limit for 19th one
        int[] output=new int[nums.length];
        int i=0;
        int j=0;
        int sum=1;
        while(j<nums.length || i<nums.length){
            if(j!=i){
                sum*=nums[j];
            }
            j++;
            if(j==nums.length && i<nums.length){
                output[i]=sum;
                i++;
                j=0;
                sum=1;
            }
        }
        return output;*/
        int[] left = new int[nums.length];
        int[] right = new int[nums.length];
        left[0] = 1;
        for (int i = 1; i < nums.length; i++) {
            left[i] = left[i - 1] * nums[i - 1];
        }
        right[nums.length - 1] = 1;
        for (int i = nums.length - 2; i >= 0; i--) {
            right[i] = right[i + 1] * nums[i + 1];
        }
        int[] ans = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            ans[i] = right[i] * left[i];
        }
        return ans;
    }
}
