class Solution {

    public int[] method1(int[] nums) {
        int[] output = new int[nums.length];
        // Make every element of the output array 1 (multiplicative identity)
        for (int i = 0; i < nums.length; i++) output[i] = 1;
        // Forward pass:
        // Initialize a product variable "prefix" to 1 (multiplicative identity)
        // Loop through all but last element of "nums".
        // Multiply each element of "nums" with the "prefix" variable.
        // Multiply the current "prefix" value to eacthe next element in the output.
        // This makes each element the product of its previous elements.
        for (int i = 0, prefix = 1; i < nums.length - 1; i++) {
            prefix *= nums[i];
            output[i + 1] *= prefix;
        }
        // Backward pass:
        // Initialize a product variable "postfix" to 1 (multiplicative identity)
        // Loop through all but first element of "nums" in reverse order.
        // Multiply each element of "nums" with the "postfix" variable.
        // Multiply the current "postfix" value to the previous element in the output.
        // This makes each element the product of its next elements.
        for (int i = nums.length - 1, postfix = 1; i >= 1; i--) {
            postfix *= nums[i];
            output[i - 1] *= postfix;
        }
        // The previous two "forward" and "backward" passes will make each element
        // of the output array as the product of its previous elements and the next elements
        return output;
    }
}
