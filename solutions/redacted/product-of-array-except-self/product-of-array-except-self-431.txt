class Solution {

    public int[] method1(int[] nums) {
        //prduct of all ele except currrent ele
        //TC:O(N)  SC:O(N)-->suffix,prefix approach
        //approach is the at current index find the suffix prd and prefix prd
        int n = nums.length;
        int[] ans = new int[n];
        int[] pf = new int[n];
        int[] sf = new int[n];
        pf[0] = 1;
        sf[n - 1] = 1;
        //calculate prefix prd
        for (int i = 1; i < n; i++) {
            pf[i] = pf[i - 1] * nums[i - 1];
        }
        //calculate suffix prd
        for (int i = n - 2; i >= 0; i--) {
            sf[i] = sf[i + 1] * nums[i + 1];
        }
        //traverse the array at each index calculte prd of all ele
        for (int i = 0; i < n; i++) {
            ans[i] = pf[i] * sf[i];
        }
        return ans;
    }
}
