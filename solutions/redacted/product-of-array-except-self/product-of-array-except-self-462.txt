class Solution {

    public int[] method1(int[] nums) {
        //brute force method
        // int[] ans=new int[nums.length];
        // for(int i=0; i< nums.length; i++){
        //     int product=1;
        //     for(int j=0; j< nums.length; j++){
        //         if(i!=j){
        //             product*=nums[j];
        //         }
        //     }
        //     ans[i]=product;
        // }
        // return ans;
        //optimal solution with tc:O(n) & sc: O(n)
        int n = nums.length;
        int[] ans = new int[n];
        int[] prefix = new int[n];
        int[] suffix = new int[n];
        //calculate the prefix
        prefix[0] = 1;
        for (int i = 1; i < n; i++) {
            prefix[i] = prefix[i - 1] * nums[i - 1];
        }
        //calculate the suffix
        suffix[n - 1] = 1;
        for (int i = n - 2; i >= 0; i--) {
            suffix[i] = suffix[i + 1] * nums[i + 1];
        }
        //calculate the ans
        for (int i = 0; i < n; i++) {
            ans[i] = prefix[i] * suffix[i];
        }
        return ans;
    }
}
