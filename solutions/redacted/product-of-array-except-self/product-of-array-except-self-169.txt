class Solution {

    public int[] method1(int[] nums) {
        int var1 = 1;
        int var2 = 0;
        int negatives = 0;
        for (int i : nums) {
            if (i == 0) {
                var2++;
                continue;
            }
            if (i < 0)
                negatives++;
            var1 *= i;
        }
        int[] result = new int[nums.length];
        // if numberOfZeroes is greater than 1 meaning at any time the product will always be 0
        if (var2 > 1)
            return result;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0)
                result[i] = var1;
            else // if numberOfZeroes is greater than 0 and probably 1 in this case
            // and current element is NOT 0
            // then ulitmately product will be 1
            if (var2 > 0 && nums[i] != 0)
                result[i] = 0;
            else {
                if (nums[i] > 0)
                    result[i] = var1 / nums[i];
                else {
                    // if negative Values are even then the remaining product will alwasy be even
                    if ((negatives - 1) == 0 || ((negatives - 1) % 2) == 0)
                        result[i] = var1 / nums[i];
                    else {
                        int prod = var1 / nums[i];
                        result[i] = prod > 0 ? -1 * prod : prod;
                    }
                }
            }
        }
        return result;
    }
}
