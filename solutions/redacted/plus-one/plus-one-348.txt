class Solution {

    public int[] method1(int[] digits) {
        if (digits.length == 1 && digits[0] == 9) {
            int[] r = { 1, 0 };
            return r;
        }
        int l = digits.length;
        //simple, normal case
        if (digits[l - 1] != 9) {
            digits[l - 1] = digits[l - 1] + 1;
            return digits;
        }
        //in case last digit is 9
        //convert digits array to list
        ArrayList<Integer> list = new ArrayList<>();
        for (int num : digits) {
            list.add(num);
        }
        //case where all element of array are 9;
        int count = 0;
        for (int j = 0; j < list.size(); j++) {
            if (list.get(j) == 9) {
                count++;
            }
        }
        if (count == list.size()) {
            Collections.fill(list, 0);
            list.add(0, 1);
            // Convert list to an array of integers
            int[] result = new int[list.size()];
            for (int j = 0; j < list.size(); j++) {
                result[j] = list.get(j);
            }
            return result;
        }
        //in case all elements not 9, starting from last element of the list
        int i = l - 1;
        while (list.get(i) == 9) {
            i--;
        }
        System.out.println(i);
        //get the first non 9 number from rear and add 1 to it
        int k = list.get(i);
        list.set(i, k + 1);
        //once that number is incremented, all elements following it will be zero
        for (int m = i + 1; m < list.size(); m++) {
            list.set(m, 0);
        }
        // Convert list to an array of integers
        int[] result = new int[list.size()];
        for (int j = 0; j < list.size(); j++) {
            result[j] = list.get(j);
        }
        return result;
    }
}
