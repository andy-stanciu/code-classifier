/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    ListNode rev(ListNode root) {
        ListNode prev = null;
        ListNode curr = root;
        while (curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }

    public ListNode method1(ListNode l1, ListNode l2) {
        l1 = rev(l1);
        l2 = rev(l2);
        int sum = 0;
        int carry = 0;
        ListNode res = new ListNode(0);
        while (l1 != null || l2 != null || carry != 0) {
            if (l1 != null) {
                carry += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                carry += l2.val;
                l2 = l2.next;
            }
            // if(carry!=0){
            ListNode t = new ListNode(carry % 10);
            carry = carry / 10;
            t.next = res.next;
            res.next = t;
            // }
        }
        return res.next;
    }
}
