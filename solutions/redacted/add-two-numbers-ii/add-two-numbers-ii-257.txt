/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode reverse_next = reverseList(head.next);
        head.next.next = head;
        head.next = null;
        return reverse_next;
    }

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode res = new ListNode(0);
        ListNode curr = res;
        int sum = 0;
        int now = 0;
        l1 = reverseList(l1);
        l2 = reverseList(l2);
        while (l1 != null || l2 != null || sum == 1) {
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }
            now = sum % 10;
            sum = sum / 10;
            ListNode temp = new ListNode(now);
            curr.next = temp;
            curr = curr.next;
        }
        return reverseList(res.next);
    }
}
