class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        Stack<Integer> s1 = new Stack<>();
        Stack<Integer> s2 = new Stack<>();
        while (l1 != null) {
            s1.push(l1.val);
            l1 = l1.next;
        }
        while (l2 != null) {
            s2.push(l2.val);
            l2 = l2.next;
        }
        ListNode list = new ListNode();
        int carry = 0;
        int sum = 0;
        while (!s1.isEmpty() || !s2.isEmpty()) {
            if (!s1.isEmpty())
                sum = sum + s1.pop();
            if (!s2.isEmpty())
                sum = sum + s2.pop();
            list.val = sum % 10;
            carry = sum / 10;
            ListNode dummy = new ListNode(carry);
            dummy.next = list;
            list = dummy;
            sum = sum / 10;
        }
        return list.val == 0 ? list.next : list;
    }
}
