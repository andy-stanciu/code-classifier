class Solution {

    public ListNode reverse(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode a = head.next;
        ListNode newHead = reverse(a);
        a.next = head;
        head.next = null;
        return newHead;
    }

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode r1 = reverse(l1), p1 = r1;
        ListNode r2 = reverse(l2), p2 = r2;
        ListNode r3 = new ListNode(), p3 = r3;
        int sum = 0, x = 0, y = 0, carry = 0;
        while (p1 != null || p2 != null) {
            x = p1 != null ? p1.val : 0;
            y = p2 != null ? p2.val : 0;
            sum = x + y + carry;
            carry = sum / 10;
            sum = sum % 10;
            ListNode tmp = new ListNode(sum);
            p3.next = tmp;
            if (p1 != null)
                p1 = p1.next;
            if (p2 != null)
                p2 = p2.next;
            p3 = p3.next;
        }
        if (carry > 0)
            p3.next = new ListNode(carry);
        return reverse(r3.next);
    }
}
