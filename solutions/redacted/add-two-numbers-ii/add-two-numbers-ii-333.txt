class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        Stack<Integer> stk1 = new Stack<>(), stk2 = new Stack<>();
        while (l1 != null || l2 != null) {
            if (l1 != null) {
                stk1.push(l1.val);
                l1 = l1.next;
            }
            if (l2 != null) {
                stk2.push(l2.val);
                l2 = l2.next;
            }
        }
        int carry = 0;
        ListNode start = null;
        while (stk1.size() > 0 || stk2.size() > 0 || carry > 0) {
            int sum = (stk1.size() > 0 ? stk1.pop() : 0) + (stk2.size() > 0 ? stk2.pop() : 0) + carry;
            carry = sum / 10;
            sum %= 10;
            ListNode tmp = new ListNode(sum, start);
            start = tmp;
        }
        return start;
    }
}
