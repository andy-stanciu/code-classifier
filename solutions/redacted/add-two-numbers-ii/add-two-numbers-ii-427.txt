/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode dummy1 = l1, dummy2 = l2;
        StringBuilder d1 = new StringBuilder("");
        StringBuilder d2 = new StringBuilder("");
        while (dummy1 != null || dummy2 != null) {
            if (dummy1 != null) {
                d1.append(String.valueOf(dummy1.val));
                dummy1 = dummy1.next;
            }
            if (dummy2 != null) {
                d2.append(String.valueOf(dummy2.val));
                dummy2 = dummy2.next;
            }
        }
        BigInteger ans = new BigInteger(d1.toString()).add(new BigInteger(d2.toString()));
        ListNode dummy = new ListNode(-1);
        ListNode head = dummy;
        for (char ch : String.valueOf(ans).toCharArray()) {
            dummy.next = new ListNode(Character.getNumericValue(ch));
            dummy = dummy.next;
        }
        return head.next;
    }
}
