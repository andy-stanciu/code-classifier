class Solution {

    int carry = 0;

    private int length(ListNode list) {
        int len = 0;
        ListNode temp = list;
        while (temp != null) {
            len++;
            temp = temp.next;
        }
        return len;
    }

    private void method1(ListNode l1, ListNode l2, int len1, int len2) {
        if (len1 == 0 && len2 == 0)
            return;
        int val = 0;
        if (len1 == len2) {
            val = l1.val + l2.val;
            method1(l1.next, l2.next, len1 - 1, len2 - 1);
        } else {
            val = l1.val;
            method1(l1.next, l2, len1 - 1, len2);
        }
        val += carry;
        carry = val / 10;
        val %= 10;
        l1.val = val;
    }

    public ListNode method2(ListNode l1, ListNode l2) {
        int len1 = length(l1);
        int len2 = length(l2);
        ListNode res = null;
        if (len1 >= len2) {
            method1(l1, l2, len1, len2);
            res = l1;
        } else {
            method1(l2, l1, len2, len1);
            res = l2;
        }
        if (carry != 0) {
            ListNode head = new ListNode(carry);
            head.next = res;
            res = head;
        }
        return res;
    }
}
