/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        Stack<Integer> stack1 = new Stack<>();
        Stack<Integer> stack2 = new Stack<>();
        ListNode temp = l1;
        while (temp != null) {
            stack1.push(temp.val);
            temp = temp.next;
        }
        temp = l2;
        while (temp != null) {
            stack2.push(temp.val);
            temp = temp.next;
        }
        int carry = 0;
        ListNode ans = null;
        while (!stack1.isEmpty() || !stack2.isEmpty() || carry != 0) {
            int sum = carry;
            if (!stack1.isEmpty())
                sum += stack1.pop();
            if (!stack2.isEmpty())
                sum += stack2.pop();
            carry = sum / 10;
            ListNode node = new ListNode(sum % 10);
            node.next = ans;
            ans = node;
        }
        return ans;
    }
}
