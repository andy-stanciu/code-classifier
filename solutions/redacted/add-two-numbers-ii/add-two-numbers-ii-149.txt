/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        String s = "";
        String r = "";
        while (temp1 != null) {
            s += temp1.val;
            temp1 = temp1.next;
        }
        while (temp2 != null) {
            r += temp2.val;
            temp2 = temp2.next;
        }
        BigInteger x = new BigInteger(s);
        BigInteger y = new BigInteger(r);
        BigInteger sum = x.add(y);
        String p = sum.toString();
        ListNode n = new ListNode(0);
        ListNode head = n;
        for (int i = 0; i < p.length(); i++) {
            ListNode h = new ListNode(Integer.parseInt(p.substring(i, i + 1)));
            head.next = h;
            head = head.next;
        }
        return n.next;
    }
}
