class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        int c = 0;
        ListNode head = l1;
        ListNode tail = l1;
        while (l1 != null && l2 != null) {
            int sum = l1.val + l2.val + c;
            if (sum >= 10) {
                c = 1;
                sum = sum % 10;
            } else {
                c = 0;
            }
            l1.val = sum;
            tail = l1;
            l1 = l1.next;
            l2 = l2.next;
        }
        if (l1 == null && l2 != null) {
            while (l2 != null) {
                int sum = l2.val + c;
                if (sum >= 10) {
                    c = 1;
                    sum = sum % 10;
                } else {
                    c = 0;
                }
                ListNode newnode = new ListNode(sum);
                tail.next = newnode;
                tail = tail.next;
                l2 = l2.next;
            }
        } else if (l2 == null && l1 != null) {
            while (l1 != null) {
                int sum = l1.val + c;
                if (sum >= 10) {
                    c = 1;
                    sum = sum % 10;
                } else {
                    c = 0;
                }
                l1.val = sum;
                tail.next = l1;
                tail = tail.next;
                l1 = l1.next;
            }
        }
        if (c > 0) {
            ListNode newnode = new ListNode(c);
            tail.next = newnode;
            tail = tail.next;
        }
        return head;
    }

    public ListNode reverseList(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode a = head.next;
        ListNode newHead = reverseList(a);
        a.next = head;
        head.next = null;
        return newHead;
    }

    public ListNode method2(ListNode l1, ListNode l2) {
        ListNode list1 = reverseList(l1);
        ListNode list2 = reverseList(l2);
        ListNode sumlist = method1(list1, list2);
        ListNode ans = reverseList(sumlist);
        return ans;
    }
}
