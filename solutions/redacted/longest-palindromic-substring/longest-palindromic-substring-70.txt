class Solution {

    // keep track of longest palindrome string
    String result = "";

    public String method1(String s) {
        if (s == null || s.length() == 0)
            return "";
        for (int i = 0; i < s.length(); i++) {
            // if palindrome length is odd
            expandAroundCenter(s, i, i);
            // if palindrome length is even
            expandAroundCenter(s, i, i + 1);
        }
        return result;
    }

    private void expandAroundCenter(String s, int left, int right) {
        int n = s.length();
        // expand until we found different character in left and r
        while (left >= 0 && right < n && s.charAt(left) == s.charAt(right)) {
            int len = right - left + 1;
            // if current palindrome string is of length greater than previous result
            if (result.length() < len) {
                result = s.substring(left, right + 1);
            }
            left--;
            right++;
        }
    }
}
