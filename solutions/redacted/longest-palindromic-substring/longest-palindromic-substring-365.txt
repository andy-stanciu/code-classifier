class Solution {

    public String method1(String s) {
        int max = 1, start = 0, end = 0;
        // odd length
        for (int i = 1; i < s.length(); i++) {
            int index = 1;
            int minIndex = i - index, maxIndex = i + index;
            while (minIndex >= 0 && maxIndex < s.length() && s.charAt(minIndex) == s.charAt(maxIndex)) {
                if (max < (index * 2 + 1)) {
                    start = minIndex;
                    end = maxIndex;
                    max = index * 2 + 1;
                }
                minIndex--;
                maxIndex++;
                index++;
            }
        }
        // even length
        for (int i = 0; i < s.length(); i++) {
            if ((i + 1) < s.length() && s.charAt(i) == s.charAt(i + 1)) {
                if (max == 1) {
                    max = 2;
                    start = i;
                    end = i + 1;
                }
                int index = 1;
                int minIndex = i - index, maxIndex = i + 1 + index;
                while (minIndex >= 0 && maxIndex < s.length() && s.charAt(minIndex) == s.charAt(maxIndex)) {
                    if (max < (index * 2 + 2)) {
                        start = minIndex;
                        end = maxIndex;
                        max = index * 2 + 1;
                    }
                    minIndex--;
                    maxIndex++;
                    index++;
                }
            }
        }
        return s.substring(start, end + 1);
    }
}
