class Solution {

    public String method1(String str) {
        int n = str.length();
        int start = 0;
        int end = 0;
        int maxLen = 0;
        for (int i = 0; i <= n - 1; i++) {
            // For even palindromic substring
            int l = i;
            int h = i + 1;
            while (l >= 0 && h < n && str.charAt(l) == str.charAt(h)) {
                int len = h - l + 1;
                if (len > maxLen) {
                    maxLen = len;
                    start = l;
                    end = h;
                }
                l--;
                h++;
            }
            // For odd palindromic substring
            l = i;
            h = i + 2;
            while (l >= 0 && h < n && str.charAt(l) == str.charAt(h)) {
                int len = h - l + 1;
                if (len > maxLen) {
                    maxLen = len;
                    start = l;
                    end = h;
                }
                l--;
                h++;
            }
        }
        return str.substring(start, end + 1);
    }
}
