class Solution {

    public String method1(String s) {
        if (s == null || s.length() < 1)
            return "";
        int start = 0, end = 0;
        for (int i = 0; i < s.length(); i++) {
            //odd length Palindrome
            int len1 = getPalindromeLength(s, i, i);
            // even length Palindrome
            int len2 = getPalindromeLength(s, i, i + 1);
            int len = Math.max(len1, len2);
            if (len > (end - start)) {
                //getting the start and end index of the palindrome string
                //from the center
                start = i - (len - 1) / 2;
                end = i + (len) / 2;
            }
        }
        return s.substring(start, end + 1);
    }

    int getPalindromeLength(String s, int leftIndex, int rightIndex) {
        while (leftIndex >= 0 && rightIndex < s.length() && s.charAt(leftIndex) == s.charAt(rightIndex)) {
            leftIndex--;
            rightIndex++;
        }
        return rightIndex - leftIndex - 1;
    }
}
