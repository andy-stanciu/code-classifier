class Solution {

    public String method1(String s) {
        String result = "";
        if (s.length() <= 1)
            return s;
        int max = 0;
        String temp_o = "", temp_e = "";
        int left = 0, right = 0;
        for (int i = 0; i < s.length(); i++) {
            // for odd length substring()
            left = i;
            right = i;
            while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
                temp_o = s.substring(left, right + 1);
                if (result.length() < temp_o.length())
                    result = temp_o;
                left--;
                right++;
            }
            left = i - 1;
            right = i;
            //for even length() substring
            while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
                temp_e = s.substring(left, right + 1);
                if (result.length() < temp_e.length())
                    result = temp_e;
                left--;
                right++;
            }
        }
        return result;
    }
}
/*

class Solution {

    public boolean isPalindrome(String s) {
        if(s.length()==0 || s.length()==1) return true;

        s = s.toLowerCase();
        String ar = s.replaceAll("[^a-zA-Z0-9]", "");
        int start=0, end= ar.length()-1;

        while(start<=end){
            if(ar.charAt(start)==ar.charAt(end)){
                start++;
                end--;
            }
            else return false;
        }
        return true;
    }

    public String longestPalindrome(String s) {

        if(s.length()==0 || s.length()==1) return s;

        int max = 0;
        String temp = "", temp2 = "";

        for(int i = 0 ; i<s.length()-1; i++)
        {
            for(int j=i; j<s.length(); j++){

            temp2 = s.substring(i,j+1);

            if(isPalindrome(temp2) && (temp2.length()>max))
            {
                    max = temp2.length();
                    temp = temp2;
            }
        }
        }
     return temp;   
    }
}

*/
