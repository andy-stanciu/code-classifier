class Solution {

    // public static boolean checkPalindrome(String str){
    //     int i = 0;
    //     int j = str.length()-1;;
    //     while( j>=i ){
    //         if(str.charAt(i) == str.charAt(j) ){
    //             i++;
    //             j--;
    //         } else{
    //             return false;
    //         }
    //     }
    //     return true;
    // }
    public String method1(String s) {
        // String ansString = "";
        // for ( int i = 0; i < s.length(); i++ ){
        //     for (int j = i; j < s.length(); j++){
        //         String substr = s.substring(i, j+1);
        //         if(checkPalindrome(substr)){
        //             if(ansString.length() < substr.length()){
        //                 ansString = substr;
        //             }
        //         }
        //     }
        // }
        // return ansString;
        int len = s.length();
        int maxLen = 0;
        String ans = "";
        // odd
        for (int mid = 0; mid < len; mid++) {
            int i = mid - 1;
            int j = mid + 1;
            int curLen = 1;
            while (i >= 0 && j < len && s.charAt(i) == s.charAt(j)) {
                i--;
                j++;
                curLen += 2;
            }
            if (curLen > maxLen) {
                maxLen = curLen;
                ans = s.substring(i + 1, j);
            }
        }
        // even
        for (int mid = 0; mid < len; mid++) {
            int i = mid;
            int j = mid + 1;
            int curLen = 0;
            while (i >= 0 && j < len && s.charAt(i) == s.charAt(j)) {
                i--;
                j++;
                curLen += 2;
            }
            if (curLen > maxLen) {
                maxLen = curLen;
                ans = s.substring(i + 1, j);
            }
        }
        return ans;
    }
}
/*
odd:

    b a b a d 
    m     
   i  j

    b a b a d 
      m     
    i   j
    

even:

    b a b a d 
    i j

    b a b a d 
      i j
   
   
 */
