class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        combine(new ArrayList<>(), n, k, result);
        return result;
    }

    private void combine(List<Integer> prefix, int n, int k, List<List<Integer>> solution) {
        if (prefix.size() == k) {
            solution.add(new ArrayList<>(prefix));
        } else {
            int first = 1;
            if (prefix.size() > 0) {
                first = prefix.get(prefix.size() - 1) + 1;
            }
            int maxCandidate = n - (k - prefix.size() - 1);
            for (int next = first; next <= maxCandidate; next++) {
                prefix.add(next);
                combine(prefix, n, k, solution);
                prefix.remove(prefix.size() - 1);
            }
        }
    }
}
