class Solution {

    ArrayList<ArrayList<Integer>> output = new ArrayList<ArrayList<Integer>>();

    public List<List<Integer>> combine(int n, int k) {
        findCombination(1, n, k, new ArrayList<Integer>());
        List<List<Integer>> list1 = new ArrayList<>();
        for (ArrayList<Integer> list : output) {
            list1.add(list);
        }
        return list1;
    }

    public void findCombination(int i, int n, int k, ArrayList<Integer> list) {
        if (list.size() == k) {
            output.add(list);
            return;
        }
        if (i > n)
            return;
        ArrayList<Integer> newList1 = new ArrayList<Integer>(list);
        newList1.add(i);
        ArrayList<Integer> newList2 = new ArrayList<Integer>(list);
        findCombination(i + 1, n, k, newList1);
        findCombination(i + 1, n, k, newList2);
    }
}
