class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public void pairs(int n, int k, List<Integer> arr) {
        if (k == 0) {
            //valid combination formed, so arr is added to  ans
            ans.add(new ArrayList<>(arr));
            return;
        }
        if (k == n) {
            // only one possible combination left
            arr.add(n);
            pairs(n - 1, k - 1, arr);
            // remove the last element from arr
            arr.remove(arr.size() - 1);
        } else if (n > k) {
            //skip the current number n
            pairs(n - 1, k, arr);
            arr.add(n);
            pairs(n - 1, k - 1, arr);
            arr.remove(arr.size() - 1);
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        List<Integer> arr = new ArrayList<>();
        pairs(n, k, arr);
        return ans;
    }
}
