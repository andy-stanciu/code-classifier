class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    private void backtracking(int idx, int n, List<Integer> res, int k) {
        if (res.size() == k) {
            ans.add(new ArrayList<Integer>(res));
            return;
        }
        for (int i = idx; i <= n; i++) {
            res.add(i);
            backtracking(i + 1, n, res, k);
            res.remove(res.size() - 1);
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        backtracking(1, n, new ArrayList<Integer>(), k);
        return ans;
    }
}
