class Solution {

    public void backtrack(int ind, int n, int k, List<Integer> curri, List<List<Integer>> res) {
        if (curri.size() == k) {
            res.add(new ArrayList<>(curri));
            return;
        }
        for (int i = ind; i <= n; i++) {
            curri.add(i);
            backtrack(i + 1, n, k, curri, res);
            curri.remove(curri.size() - 1);
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> curri = new ArrayList<>();
        backtrack(1, n, k, curri, res);
        return res;
    }
}
