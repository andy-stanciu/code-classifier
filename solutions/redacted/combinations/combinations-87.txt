class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> var1 = new ArrayList<>();
        List<Integer> curr = new ArrayList<>();
        backtrack(var1, k, n, curr, 1);
        return var1;
    }

    public void backtrack(List<List<Integer>> var1, int k, int n, List<Integer> l, int steps) {
        if (l.size() == k) {
            List<Integer> res = new ArrayList<>(l);
            var1.add(res);
            return;
        }
        for (int i = steps; i <= n; i++) {
            l.add(i);
            backtrack(var1, k, n, l, i + 1);
            l.remove(l.size() - 1);
        }
    }
}
