class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<Integer> comb = new ArrayList<>();
        if (n == 1) {
            comb.add(1);
            var1.add(comb);
            return var1;
        }
        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = i + 1;
        }
        method1(nums, 0, k, comb);
        return var1;
    }

    List<List<Integer>> var1 = new ArrayList<>();

    void method1(int[] nums, int ind, int k, List<Integer> combination) {
        if (combination.size() == k) {
            List<Integer> comb = new ArrayList<>();
            comb.addAll(combination);
            var1.add(comb);
            return;
        }
        if (ind >= nums.length)
            return;
        combination.add(nums[ind]);
        method1(nums, ind + 1, k, combination);
        combination.remove(combination.size() - 1);
        method1(nums, ind + 1, k, combination);
    }
}
