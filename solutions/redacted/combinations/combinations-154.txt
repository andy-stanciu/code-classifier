class Solution {

    List<List<Integer>> result = new ArrayList<List<Integer>>();

    public List<List<Integer>> combine(int n, int k) {
        permutations(k - 1, 1, new ArrayList<Integer>(k), n);
        return result;
    }

    void permutations(int index, int startingIndex, List<Integer> list, int n) {
        if (index >= 0) {
            //still didn\'t reach kth element
            int end = n - index;
            for (int i = startingIndex; i <= end; i++) {
                list.add(i);
                permutations(index - 1, i + 1, list, n);
                list.remove(list.size() - 1);
            }
        } else
            result.add(new ArrayList<Integer>(list));
    }
}
