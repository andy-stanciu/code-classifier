class Solution {

    void recursive(List<List<Integer>> a, List<Integer> curr, int idx, int n, int k) {
        if (idx > n) {
            if (curr.size() == k) {
                a.add(new ArrayList(curr));
            }
            return;
        }
        curr.add(idx);
        recursive(a, curr, idx + 1, n, k);
        curr.remove(curr.size() - 1);
        recursive(a, curr, idx + 1, n, k);
    }

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> a = new ArrayList<>();
        List<Integer> curr = new ArrayList<>();
        // List<List<Integer>>ans = new ArrayList<>();
        recursive(a, curr, 1, n, k);
        // for(int i=0;i<a.size();i++){
        //     if(a.get(i).size()==k){
        //         ans.add(new ArrayList(a.get(i)));
        //     }
        // }
        return a;
    }
}
