class Solution {

    public List<List<Integer>> combine(int n, int k) {
        // dfs
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> cur = new ArrayList<>();
        dfs(1, 0, k, n, cur, result);
        return result;
    }

    private void dfs(int index, int length, int k, int n, List<Integer> cur, List<List<Integer>> result) {
        if (length == k) {
            result.add(new ArrayList<>(cur));
            return;
        }
        if (index > n) {
            return;
        }
        cur.add(index);
        dfs(index + 1, length + 1, k, n, cur, result);
        cur.remove(cur.size() - 1);
        dfs(index + 1, length, k, n, cur, result);
    }
}
