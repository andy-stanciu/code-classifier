class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        backTracking(result, new ArrayList<>(), 1, n, k);
        return result;
    }

    public void backTracking(List<List<Integer>> result, ArrayList<Integer> subArray, int start, int n, int k) {
        if (subArray.size() == k) {
            result.add(new ArrayList(subArray));
            return;
        }
        for (int i = start; i <= n && subArray.size() < k; i++) {
            subArray.add(i);
            backTracking(result, subArray, i + 1, n, k);
            subArray.remove(subArray.size() - 1);
        }
        return;
    }
}
