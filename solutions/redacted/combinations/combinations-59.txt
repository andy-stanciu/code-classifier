class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        //List<Integer> current = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            backtracking(result, new ArrayList<>(), n, k, i);
            //System.out.println("i "+i+" result "+result);
        }
        return result;
    }

    private void backtracking(List<List<Integer>> result, List<Integer> current, int n, int k, int value) {
        current.add(value);
        if (current.size() == k) {
            result.add(new ArrayList<>(current));
            return;
        }
        for (int i = value + 1; i <= n; i++) {
            backtracking(result, current, n, k, i);
            current.remove(current.size() - 1);
        }
    }
}
