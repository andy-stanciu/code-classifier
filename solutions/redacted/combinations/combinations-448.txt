class Solution {

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        combo(result, n, k, 1, new ArrayList<>());
        return result;
    }

    private void combo(List<List<Integer>> result, int n, int k, int currIndex, List<Integer> soFar) {
        if (soFar.size() == k) {
            result.add(new ArrayList<>(soFar));
        } else if (soFar.size() > k || currIndex > n) {
            return;
        } else {
            for (int i = currIndex; i <= n; i++) {
                soFar.add(i);
                combo(result, n, k, i + 1, soFar);
                soFar.remove(soFar.size() - 1);
            }
        }
    }
}
