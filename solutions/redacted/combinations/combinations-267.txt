class Solution {

    private void backtrack(List<List<Integer>> result, List<Integer> curr, int start, int n, int k) {
        if (curr.size() == k)
            result.add(new ArrayList<>(curr));
        else {
            while (start <= n) {
                curr.add(start);
                backtrack(result, curr, start + 1, n, k);
                curr.remove(curr.size() - 1);
                start++;
            }
        }
    }

    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<>(), 1, n, k);
        return result;
    }
}
