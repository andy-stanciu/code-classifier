class Solution {

    public List<List<Integer>> combine(int n, int k) {
        //range : 1 to n & k = no of element in the subset
        List<List<Integer>> ans = new ArrayList<>();
        ArrayList<Integer> ls = new ArrayList<>();
        //we pass these elements in the finction
        fun(1, n, k, ls, ans);
        //1-lowerbound ; n is the upper bounfd ; k is therequired elements in a array,
        // la is an arraylist that we make and ans is the arraylist for stpring our answer
        return ans;
    }

    public void fun(int i, int n, int k, ArrayList<Integer> ls, List<List<Integer>> ans) {
        if (i > n) {
            if (k == 0) {
                //if k == 0 then we can say that ans is found and we will add it in the List ans ;
                ans.add(new ArrayList(ls));
            }
            return;
        }
        //first we consider the element in our list and then make the function run ;
        //as the element will be added we require k-1 elements now in the list ;
        // so we will pass that in the function
        ls.add(i);
        fun(i + 1, n, k - 1, ls, ans);
        //then we remove that element and then again pass the function as k= k;
        ls.remove(ls.size() - 1);
        fun(i + 1, n, k, ls, ans);
    }
}
