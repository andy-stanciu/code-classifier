class Solution {

    public int maxProfit(int[] prices) {
        // Check if the prices array is empty or contains only one element
        // In such cases, no transaction is possible, so return 0
        if (prices.length == 0 || prices.length == 1)
            return 0;
        // Initialize the minimum price as the first price
        int min = prices[0];
        // Initialize the maximum profit as 0
        int profit = 0;
        // Iterate through the prices array starting from the second element
        for (int i = 1; i < prices.length; i++) {
            // If the current price is higher than the minimum price,
            // calculate the potential profit and update the maximum profit if it is greater
            if (prices[i] > min) {
                profit = Math.max(profit, prices[i] - min);
            } else // If the current price is lower than the minimum price,
            // update the minimum price to the current price
            {
                min = prices[i];
            }
        }
        // Return the maximum profit
        return profit;
    }
}
