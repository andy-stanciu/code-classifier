class Solution {

    public int maxProfit(int[] prices) {
        if (prices == null || prices.length == 0) {
            return 0;
        }
        // Initialize SmallN to a large number
        int SmallN = Integer.MAX_VALUE;
        // To store the maximum profit
        int maxProfit = 0;
        for (int i = 0; i < prices.length; i++) {
            // Update SmallN to the minimum price encountered so far
            if (prices[i] < SmallN) {
                SmallN = prices[i];
            } else // Calculate the profit and update maxProfit if the current profit is larger
            if (prices[i] - SmallN > maxProfit) {
                maxProfit = prices[i] - SmallN;
            }
        }
        return maxProfit;
    }
}
