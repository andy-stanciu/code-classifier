//[7,1,5,3,6,4]
// maxProfit=0 , 4 , 5
//buy=prices[0] => 7, 1
// now we have to check prices[i]<buy  => 1<7 yes, 5<1 false , 6 > 1 false
//buy= prices[i] => buy = 1
// ie here 7<7 false then run else
// so else if(prices[i]-buy >profit) => 7-7>0 , 5-1>0 , 3-1> 4 false go for 6
//    6-1>4 true
// profit = prices[i]-buy => profit = 7-7=0, so profit is 4  , so profit=5
class Solution {

    public int maxProfit(int[] prices) {
        /*
         * int maxProfit=0;
         * int buy= prices[0];
         * for(int i=0; i<prices.length;i++){
         * if(prices[i]<buy){
         * buy=prices[i]; // for getting minimum buy price we are getting here the
         * minimum price to buy
         * }
         * // Calculate profit by selling at current price
         * maxProfit = Math.max(maxProfit, prices[i] - buy);
         * }
         * return maxProfit;
         */
        // using for each loop
        int maxProfit = 0;
        int minPrice = Integer.MAX_VALUE;
        for (int price : prices) {
            if (price < minPrice) {
                // Update minPrice
                minPrice = price;
            }
            // Calculate max profit
            maxProfit = Math.max(maxProfit, price - minPrice);
        }
        return maxProfit;
    }
}
