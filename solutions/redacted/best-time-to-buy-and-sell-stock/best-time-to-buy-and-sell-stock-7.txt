class Solution {

    public int maxProfit(int[] prices) {
        // current profit based on current price and minimum price so far
        int prof = 0;
        // final profit to be returned, keeps track of the maximum profit encountered
        int f_prof = 0;
        // initialize minimum buying price to a very large value
        int min = Integer.MAX_VALUE;
        // Loop through each day\'s stock price
        for (int i = 0; i < prices.length; i++) {
            // If the current price is less than the recorded minimum, update the minimum
            if (prices[i] < min) {
                // update minimum buying price
                min = prices[i];
            }
            // Calculate the profit if we were to sell at the current price
            prof = prices[i] - min;
            // If the calculated profit is greater than the final profit recorded, update final profit
            if (f_prof < prof) {
                // update the maximum profit encountered so far
                f_prof = prof;
            }
        }
        // Return the maximum profit that can be achieved
        return f_prof;
    }
}
