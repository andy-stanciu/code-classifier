/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    //  Root -> Left -> Right
    // public void helper(TreeNode root,List<Integer> ans){
    //     if( root != null){
    //         ans.add(root.val);
    //         helper(root.left,ans);
    //         helper(root.right, ans);
    //     }
    // }
    public List<Integer> method1(TreeNode root) {
        List<Integer> var1 = new ArrayList<>();
        if (root == null)
            return var1;
        Stack<TreeNode> s = new Stack<>();
        TreeNode temp = root;
        s.push(temp);
        while (!s.isEmpty()) {
            temp = s.pop();
            var1.add(temp.val);
            if (temp.right != null) {
                s.push(temp.right);
            }
            if (temp.left != null) {
                s.push(temp.left);
            }
        }
        return var1;
    }
}
