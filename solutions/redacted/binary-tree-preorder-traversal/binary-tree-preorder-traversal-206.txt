/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Integer> method1(TreeNode root) {
        ArrayList<Integer> res = new ArrayList<>();
        class Traverse {

            Traverse(TreeNode current) {
                if (current == null) {
                    return;
                }
                res.add(current.val);
                if (current.left != null) {
                    new Traverse(current.left);
                }
                if (current.right != null) {
                    new Traverse(current.right);
                }
            }
        }
        new Traverse(root);
        return res;
    }
}
