class Class1 {

    int val;

    Class1 left;

    Class1 right;

    Class1(int val) {
        this.val = val;
    }

    Class1(int val, Class1 left, Class1 right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

public class Solution {

    public List<Integer> method1(Class1 root) {
        List<Integer> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Stack<Class1> stack = new Stack<>();
        stack.push(root);
        while (!stack.isEmpty()) {
            Class1 node = stack.pop();
            result.add(node.val);
            if (node.right != null) {
                stack.push(node.right);
            }
            if (node.left != null) {
                stack.push(node.left);
            }
        }
        return result;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        Class1 root1 = new Class1(1);
        root1.right = new Class1(2);
        root1.right.left = new Class1(3);
        System.out.println(solution.method1(root1));
        Class1 root2 = null;
        System.out.println(solution.method1(root2));
        Class1 root3 = new Class1(1);
        System.out.println(solution.method1(root3));
    }
}
