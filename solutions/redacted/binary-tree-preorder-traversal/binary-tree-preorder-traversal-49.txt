class Solution {

    public List<Integer> method1(TreeNode root) {
        List<Integer> integerList = new LinkedList<>();
        Stack<TreeNode> rightNodes = new Stack<>();
        while (root != null) {
            // First, we record the root.
            integerList.add(root.val);
            // If right node is available, push the right node into the Stack first.
            // We will pop it later we are done with the left nodes.
            if (root.right != null) {
                rightNodes.push(root.right);
            }
            // Continue to traverse to the left, while recording each subtree root nodes,
            // and pushing the subtree right nodes into the stack.
            // Once reaches a leaf node, pop the right nodes and continue.
            root = root.left;
            if (root == null && !rightNodes.isEmpty()) {
                root = rightNodes.pop();
            }
        }
        // Fully traversed the tree.
        return integerList;
    }
}
