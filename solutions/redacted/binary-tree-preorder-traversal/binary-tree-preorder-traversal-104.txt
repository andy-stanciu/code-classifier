class Solution {

    public List<Integer> method1(TreeNode root) {
        List<Integer> ans = new LinkedList<>();
        helper(root, ans);
        return ans;
    }

    private void helper(TreeNode root, List<Integer> list) {
        if (root == null)
            return;
        list.add(root.val);
        helper(root.left, list);
        helper(root.right, list);
    }
}

//Reccursive (up)
//  ____________________________________________________________________________-
//Iterative(down)
class Solution {

    public List<Integer> method1(TreeNode root) {
        List<Integer> ans = new LinkedList<>();
        Stack<TreeNode> st = new Stack<>();
        if (root == null)
            return ans;
        st.push(root);
        while (!st.isEmpty()) {
            TreeNode node = st.pop();
            ans.add(node.val);
            if (node.right != null) {
                st.push(node.right);
            }
            if (node.left != null) {
                st.push(node.left);
            }
        }
        return ans;
    }
}
