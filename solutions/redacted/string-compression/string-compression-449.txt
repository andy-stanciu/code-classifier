class Solution {

    public int compress(char[] chars) {
        int i = 0, res = 0;
        // Iterate through the characters in the input array
        while (i < chars.length) {
            // Count the length of the current character group
            int groupLength = 1;
            // Count consecutive occurrences of the current character
            while (i + groupLength < chars.length && chars[i + groupLength] == chars[i]) {
                groupLength++;
            }
            // Append the current character to the result array
            chars[res++] = chars[i];
            // If the group has more than one character, append the count to the result array
            if (groupLength > 1) {
                for (char c : Integer.toString(groupLength).toCharArray()) {
                    chars[res++] = c;
                }
            }
            // Move the index to the next character group
            i += groupLength;
        }
        // Return the length of the compressed array
        return res;
    }
}
