class Solution {

    public int compress(char[] chars) {
        if (chars.length == 1) {
            return 1;
        }
        String res = "";
        //storing the first character
        char ch = chars[0];
        int currCount = 1;
        for (int i = 1; i < chars.length; i++) {
            //if the previous and new character is same then increase the count
            if (chars[i] == ch) {
                currCount++;
            } else //else append the total number and re-initialize the currCount and ch value
            {
                res += ch;
                ch = chars[i];
                //check if the current count == 1 then no need to add currCount
                if (currCount == 1) {
                    continue;
                }
                //append the currCount value to res and re-initailize the currCount Value
                res += currCount;
                currCount = 1;
            }
        }
        //appending the last character of the array
        res += ch;
        //check if the current count == 1 then no need to add currCount for the last character
        if (currCount > 1) {
            res += currCount;
        }
        //changing the inplace value with res
        for (int i = 0; i < res.length(); i++) {
            chars[i] = res.charAt(i);
        }
        //returning res.length
        return res.length();
    }
}
