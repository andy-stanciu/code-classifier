class Solution {

    public int compress(char[] chars) {
        // Position in the chars array to write the compressed version
        int count = 0;
        // Iterator for the input array
        int i = 0;
        while (i < chars.length) {
            char currentChar = chars[i];
            // Start of the current sequence of characters
            int start = i;
            // Count the number of occurrences of the current character
            while (i < chars.length && chars[i] == currentChar) {
                i++;
            }
            // Total count of currentChar
            int countOfCurrentChar = i - start;
            // Write the current character to the result array
            chars[count++] = currentChar;
            // If the count is more than 1, write the count to the array
            if (countOfCurrentChar > 1) {
                String countStr = Integer.toString(countOfCurrentChar);
                for (char c : countStr.toCharArray()) {
                    chars[count++] = c;
                }
            }
        }
        return count;
    }
}
