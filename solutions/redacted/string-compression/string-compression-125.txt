class Solution {

    public int compress(char[] chars) {
        int len = chars.length;
        // Pointer for writing compressed characters
        int ptr = 0;
        // Pointer for the current character sequence
        int i = 0;
        // Pointer for traversing the array
        int j = 0;
        while (j < len) {
            // Find the next different character
            while (j < len && chars[i] == chars[j]) {
                j++;
            }
            // Write the current character
            chars[ptr++] = chars[i];
            // Count of the current character
            int count = j - i;
            if (count > 1) {
                // Convert count to string and store each digit
                for (char c : Integer.toString(count).toCharArray()) {
                    chars[ptr++] = c;
                }
            }
            // Update i to the next character
            i = j;
        }
        // Return the length of the compressed array
        return ptr;
    }
}
