public class Solution {

    public int compress(char[] A) {
        int n = A.length;
        if (n == 1)
            return 1;
        int l = 0;
        for (int r = 1; r < n; r++) {
            int len = 1;
            while (r < n && A[r] == A[r - 1]) {
                len++;
                // r = first invalid
                r++;
            }
            if (len > 1) {
                // go to digits place OR next place to write
                String lenS = String.valueOf(len);
                for (int j = 0; j < lenS.length(); j++) A[++l] = lenS.charAt(j);
            }
            // prepare next pointer
            l++;
            // put next char
            if (r < n)
                A[l] = A[r];
            // edge case R stopped at last index; need to add one more char
            if (r == n - 1)
                l++;
        }
        return l;
    }
}
