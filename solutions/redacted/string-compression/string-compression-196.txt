class Solution {

    public int compress(char[] chars) {
        // StringBuilder to build the compressed string
        StringBuilder str = new StringBuilder();
        int i = 0;
        // Iterate through the character array
        while (i < chars.length) {
            char cur = chars[i];
            int count = 0;
            // Count consecutive occurrences of the current character
            while (i < chars.length && chars[i] == cur) {
                count++;
                i++;
            }
            // Append the character to the StringBuilder
            str.append(String.valueOf(cur));
            // Append the count if it\'s more than 1
            if (count > 1) {
                str.append(Integer.toString(count));
            }
        }
        // Convert the compressed string to a character array
        char[] compressed = str.toString().toCharArray();
        // Update the original chars array with the compressed version
        for (int j = 0; j < compressed.length; j++) {
            chars[j] = compressed[j];
        }
        // Return the length of the compressed array
        return compressed.length;
    }
}
