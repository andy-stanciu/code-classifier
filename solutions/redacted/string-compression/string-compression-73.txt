class Solution {

    public int compress(char[] chars) {
        // Index where we will append the compressed characters
        int appendIndex = 0;
        // Index to read through the original chars array
        int charIndex = 0;
        // Loop through the entire character array
        while (charIndex < chars.length) {
            // Store the current character to compare with others
            char currChar = chars[charIndex];
            // Count how many times the current character appears consecutively
            int count = 0;
            // Count the occurrences of the current character
            while (charIndex < chars.length && chars[charIndex] == currChar) {
                // Move to the next character
                charIndex++;
                // Increment the count of the current character
                count++;
            }
            // Write the current character to the compressed array
            chars[appendIndex++] = currChar;
            // If the count is greater than 1, write the count as well
            if (count > 1) {
                // Convert the count to a string and write each digit to the array
                for (char single : String.valueOf(count).toCharArray()) {
                    chars[appendIndex++] = single;
                }
            }
        }
        // Return the new length of the compressed array
        return appendIndex;
    }
}
