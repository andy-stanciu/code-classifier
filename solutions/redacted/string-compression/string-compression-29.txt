class Solution {

    public int compress(char[] chars) {
        int n = chars.length;
        int j = 0, i = 0;
        if (chars.length == 1)
            return 1;
        // base case as if length is 1 than new length will be 1 only
        while (i < n) {
            // traversing the character length array
            char charac = chars[i];
            int count = 1;
            while (i + 1 < n && chars[i] == chars[i + 1]) {
                // in this we are simply counting number of duplicates like
                //    how many time there is a character is repeated
                count++;
                i++;
            }
            // if character is present 1 time only than just add the character
            if (count <= 1) {
                chars[j++] = charac;
            } else // as when count of character is more than 1
            {
                String ans = count + "";
                // creating string for updating when the count is greater than 9 like
                if (ans.length() == 1) {
                    chars[j++] = charac;
                    chars[j++] = ans.charAt(0);
                } else // case 3 where b is 12 times repeated
                {
                    chars[j++] = charac;
                    for (int p = 0; p < ans.length(); p++) {
                        chars[j++] = ans.charAt(p);
                    }
                }
            }
            i++;
        }
        // returning the new value of the new chars array length;
        return j;
    }
}
