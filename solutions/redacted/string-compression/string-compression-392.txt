class Solution {

    public int compress(char[] chars) {
        //here we are making changes while progressing in the loop itself
        StringBuilder str = new StringBuilder();
        int count = 1;
        // Keep track of where to write in \'chars\'
        int index = 0;
        for (int i = 0; i < chars.length; i++) {
            if (i + 1 < chars.length && chars[i] == chars[i + 1]) {
                count++;
            } else {
                // Write current char to \'chars\' array
                chars[index++] = chars[i];
                if (count > 1) {
                    for (char c : String.valueOf(count).toCharArray()) {
                        // Write count digits to \'chars\' array
                        chars[index++] = c;
                    }
                }
                count = 1;
            }
        }
        // Return the new length of \'chars\'
        return index;
        //Here we are copying str to chars in the end which is easier to understand but low efficiency
        // StringBuilder str = new StringBuilder();
        // int count = 1;
        // for (int i = 0; i < chars.length; i++) {
        //     if (i + 1 < chars.length && chars[i] == chars[i + 1]) {
        //         count++;
        //     } else {
        //         str.append(chars[i]);
        //         System.out.println(chars[i]);
        //         if (count > 1) {
        //             str.append(count);
        //             System.out.println(count);
        //         }
        //         count = 1;
        //     }
        // }
        // System.out.println(str);
        // for (int i = 0; i < str.length(); i++) {
        //     chars[i] = str.charAt(i);
        // }
        // return str.toString().length();
    }
}
