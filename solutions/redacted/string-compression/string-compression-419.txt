class Solution {

    public int compress(char[] chars) {
        int j = 0;
        for (int i = 0; i < chars.length; ) {
            Pair p = calc(chars, i);
            int x = p.x;
            chars[j++] = chars[i];
            if (x != 1) {
                String num = Integer.toString(x);
                char[] arr = num.toCharArray();
                for (char c : arr) chars[j++] = c;
            }
            if (p.y == i)
                i++;
            else
                i = p.y;
        }
        return j;
    }

    private Pair calc(char[] chars, int index) {
        char c = chars[index];
        int count = 0;
        while (index < chars.length && chars[index] == c) {
            count++;
            index++;
        }
        return new Pair(count, index);
    }

    class Pair {

        int x;

        int y;

        Pair(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
}
