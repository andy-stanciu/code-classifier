class Solution {

    public int compress(char[] chars) {
        int count = 1;
        ArrayList<Character> al = new ArrayList<>();
        al.add(chars[0]);
        if (chars.length > 0) {
            for (int i = 1; i < chars.length; i++) {
                if (chars[i - 1] == chars[i])
                    count++;
                else {
                    ArrayList<Character> ch = this.getchars(count);
                    if (count > 1)
                        al.addAll(ch);
                    al.add(chars[i]);
                    count = 1;
                }
            }
            if (count > 1)
                al.addAll(this.getchars(count));
        }
        for (int i = 0; i < al.size(); i++) chars[i] = al.get(i);
        return al.size();
    }

    ArrayList<Character> getchars(int c) {
        ArrayList<Character> ch = new ArrayList<>();
        ArrayList<Integer> digits = new ArrayList<>();
        if (c == 0) {
            ch.add(Character.forDigit(c, 10));
            return ch;
        }
        while (c > 0) {
            int rem = c % 10;
            c /= 10;
            ch.add(0, Character.forDigit(rem, 10));
        }
        System.out.println(ch);
        return ch;
    }
}
