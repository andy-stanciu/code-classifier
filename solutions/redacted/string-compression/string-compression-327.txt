class Solution {

    public int compress(char[] chars) {
        if (chars.length == 1)
            return 1;
        int repeat = 0;
        int p = 0;
        char previous = chars[0];
        StringBuilder sb = new StringBuilder();
        for (char c : chars) {
            if (c == previous) {
                repeat++;
            } else {
                sb.append(c);
                chars[p++] = previous;
                if (repeat > 1) {
                    sb.append(repeat);
                    char[] repeatChars = String.valueOf(repeat).toCharArray();
                    for (char rc : repeatChars) {
                        chars[p++] = rc;
                    }
                }
                previous = c;
                repeat = 1;
            }
        }
        ;
        sb.append(previous);
        chars[p++] = previous;
        if (repeat > 1) {
            sb.append(repeat);
            char[] repeatChars = String.valueOf(repeat).toCharArray();
            for (char rc : repeatChars) {
                chars[p++] = rc;
            }
        }
        return sb.toString().length();
    }
}
