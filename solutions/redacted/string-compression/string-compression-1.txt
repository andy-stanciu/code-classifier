class Solution {

    public int compress(char[] chars) {
        // keep track of current position in compressed array
        int ans = 0;
        // iterate through input array using i pointer
        for (int i = 0; i < chars.length; ) {
            // current character being compressed
            final char letter = chars[i];
            // count of consecutive occurrences of letter
            int count = 0;
            // count consecutive occurrences of letter in input array
            while (i < chars.length && chars[i] == letter) {
                ++count;
                ++i;
            }
            // write letter to compressed array
            chars[ans++] = letter;
            // if count is greater than 1, write count as string to compressed array
            if (count > 1) {
                // convert count to string and iterate over each character in string
                for (final char c : String.valueOf(count).toCharArray()) {
                    chars[ans++] = c;
                }
            }
        }
        // return length of compressed array
        return ans;
    }
}
