class Solution {

    int idx = 0;

    public int compress(char[] chars) {
        int ans = 0;
        char prev = chars[0];
        int freq = 1;
        for (int i = 1; i < chars.length; i++) {
            if (prev == chars[i]) {
                freq++;
            } else {
                ans += foo(freq, chars, prev);
                prev = chars[i];
                freq = 1;
            }
        }
        ans += foo(freq, chars, prev);
        return ans;
    }

    private int foo(int n, char[] chars, char prev) {
        if (n == 1) {
            chars[idx] = prev;
            idx++;
            return 1;
        }
        int ans = 1;
        chars[idx] = prev;
        idx++;
        String r = Integer.toString(n);
        ans += r.length();
        for (int i = 0; i < r.length(); i++) {
            chars[idx] = r.charAt(i);
            idx++;
        }
        return ans;
    }
}
