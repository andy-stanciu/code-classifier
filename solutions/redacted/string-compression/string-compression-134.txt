class Solution {

    public int compress(char[] chars) {
        // Get the length of the input array
        int len = chars.length;
        // Pointer to traverse the array
        int i = 0;
        // Tracks position for compressed result
        int currIndex = 0;
        while (i < len) {
            // Current character to process
            char currChar = chars[i];
            // Count consecutive occurrences
            int count = 0;
            // Count occurrences of the current character
            while (i < len && chars[i] == currChar) {
                count++;
                i++;
            }
            // Place current character in the array
            chars[currIndex] = currChar;
            currIndex++;
            // If count > 1, convert count to string and add each digit
            if (count > 1) {
                // Convert count to string
                String countStr = Integer.toString(count);
                for (char strChar : countStr.toCharArray()) {
                    // Add each digit of count
                    chars[currIndex] = strChar;
                    currIndex++;
                }
            }
        }
        // Return the new length of the compressed array
        return currIndex;
    }
}
