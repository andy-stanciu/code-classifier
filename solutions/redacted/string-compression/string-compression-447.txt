class Solution {

    public int compress(char[] chars) {
        if (chars.length <= 1) {
            return chars.length;
        }
        int index = 0;
        int i = 0;
        while (i < chars.length) {
            int j = i;
            while (j < chars.length && chars[j] == chars[i]) {
                j++;
            }
            chars[index++] = chars[i];
            if (j - i > 1) {
                String count = String.valueOf(j - i);
                for (char c : count.toCharArray()) {
                    chars[index++] = c;
                }
            }
            i = j;
        }
        // Map<Character, Integer> hmap = new HashMap();
        // if(chars.length<1)
        //     return 0;
        // char temp = chars[0];
        // int count =1;
        // for(char ch : chars){
        //     hmap.put(ch, hmap.getOrDefault(ch,0)+1);
        //     if(temp != ch){
        //         temp = ch;
        //         count++;
        //     }
        // }
        // return count*2;
        return index;
    }
}
