class Solution {

    public boolean method1(String param1, String s) {
        HashMap<Character, String> map = new HashMap<>();
        String[] split_string = s.split(" ");
        // Check if the number of words matches the length of the pattern
        if (param1.length() != split_string.length) {
            return false;
        }
        for (int i = 0; i < param1.length(); i++) {
            char currentChar = param1.charAt(i);
            String var1 = split_string[i];
            if (map.containsKey(currentChar)) {
                // If the pattern character already has a mapping, it must match the current word
                if (!map.get(currentChar).equals(var1)) {
                    return false;
                }
            } else {
                // If the pattern character doesn\'t have a mapping yet, but the word is already mapped
                if (map.containsValue(var1)) {
                    return false;
                }
                // Add the mapping
                map.put(currentChar, var1);
            }
        }
        return true;
    }
}
