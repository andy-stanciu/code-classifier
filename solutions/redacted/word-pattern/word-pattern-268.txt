class Solution {

    public boolean method1(String param1, String s) {
        String[] var1 = s.split(" ");
        // Check if the lengths of pattern and words array are the same
        if (param1.length() != var1.length) {
            return false;
        }
        // Hash maps to store the mappings
        HashMap<Character, String> var2 = new HashMap<>();
        HashMap<String, Character> var3 = new HashMap<>();
        for (int i = 0; i < param1.length(); i++) {
            char c = param1.charAt(i);
            String var4 = var1[i];
            // Check if there is a mismatch in the mapping
            if (var2.containsKey(c)) {
                if (!var2.get(c).equals(var4)) {
                    return false;
                }
            } else {
                if (var3.containsKey(var4)) {
                    if (var3.get(var4) != c) {
                        return false;
                    }
                } else {
                    // Establish the bidirectional mapping
                    var2.put(c, var4);
                    var3.put(var4, c);
                }
            }
        }
        return true;
    }
}
