class Solution {

    public boolean method1(String param1, String s) {
        Map<Character, String> map = new HashMap<>();
        //split s to words
        String[] var1 = s.split(" ");
        // if diff length return false
        if (var1.length != param1.length())
            return false;
        //loop 0 to length of either pattern or words, since both has same length
        for (int i = 0; i < var1.length; i++) {
            // c is the char at i of pattern
            Character c = param1.charAt(i);
            // if map has c as key
            if (map.containsKey(c)) {
                // if map has the value on key c which doest equal words at index i then return false
                if (!map.get(c).equals(var1[i]))
                    return false;
            } else {
                // c has not been set yet
                // if map has already sotred this word of other key then return false
                if (map.containsValue(var1[i]))
                    return false;
                // neither key c nor this word is stored yet
                map.put(c, var1[i]);
            }
        }
        return true;
    }
}
