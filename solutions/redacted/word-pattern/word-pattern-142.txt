class Solution {

    public boolean method1(String param1, String s) {
        //we need to create an array for words
        String[] var1 = s.split("\\\\s+");
        //2nd important check is compare the length of both pattern and word array
        if (param1.length() != var1.length)
            return false;
        // Now we will create two maps one for charToWord and other for WordToChar mapping
        Map<Character, String> var2 = new HashMap<>();
        Map<String, Character> var3 = new HashMap<>();
        //now we will loop through the length of either of array since both are equal
        for (int i = 0; i < param1.length(); i++) {
            //now get the word and character at current index
            char c = param1.charAt(i);
            String w = var1[i];
            //we will check for correct pairs if present already else add one
            if (var2.containsKey(c)) {
                if (!var2.get(c).equals(w))
                    return false;
            } else {
                var2.put(c, w);
            }
            //do the same check for second map
            if (var3.containsKey(w)) {
                if (var3.get(w) != c)
                    return false;
            } else {
                var3.put(w, c);
            }
        }
        //Now if all pairs of char and word are consistent then return true
        // Fingers crossed!
        return true;
    }
}
