class Solution {

    public boolean method1(String param1, String s) {
        String[] var1 = s.split(" ");
        if (param1.length() != var1.length) {
            // Different lengths mean no bijection possible
            return false;
        }
        HashMap<Character, String> map = new HashMap<>();
        for (int i = 0; i < param1.length(); i++) {
            char currentChar = param1.charAt(i);
            String var2 = var1[i];
            if (map.containsKey(currentChar)) {
                // Check if the current character in pattern maps to the same word
                if (!map.get(currentChar).equals(var2)) {
                    return false;
                }
            } else {
                // Check if the current word is already mapped to another character
                if (map.containsValue(var2)) {
                    return false;
                }
                map.put(currentChar, var2);
            }
        }
        return true;
    }
}
