class Solution {

    /*
    public void sortColors(int[] nums) {
        int n=nums.length;
        for(int i=0;i<n-1;i++){
            boolean swapped=false;
            for(int j=0;j<n-i-1;j++){
                if(nums[j]>nums[j+1]){
                    int temp=nums[j];
                    nums[j]=nums[j+1];
                    nums[j+1]=temp;
                    swapped=true;z
                }
            }
            if(swapped=false){
                break;
            }
        }
    }*/
    public void merge(int s1, int e1, int s2, int e2, int[] nums) {
        int i = s1;
        int j = s2;
        while (i <= s2 && j <= e2) {
            if (nums[i] < nums[j]) {
                i++;
            } else {
                int temp = nums[j];
                for (int k = j; k > i; k--) {
                    nums[k] = nums[k - 1];
                }
                nums[i] = temp;
                i++;
                j++;
                s2++;
            }
        }
    }

    public void method1(int s, int e, int[] nums) {
        if (s >= e) {
            return;
        }
        int m = s + ((e - s) / 2);
        method1(s, m, nums);
        method1(m + 1, e, nums);
        merge(s, m, m + 1, e, nums);
    }

    public void method2(int[] nums) {
        method1(0, nums.length - 1, nums);
    }
}
