/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        ListNode dummy = new ListNode(-1);
        ListNode temp = dummy;
        PriorityQueue<ListNode> queue = new PriorityQueue<>((ListNode o1, ListNode o2) -> Integer.compare(o1.val, o2.val));
        for (int i = 0; i < param1.length; i++) {
            if (param1[i] != null) {
                queue.add(param1[i]);
            }
        }
        while (!queue.isEmpty()) {
            ListNode node = queue.poll();
            temp.next = node;
            temp = temp.next;
            if (temp.next != null) {
                queue.add(temp.next);
            }
        }
        return dummy.next;
    }
}
