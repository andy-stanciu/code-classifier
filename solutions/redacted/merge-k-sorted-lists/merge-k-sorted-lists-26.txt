/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        return util1(param1);
    }

    public ListNode util1(ListNode[] param1) {
        if (param1.length == 0) {
            return null;
        }
        PriorityQueue<ListNode> pq = new PriorityQueue<ListNode>((a, b) -> (a.val - b.val));
        for (int i = 0; i < param1.length; i++) {
            if (param1[i] != null) {
                pq.add(param1[i]);
            }
        }
        ListNode head = null;
        ListNode tail = null;
        while (pq.isEmpty() == false) {
            ListNode popped = pq.poll();
            ListNode toInsert = popped.next;
            if (toInsert != null) {
                pq.add(toInsert);
            }
            if (head == null) {
                head = popped;
                tail = popped;
            } else {
                tail.next = popped;
                tail = tail.next;
            }
        }
        return head;
    }
}
