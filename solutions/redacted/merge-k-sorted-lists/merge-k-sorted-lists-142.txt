/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        ListNode dummy = new ListNode();
        ListNode head = dummy;
        PriorityQueue<ListNode> qu = new PriorityQueue<>((a, b) -> a.val - b.val);
        for (ListNode node : param1) if (node != null)
            qu.offer(node);
        while (!qu.isEmpty()) {
            ListNode top = qu.poll();
            if (top.next != null) {
                qu.offer(top.next);
            }
            head.next = top;
            head = top;
        }
        return dummy.next;
    }
}
