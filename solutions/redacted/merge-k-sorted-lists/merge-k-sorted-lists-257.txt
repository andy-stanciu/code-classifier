/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Integer> minHeap = new PriorityQueue();
        for (ListNode l : param1) {
            while (l != null) {
                minHeap.add(l.val);
                l = l.next;
            }
        }
        ListNode res = new ListNode(0);
        ListNode curr = new ListNode(0);
        curr.next = res;
        while (!minHeap.isEmpty()) {
            res.next = new ListNode(minHeap.remove());
            res = res.next;
        }
        return curr.next.next;
    }
}
