/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0 || param1 == null)
            return null;
        // Creating a min heap
        PriorityQueue<ListNode> queue = new PriorityQueue<>(Comparator.comparingInt(o -> o.val));
        // Creating new list with dummy head
        ListNode head = new ListNode();
        ListNode curr = head;
        // Add all nodes (heads) to queue
        for (ListNode node : param1) {
            if (node != null)
                queue.add(node);
        }
        while (!queue.isEmpty()) {
            // Adding smallest node to new list
            curr.next = queue.poll();
            curr = curr.next;
            // Adding next linkedlist element to queue
            if (curr.next != null)
                queue.add(curr.next);
        }
        return head.next;
    }
}
