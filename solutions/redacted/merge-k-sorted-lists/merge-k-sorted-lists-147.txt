/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Integer> arr = new PriorityQueue<>((a, b) -> a - b);
        for (ListNode node : param1) {
            ListNode temp = node;
            while (temp != null) {
                arr.add(temp.val);
                temp = temp.next;
            }
        }
        ListNode h = null;
        ListNode prev = null;
        int i = 0;
        while (!arr.isEmpty()) {
            int a = arr.poll();
            ListNode current = new ListNode();
            if (i == 0) {
                h = current;
            }
            current.val = a;
            if (prev != null) {
                prev.next = current;
            }
            prev = current;
            current.next = null;
            i++;
        }
        return h;
    }
}
