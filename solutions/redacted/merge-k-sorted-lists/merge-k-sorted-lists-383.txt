/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        Queue<ListNode> min = new PriorityQueue<>((a, b) -> a.val - b.val);
        for (ListNode nodes : param1) {
            if (nodes == null)
                continue;
            min.add(nodes);
        }
        ListNode temp = new ListNode();
        ListNode var1 = temp;
        while (!min.isEmpty()) {
            ListNode top = min.poll();
            var1.next = top;
            var1 = var1.next;
            if (top.next != null) {
                min.add(top.next);
            }
        }
        return temp.next;
    }
}
