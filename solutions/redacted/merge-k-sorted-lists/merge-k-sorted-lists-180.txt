/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        int n = param1.length;
        ArrayList<Integer> ans = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            ListNode itr = param1[i];
            while (itr != null) {
                ans.add(itr.val);
                itr = itr.next;
            }
        }
        Collections.sort(ans);
        if (n == 0 || ans.size() == 0)
            return null;
        ListNode head = new ListNode(ans.get(0));
        ListNode ptr = head;
        for (int i = 1; i < ans.size(); i++) {
            ListNode a = new ListNode(ans.get(i));
            ptr.next = a;
            ptr = a;
        }
        ptr.next = null;
        return head;
    }
}
