/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        int n = param1.length;
        return method3(0, n - 1, param1);
    }

    ListNode method2(ListNode L1, ListNode L2) {
        if (L1 == null)
            return L2;
        if (L2 == null)
            return L1;
        if (L1.val <= L2.val) {
            L1.next = method2(L1.next, L2);
            return L1;
        } else {
            L2.next = method2(L1, L2.next);
            return L2;
        }
    }

    ListNode method3(int s, int e, ListNode[] param1) {
        if (s > e)
            return null;
        if (s == e) {
            return param1[s];
        }
        int mid = s + (e - s) / 2;
        ListNode L1 = method3(s, mid, param1);
        ListNode L2 = method3(mid + 1, e, param1);
        return method2(L1, L2);
    }
}
