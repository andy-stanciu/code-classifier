/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        int len = param1.length;
        int start = 0;
        int end = len - 1;
        if (len == 0)
            return null;
        while (start < end) {
            param1[start] = method2(param1[start], param1[end]);
            end--;
        }
        return param1[start];
    }

    public ListNode method2(ListNode node1, ListNode node2) {
        if (node1 == null && node2 != null)
            return node2;
        if (node1 != null && node2 == null)
            return node1;
        if (node1 == null && node2 == null)
            return null;
        if (node1.val < node2.val) {
            node1.next = method2(node1.next, node2);
            return node1;
        } else {
            node2.next = method2(node1, node2.next);
        }
        return node2;
    }
}
