class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0) {
            return null;
        }
        while (param1.length > 1) {
            List<ListNode> var1 = new ArrayList<>();
            for (int i = 0; i < param1.length; i += 2) {
                ListNode l1 = param1[i];
                ListNode l2 = (i + 1 < param1.length) ? param1[i + 1] : null;
                var1.add(method2(l1, l2));
            }
            param1 = var1.toArray(new ListNode[0]);
        }
        return param1[0];
    }

    private ListNode method2(ListNode l1, ListNode l2) {
        ListNode dummyHead = new ListNode(0);
        ListNode current = dummyHead;
        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                current.next = l1;
                l1 = l1.next;
            } else {
                current.next = l2;
                l2 = l2.next;
            }
            current = current.next;
        }
        current.next = (l1 != null) ? l1 : l2;
        return dummyHead.next;
    }
}
