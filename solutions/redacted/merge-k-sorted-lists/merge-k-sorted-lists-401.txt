/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0) {
            return null;
        }
        return method2(param1, 0, param1.length - 1);
    }

    public ListNode method2(ListNode[] param1, int start, int end) {
        if (start == end) {
            return param1[start];
        }
        int mid = start + (end - start) / 2;
        ListNode left = method2(param1, start, mid);
        ListNode right = method2(param1, mid + 1, end);
        return method3(left, right);
    }

    public ListNode method3(ListNode l1, ListNode l2) {
        if (l1 != null && l2 != null) {
            if (l1.val < l2.val) {
                l1.next = method3(l1.next, l2);
                return l1;
            } else {
                l2.next = method3(l1, l2.next);
                return l2;
            }
        }
        if (l1 == null) {
            return l2;
        }
        return l1;
    }
}
