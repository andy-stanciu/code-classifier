/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0) {
            return null;
        } else if (param1.length == 1) {
            return param1[0];
        }
        PriorityQueue<ListNode> pq = new PriorityQueue<>((a, b) -> a.val - b.val);
        for (int i = 0; i < param1.length; i++) {
            ListNode temphead = param1[i];
            while (temphead != null) {
                pq.add(temphead);
                temphead = temphead.next;
            }
        }
        ListNode dummy = new ListNode(-1);
        ListNode ans = dummy;
        while (pq.size() > 0) {
            ListNode nd = pq.remove();
            dummy.next = nd;
            dummy = dummy.next;
        }
        dummy.next = null;
        return ans.next;
    }
}
