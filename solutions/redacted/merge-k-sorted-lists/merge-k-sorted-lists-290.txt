/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    ListNode method1(ListNode l1, ListNode l2) {
        if (l1 == null) {
            return l2;
        }
        if (l2 == null) {
            return l1;
        }
        if (l1.val <= l2.val) {
            l1.next = method1(l1.next, l2);
            return l1;
        } else {
            l2.next = method1(l1, l2.next);
            return l2;
        }
    }

    ListNode method2(int start, int end, ListNode[] param1) {
        if (start > end) {
            return null;
        }
        if (start == end) {
            return param1[start];
        }
        int mid = start + (end - start) / 2;
        ListNode L1 = method2(start, mid, param1);
        ListNode L2 = method2(mid + 1, end, param1);
        return method1(L1, L2);
    }

    public ListNode method3(ListNode[] param1) {
        int k = param1.length;
        if (k == 0) {
            return null;
        }
        return method2(0, k - 1, param1);
    }
}
