/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        Queue<ListNode> queue = new PriorityQueue<>((a, b) -> a.val - b.val);
        if (param1 == null || param1.length == 0)
            return null;
        for (int i = 0; i < param1.length; i++) if (param1[i] != null)
            queue.offer(param1[i]);
        ListNode head, tail, temp;
        head = tail = null;
        while (!queue.isEmpty()) {
            temp = queue.poll();
            if (head == null)
                head = tail = temp;
            else
                tail = tail.next = temp;
            if (temp.next != null)
                queue.offer(temp.next);
        }
        return head;
    }
}
