class Solution {

    public ListNode conquer(ListNode a, ListNode b) {
        if (a == null)
            return b;
        if (b == null)
            return a;
        if (a.val < b.val) {
            a.next = conquer(a.next, b);
            return a;
        }
        b.next = conquer(a, b.next);
        return b;
    }

    public ListNode divide(ListNode[] param1, int st, int end) {
        if (st >= end) {
            return param1[st];
        }
        int mid = st + (end - st) / 2;
        ListNode a = divide(param1, st, mid);
        ListNode b = divide(param1, mid + 1, end);
        return conquer(a, b);
    }

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0)
            return null;
        return divide(param1, 0, param1.length - 1);
    }
}
