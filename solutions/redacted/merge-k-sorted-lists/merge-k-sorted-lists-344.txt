/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        ListNode dummyNode = new ListNode(-1);
        ListNode cur = dummyNode;
        while (l1 != null && l2 != null) {
            if (l1.val < l2.val) {
                cur.next = l1;
                cur = cur.next;
                l1 = l1.next;
            } else {
                cur.next = l2;
                cur = cur.next;
                l2 = l2.next;
            }
        }
        if (l1 != null) {
            cur.next = l1;
            cur = cur.next;
        }
        if (l2 != null) {
            cur.next = l2;
            cur = cur.next;
        }
        return dummyNode.next;
    }

    public ListNode method2(ListNode[] param1) {
        if (param1 == null || param1.length == 0) {
            return null;
        }
        int n = param1.length;
        for (int i = 1; i < n; i++) {
            param1[0] = method1(param1[0], param1[i]);
        }
        return param1[0];
    }
}
