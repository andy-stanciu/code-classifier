/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0)
            return null;
        Queue<ListNode> minHeap = new PriorityQueue<>(Comparator.comparingInt(head -> head.val));
        for (ListNode listNode : param1) {
            if (listNode != null)
                minHeap.offer(listNode);
        }
        ListNode head = null, cur = null;
        while (!minHeap.isEmpty()) {
            ListNode curNode = minHeap.poll();
            if (curNode.next != null)
                minHeap.offer(curNode.next);
            if (head == null) {
                head = new ListNode(curNode.val);
                cur = head;
            } else {
                cur.next = new ListNode(curNode.val);
                cur = cur.next;
            }
        }
        return head;
    }
}
