/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        if (param1.length == 0) {
            return null;
        }
        int i = 0;
        while (i < param1.length) {
            ListNode currentNode = param1[i];
            ListNode node = currentNode;
            while (node != null) {
                pq.add(node.val);
                node = node.next;
            }
            i++;
        }
        ListNode head = null;
        ListNode prevNode = null;
        while (!pq.isEmpty()) {
            ListNode newNode = new ListNode(pq.remove());
            if (head == null) {
                head = newNode;
                prevNode = head;
            } else {
                prevNode.next = newNode;
                prevNode = prevNode.next;
            }
        }
        if (prevNode != null) {
            prevNode.next = null;
        }
        return head;
    }
}
