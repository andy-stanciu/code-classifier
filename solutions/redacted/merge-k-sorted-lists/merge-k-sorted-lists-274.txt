/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0) {
            return null;
        }
        return method2(param1, 0, param1.length - 1);
    }

    public static ListNode method2(ListNode[] param1, int s, int e) {
        if (s == e)
            return param1[s];
        if (s + 1 == e)
            return method3(param1[s], param1[e]);
        int m = s + (e - s) / 2;
        ListNode l = method2(param1, s, m);
        ListNode r = method2(param1, m + 1, e);
        return method3(l, r);
    }

    public static ListNode method3(ListNode l1, ListNode l2) {
        if (l1 == null)
            return l2;
        if (l2 == null)
            return l1;
        if (l1.val < l2.val) {
            l1.next = method3(l1.next, l2);
            return l1;
        } else {
            l2.next = method3(l2.next, l1);
            return l2;
        }
    }
}
