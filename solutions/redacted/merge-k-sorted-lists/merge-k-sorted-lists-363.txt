/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Integer> q = new PriorityQueue<>();
        for (int i = 0; i < param1.length; i++) {
            ListNode temp = param1[i];
            while (temp != null) {
                q.add(temp.val);
                temp = temp.next;
            }
        }
        ListNode result = new ListNode();
        ListNode f = result;
        while (!q.isEmpty()) {
            ListNode temp = new ListNode(q.poll());
            if (result == null) {
                result = temp;
                f = result;
            } else {
                f.next = temp;
                f = f.next;
            }
        }
        f.next = null;
        return result.next;
    }
}
