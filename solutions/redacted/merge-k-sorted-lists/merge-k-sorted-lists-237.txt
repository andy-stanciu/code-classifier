/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        ListNode start = new ListNode();
        ListNode p = start;
        for (ListNode node : param1) {
            while (node != null) {
                pq.offer(node.val);
                node = node.next;
            }
        }
        while (!pq.isEmpty()) {
            int el = pq.poll();
            ListNode temp = new ListNode(el);
            if (p == null)
                p = temp;
            else {
                while (p.next != null) p = p.next;
                p.next = temp;
                p = temp;
            }
        }
        return start.next;
    }
}
