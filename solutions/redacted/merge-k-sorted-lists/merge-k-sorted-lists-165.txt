/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0) {
            return null;
        }
        // Initialize the result with the first list.
        ListNode result = param1[0];
        for (int i = 1; i < param1.length; i++) {
            result = method2(result, param1[i]);
        }
        return result;
    }

    public ListNode method2(ListNode list1, ListNode list2) {
        // Create a dummy node to serve as head of merged List.
        ListNode head = new ListNode(0);
        ListNode current = head;
        while (list1 != null && list2 != null) {
            if (list1.val < list2.val) {
                current.next = list1;
                list1 = list1.next;
            } else {
                current.next = list2;
                list2 = list2.next;
            }
            current = current.next;
        }
        if (list1 != null) {
            current.next = list1;
        }
        if (list2 != null) {
            current.next = list2;
        }
        return head.next;
    }
}
