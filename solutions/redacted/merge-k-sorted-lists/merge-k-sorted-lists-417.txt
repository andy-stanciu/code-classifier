/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for (int i = 0; i < param1.length; i++) {
            ListNode temp = param1[i];
            while (temp != null) {
                pq.add(temp.val);
                temp = temp.next;
            }
        }
        // Create a dummy node to start the merged list
        ListNode dummy = new ListNode(-1);
        ListNode current = dummy;
        // Construct the new sorted list from the priority queue
        while (!pq.isEmpty()) {
            current.next = new ListNode(pq.remove());
            current = current.next;
        }
        // Return the merged list starting from the next of dummy node
        return dummy.next;
    }
}
