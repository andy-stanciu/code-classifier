/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        PriorityQueue<Integer> q = new PriorityQueue();
        for (ListNode head : param1) {
            addNums(q, head);
        }
        ReturnNode res = new ReturnNode();
        while (!q.isEmpty()) {
            res.addToList(q.poll());
        }
        return res.head;
    }

    public void addNums(PriorityQueue<Integer> q, ListNode head) {
        if (head == null)
            return;
        addNums(q, head.next);
        q.offer(head.val);
    }
}

class ReturnNode {

    public ListNode head;

    ReturnNode() {
        this.head = null;
    }

    public void addToList(int num) {
        if (this.head == null) {
            this.head = new ListNode(num);
        } else
            this.addToListHelper(num, this.head);
        return;
    }

    private void addToListHelper(int num, ListNode head) {
        if (head.next == null) {
            head.next = new ListNode(num);
            return;
        }
        this.addToListHelper(num, head.next);
        return;
    }
}
