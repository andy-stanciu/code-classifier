class Solution {

    public ListNode method1(ListNode[] param1) {
        ListNode res = new ListNode();
        // Special Test Case - Empty array
        if (param1 == null || param1.length == 0)
            return null;
        res = param1[0];
        if (param1.length == 1) {
            // Special Test Case - One list in array
            return res;
        }
        for (int i = 0; i <= param1.length - 2; i++) {
            // Merge first 2 and store in res, pass the result list again with the next list.
            res = method2(res, param1[i + 1]);
        }
        return res;
    }

    // Simple merge 2 linked lists code similar to merge 2 arrays
    public ListNode method2(ListNode l1, ListNode l2) {
        ListNode l3 = new ListNode(-1);
        ListNode l3head = l3;
        while (l1 != null && l2 != null) {
            if (l1.val >= l2.val) {
                l3.next = l2;
                l2 = l2.next;
            } else {
                l3.next = l1;
                l1 = l1.next;
            }
            l3 = l3.next;
        }
        while (l1 != null) {
            l3.next = l1;
            l1 = l1.next;
            l3 = l3.next;
        }
        while (l2 != null) {
            l3.next = l2;
            l2 = l2.next;
            l3 = l3.next;
        }
        return l3head.next;
    }
}
