/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0)
            return null;
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for (ListNode list : param1) {
            ListNode temp = list;
            while (temp != null) {
                pq.add(temp.val);
                temp = temp.next;
            }
        }
        ListNode d = new ListNode(0);
        ListNode head = d;
        while (!pq.isEmpty()) {
            ListNode node = new ListNode(pq.remove());
            d.next = node;
            d = d.next;
        }
        return head.next;
    }
}
