/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
//Using PriorityQueue
class Solution {

    public ListNode method1(ListNode[] param1) {
        Queue<ListNode> q = new PriorityQueue<ListNode>((a, b) -> a.val - b.val);
        // only head pointer of all lists are added
        for (ListNode l : param1) {
            if (l != null) {
                q.add(l);
            }
        }
        ListNode head = new ListNode(-1);
        ListNode point = head;
        while (!q.isEmpty()) {
            point.next = q.poll();
            point = point.next;
            if (point.next != null) {
                // add next of current smallest
                q.add(point.next);
            }
        }
        return head.next;
    }
}
