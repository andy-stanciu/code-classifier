/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        int size = param1.length;
        int interval = 1;
        while (interval < size) {
            for (int i = 0; i < size - interval; i += 2 * interval) {
                param1[i] = method2(param1[i], param1[i + interval]);
            }
            interval *= 2;
        }
        return size > 0 ? param1[0] : null;
    }

    private ListNode method2(ListNode l1, ListNode l2) {
        ListNode res = new ListNode(0);
        ListNode dummy = res;
        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                dummy.next = l1;
                l1 = l1.next;
            } else {
                dummy.next = l2;
                l2 = l2.next;
            }
            dummy = dummy.next;
        }
        if (l1 != null) {
            dummy.next = l1;
        } else if (l2 != null) {
            dummy.next = l2;
        }
        return res.next;
    }
}
