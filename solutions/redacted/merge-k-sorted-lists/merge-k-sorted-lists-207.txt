/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1.length == 0)
            return null;
        PriorityQueue<ListNode> minHeap = new PriorityQueue<>((a, b) -> a.val - b.val);
        for (ListNode head : param1) {
            if (head != null)
                minHeap.add(head);
        }
        ListNode dummy = new ListNode(-1);
        ListNode h3 = dummy;
        while (!minHeap.isEmpty()) {
            ListNode curr = minHeap.remove();
            h3.next = curr;
            h3 = h3.next;
            if (curr.next != null)
                minHeap.add(curr.next);
        }
        ListNode newHead = dummy.next;
        dummy.next = null;
        return newHead;
    }
}
