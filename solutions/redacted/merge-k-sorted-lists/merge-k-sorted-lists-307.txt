/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0)
            return null;
        // increasing order of node values,
        PriorityQueue<ListNode> pq = new PriorityQueue<>((a, b) -> a.val - b.val);
        for (int i = 0; i < param1.length; i++) {
            ListNode node = param1[i];
            while (node != null) {
                pq.add(node);
                node = node.next;
            }
        }
        //first smallest element would be head;
        ListNode head = pq.poll();
        ListNode temp = head;
        while (pq.size() > 0) {
            ListNode nextNode = pq.poll();
            temp.next = nextNode;
            temp = temp.next;
        }
        if (temp != null)
            temp.next = null;
        return head;
    }
}
