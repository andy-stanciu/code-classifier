/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode[] param1) {
        if (param1 == null || param1.length == 0)
            return null;
        PriorityQueue<ListNode> queue = new PriorityQueue<>((o1, o2) -> (o1.val) - (o2.val));
        ListNode dummy = new ListNode(0);
        ListNode tail = dummy;
        for (ListNode node : param1) {
            if (node != null)
                queue.add(node);
        }
        while (!queue.isEmpty()) {
            tail.next = queue.poll();
            tail = tail.next;
            if (tail.next != null)
                queue.add(tail.next);
        }
        return dummy.next;
    }
}
