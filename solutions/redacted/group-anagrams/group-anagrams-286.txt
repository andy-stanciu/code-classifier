class Solution {

    public List<List<String>> method1(String[] strs) {
        List<List<String>> ans = new ArrayList<>();
        for (int i = 0; i < strs.length; i++) {
            String str = strs[i];
            Boolean isAdded = false;
            for (int j = 0; j < ans.size(); j++) {
                List<String> list = ans.get(j);
                if (list.size() > 0) {
                    String str2 = list.get(0);
                    if (isAnagram(str, str2)) {
                        list.add(str);
                        isAdded = true;
                        break;
                    }
                }
            }
            if (!isAdded) {
                List<String> list1 = new ArrayList<>();
                list1.add(str);
                ans.add(list1);
            }
        }
        return ans;
    }

    private boolean isAnagram(String s1, String s2) {
        if (s1.length() != s2.length())
            return false;
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s1.length(); i++) {
            if (map.containsKey(s1.charAt(i)))
                map.put(s1.charAt(i), map.get(s1.charAt(i)) + 1);
            else
                map.put(s1.charAt(i), 1);
        }
        for (int i = 0; i < s2.length(); i++) {
            if (map.containsKey(s2.charAt(i))) {
                int count = map.get(s2.charAt(i));
                if (count == 1)
                    map.remove(s2.charAt(i));
                else
                    map.put(s2.charAt(i), map.get(s2.charAt(i)) - 1);
            } else
                return false;
        }
        return map.size() == 0;
    }
}
