class Solution {

    public List<List<String>> method1(String[] strs) {
        //this will hold our result. This will be returned.
        List<List<String>> result = new ArrayList<>();
        //making a copy of the given string array
        String[] arr = strs.clone();
        for (int i = 0; i < arr.length; i++) {
            //sorting all the strings in the copied array
            arr[i] = sortedString(arr[i]);
        }
        //this will hold all the sorted string that we have added in the result list
        List<String> sortStrings = new ArrayList<>();
        for (int i = 0; i < arr.length; i++) {
            //traversing the copied array
            if (sortStrings.contains(arr[i])) {
                //index of the elem already in result
                int idx = sortStrings.indexOf(arr[i]);
                //adding the original string at that index to the result list (so that it belongs in the anagram section).
                result.get(idx).add(strs[i]);
            } else {
                //creating a new string list
                List<String> strList = new ArrayList<>();
                sortStrings.add(arr[i]);
                strList.add(strs[i]);
                result.add(strList);
            }
        }
        return result;
    }

    //sorting the strings function
    public String sortedString(String str) {
        char[] arr = str.toCharArray();
        Arrays.sort(arr);
        String sorted = String.valueOf(arr);
        return sorted;
    }
}
