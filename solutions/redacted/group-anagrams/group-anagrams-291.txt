class Solution {

    public List<List<String>> method1(String[] strs) {
        //to explain simply for this we are going to get the string and then
        //sort it and put it into a hashmap as a key (sorted string) then any string
        // that is identical to a particular key when sorted would be added to the values
        // for that string
        //start with setting up the reult list
        List<List<String>> result = new ArrayList<>();
        if (strs == null || strs.length == 0)
            return result;
        //maske the hash map to store the string key and array of strings values
        HashMap<String, List<String>> map = new HashMap<>();
        // for each str in the list of string
        for (String str : strs) {
            //turn the string to an array of characters
            char[] chars = str.toCharArray();
            //then sort this charcters
            Arrays.sort(chars);
            //change sorted charcters back to string
            String sortedStr = new String(chars);
            //check if the sorted string is already a key in the hashmap
            //if not add it as a new key
            if (!map.containsKey(sortedStr)) {
                map.put(sortedStr, new ArrayList<>());
            }
            //get the key and then add the str loop where key is
            map.get(sortedStr).add(str);
        }
        result.addAll(map.values());
        return result;
    }
}
