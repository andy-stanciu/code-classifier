class Solution {

    public List<List<String>> method1(String[] strs) {
        HashMap<String, List<String>> map = new HashMap<>();
        // iterate and get the similar words in hashmap by sorting
        for (String word : strs) {
            //sort the word
            String arrangedWord = sort(word);
            // if sorted word already exists then add the word to list
            if (map.containsKey(arrangedWord)) {
                List<String> list = map.get(arrangedWord);
                list.add(word);
                map.put(arrangedWord, list);
            } else //if no : then there is currently no anagram.
            // add it to map sortedword and the word
            {
                List<String> list = new ArrayList<>();
                list.add(word);
                map.put(arrangedWord, list);
            }
        }
        List<List<String>> ans = new ArrayList<>();
        //our lists are present as values for each sorted word
        //iterate keyset and get the lists
        for (String key : map.keySet()) {
            ans.add(map.get(key));
        }
        return ans;
    }

    //sorting a word
    public String sort(String word) {
        char[] arr = word.toCharArray();
        Arrays.sort(arr);
        return new String(arr);
    }
}
