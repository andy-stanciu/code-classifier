class Solution {

    public List<List<String>> method1(String[] strs) {
        //map - group anagrams in hashmap
        //return value set, which will be list of anagrams
        //key will be sorted value of string
        Map<String, List<String>> anagramMap = new HashMap<>();
        List<List<String>> solutionString = new ArrayList<>();
        for (int i = 0; i < strs.length; i++) {
            String word = strs[i];
            //need to sort word, then insert into map
            //key
            char[] charArray = word.toCharArray();
            String key = buildKey(charArray);
            //values
            if (!anagramMap.containsKey(key)) {
                List<String> stringValues = new ArrayList<>();
                stringValues.add(word);
                anagramMap.put(key, stringValues);
            } else {
                List<String> stringValues = new ArrayList<>();
                stringValues = anagramMap.get(key);
                stringValues.add(word);
                anagramMap.put(key, stringValues);
            }
        }
        for (List<String> list : anagramMap.values()) {
            solutionString.add(list);
        }
        return solutionString;
    }

    public String buildKey(char[] charArray) {
        Arrays.sort(charArray);
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < charArray.length; i++) {
            char letter = charArray[i];
            sb.append(letter);
        }
        return sb.toString();
    }
}
