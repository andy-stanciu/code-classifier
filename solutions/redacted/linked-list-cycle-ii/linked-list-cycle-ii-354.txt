/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode method1(ListNode head) {
        ListNode first = head;
        ListNode last = head;
        // Step1= check if there is cycle or not
        while (last != null && last.next != null) {
            first = first.next;
            last = last.next.next;
            if (first == last) {
                break;
            }
        }
        //if no cycle just break it
        if (last == null || last.next == null) {
            return null;
        }
        //Step 2= if cycle found get the index of the node
        first = head;
        while (first != last) {
            first = first.next;
            last = last.next;
        }
        return first;
    }
}
//DONE
