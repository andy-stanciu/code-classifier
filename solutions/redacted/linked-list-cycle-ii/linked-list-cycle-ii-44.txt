/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode method1(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        Boolean check = false;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            if (slow == fast) {
                check = true;
                break;
            }
        }
        if (check == false) {
            return null;
        }
        ListNode s1 = head;
        //we can keep slow or fast pointer here
        ListNode s2 = slow;
        while (s1 != s2) {
            s1 = s1.next;
            s2 = s2.next;
        }
        return s1;
    }
}
