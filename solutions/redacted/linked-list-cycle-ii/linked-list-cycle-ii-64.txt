/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode findMeetPoint(ListNode head) {
        if (head == null)
            return null;
        ListNode slow = head, fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            if (slow == fast)
                return slow;
        }
        return null;
    }

    public ListNode method1(ListNode head) {
        if (head == null)
            return null;
        ListNode meetPoint = findMeetPoint(head);
        ListNode temp = head;
        if (meetPoint == null)
            return null;
        while (temp != meetPoint) {
            temp = temp.next;
            meetPoint = meetPoint.next;
        }
        return temp;
    }
}
