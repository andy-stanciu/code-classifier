/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return null;
        }
        // HashSet<ListNode>set=new HashSet<>();
        // ListNode curr=head;
        // while(curr!=null){
        //    if(set.contains(curr)){
        //        return curr;
        //    }
        //    else{
        //        set.add(curr);
        //    }
        //    curr=curr.next;
        // }
        // return null;
        ListNode slow = head;
        ListNode fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            if (slow == fast) {
                break;
            }
        }
        if (fast == null || fast.next == null)
            return null;
        ListNode temp = head;
        while (temp != slow) {
            temp = temp.next;
            slow = slow.next;
        }
        return slow;
    }
}
