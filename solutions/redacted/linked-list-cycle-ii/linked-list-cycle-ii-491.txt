/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode method1(ListNode head) {
        // Start both pointers from head
        ListNode fast = head, slow = head;
        // advance both at different speed
        // until they meet once
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            // As soon as they meet
            // start from the and ove at same speed
            if (fast == slow) {
                while (head != slow) {
                    head = head.next;
                    slow = slow.next;
                }
                return slow;
            }
        }
        return null;
    }
}
