/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode method1(ListNode head) {
        int var1 = 0;
        boolean var2 = false;
        if (head == null) {
            return null;
        }
        if (head.next == null) {
            return null;
        }
        ListNode slowPointer = head;
        ListNode fastPointer = head;
        while (fastPointer != null && fastPointer.next != null) {
            fastPointer = fastPointer.next.next;
            slowPointer = slowPointer.next;
            if (fastPointer == slowPointer) {
                var2 = true;
                break;
            }
        }
        if (var2) {
            do {
                slowPointer = slowPointer.next;
                var1++;
            } while (slowPointer != fastPointer);
            fastPointer = head;
            while (fastPointer != slowPointer) {
                fastPointer = fastPointer.next;
                slowPointer = slowPointer.next;
            }
            return slowPointer;
        }
        return null;
    }
}
