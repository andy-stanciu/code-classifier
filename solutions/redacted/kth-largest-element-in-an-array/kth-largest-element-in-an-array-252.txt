class Solution {

    public int method1(int[] nums, int k) {
        PriorityQueue<Integer> var1 = new PriorityQueue<>();
        int n = nums.length;
        // Add first \'k\' elements to the min-heap
        for (int i = 0; i < k; i++) {
            var1.add(nums[i]);
        }
        // For the rest of the elements, maintain the size of the heap to \'k\'
        for (int i = k; i < n; i++) {
            if (var1.peek() < nums[i]) {
                // Remove the smallest element
                var1.poll();
                // Add the new element
                var1.add(nums[i]);
            }
        }
        // The root of the heap is the Kth largest element
        return var1.peek();
    }
}
