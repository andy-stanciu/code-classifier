public class Solution {

    public int method1(int[] nums, int k) {
        int left = 0, right = nums.length - 1;
        Random var1 = new Random();
        while (true) {
            int var2 = left + var1.nextInt(right - left + 1);
            int var3 = partition(nums, left, right, var2);
            if (var3 == nums.length - k) {
                return nums[var3];
            } else if (var3 > nums.length - k) {
                right = var3 - 1;
            } else {
                left = var3 + 1;
            }
        }
    }

    private int partition(int[] nums, int left, int right, int var2) {
        int pivot = nums[var2];
        swap(nums, var2, right);
        int var4 = left;
        for (int i = left; i < right; i++) {
            if (nums[i] < pivot) {
                swap(nums, i, var4);
                var4++;
            }
        }
        swap(nums, right, var4);
        return var4;
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
