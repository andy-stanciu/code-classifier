class Solution {

    public int method1(int[] nums, int k) {
        //Use a min heap ,bydefault PriorityQueue is a min heap
        PriorityQueue<Integer> var1 = new PriorityQueue<>();
        //build the heap with the first k element
        for (int i = 0; i < k; i++) {
            var1.add(nums[i]);
        }
        //process the rest of the elements check if the current element is greater than the peek element of the min heap then remove the element and add the current element
        for (int i = k; i < nums.length; i++) {
            if (nums[i] > var1.peek()) {
                var1.poll();
                var1.add(nums[i]);
            }
        }
        //the peek element of the heap will be the kth largest element
        return var1.peek();
    }
}
