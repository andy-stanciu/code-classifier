class Solution {

    public boolean method1(String s, String t) {
        char[] str = s.toCharArray();
        char[] str2 = t.toCharArray();
        int i = 0;
        int n = s.length();
        int m = t.length();
        // If s is empty, it\'s always a subsequence of t
        if (n <= 0) {
            return true;
        }
        // Traverse t with j
        for (int j = 0; j < m; j++) {
            // Check if the current character in s matches the current character in t
            if (str[i] == str2[j]) {
                // Move i to the next character in s
                i++;
            }
            // If all characters in s have been matched
            if (i == n) {
                return true;
            }
        }
        return false;
    }
}
