class Solution {

    public boolean method1(String s, String t) {
        return dfs(s, t, 0);
    }

    public boolean dfs(String s, String t, int index) {
        if (index == s.length()) {
            return true;
        }
        for (int i = 0; i < t.length(); i++) {
            if (t.charAt(i) == s.charAt(index)) {
                return dfs(s, t.substring(i + 1), index + 1);
            }
        }
        return false;
    }
}
////////////////////////////////// Two pointers ///////////////////////////////////
// class Solution {
//     public boolean isSubsequence(String s, String t) {
//         int sp =0;
//         int tp=0;
//         while(sp < s.length() && tp < t.length() ){
//             if(s.charAt(sp) == t.charAt(tp)){
//                 sp++;
//             }
//             tp++;
//         }
//         return sp==s.length();
//     }
// }
