class Solution {

    public boolean method1(String s, String t) {
        int[][] dp = new int[s.length()][t.length()];
        for (int[] d : dp) {
            Arrays.fill(d, -1);
        }
        return check(s, t, 0, 0, dp);
    }

    boolean check(String s, String t, int si, int ti, int[][] dp) {
        if (si >= s.length()) {
            return true;
        } else if (ti >= t.length()) {
            return false;
        }
        if (dp[si][ti] != -1) {
            return dp[si][ti] == 1;
        }
        if (s.charAt(si) == t.charAt(ti) && check(s, t, si + 1, ti + 1, dp)) {
            dp[si][ti] = 1;
            return true;
        }
        boolean res = check(s, t, si, ti + 1, dp);
        dp[si][ti] = res ? 1 : 0;
        return res;
    }
}
