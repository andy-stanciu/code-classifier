class Solution {

    public boolean method1(String s, String t) {
        // Take 2 pointers to traverse both strings
        int sPointer = 0, tPointer = 0;
        int sLength = s.length();
        int tLength = t.length();
        // Traverse till you find the subsequence or t string length
        while (sPointer < sLength && tPointer < tLength) {
            // If both s pointer and t pointer are pointing to the same char in respective string increment the s string pointer to next char
            if (s.charAt(sPointer) == t.charAt(tPointer))
                sPointer++;
            // Keep updating the tPointer to the next index
            tPointer++;
        }
        // If the sPointer has reached the end of the string that means s is subsequence of t string
        // So if the length of s string equals s pointer return true else false
        return (sPointer == sLength);
    }
}
