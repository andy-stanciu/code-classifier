class Solution {

    public boolean method1(String s, String t) {
        // recursive
        // return recursive(s,t,0,0);
        // memorization
        return memorization(s, t, 0, 0, new int[s.length() + 1][t.length() + 1]);
    }

    public boolean memorization(String s, String t, int i, int j, int[][] dp) {
        if (i == s.length())
            return true;
        if (j == t.length())
            return false;
        if (dp[i][j] != 0)
            return dp[i][j] == 1;
        if (s.charAt(i) == t.charAt(j)) {
            boolean f = memorization(s, t, i + 1, j + 1, dp);
            dp[i][j] = f ? 1 : 2;
            return f;
        }
        boolean f = memorization(s, t, i, j + 1, dp);
        dp[i][j] = f ? 1 : 2;
        return f;
    }

    public boolean recursive(String s, String t, int i, int j) {
        if (i == s.length())
            return true;
        if (j == t.length())
            return false;
        if (s.charAt(i) == t.charAt(j)) {
            return recursive(s, t, i + 1, j + 1);
        }
        return recursive(s, t, i, j + 1);
    }
}
