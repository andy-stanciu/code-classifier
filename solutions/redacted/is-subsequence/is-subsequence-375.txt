class Solution {

    public boolean method1(String s, String t) {
        int sLength = s.length();
        int tLength = t.length();
        // Edge case: both strings are of length 1
        if (sLength == 1 && tLength == 1) {
            return s.charAt(0) == t.charAt(0);
        }
        int pointer = 0;
        // Iterate over each character in string \'s\'
        for (int i = 0; i < sLength; i++) {
            char currentChar = s.charAt(i);
            // Move pointer through \'t\' to find the current character
            while (pointer < tLength && t.charAt(pointer) != currentChar) {
                pointer++;
            }
            // If pointer exceeds \'t\', \'s\' is not a subsequence of \'t\'
            if (pointer >= tLength) {
                return false;
            }
            // Move pointer forward for the next character comparison
            pointer++;
        }
        // If all characters in \'s\' are found in sequence in \'t\', return true
        return true;
    }
}
