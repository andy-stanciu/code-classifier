class Solution {

    public boolean method1(TreeNode root) {
        // Soecial case...
        if (root == null)
            return true;
        // call the function  recursively...
        return method1(root.left, root.right);
    }

    // After division the tree will be divided in two parts...
    // The root of the left part is rootleft & the root of the right part is rootright...
    public boolean method1(TreeNode rootleft, TreeNode rootright) {
        // If root of the left part & the root of the right part is same, return true...
        if (rootleft == null && rootright == null) {
            return true;
        } else // If root of any part is null, then the binary tree is not symmetric. So return false...
        if (rootright == null || rootleft == null) {
            return false;
        }
        // If the value of the root of the left part is not equal to the value of the root of the right part...
        if (rootleft.val != rootright.val)
            return false;
        // In case of not symmetric...
        if (!method1(rootleft.left, rootright.right))
            return false;
        if (!method1(rootleft.right, rootright.left))
            return false;
        // Otherwise, return true...
        return true;
    }
}
