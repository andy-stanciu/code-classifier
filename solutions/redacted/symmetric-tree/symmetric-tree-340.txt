/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public boolean method1(TreeNode root) {
        if (root == null)
            return true;
        Stack<Pair<TreeNode, TreeNode>> stk = new Stack<>();
        stk.push(new Pair<>(root, root));
        while (!stk.isEmpty()) {
            Pair<TreeNode, TreeNode> p = stk.pop();
            TreeNode left = p.getKey();
            TreeNode right = p.getValue();
            if (left == null || right == null) {
                if (left != right)
                    return false;
                continue;
            }
            if (left.val != right.val)
                return false;
            stk.push(new Pair<>(left.left, right.right));
            stk.push(new Pair<>(left.right, right.left));
        }
        return true;
    }
}
