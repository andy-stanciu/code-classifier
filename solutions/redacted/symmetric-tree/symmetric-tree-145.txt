/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        if (root == null) {
            return true;
        }
        queue.offer(root.left);
        queue.offer(root.right);
        while (!queue.isEmpty()) {
            TreeNode check1 = queue.poll();
            // queue.offer(check1.left);
            TreeNode check2 = queue.poll();
            // queue.offer(check2.right);
            if (check1 == null && check2 == null) {
                continue;
            }
            if (check1 == null || check2 == null) {
                return false;
            }
            if (check1.val != check2.val) {
                return false;
            }
            queue.offer(check1.left);
            queue.offer(check2.right);
            queue.offer(check1.right);
            queue.offer(check2.left);
        }
        return true;
    }
}
