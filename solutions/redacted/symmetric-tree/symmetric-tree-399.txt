/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private boolean sym = true;

    public boolean method1(TreeNode root) {
        //call helper class, pass nodes left and right of root node
        helper(root.left, root.right);
        return sym;
    }

    //@Param, accepts two TreeNodes
    private void helper(TreeNode one, TreeNode two) {
        //Check if nodes are null
        if (one == null && two == null) {
            return;
        } else if (one == null) {
            sym = false;
            return;
        } else if (two == null) {
            sym = false;
            return;
        }
        //compare value of nodes
        if (one.val != two.val) {
            sym = false;
        }
        //call helper class
        helper(one.left, two.right);
        helper(one.right, two.left);
    }
}
