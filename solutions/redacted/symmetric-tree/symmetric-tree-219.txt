/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private TreeNode reverse(TreeNode root) {
        if (root == null)
            return null;
        TreeNode x = new TreeNode();
        x.left = reverse(root.right);
        x.right = reverse(root.left);
        x.val = root.val;
        return x;
    }

    private boolean same(TreeNode t1, TreeNode t2) {
        if (t1 == null && t2 == null)
            return true;
        if (t1 != null && t2 == null)
            return false;
        if (t1 == null && t2 != null)
            return false;
        if (t1.val != t2.val)
            return false;
        return same(t1.left, t2.left) && same(t1.right, t2.right);
    }

    public boolean method1(TreeNode root) {
        if (root == null)
            return true;
        TreeNode revR = reverse(root.right);
        return same(root.left, revR);
    }
}
