class Solution {

    public boolean check(TreeNode node1, TreeNode node2) {
        // if one of them is null and the other is not, its not symmetric
        if ((node1 == null && node2 != null) || (node1 != null && node2 == null))
            return false;
        // reached leaf nodes
        if (node1 == null && node2 == null)
            return true;
        // compare values of current nodes
        boolean val = node1.val == node2.val;
        // give the condition for all the connected nodes
        return val && check(node1.right, node2.left) && check(node1.left, node2.right);
    }

    public boolean method1(TreeNode root) {
        return check(root.left, root.right);
    }
}
