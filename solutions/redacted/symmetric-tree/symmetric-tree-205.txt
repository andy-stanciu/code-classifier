/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root) {
        if (root.left == null && root.right == null)
            return true;
        if (root.left == null || root.right == null)
            return false;
        Queue<TreeNode> q = new LinkedList<>();
        ArrayList<Integer> al = new ArrayList<>();
        q.add(root);
        while (q.isEmpty() == false) {
            int s = q.size();
            for (int i = 0; i < s; i++) {
                TreeNode curr = q.poll();
                if (curr.left != null) {
                    q.add(curr.left);
                    al.add(curr.left.val);
                } else
                    al.add(101);
                if (curr.right != null) {
                    q.add(curr.right);
                    al.add(curr.right.val);
                } else
                    al.add(101);
            }
            int len = al.size();
            int j = 0;
            while (j < len / 2) {
                if (al.get(j) != al.get(len - 1 - j))
                    return false;
                j++;
            }
            al = new ArrayList<>();
        }
        return true;
    }
}
