/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root) {
        if (root == null)
            return true;
        Queue<TreeNode> var1 = new LinkedList<>();
        Queue<TreeNode> var2 = new LinkedList<>();
        var1.add(root.left);
        var2.add(root.right);
        while (!var1.isEmpty() && !var2.isEmpty()) {
            TreeNode leftNode = var1.poll();
            TreeNode rightNode = var2.poll();
            if (leftNode == null && rightNode == null)
                continue;
            if (leftNode == null || rightNode == null)
                return false;
            if (leftNode.val != rightNode.val)
                return false;
            var1.add(leftNode.left);
            var1.add(leftNode.right);
            var2.add(rightNode.right);
            var2.add(rightNode.left);
        }
        return true;
    }
}
