/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root) {
        //we just have to create the function to check the root value is symmetric or not
        //first check the tree is null or not
        if (root == null) {
            return true;
        }
        //call the function by giving root.left and root.right
        return helper(root.left, root.right);
    }

    public boolean helper(TreeNode left, TreeNode right) {
        //check the null condition
        if (left == null && right == null) {
            return true;
        } else if (left == null || right == null) {
            //return false if any one of them is null
            return false;
        }
        //check the value is same or not
        if (left.val != right.val) {
            return false;
        }
        //call recursively
        return helper(left.left, right.right) && helper(left.right, right.left);
    }
}
