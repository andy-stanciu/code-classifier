/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root) {
        if (root == null)
            return true;
        return isEqual(root.left, root.right);
    }

    public boolean isEqual(TreeNode p, TreeNode q) {
        if (p == null && q == null) {
            // or simply can write as p == q since it is the base case where leafnode.left and leafnode.right both will be null
            return true;
        }
        // either p or q is null , then return false;
        if (p == null || q == null) {
            return false;
        }
        if (p.val != q.val || !isEqual(p.left, q.right) || !isEqual(p.right, q.left)) {
            return false;
        }
        return true;
    }
}
