/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean method1(TreeNode root) {
        return isMirror(root.left, root.right);
    }

    private boolean isMirror(TreeNode aNode, TreeNode bNode) {
        // if both null, return true;
        if (aNode == null && bNode == null)
            return true;
        if (aNode == null || bNode == null)
            return false;
        // if root not equal, return false
        if (aNode.val != bNode.val)
            return false;
        // if a\'s right not equal b\'s left, return false
        boolean aRbL = isMirror(aNode.right, bNode.left);
        // if a\'s left not equal b\'s right, return false
        boolean aLbR = isMirror(aNode.left, bNode.right);
        return aRbL && aLbR;
    }
}
