class Solution {

    public int strStr(String haystack, String needle) {
        //if the needle is bigger than the haystack, the haystack can\'t contain the needle so return -1
        if (needle.length() > haystack.length()) {
            return -1;
        }
        //go through haystack to find needle
        for (int i = 0; i < haystack.length(); i++) {
            //if a character in haystack matches the first character in needle and theres enough characters left in haystack for the rest of needle to exist
            if (haystack.charAt(i) == needle.charAt(0) && (i + needle.length() - 1) <= (haystack.length() - 1)) {
                //if a substring starting at the matching haystack character and ending at the length of needle equals the needle string return the starting index
                if (haystack.substring(i, i + needle.length()).equals(needle)) {
                    return i;
                }
            }
        }
        //if the needle wasn\'t found, return -1
        return -1;
    }
}
