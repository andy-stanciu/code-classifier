class Solution {

    public int strStr(String haystack, String needle) {
        int n = haystack.length();
        int m = needle.length();
        if (m > n) {
            return -1;
        }
        if (m == n) {
            return haystack.equals(needle) ? 0 : -1;
        }
        //Start checking for haystack string
        for (int i = 0; i < n; i++) {
            if (haystack.charAt(i) == needle.charAt(0)) {
                if (method1(i, n, m, haystack, needle)) {
                    return i;
                }
            }
        }
        return -1;
    }

    public boolean method1(int i, int n, int m, String haystack, String needle) {
        int j = 0;
        for (int k = i; k < n; k++) {
            if (j == m) {
                return true;
            }
            if (haystack.charAt(k) != needle.charAt(j)) {
                return false;
            } else {
                j++;
            }
        }
        return j == m ? true : false;
    }
}
