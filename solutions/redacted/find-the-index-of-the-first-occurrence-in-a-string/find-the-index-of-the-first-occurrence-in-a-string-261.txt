class Solution {

    public int strStr(String haystack, String needle) {
        if (needle.length() == 0) {
            // If needle is empty, return 0 as per the problem statement.
            return 0;
        }
        // Loop through haystack until there\'s enough room for needle to fit
        for (int i = 0; i <= haystack.length() - needle.length(); i++) {
            // Compare the substring of haystack starting from i with needle
            if (haystack.substring(i, i + needle.length()).equals(needle)) {
                // Found the needle, return the starting index
                return i;
            }
        }
        // If no match is found, return -1
        return -1;
    }
}
