class Solution {

    public int strStr(String haystack, String needle) {
        // Check if needle is empty, return 0 indicating a match at the beginning
        if (needle.isEmpty()) {
            return 0;
        }
        // Iterate through haystack
        for (int i = 0; i <= haystack.length() - needle.length(); i++) {
            // Check if the substring of haystack from i to i + len_needle equals needle
            if (haystack.substring(i, i + needle.length()).equals(needle)) {
                // Return the starting index of the match
                return i;
            }
        }
        // If needle is not found, return -1
        return -1;
    }
}
