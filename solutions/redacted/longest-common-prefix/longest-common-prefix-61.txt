class Solution {

    public String method1(String[] strs) {
        String firstStr = strs[0];
        if (strs.length == 1)
            return firstStr;
        if (firstStr.length() == 0)
            return "";
        // picking up first string from stirng [] & will compare rest of the strings chars with respect to it.
        for (int i = 0; i < firstStr.length(); i++) {
            // pick chars iteratively
            char c = firstStr.charAt(i);
            // now we\'ll check all the string in firstStr array
            for (// return substring till current index
            // return substring till current index
            // return substring till current index
            // 1.  if any string found to be smaller than first one
            // 2.  or if its current char (ie. \'c\') doesn\'t matches with jth String char
            int j = 1; j < strs.length; j++) if (i > (strs[j].length() - 1) || c != strs[j].charAt(i))
                return firstStr.substring(0, i);
        }
        // if return statement didn\'t triggered that means whole array contains same string
        // eg: ["ab", "ab"]
        return firstStr;
    }
}
// TC : O(m*n)  -> where m is length of strs[0] & n is length of whole array string.
// TC : O(m*n)  -> where m is length of strs[0] & n is length of whole array string.
