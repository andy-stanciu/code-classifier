class Solution {

    public String method1(String[] strs) {
        String var1 = method2(strs);
        return var1;
    }

    public static String method2(String[] strs) {
        if (strs == null || strs.length == 0) {
            // Edge case: If the array is empty, return an empty string
            return "";
        }
        // Assume the first string is the common prefix
        String var2 = strs[0];
        // System.out.println(strs[2].indexOf(prefix));
        // Loop through all strings in the array
        for (int i = 1; i < strs.length; i++) {
            // Keep reducing the prefix while it doesn\'t match the current string
            while (strs[i].indexOf(var2) != 0) {
                // Shorten the prefix
                var2 = var2.substring(0, var2.length() - 1);
                // If the prefix becomes an empty string, return an empty string
                if (var2.isEmpty()) {
                    return "";
                }
            }
        }
        // Return the final prefix after matching with all strings
        return var2;
    }
}
