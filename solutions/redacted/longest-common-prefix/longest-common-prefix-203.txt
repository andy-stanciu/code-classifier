class Solution {

    public String method1(String[] strs) {
        if (strs == null || strs.length == 0)
            return "";
        StringBuilder var1 = new StringBuilder();
        int minLength = Integer.MAX_VALUE;
        for (String str : strs) {
            minLength = Math.min(minLength, str.length());
        }
        // Compare characters at each index
        for (int i = 0; i < minLength; i++) {
            char currentChar = strs[0].charAt(i);
            // Check this character in all strings
            for (int j = 1; j < strs.length; j++) {
                if (strs[j].charAt(i) != currentChar) {
                    // Return the common prefix found so far
                    return var1.toString();
                }
            }
            // If all matched, append the current character to the common prefix
            var1.append(currentChar);
        }
        // Return the complete common prefix
        return var1.toString();
    }
}
