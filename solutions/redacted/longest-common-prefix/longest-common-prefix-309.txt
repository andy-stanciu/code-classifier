class Solution {

    public String method1(String[] strs) {
        // Handle Edge Cases
        if (strs.length == 0)
            return "";
        if (strs.length == 1)
            return strs[0];
        // Find length of shortest string
        int shortest = Integer.MAX_VALUE;
        for (String str : strs) {
            int length = str.length();
            if (length == 0)
                return "";
            if (length < shortest)
                shortest = length;
        }
        // Search prefixes started with largest possible (shortest string length)
        String o;
        boolean match;
        do {
            match = true;
            o = strs[0].substring(0, shortest);
            for (short s = 1; s < strs.length && match; s++) {
                match = o.equals(strs[s].substring(0, shortest));
            }
        } while (--shortest >= 0 && !match);
        // Return longest common prefix
        return o;
    }
}
