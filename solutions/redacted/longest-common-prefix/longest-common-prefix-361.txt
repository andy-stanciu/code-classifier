class Solution {

    public String method1(String[] strs) {
        // Return empty string if input array is null or empty
        if (strs == null || strs.length == 0) {
            return "";
        }
        StringBuilder sb = new StringBuilder();
        // Take the first string as a reference
        String a = strs[0];
        // Loop through each character of the reference string
        for (int i = 0; i < a.length(); i++) {
            // Current character to check against all strings
            char curr = a.charAt(i);
            // Check this character against all other strings
            for (int j = 0; j < strs.length; j++) {
                // Return the current prefix if out of bounds or character mismatch occurs
                if (strs[j].length() <= i || strs[j].charAt(i) != curr) {
                    return sb.toString();
                }
            }
            // Append the current character to the prefix if all strings match
            sb.append(curr);
        }
        // Return the complete prefix if no mismatch found
        return sb.toString();
    }
}
