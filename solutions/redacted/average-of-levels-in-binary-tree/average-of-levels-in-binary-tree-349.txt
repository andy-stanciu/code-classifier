/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null)
            return ans;
        q.add(root);
        while (!q.isEmpty()) {
            List<Integer> l = new ArrayList<>();
            int s = q.size();
            for (int i = 0; i < s; i++) {
                TreeNode node = q.poll();
                l.add(node.val);
                if (node.left != null)
                    q.add(node.left);
                if (node.right != null)
                    q.add(node.right);
            }
            double j = 0;
            for (int a : l) {
                j = j + a;
            }
            j = j / l.size();
            ans.add(j);
        }
        return ans;
    }
}
