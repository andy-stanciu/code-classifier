/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> list = new ArrayList<>();
        List<TreeNode> lvli = new ArrayList<>();
        List<TreeNode> lvliPlusOne = new ArrayList<>();
        lvli.add(root);
        while (!lvli.isEmpty()) {
            double sum = 0;
            for (TreeNode z : lvli) {
                if (z.left != null)
                    lvliPlusOne.add(z.left);
                if (z.right != null)
                    lvliPlusOne.add(z.right);
            }
            for (TreeNode x : lvli) {
                sum += x.val;
            }
            list.add(sum / lvli.size());
            lvli.clear();
            List<TreeNode> tmp = lvli;
            lvli = lvliPlusOne;
            lvliPlusOne = tmp;
        }
        return list;
    }
}
