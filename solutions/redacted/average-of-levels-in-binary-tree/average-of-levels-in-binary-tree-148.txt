/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        if (root == null) {
            return null;
        }
        List<Double> result = new ArrayList<>();
        List<Integer> count = new ArrayList<>();
        method2(result, count, 0, root);
        DecimalFormat decimalFormat = new DecimalFormat("#.00000");
        for (int i = 0; i < result.size(); i++) {
            result.set(i, Math.round(result.get(i) / count.get(i) * 100000.0) / 100000.0);
        }
        return result;
    }

    private void method2(List<Double> result, List<Integer> count, int level, TreeNode root) {
        if (root == null) {
            return;
        }
        if (result.size() <= level) {
            result.add(0.0);
            count.add(0);
        }
        result.set(level, result.get(level) + root.val);
        count.set(level, count.get(level) + 1);
        method2(result, count, level + 1, root.left);
        method2(result, count, level + 1, root.right);
    }
}
