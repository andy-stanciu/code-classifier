/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Double> list;

    public List<Double> method1(TreeNode root) {
        list = new ArrayList<>();
        if (root == null) {
            return list;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        while (!q.isEmpty()) {
            int sz = q.size();
            double sum = 0;
            for (int i = 0; i < sz; i++) {
                TreeNode res = q.poll();
                sum += res.val;
                if (res.left != null) {
                    q.offer(res.left);
                }
                if (res.right != null) {
                    q.offer(res.right);
                }
            }
            double val = sum / sz;
            list.add(val);
        }
        return list;
    }
}
