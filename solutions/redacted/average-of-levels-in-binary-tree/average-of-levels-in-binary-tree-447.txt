/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Integer> count = new ArrayList<>();

    List<Double> res = new ArrayList<>();

    public void preOrder(TreeNode root, int level) {
        if (root != null) {
            if (level < res.size()) {
                res.set(level, res.get(level) + root.val);
                count.set(level, count.get(level) + 1);
            } else {
                res.add(1.0 * root.val);
                count.add(1);
            }
            preOrder(root.left, level + 1);
            preOrder(root.right, level + 1);
        }
    }

    public List<Double> method1(TreeNode root) {
        preOrder(root, 0);
        for (int i = 0; i < res.size(); i++) {
            res.set(i, res.get(i) / count.get(i));
        }
        return res;
    }
}
