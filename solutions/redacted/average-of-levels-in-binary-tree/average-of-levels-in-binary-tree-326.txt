/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        List<Double> list = new ArrayList<Double>();
        q.add(root);
        while (!q.isEmpty()) {
            double n = q.size();
            double s = 0;
            for (double i = 0; i < n; i++) {
                TreeNode node = q.poll();
                s += node.val;
                if (node.left != null)
                    q.add(node.left);
                if (node.right != null)
                    q.add(node.right);
            }
            double ans = s / n;
            list.add(ans);
        }
        return list;
    }
}
