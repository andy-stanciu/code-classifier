/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        list = method1(list, root, 0);
        List<Double> answer = new ArrayList<>();
        for (int i = 0; i < list.size(); i++) {
            List<Integer> temp = list.get(i);
            double avg = 0.0;
            for (int j = 0; j < temp.size(); j++) {
                avg += temp.get(j);
            }
            avg /= temp.size();
            answer.add(avg);
        }
        return answer;
    }

    private List<List<Integer>> method1(List<List<Integer>> list, TreeNode root, int level) {
        if (root == null)
            return null;
        if (level >= list.size())
            list.add(new ArrayList<Integer>());
        list.get(level).add(root.val);
        method1(list, root.left, level + 1);
        method1(list, root.right, level + 1);
        return list;
    }
}
