class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> result = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        q.offer(null);
        double sum = 0.0, count = 0.0;
        while (q.size() > 1) {
            TreeNode curr = q.poll();
            sum += curr.val;
            ++count;
            if (curr.left != null)
                q.offer(curr.left);
            if (curr.right != null)
                q.offer(curr.right);
            if (q.peek() == null) {
                //done with current level
                //poll the null and push it back to the queue
                q.offer(q.poll());
                result.add(sum / count);
                sum = 0.0;
                count = 0.0;
            }
        }
        return result;
    }
}
