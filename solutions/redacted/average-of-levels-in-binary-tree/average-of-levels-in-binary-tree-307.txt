/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> res = new ArrayList<>();
        if (null == root)
            return res;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        res.add((double) q.peek().val);
        while (!q.isEmpty()) {
            int size = 0;
            int count = q.size();
            double sum = 0;
            for (int i = 0; i < count; i++) {
                TreeNode curr = q.poll();
                if (curr.left != null) {
                    sum += curr.left.val;
                    q.add(curr.left);
                    size++;
                }
                if (curr.right != null) {
                    sum += curr.right.val;
                    q.add(curr.right);
                    size++;
                }
            }
            res.add(sum / size);
        }
        res.remove(res.size() - 1);
        return res;
    }
}
