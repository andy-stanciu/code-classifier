/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        List<Integer> count = new ArrayList<Integer>();
        List<Double> result = new ArrayList<Double>();
        helper(root, 0, result, count);
        return result;
    }

    private void helper(TreeNode root, int level, List<Double> result, List<Integer> count) {
        if (root == null)
            return;
        if (result.size() <= level) {
            result.add(root.val * 1.0);
            count.add(1);
        } else {
            result.set(level, result.get(level) * (count.get(level) * 1.0 / (count.get(level) + 1)) + root.val * (1.0 / (count.get(level) + 1)));
            count.set(level, count.get(level) + 1);
        }
        helper(root.left, level + 1, result, count);
        helper(root.right, level + 1, result, count);
    }
}
