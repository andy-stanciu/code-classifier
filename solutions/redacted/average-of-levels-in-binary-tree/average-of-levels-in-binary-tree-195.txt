class Solution {

    public List<Double> method1(TreeNode root) {
        ArrayList<Double> output = new ArrayList<>();
        int h = height(root);
        double[] sum = new double[h + 1];
        int[] num = new int[h + 1];
        method2(root, sum, num, h);
        for (int i = h; i > -1; i--) {
            output.add(sum[i] / num[i]);
        }
        return output;
    }

    private void method2(TreeNode node, double[] sum, int[] num, int j) {
        if (node == null)
            return;
        sum[j] += node.val;
        num[j] += 1;
        method2(node.left, sum, num, j - 1);
        method2(node.right, sum, num, j - 1);
    }

    private int height(TreeNode node) {
        if (node == null)
            return -1;
        return 1 + Math.max(height(node.left), height(node.right));
    }
}
