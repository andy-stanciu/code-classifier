/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static List<Double> method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        List<Double> list = new ArrayList<>();
        while (!queue.isEmpty()) {
            int queueSize = queue.size();
            double total = 0;
            for (int i = 0; i < queueSize; i++) {
                TreeNode value = queue.poll();
                if (value.left != null)
                    queue.add(value.left);
                if (value.right != null)
                    queue.add(value.right);
                total += value.val;
            }
            list.add(Double.valueOf((double) total / queueSize));
        }
        return list;
    }
}
