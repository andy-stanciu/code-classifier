/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> answer = new ArrayList<>();
        List<Double> nodes = new ArrayList<>();
        method2(root, answer, nodes, 0);
        for (int i = 0; i < answer.size(); i++) {
            answer.set(i, answer.get(i) / nodes.get(i));
        }
        return answer;
    }

    public void method2(TreeNode root, List<Double> answer, List<Double> nodes, int level) {
        if (root == null) {
            return;
        }
        if (answer.size() < level + 1) {
            answer.add(Double.valueOf(root.val));
        } else {
            answer.set(level, answer.get(level) + root.val);
        }
        if (nodes.size() < level + 1) {
            nodes.add(1.0);
        } else {
            nodes.set(level, nodes.get(level) + 1);
        }
        method2(root.left, answer, nodes, level + 1);
        method2(root.right, answer, nodes, level + 1);
        return;
    }
}
