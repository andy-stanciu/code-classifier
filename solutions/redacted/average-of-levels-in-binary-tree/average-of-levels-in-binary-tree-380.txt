/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<Double> l = new ArrayList<>();
        q.add(root);
        // l.add((double)root.val);
        q.add(null);
        double sum = 0;
        int count = 0;
        while (!q.isEmpty()) {
            TreeNode curr = q.remove();
            if (curr == null) {
                l.add(sum / count);
                if (q.isEmpty()) {
                    // l.add(sum);
                    break;
                } else {
                    q.add(null);
                }
                sum = 0;
                count = 0;
            } else {
                sum += curr.val;
                count++;
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
        }
        return l;
    }
}
