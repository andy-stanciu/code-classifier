/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Double> lis = new ArrayList<>();

    Queue<TreeNode> q = new LinkedList<>();

    public List<Double> method1(TreeNode root) {
        helper(root);
        //System.out.print(lis);
        return lis;
    }

    void helper(TreeNode r) {
        q.add(r);
        while (!q.isEmpty()) {
            int size = q.size();
            int lim = 0;
            double avg = 0;
            while (size-- > 0) {
                lim++;
                TreeNode t = q.remove();
                avg += t.val;
                if (t.left != null) {
                    q.add(t.left);
                }
                if (t.right != null) {
                    q.add(t.right);
                }
            }
            lis.add(avg / lim);
        }
    }
}
