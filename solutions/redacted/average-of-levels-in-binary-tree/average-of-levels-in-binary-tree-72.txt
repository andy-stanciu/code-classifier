class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> result = new ArrayList<>();
        if (root == null)
            return result;
        // Use a queue to perform BFS level-order traversal
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        // Traverse each level
        while (!queue.isEmpty()) {
            int size = queue.size();
            // Sum of values at the current level
            double sum = 0;
            // Number of nodes at the current level
            int count = size;
            // Traverse nodes at the current level
            for (int i = 0; i < size; i++) {
                TreeNode node = queue.poll();
                sum += node.val;
                // Add left and right children to the queue
                if (node.left != null)
                    queue.offer(node.left);
                if (node.right != null)
                    queue.offer(node.right);
            }
            // Calculate the average and add to the result list
            result.add(sum / count);
        }
        return result;
    }
}
