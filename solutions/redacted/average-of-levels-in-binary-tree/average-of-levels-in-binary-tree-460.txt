/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<long[]> list = new ArrayList();

    public List<Double> method1(TreeNode root) {
        List<Double> ans = new ArrayList();
        helper(root, 0);
        for (int i = 0; i < list.size(); i++) ans.add((double) list.get(i)[0] / list.get(i)[1]);
        return ans;
    }

    private void helper(TreeNode node, int level) {
        if (node == null)
            return;
        if (list.size() - 1 < level)
            list.add(new long[2]);
        list.get(level)[0] += (long) node.val;
        list.get(level)[1] += 1;
        helper(node.left, level + 1);
        helper(node.right, level + 1);
    }
}
