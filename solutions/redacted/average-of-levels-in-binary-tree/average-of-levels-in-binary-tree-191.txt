/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        int[] var1 = new int[10000];
        long[] sumAtSameLevel = new long[10000];
        method2(root, 0, var1, sumAtSameLevel);
        int idx = 0;
        ArrayList<Double> var2 = new ArrayList<>();
        while (var1[idx] != 0) {
            var2.add((double) sumAtSameLevel[idx] / var1[idx]);
            idx++;
        }
        return var2;
    }

    public void method2(TreeNode root, int level, int[] var1, long[] sumAtSameLevel) {
        if (root == null)
            return;
        method2(root.left, level + 1, var1, sumAtSameLevel);
        var1[level] = var1[level] + 1;
        sumAtSameLevel[level] = sumAtSameLevel[level] + root.val;
        method2(root.right, level + 1, var1, sumAtSameLevel);
    }
}
