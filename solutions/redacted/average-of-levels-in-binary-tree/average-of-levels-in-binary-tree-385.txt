/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        Queue<TreeNode> que = new LinkedList<>();
        List<Double> list = new ArrayList<>();
        que.offer(root);
        while (!que.isEmpty()) {
            int size = que.size();
            double sum = 0;
            for (int i = 0; i < size; i++) {
                TreeNode curr_node = que.poll();
                sum += curr_node.val;
                if (curr_node.left != null)
                    que.offer(curr_node.left);
                if (curr_node.right != null)
                    que.offer(curr_node.right);
            }
            list.add((double) sum / size);
        }
        return list;
    }
}
