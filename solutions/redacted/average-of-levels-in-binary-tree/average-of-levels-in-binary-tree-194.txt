/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        List<Double> arr = new ArrayList<>();
        if (root == null) {
            return arr;
        }
        Queue<TreeNode> queue = new LinkedList<>(List.of(root));
        while (queue.size() > 0) {
            int level = queue.size();
            double row = 0;
            for (int i = 0; i < level; i++) {
                TreeNode current = queue.poll();
                row += current.val;
                if (current.left != null) {
                    queue.add(current.left);
                }
                if (current.right != null) {
                    queue.add(current.right);
                }
            }
            arr.add(row / level);
        }
        return arr;
    }
}
