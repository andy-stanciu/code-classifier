/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        Queue<TreeNode> QP = new LinkedList<>();
        Queue<TreeNode> QC = new LinkedList<>();
        List<Double> list = new ArrayList<>();
        QP.add(root);
        while (true) {
            double numNodes = 0, sumNodes = 0;
            while (!QP.isEmpty()) {
                TreeNode temp = QP.poll();
                if (temp.left != null)
                    QC.add(temp.left);
                if (temp.right != null)
                    QC.add(temp.right);
                numNodes++;
                sumNodes += temp.val;
            }
            list.add(sumNodes / numNodes);
            while (!QC.isEmpty()) {
                QP.add(QC.poll());
            }
            if (QP.isEmpty())
                return list;
        }
    }
}
