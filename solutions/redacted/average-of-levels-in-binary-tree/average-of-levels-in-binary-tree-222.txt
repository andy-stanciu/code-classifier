/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        Queue<TreeNode> que = new LinkedList<>();
        que.add(root);
        List<Double> ans = new ArrayList<>();
        while (que.size() > 0) {
            int size = que.size();
            double sum = 0;
            int s = size;
            while (s-- > 0) {
                TreeNode rn = que.poll();
                sum += (double) rn.val;
                if (rn.left != null)
                    que.add(rn.left);
                if (rn.right != null)
                    que.add(rn.right);
            }
            System.out.println(sum + "-> " + size);
            ans.add(sum / (double) size);
        }
        return ans;
    }
}
