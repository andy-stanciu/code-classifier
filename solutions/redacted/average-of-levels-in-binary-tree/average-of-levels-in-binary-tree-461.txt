/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Class1> var1 = new ArrayList<>();

    public List<Double> method1(TreeNode root) {
        List<Double> result = new ArrayList<>();
        bfs(root, 0);
        for (Class1 level : var1) {
            result.add((double) level.sum / level.elements);
        }
        return result;
    }

    private void bfs(TreeNode node, int level) {
        if (node == null) {
            return;
        }
        if (level == var1.size()) {
            var1.add(new Class1());
        }
        var1.get(level).add(node.val);
        bfs(node.left, level + 1);
        bfs(node.right, level + 1);
    }

    class Class1 {

        long sum = 0L;

        int elements = 0;

        public void add(int value) {
            sum += value;
            elements++;
        }
    }
}
