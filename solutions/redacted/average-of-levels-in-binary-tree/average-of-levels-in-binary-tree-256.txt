class Solution {

    List<Integer> elementCount = new ArrayList<>();

    public List<Double> method1(TreeNode root) {
        List<Double> result = new ArrayList<>();
        dfs(root, 0, result);
        for (int i = 0; i < result.size(); i++) {
            result.set(i, result.get(i) / elementCount.get(i));
        }
        return result;
    }

    private void dfs(TreeNode node, int level, List<Double> result) {
        if (node == null) {
            return;
        }
        if (result.size() < level + 1) {
            result.add(Double.valueOf(node.val));
            elementCount.add(1);
        } else {
            result.set(level, result.get(level) + node.val);
            elementCount.set(level, elementCount.get(level) + 1);
        }
        dfs(node.left, level + 1, result);
        dfs(node.right, level + 1, result);
    }
}
