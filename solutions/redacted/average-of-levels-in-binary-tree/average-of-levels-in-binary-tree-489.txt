/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<Double> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<Double> l = new ArrayList<>();
        double sum = 0, count = 0;
        q.add(root);
        q.add(null);
        while (!q.isEmpty()) {
            if (q.peek() == null) {
                l.add((double) sum / count);
                sum = 0;
                count = 0;
                q.remove();
                if (!q.isEmpty()) {
                    q.add(null);
                }
            }
            if (!q.isEmpty()) {
                TreeNode node = q.remove();
                sum += node.val;
                count++;
                if (node.left != null) {
                    q.add(node.left);
                }
                if (node.right != null) {
                    q.add(node.right);
                }
            }
        }
        return l;
    }
}
