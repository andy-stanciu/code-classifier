/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    ArrayList<Double> al = new ArrayList<>();

    List<List<Integer>> ll = new ArrayList<>();

    // Generating average for each level
    public List<Double> method1(TreeNode root) {
        level(root);
        for (int i = 0; i < ll.size(); i++) {
            double sum = 0;
            int c = ll.get(i).size();
            for (int j = 0; j < c; j++) {
                sum += ll.get(i).get(j);
            }
            al.add(sum / c);
        }
        return al;
    }

    //Level Order traversal Code
    public void level(TreeNode root) {
        pre(root, 0);
    }

    public void pre(TreeNode root, int l) {
        if (root == null)
            return;
        if (ll.size() == l) {
            List<Integer> li = new ArrayList<>();
            li.add(root.val);
            ll.add(li);
        } else
            ll.get(l).add(root.val);
        pre(root.left, l + 1);
        pre(root.right, l + 1);
    }
}
