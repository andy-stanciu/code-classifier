class Solution {

    public int method1(int[] nums) {
        // Initialize pivot index to -1, which means no pivot index is found
        int method1 = -1;
        // Iterate through each element in the array
        for (int i = 0; i < nums.length; i++) {
            // Initialize start and end pointers
            int start = 0;
            int end = nums.length - 1;
            // Initialize left and right sums
            int leftSum = 0;
            int rightSum = 0;
            // Calculate left and right sums
            while (start < end) {
                if (start < i) {
                    // Add element to left sum if it\'s to the left of the current index
                    leftSum += nums[start];
                    start++;
                }
                if (end > i) {
                    // Add element to right sum if it\'s to the right of the current index
                    rightSum += nums[end];
                    end--;
                }
            }
            // Check if left sum is equal to right sum
            if (leftSum == rightSum) {
                // If equal, update pivot index and return it
                method1 = i;
                return method1;
            }
        }
        // If no pivot index is found, return -1
        return method1;
    }
}
