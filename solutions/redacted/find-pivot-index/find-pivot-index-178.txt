class Solution {

    public int method1(int[] nums) {
        int n = nums.length;
        // \u0421\u0442\u0432\u043E\u0440\u044E\u0454\u043C\u043E \u043C\u0430\u0441\u0438\u0432\u0438 \u0434\u043B\u044F \u043F\u0440\u0435\u0444\u0456\u043A\u0441\u043D\u0438\u0445 \u0456 \u0441\u0443\u0444\u0456\u043A\u0441\u043D\u0438\u0445 \u0441\u0443\u043C
        int[] prefixSums = new int[n];
        int[] suffixSums = new int[n];
        // \u041E\u0431\u0447\u0438\u0441\u043B\u044E\u0454\u043C\u043E \u043F\u0440\u0435\u0444\u0456\u043A\u0441\u043D\u0456 \u0441\u0443\u043C\u0438
        // \u043B\u0456\u0432\u0430 \u0441\u0443\u043C\u0430 \u0434\u043B\u044F \u043F\u0435\u0440\u0448\u043E\u0433\u043E \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u2014 0
        prefixSums[0] = 0;
        for (int i = 1; i < n; i++) {
            prefixSums[i] = prefixSums[i - 1] + nums[i - 1];
        }
        // \u041E\u0431\u0447\u0438\u0441\u043B\u044E\u0454\u043C\u043E \u0441\u0443\u0444\u0456\u043A\u0441\u043D\u0456 \u0441\u0443\u043C\u0438
        // \u043F\u0440\u0430\u0432\u0430 \u0441\u0443\u043C\u0430 \u0434\u043B\u044F \u043E\u0441\u0442\u0430\u043D\u043D\u044C\u043E\u0433\u043E \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u2014 0
        suffixSums[n - 1] = 0;
        for (int i = n - 2; i >= 0; i--) {
            // n-1 \u0446\u0435 \u043E\u0441\u0442\u0430\u043D\u043D\u0456\u0439 \u0435\u043B\u0435\u043C\u0435\u043D\u0442(\u0437\u0432\u0435\u0440\u0445\u0443 \u043C\u0438 \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043B\u0438 \u0439\u043E\u043C\u0443 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F 0, \u0442\u043E\u043C\u0443 \u0431\u0435\u0440\u0435\u043C\u043E \u043F\u0435\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u043D\u043D\u0456\u0439 n-2)
            suffixSums[i] = suffixSums[i + 1] + nums[i + 1];
        }
        // \u0428\u0443\u043A\u0430\u0454\u043C\u043E \u0456\u043D\u0434\u0435\u043A\u0441, \u0434\u0435 \u043F\u0440\u0435\u0444\u0456\u043A\u0441\u043D\u0430 \u0441\u0443\u043C\u0430 \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0454 \u0441\u0443\u0444\u0456\u043A\u0441\u043D\u0456\u0439
        for (int i = 0; i < n; i++) {
            if (prefixSums[i] == suffixSums[i]) {
                // \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454\u043C\u043E \u043F\u0435\u0440\u0448\u0438\u0439 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u0438\u0439 \u0456\u043D\u0434\u0435\u043A\u0441
                return i;
            }
        }
        // \u042F\u043A\u0449\u043E \u0442\u0430\u043A\u043E\u0433\u043E \u0456\u043D\u0434\u0435\u043A\u0441\u0443 \u043D\u0435\u043C\u0430\u0454, \u043F\u043E\u0432\u0435\u0440\u0442\u0430\u0454\u043C\u043E -1
        return -1;
    }
}
