class Solution {

    public int method1(int[] nums) {
        if (nums.length == 0 || nums.length == 1) {
            return 0;
        }
        int[] prefix = new int[nums.length];
        int[] suffix = new int[nums.length];
        prefix[0] = nums[0];
        suffix[nums.length - 1] = nums[nums.length - 1];
        // i = 0 -6
        // j = 0-5
        // k = 5-0
        for (int i = 1; i < nums.length; i++) {
            prefix[i] = nums[i] + prefix[i - 1];
        }
        for (int j = nums.length - 2; j >= 0; j--) {
            suffix[j] = nums[j] + suffix[j + 1];
        }
        for (int i = 0; i < nums.length; i++) {
            if ((i - 1 >= 0) && (i + 1 <= nums.length - 1) && prefix[i - 1] == suffix[i + 1]) {
                return i;
            } else if ((i - 1 < 0) && 0 == suffix[i + 1]) {
                return i;
            } else if ((i + 1 > nums.length - 1) && 0 == prefix[i - 1]) {
                return i;
            }
        }
        return -1;
    }
}
