class Solution {

    public int method1(int[] nums) {
        int n = nums.length;
        //creating a prefix array
        //-------------
        int[] pfSum = new int[nums.length];
        pfSum[0] = nums[0];
        for (int i = 1; i < nums.length; i++) {
            pfSum[i] = pfSum[i - 1] + nums[i];
        }
        //--------------
        //cases for 0th index and last index will be handled separately.
        if (pfSum[n - 1] - pfSum[0] == 0)
            return 0;
        for (int i = 1; i <= n - 2; i++) {
            int leftCount = pfSum[i - 1];
            int rightCount = pfSum[n - 1] - pfSum[i];
            if (leftCount == rightCount)
                return i;
        }
        if (pfSum[n - 2] == 0)
            return n - 1;
        return -1;
    }
}
