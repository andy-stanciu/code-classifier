class Solution {

    static boolean method1(int i, String s) {
        int n = s.length();
        // Base case: If the index has reached or surpassed the middle, stop recursion
        if (i >= n / 2) {
            return true;
        }
        // If characters at corresponding positions are not equal, it\'s not a palindrome
        if (s.charAt(i) != s.charAt(n - i - 1)) {
            return false;
        }
        // Continue recursion by moving to the next pair of characters
        return method1(i + 1, s);
    }

    public boolean method2(String s) {
        // Preprocess the string: Convert to lowercase and remove non-alphanumeric characters
        s = s.toLowerCase().replaceAll("[^a-z0-9]", "");
        // Start the recursive palindrome check
        return method1(0, s);
    }
}
