class Solution {

    public boolean method1(String s) {
        int l = 0;
        int r = s.length() - 1;
        s = s.toLowerCase();
        while (l < r) {
            /* 
            - locate l correct position
            - if currnt l points to non alphanumeric then move it to the right
            - non alphanumeric char would be consecutive, that\'s why while is needed, instead of if
            - while moving l to the right, make sure l is still less than r
            */
            while (l < r && !Character.isLetterOrDigit(s.charAt(l))) {
                l++;
            }
            /*
            - locate r correct position
            */
            while (l < r && !Character.isLetterOrDigit(s.charAt(r))) {
                r--;
            }
            // do the comparison
            if (s.charAt(l) != s.charAt(r)) {
                return false;
            }
            // move to the next position, move l and r towards to the middle
            l++;
            r--;
        }
        return true;
    }
}
