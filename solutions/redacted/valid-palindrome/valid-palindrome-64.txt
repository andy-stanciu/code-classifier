class Solution {

    public boolean method1(String s) {
        // Initialize start and end pointers
        int start = 0;
        int end = s.length() - 1;
        // Loop until start pointer is less than end pointer
        while (start < end) {
            // Get the characters at start and end positions
            char first = s.charAt(start);
            char last = s.charAt(end);
            // If the character at start is not a letter or digit, move the start pointer forward
            if (!Character.isLetterOrDigit(first)) {
                start++;
            } else // If the character at end is not a letter or digit, move the end pointer backward
            if (!Character.isLetterOrDigit(last)) {
                end--;
            } else // Compare the characters at start and end positions (ignoring case)
            if (Character.toUpperCase(first) != Character.toUpperCase(last)) {
                // If they are not equal, it\'s not a palindrome, return false
                return false;
            } else {
                // Characters are equal, move both start and end pointers
                start++;
                end--;
            }
        }
        // All characters have been compared and found to be equal, it\'s a palindrome, return true
        return true;
    }
}
