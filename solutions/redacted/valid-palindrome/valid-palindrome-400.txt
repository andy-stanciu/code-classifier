class Solution {

    public boolean method1(String s) {
        boolean k = res(s);
        if (k) {
            return true;
        } else {
            return false;
        }
    }

    public static String removeAllNonAlphaNumaric(String s) {
        s = s.replaceAll("[^a-zA-Z0-9]", "");
        return s;
    }

    public static boolean res(String str) {
        String str2 = str.toLowerCase();
        String s = removeAllNonAlphaNumaric(str2);
        int l = s.length();
        if (l < 1) {
            return true;
        }
        int i, j, k = 0, mid = 0, m = 0;
        mid = l / 2;
        String first = "";
        String second = "";
        if (l % 2 == 0) {
            first = "a".repeat(mid);
            second = "a".repeat(mid);
        } else {
            first = "a".repeat(mid + 1);
            second = "a".repeat(mid + 1);
        }
        StringBuilder sbS = new StringBuilder(s);
        StringBuilder sbFirst = new StringBuilder(first);
        StringBuilder sbSecond = new StringBuilder(second);
        if (l % 2 == 0) {
            for (i = 0; i < mid; i++) {
                sbFirst.setCharAt(i, sbS.charAt(i));
            }
            for (j = l - 1; j >= mid; j--) {
                sbSecond.setCharAt(m, sbS.charAt(j));
                m++;
            }
        } else {
            for (i = 0; i <= mid; i++) {
                sbFirst.setCharAt(i, sbS.charAt(i));
            }
            for (j = l - 1; j >= mid; j--) {
                sbSecond.setCharAt(m, sbS.charAt(j));
                m++;
            }
        }
        boolean result = sbFirst.toString().equals(sbSecond.toString());
        return result;
    }
}
