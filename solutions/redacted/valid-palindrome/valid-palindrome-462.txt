class Solution {

    public boolean method1(String s) {
        // Step 1: Remove all non-alphanumeric characters and convert to lowercase
        //The [^a-zA-Z0-9] part of the regex means "any character that is not a letter or a digit".
        s = s.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
        // Step 2: Initialize pointers for the start and end of the string
        int i = 0, j = s.length() - 1;
        // Step 3: Check characters from the start and end towards the middle
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                // If characters do not match, it\'s not a palindrome
                return false;
            }
            // Move the start pointer forward and the end pointer backward
            i++;
            //If the characters match, the pointers are moved closer to the center: i++ increments the start pointer, and j-- decrements the end pointer.
            j--;
        }
        // Step 4: If all characters matched, it\'s a palindrome
        return true;
    }
}
