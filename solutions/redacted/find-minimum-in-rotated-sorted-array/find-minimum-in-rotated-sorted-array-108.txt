class Solution {

    public int method1(int[] nums) {
        if (nums.length == 1)
            return nums[0];
        int low = 0, high = nums.length - 1, n = nums.length;
        if (nums[low] < nums[high])
            return nums[low];
        while (low < high) {
            int mid = low + (high - low) / 2;
            int prev = (mid + n - 1) % n;
            int next = (mid + 1) % n;
            if (nums[mid] < nums[prev] && nums[mid] < nums[next])
                return nums[mid];
            else if (// this means resultant array from low to high is sorted and the ans will be at the nums[low]
            nums[mid] >= nums[low] && nums[high] >= nums[mid])
                break;
            else if (// left array is sorted and the min element will be at the right subarray
            nums[mid] >= nums[low])
                low = mid + 1;
            else if (//right array is sorted and the min element will be at the left subarray
            nums[mid] <= nums[high])
                high = mid - 1;
        }
        if (nums[low] > nums[high])
            return nums[high];
        // if we get sorted array(subarray) so this statement will be executed
        return nums[low];
    }
}
