class Solution {

    public int method1(int[] a) {
        int n = a.length;
        int st = 0;
        int end = n - 1;
        int ans = (int) 1e9;
        while (st <= end) {
            int mid = st + (end - st) / 2;
            // removing the left sorted part of the array and update answer as minimum of itself and array of starting index which will change after removal of left side of array
            if (a[st] <= a[mid]) {
                ans = Math.min(ans, a[st]);
                st = mid + 1;
            } else // removing the right sorted part of the array and update answer as minimum of itself and array of middle index which will change after removal of right side of array
            {
                ans = Math.min(ans, a[mid]);
                end = mid - 1;
            }
        }
        return ans;
    }
}
