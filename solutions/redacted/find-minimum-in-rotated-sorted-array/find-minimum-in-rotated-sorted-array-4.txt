class Solution {

    public int method1(int[] nums) {
        // use third variable to record current mid
        // use mid to check, if mid smaller than start  move to left side, record mid;
        // else move to right (no equal condition)
        //
        int var1 = Integer.MAX_VALUE;
        int start = 0;
        int end = nums.length - 1;
        //if(nums.length==1) return nums[0];
        while (start <= end) {
            int mid = (start + end) / 2;
            if (nums[mid] <= nums[start]) {
                if (nums[end] < nums[mid]) {
                    var1 = Math.var1(var1, nums[end]);
                } else {
                    var1 = Math.var1(var1, nums[mid]);
                }
                end = mid - 1;
            } else {
                if (nums[start] < nums[end]) {
                    // meaning subarray is in ASC order;
                    end = mid - 1;
                } else {
                    start = mid + 1;
                }
            }
        }
        return var1;
    }
}
