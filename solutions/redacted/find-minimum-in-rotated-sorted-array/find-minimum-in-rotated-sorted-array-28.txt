class Solution {

    public int method1(int[] nums) {
        int n = nums.length;
        int start = 0;
        int end = n - 1;
        int mid = start + (end - start) / 2;
        if (nums[start] <= nums[end])
            return nums[0];
        while (start <= end) {
            mid = start + (end - start) / 2;
            if (nums[mid] > nums[mid + 1])
                return nums[mid + 1];
            if (nums[start] < nums[mid]) {
                //left is sorted call on right as smallest will be there only
                start = mid + 1;
            } else {
                //right is sorted call on left as smallest will be there only
                end = mid;
            }
        }
        return -1;
    }
}
