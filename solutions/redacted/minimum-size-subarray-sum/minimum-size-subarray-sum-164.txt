class Solution {

    public int method1(int target, int[] nums) {
        /*int[] subArraySums = new int [nums.length];
        for (int len = 1; len <= nums.length; len++){
            for (int startIndex = 0; startIndex <= nums.length-len; startIndex++){
                subArraySums[startIndex] += nums[startIndex+len-1];
                if (subArraySums[startIndex] >= target)
                    return len;
            }
        }
        return 0;*/
        int left = 0;
        int right = 0;
        int var1 = nums[0];
        int minLen = var1 >= target ? 1 : nums.length + 1;
        while (right < nums.length) {
            if (var1 - nums[left] >= target) {
                var1 -= nums[left];
                left++;
            } else {
                right++;
                if (right < nums.length) {
                    var1 += nums[right];
                }
            }
            if (var1 >= target)
                minLen = Math.min(minLen, right - left + 1);
        }
        return minLen == nums.length + 1 ? 0 : minLen;
    }
}
