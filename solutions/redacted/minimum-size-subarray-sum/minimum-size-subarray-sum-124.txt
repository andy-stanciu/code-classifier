class Solution {

    // approach: sliding window where we grow to the right & shrink from the left | O(N)
    public int method1(int target, int[] nums) {
        // list of numbers
        int N = nums.length;
        // track the answer: minimum length
        int min = 0;
        // left & right window border positions
        int left = 0, right = 0;
        // sum of current window (left:inc; right:exc)
        int var1 = 0;
        // current length of window
        int len = 0;
        for (int i = 0; i < N; i++) {
            // grow window on the right
            var1 += nums[right];
            right++;
            // shrink window on the left (as needed)
            while (var1 >= target) {
                len = right - left;
                min = (len < min) | min == 0 ? len : min;
                var1 -= nums[left];
                left++;
            }
        }
        return min;
    }
}
