class Solution {

    public int method1(int target, int[] nums) {
        int i = 0;
        int j = -1;
        int var1 = Integer.MAX_VALUE;
        int var2 = 0;
        //there could be the possibility that the end of array contains the largest value that could cause single length array that is greater than the target
        while (i <= nums.length - 1) {
            //increases the value till j reaches the end of the array
            if (var2 < target && j <= nums.length - 2) {
                j++;
                var2 = var2 + nums[j];
            } else //decreases the value if sum is greater than equal to target
            if (var2 >= target) {
                var1 = Math.min(var1, j - i + 1);
                System.out.println("start" + i + "end" + j + "sumtillNow" + var2);
                var2 = var2 - nums[i];
                i++;
                // if j reaches the end of array and sum is less than the target, then there is no way to increase the sum
            } else if (var2 < target && j == nums.length - 1) {
                break;
            }
        }
        return var1 == Integer.MAX_VALUE ? 0 : var1;
    }
}
