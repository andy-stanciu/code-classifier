class Solution {

    public int method1(int target, int[] nums) {
        int low = 1;
        int high = nums.length + 1;
        boolean flag = false;
        while (low < high) {
            int mid = low + (high - low) / 2;
            if (fixsw(mid, nums, target) == true) {
                flag = true;
                high = mid;
            } else
                low = mid + 1;
        }
        if (!flag)
            return 0;
        return low;
    }

    public boolean fixsw(int param1, int[] nums, int target) {
        int i = 0;
        int j = 0;
        int var1 = 0;
        int max = Integer.MIN_VALUE;
        while (j < nums.length) {
            var1 += nums[j];
            if (j - i + 1 == param1) {
                max = Math.max(max, var1);
                var1 -= nums[i];
                i++;
            }
            j++;
        }
        if (max >= target) {
            return true;
        }
        return false;
    }
}
