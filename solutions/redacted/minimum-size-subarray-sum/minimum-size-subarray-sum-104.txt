class Solution {

    public int method1(int target, int[] nums) {
        int var1 = 0;
        // int []preSum = new int[nums.length];
        // for(int i=0;i<nums.length;i++)
        // {preSum[i] = sum + nums[i];
        // sum = preSum[i];}
        var1 = 0;
        int k = 0;
        while (k < nums.length && var1 < target) {
            var1 += nums[k];
            if (nums[k] >= target)
                return 1;
            k++;
        }
        if (k == nums.length && var1 == target)
            return k;
        if (k == nums.length && var1 < target)
            return 0;
        int minl = k;
        int l = 0;
        if (k == nums.length) {
            while (var1 - nums[l] >= target) {
                var1 = var1 - nums[l];
                l++;
            }
            return k - l;
        }
        while (k < nums.length) {
            while (k >= l && var1 - nums[l] >= target) {
                var1 = var1 - nums[l];
                l++;
            }
            minl = Math.min(minl, k - l);
            var1 = var1 + nums[k];
            k++;
        }
        while (k >= l && var1 - nums[l] >= target) {
            var1 = var1 - nums[l];
            l++;
        }
        minl = Math.min(minl, k - l);
        return minl;
    }
}
