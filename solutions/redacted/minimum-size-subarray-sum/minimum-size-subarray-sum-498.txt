class Solution {

    public int method1(int target, int[] nums) {
        //sum of window
        int var1 = 0;
        //window size to reach target
        int tw = 0;
        //index of right of the window
        int j = 0;
        //smallest window size to reach target
        int sw = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            //reduce the left window size by 1
            if (i == 0) {
                var1 = 0;
                tw = 0;
            } else {
                var1 -= nums[i - 1];
                tw--;
            }
            //try to achieve the target by increasing right window size
            while (var1 < target && j < nums.length) {
                var1 += nums[j];
                tw++;
                j++;
            }
            //re-evaluate sw, if sums is achieved target by reduction of left window or increasing right window
            if (var1 >= target) {
                sw = Math.min(sw, tw);
            }
        }
        //return 0, if sums never target
        if (sw == Integer.MAX_VALUE) {
            return 0;
        } else {
            return sw;
        }
    }
}
