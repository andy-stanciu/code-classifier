class Solution {

    public int method1(int target, int[] nums) {
        int startIdx = 0;
        int endIdx = 0;
        int n = nums.length;
        int minLen = Integer.MAX_VALUE;
        int len = 0;
        int var1 = 0;
        while (endIdx < n) {
            // Expansion Phase
            var1 += nums[endIdx];
            if (var1 >= target) {
                // Shrinking Phase
                len = endIdx - startIdx + 1;
                minLen = Math.min(minLen, len);
                while (startIdx < endIdx && var1 >= target) {
                    var1 -= nums[startIdx++];
                    if (var1 >= target) {
                        len = endIdx - startIdx + 1;
                        minLen = Math.min(minLen, len);
                    }
                }
            }
            endIdx++;
        }
        minLen = (minLen == Integer.MAX_VALUE) ? 0 : minLen;
        return minLen;
    }
}
