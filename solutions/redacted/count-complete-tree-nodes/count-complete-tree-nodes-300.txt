/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        if (root == null)
            return 0;
        int left = heightleft(root);
        int right = heightright(root);
        if (left == right) {
            int ans = (int) Math.pow(2, left);
            ans = ans - 1;
            return ans;
        } else {
            return method1(root.left) + method1(root.right) + 1;
        }
    }

    public int heightleft(TreeNode root) {
        int var1 = 0;
        while (root != null) {
            root = root.left;
            var1++;
        }
        return var1;
    }

    public int heightright(TreeNode root) {
        int var1 = 0;
        while (root != null) {
            root = root.right;
            var1++;
        }
        return var1;
    }
}
