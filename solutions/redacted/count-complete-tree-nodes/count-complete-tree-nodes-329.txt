/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        int a = balanced(root);
        if (a != -1)
            return (int) Math.pow(2, a) - 1;
        if (root == null)
            return 0;
        int b = method1(root.left);
        int c = method1(root.right);
        return b + c + 1;
    }

    public int balanced(TreeNode root) {
        TreeNode root1 = root;
        TreeNode root2 = root;
        int c = 0;
        while (root1 != null && root2 != null) {
            c++;
            root1 = root1.left;
            root2 = root2.right;
            if ((root1 == null && root2 != null) || (root1 != null && root2 == null))
                return -1;
        }
        return c;
    }
}
