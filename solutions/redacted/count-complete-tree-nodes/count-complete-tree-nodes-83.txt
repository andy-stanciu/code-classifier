/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        return inorder(root);
    }

    // Helper method to perform inorder traversal and count nodes
    public int inorder(TreeNode root) {
        if (root == null) {
            // Base case: if the node is null, return 0
            return 0;
        }
        // Count the current node and recursively count nodes in left and right subtrees
        return 1 + inorder(root.left) + inorder(root.right);
    }
}
