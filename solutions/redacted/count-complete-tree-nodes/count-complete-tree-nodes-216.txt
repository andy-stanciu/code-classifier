/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static int method1(TreeNode root) {
        if (root == null)
            return 0;
        int lh = findLeftHeight(root.left);
        int rh = findRightHeight(root.right);
        if (lh == rh) {
            return ((2 << (lh)) - 1);
        } else
            return 1 + method1(root.left) + method1(root.right);
    }

    public static int findLeftHeight(TreeNode root) {
        if (root == null)
            return 0;
        int var1 = 0;
        while (root != null) {
            root = root.left;
            var1++;
        }
        return var1;
    }

    public static int findRightHeight(TreeNode root) {
        if (root == null)
            return 0;
        int var1 = 0;
        while (root != null) {
            root = root.right;
            var1++;
        }
        return var1;
    }
}
