/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        if (root == null)
            return 0;
        TreeNode leftNode = root;
        TreeNode rightNode = root;
        int leftHeight = 0;
        int rightHeight = 0;
        while (leftNode != null) {
            leftHeight++;
            leftNode = leftNode.left;
        }
        while (rightNode != null) {
            rightHeight++;
            rightNode = rightNode.right;
        }
        if (leftHeight == rightHeight) {
            return (int) Math.pow(2, leftHeight) - 1;
        }
        return 1 + method1(root.left) + method1(root.right);
    }
}
