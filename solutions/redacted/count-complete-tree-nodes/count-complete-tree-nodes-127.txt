/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode node) {
        int var1 = 1;
        while (node.left != null) {
            var1++;
            node = node.left;
        }
        return var1;
    }

    public int method2(TreeNode node) {
        int var1 = 1;
        while (node.right != null) {
            var1++;
            node = node.right;
        }
        return var1;
    }

    public int method3(TreeNode root) {
        if (root == null)
            return 0;
        int leftHeight = method1(root);
        int rightHeight = method2(root);
        if (rightHeight == leftHeight) {
            return ((int) Math.pow(2, leftHeight) - 1);
        }
        return (1 + method3(root.left) + method3(root.right));
    }
}
