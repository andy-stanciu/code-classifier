/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int method1(TreeNode root, int c) {
        if (root == null) {
            return c;
        } else {
            c++;
        }
        //Finding count of nodes from the left sub-tree of the node
        c = method1(root.left, c);
        //Giving the count obtained from left sub-tree to the recursive call which is finding number of nodes from right sub-tree of the node
        c = method1(root.right, c);
        //Returning the total number of nodes in each sub-tree
        return c;
    }

    public int method2(TreeNode root) {
        int ans = method1(root, 0);
        return ans;
    }
}
