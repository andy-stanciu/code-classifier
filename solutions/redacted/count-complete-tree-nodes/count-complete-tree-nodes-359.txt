/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    // declaring global var
    private int var1 = 0;

    public int method1(TreeNode root) {
        //edge case i.e tree with zero nodes
        if (root == null)
            return 0;
        var1(root);
        return var1;
    }

    public void var1(TreeNode node) {
        // function for traversal
        if (node == null)
            return;
        // left sub-tree traversal
        var1(node.left);
        // upon encountering node , increment the count
        var1++;
        // right sub-tree traversal
        var1(node.right);
    }
}
