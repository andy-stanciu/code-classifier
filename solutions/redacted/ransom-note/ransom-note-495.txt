class Solution {

    public boolean canConstruct(String param1, String magazine) {
        Map<String, Integer> var1 = new HashMap<>();
        Map<String, Integer> magzineCharCount = new HashMap<>();
        char[] var2 = param1.toCharArray();
        char[] magzineArray = magazine.toCharArray();
        for (int i = 0; i < magzineArray.length; i++) {
            magzineCharCount.putIfAbsent(String.valueOf(magzineArray[i]), 1);
            magzineCharCount.computeIfPresent(String.valueOf(magzineArray[i]), (key, value) -> value + 1);
        }
        for (int i = 0; i < var2.length; i++) {
            var1.putIfAbsent(String.valueOf(var2[i]), 1);
            var1.computeIfPresent(String.valueOf(var2[i]), (key, value) -> value + 1);
        }
        boolean check = true;
        for (Map.Entry<String, Integer> var3 : var1.entrySet()) {
            if (magzineCharCount.containsKey(var3.getKey())) {
                if (magzineCharCount.get(var3.getKey()) < var3.getValue()) {
                    check = false;
                    break;
                }
            } else {
                check = false;
                break;
            }
        }
        return check;
    }
}
