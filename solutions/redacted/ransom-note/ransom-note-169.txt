class Solution {

    public boolean canConstruct(String s1, String s2) {
        if (s2.length() < s1.length()) {
            return false;
        }
        Map<Character, Integer> mp = new HashMap<>();
        for (int i = 0; i < s1.length(); i++) {
            if (mp.containsKey(s1.charAt(i))) {
                int val = mp.get(s1.charAt(i));
                mp.put(s1.charAt(i), val + 1);
            } else {
                mp.put(s1.charAt(i), 1);
            }
        }
        for (int i = 0; i < s2.length(); i++) {
            if (mp.containsKey(s2.charAt(i))) {
                int val = mp.get(s2.charAt(i));
                if (val == 1) {
                    mp.remove(s2.charAt(i));
                } else {
                    mp.put(s2.charAt(i), val - 1);
                }
            }
        }
        return mp.size() == 0;
    }
}
