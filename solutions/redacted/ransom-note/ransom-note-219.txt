class Solution {

    public boolean canConstruct(String param1, String magazine) {
        Map<Character, Long> var1;
        Map<Character, Long> mag;
        // Get IntStream of characters
        // Convert each character to Character object
        // Convert each character to Character object
        mag = // Collect characters into a Map
        magazine.chars().// Collect characters into a Map
        mapToObj(// Collect characters into a Map
        c -> (char) c).// Group by character itself
        collect(// Count occurrences of each character
        Collectors.groupingBy(Function.identity(), Collectors.counting()));
        // Get IntStream of characters
        // Convert each character to Character object
        // Convert each character to Character object
        var1 = // Collect characters into a Map
        param1.chars().// Collect characters into a Map
        mapToObj(// Collect characters into a Map
        c -> (char) c).// Group by character itself
        collect(// Count occurrences of each character
        Collectors.groupingBy(Function.identity(), Collectors.counting()));
        return var1.entrySet().stream().allMatch(entry -> entry.getValue() <= mag.getOrDefault(entry.getKey(), 0L));
    }
}
