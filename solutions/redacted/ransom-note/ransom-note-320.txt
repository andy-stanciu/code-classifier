class Solution {

    public boolean canConstruct(String param1, String magazine) {
        HashMap<Character, Integer> map = new HashMap();
        helper(map, magazine);
        for (int i = 0; i < param1.length(); i++) {
            if (map.containsKey(param1.charAt(i))) {
                if (map.get(param1.charAt(i)) <= 0)
                    return false;
                else
                    map.put(param1.charAt(i), map.get(param1.charAt(i)) - 1);
            } else
                return false;
        }
        return true;
    }

    private void helper(HashMap<Character, Integer> map, String s) {
        for (int i = 0; i < s.length(); i++) {
            if (map.containsKey(s.charAt(i))) {
                map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
            } else {
                map.put(s.charAt(i), 1);
            }
        }
    }
}
// class Solution {
//     public boolean canConstruct(String ransomNote, String magazine) {
//        if(ransomNote.length()>magazine.length())return false;
//        int[] alpha = new int[26];
//        for(char c : magazine.toCharArray())  alpha[c-\'a\']++;
//        for(char c : ransomNote.toCharArray()){
//            if(alpha[c-\'a\']==0)return false;
//            alpha[c-\'a\']--;
//        }
//        return true;
//     }
// }
// class Solution {
//     public boolean canConstruct(String ransomNote, String magazine) {
//         int[] alphabets = new int[26];
//         for (char ch : ransomNote.toCharArray()) {
//             alphabets[ch - \'a\'] = magazine.indexOf(ch, alphabets[ch - \'a\']);
//             if (alphabets[ch - \'a\']++ < 0)
//                 return false;
//         }
//         return true;
//     }
// }
