class Solution {

    public boolean canConstruct(String param1, String magazine) {
        //since magazine should be longer than ransomeNote.
        if (magazine.length() < param1.length()) {
            return false;
        }
        //HashMap to track the frequencies of the letters.
        HashMap<Character, Integer> magazineLetters = new HashMap<>();
        for (int i = 0; i < magazine.length(); i++) {
            char m = magazine.charAt(i);
            int currentCount = magazineLetters.getOrDefault(m, 0);
            magazineLetters.put(m, currentCount + 1);
        }
        for (int i = 0; i < param1.length(); i++) {
            char r = param1.charAt(i);
            int currentCount = magazineLetters.getOrDefault(r, 0);
            //If no occurence found for the ransomNote character in the magazine
            if (currentCount == 0) {
                return false;
            }
            //If a char is found, decrement the currentCount.
            if (currentCount > 0) {
                magazineLetters.put(r, currentCount - 1);
            }
        }
        System.gc();
        //we traversed the whole ransomNote successfully.
        return true;
    }
}
