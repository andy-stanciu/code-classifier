class Solution {

    public boolean canConstruct(String param1, String magazine) {
        // K = 26 (worst case)
        HashMap<Character, Integer> magazineLetters = new HashMap<>();
        for (int i = 0; i < magazine.length(); i++) {
            char m = magazine.charAt(i);
            int currentCount = magazineLetters.getOrDefault(m, 0);
            magazineLetters.put(m, currentCount + 1);
        }
        // bounded by m
        for (int i = 0; i < param1.length(); i++) {
            char r = param1.charAt(i);
            int currentCount = magazineLetters.getOrDefault(r, 0);
            if (currentCount == 0) {
                return false;
            }
            magazineLetters.put(r, currentCount - 1);
        }
        return true;
    }
    // time complexity = O(m)
    // space complexity = O(1)
}
