class Solution {

    public int[] method1(int[] nums1, int[] nums2) {
        ArrayList<Integer> ans = new ArrayList<>();
        // Use a boolean array to mark presence of elements from nums2
        // Assuming nums2 elements are within range 0 to 1999
        boolean[] result = new boolean[2000];
        // Mark elements of nums2 in the boolean array
        for (int num : nums2) {
            result[num] = true;
        }
        Arrays.sort(nums1);
        // Iterate through nums1 and check for intersection with nums2
        for (int i = 0; i < nums1.length; i++) {
            // Check for duplicates in nums1 (skip if duplicate)
            if (i > 0 && nums1[i] == nums1[i - 1]) {
                continue;
            }
            // Check if nums1[i] exists in nums2 (marked true in the boolean array)
            if (result[nums1[i]]) {
                ans.add(nums1[i]);
            }
        }
        // Convert ArrayList to int[]
        int[] forreal = new int[ans.size()];
        for (int i = 0; i < ans.size(); i++) {
            forreal[i] = ans.get(i);
        }
        return forreal;
    }
}
