class Solution {

    public int[] method1(int[] nums1, int[] nums2) {
        //first sort both array.
        //now arrays will be :-  {4,5,9}  and {4,4,8,9,9}
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        //store length if any of the length goes out of bound we will comes out of our loop.
        // that is why to give this comparision we are using it.
        int n1 = nums1.length;
        int n2 = nums2.length;
        //we will set function so that we get proper unique element in our output.
        Set<Integer> set = new HashSet<>();
        //setting two pointers .
        int i = 0;
        int j = 0;
        int count = 0;
        while (i < n1 && j < n2) {
            //if (i=n1 || j=n2){break}
            if (nums1[i] == nums2[j]) {
                //if both pointers matches
                //we are giving result in set
                set.add(nums1[i]);
                //increment point i ;
                i++;
                ////increment point j;
                j++;
            } else if (nums1[i] > nums2[j]) {
                /*pointer sifted to 1 index one refer sorted array
                                               nums[i] is greater than nums[j] so if we increase j there might possiblity that nums[i] will equals nums[j] .... so we will do for both pointer this thing which ever will be small we will increatments it pointer */
                j++;
            } else if (nums1[i] < nums2[j]) {
                i++;
            }
        }
        int[] res = new int[set.size()];
        for (Integer k : set) {
            res[count++] = k;
        }
        return res;
    }
}
//if you find this helpful do let me know by Upvoting it give me sense of motivation to contribute more
