class Solution {

    public int[] method1(int[] nums1, int[] nums2) {
        HashSet<Integer> numbers = new HashSet<>();
        Arrays.sort(nums2);
        for (int i = 0; i < nums1.length; i++) {
            if (binaSear(nums2, nums1[i])) {
                numbers.add(nums1[i]);
            }
        }
        int[] elements = new int[numbers.size()];
        int i = 0;
        for (int n : numbers) {
            elements[i++] = n;
        }
        return elements;
    }

    public boolean binaSear(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        while (start <= end) {
            int midl = start + (end - start) / 2;
            if (nums[midl] == target) {
                return true;
            } else if (nums[midl] < target) {
                start = midl + 1;
            } else {
                end = midl - 1;
            }
        }
        return false;
    }
}
