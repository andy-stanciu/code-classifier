class Solution {

    public int[] method1(int[] nums1, int[] nums2) {
        // Sort both input arrays
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        // Index to keep track of the intersection elements count
        int k = 0;
        for (int i = 0, j = 0; i < nums1.length && j < nums2.length; ) {
            if (nums1[i] == nums2[j]) {
                if (k == 0 || nums1[i] != nums1[k - 1]) {
                    // When a match is found and it\'s either the first element or different from the last added
                    // Add it to the result stored in the beginning of nums1
                    nums1[k++] = nums1[i];
                }
                // Move both pointers forward when a match is found
                i++;
                j++;
            } else if (nums1[i] < nums2[j]) {
                // If the current element in nums1 is smaller, move its pointer forward
                i++;
            } else {
                // If the current element in nums2 is smaller, move its pointer forward
                j++;
            }
        }
        // Copy the first k elements (intersection) to a new array and return
        return Arrays.copyOf(nums1, k);
    }
}
