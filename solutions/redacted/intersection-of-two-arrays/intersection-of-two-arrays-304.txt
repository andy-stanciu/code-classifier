class Solution {

    public int[] method1(int[] nums1, int[] nums2) {
        List<Integer> res = new ArrayList<>();
        int i = 0;
        int j = 0;
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        while (i < nums1.length && j < nums2.length) {
            //Skip duplictes
            while (i > 0 && i < nums1.length && nums1[i] == nums1[i - 1]) {
                i++;
            }
            while (j > 0 && j < nums2.length && nums2[j] == nums2[j - 1]) {
                j++;
            }
            //if one of the array gets Exhausted
            if (i >= nums1.length || j >= nums2.length) {
                break;
            }
            //comparison
            if (nums1[i] < nums2[j]) {
                i++;
            } else if (nums1[i] > nums2[j]) {
                j++;
            } else {
                res.add(nums1[i]);
                i++;
                j++;
            }
        }
        return res.stream().mapToInt(Integer::intValue).toArray();
    }
}
