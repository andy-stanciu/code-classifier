class Solution {

    public int method1(int[] nums, int target) {
        int left = 0, len = nums.length - 1;
        int var1 = 0;
        /**
         * working brute force **
         */
        // int closeDiff=Integer.MAX_VALUE;
        // for(int i=0;i<len-1;i++)
        // {
        //     for(int j=i+1;j<len;j++)
        //     {
        //         for(int k=j+1;k<=len;k++)
        //         {
        //             int diff=Math.abs(target-(nums[i]+nums[j]+nums[k]));
        //             if(diff<closeDiff)
        //             {
        //                 closeDiff=diff;
        //                 closestSum=nums[i]+nums[j]+nums[k];
        //                 System.out.println(closeDiff+" "+closestSum);
        //             }
        //             else if(diff==0)
        //                 return target;
        //         }
        //     }
        // }
        // return closestSum;
        //optimization
        Arrays.sort(nums);
        int closeDiff = Integer.MAX_VALUE;
        for (int i = 0; i < len - 1; i++) {
            left = i + 1;
            int right = len;
            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];
                int diff = Math.abs(target - sum);
                if (diff == 0)
                    return sum;
                if (diff < closeDiff) {
                    closeDiff = diff;
                    var1 = sum;
                }
                if (sum < target)
                    left++;
                else
                    right--;
            }
        }
        return var1;
    }
}
