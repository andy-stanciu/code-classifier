class Solution {

    public int method1(int[] numbers, int target) {
        // Sort the array.
        Arrays.sort(numbers);
        int result = 0, minDiff = Integer.MAX_VALUE;
        // traverse the array
        for (int i = 0; i < numbers.length - 2; i++) {
            // two pointers
            int left = i + 1, right = numbers.length - 1;
            while (left < right) {
                // calculate sum of three possible numbers.
                int sum = numbers[left] + numbers[right] + numbers[i];
                // update pointers according to the current sum, and if target equals sum return it.
                if (sum == target) {
                    return sum;
                } else if (sum < target) {
                    left++;
                } else if (sum > target) {
                    right--;
                }
                // calculate the closeness between sum and target.
                int diff = Math.abs(target - sum);
                if (diff < minDiff) {
                    minDiff = diff;
                    result = sum;
                }
            }
        }
        return result;
    }
}
