class Solution {

    public int method1(int[] nums, int target) {
        // Sort the array to use two-pointer technique
        Arrays.sort(nums);
        int n = nums.length;
        int var1 = nums[0] + nums[1] + nums[2];
        // Iterate through the array
        for (int i = 0; i < n - 2; i++) {
            // Initialize two pointers
            int left = i + 1;
            int right = n - 1;
            while (left < right) {
                int currentSum = nums[i] + nums[left] + nums[right];
                // If the current sum is exactly the target, return it
                if (currentSum == target) {
                    return currentSum;
                }
                // Update the closest sum if the current sum is closer to the target
                if (Math.abs(currentSum - target) < Math.abs(var1 - target)) {
                    var1 = currentSum;
                }
                // Move the pointers
                if (currentSum < target) {
                    left++;
                } else {
                    right--;
                }
            }
        }
        return var1;
    }
}
