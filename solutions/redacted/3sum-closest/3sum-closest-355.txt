class Solution {

    public int method1(int[] nums, int target) {
        Arrays.sort(nums);
        //Setting the range
        int ttom = 1000000;
        //Setting the range
        int mtot = -1000000;
        for (int i = 0; i < nums.length - 2; i++) {
            // 1st pointer
            // 2nd pointer
            int j = i + 1;
            // 3rd pointer
            int k = nums.length - 1;
            int sum = 0;
            while (j < k) {
                sum = nums[i] + nums[j] + nums[k];
                if (sum < ttom && sum > target) {
                    // if the sum achived is
                    // between the target and
                    ttom = Math.min(sum, ttom);
                } else // maximum value, update
                // maximum range.
                if (sum > mtot && sum <= target) {
                    // if the sum achived
                    // is between the target
                    mtot = Math.max(sum, mtot);
                }
                // and minimum value
                // update minimum range.
                if (sum > target) {
                    // Move the right pointer.
                    k--;
                } else {
                    // Move the left pointer.
                    j++;
                }
            }
        }
        if (Math.abs(target - mtot) < Math.abs(ttom - target)) {
            // see where we are getting minimum difference.
            return mtot;
        } else //is it (target - minimum range) OR
        {
            // is it (maximum range - target).
            return ttom;
        }
    }
}
