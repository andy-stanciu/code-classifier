class Solution {

    public int method1(int[] nums, int target) {
        Arrays.sort(nums);
        // int ans = Integer.MIN_VALUE;
        // int n = nums.length;
        // for( int i=0; i<n -2; i++){
        //     int sum = nums[i] + twosum( nums, target- nums[i], i);
        //     if( ans == Integer.MIN_VALUE || Math.abs( sum- target) < Math.abs( ans - target)){
        //         ans = sum;
        //     }
        // }
        // return ans;
        int n = nums.length;
        int ans = Integer.MIN_VALUE;
        for (int i = 0; i < n - 2; i++) {
            int sum = nums[i] + twosum(nums, target - nums[i], i);
            if (ans == Integer.MIN_VALUE || Math.abs(sum - target) < Math.abs(ans - target)) {
                ans = sum;
            }
        }
        return ans;
    }

    public int twosum(int[] nums, int k, int st) {
        int start = st + 1;
        int end = nums.length - 1;
        int ans = Integer.MIN_VALUE;
        while (start < end) {
            int sum = nums[start] + nums[end];
            if (ans == Integer.MIN_VALUE || Math.abs(sum - k) < Math.abs(ans - k)) {
                ans = sum;
            }
            if (sum == k) {
                return sum;
            } else if (sum < k) {
                start++;
            } else {
                end--;
            }
        }
        return ans;
    }
}
