class Solution {

    public int method1(int[] nums, int target) {
        int n = nums.length;
        Arrays.sort(nums);
        int min = Math.abs(nums[0] + nums[1] + nums[2] - target);
        int bestTillNow = nums[0] + nums[1] + nums[2];
        for (int i = 0; i <= n - 3; i++) {
            int start = i + 1, end = n - 1;
            while (start < end) {
                if (nums[i] + nums[start] + nums[end] < target) {
                    int m = Math.abs((nums[i] + nums[start] + nums[end]) - target);
                    if (m < min) {
                        min = m;
                        bestTillNow = nums[i] + nums[start] + nums[end];
                    }
                    start++;
                } else {
                    int m = Math.abs((nums[i] + nums[start] + nums[end]) - target);
                    if (m < min) {
                        min = m;
                        bestTillNow = nums[i] + nums[start] + nums[end];
                    }
                    end--;
                }
            }
        }
        return bestTillNow;
    }
}
