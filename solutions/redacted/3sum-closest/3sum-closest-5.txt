class Solution {

    int differ = Integer.MAX_VALUE;

    int var1 = 0;

    int Tar = 0;

    boolean flag = false;

    public int method1(int[] nums, int target) {
        Arrays.sort(nums);
        HashSet<Integer> set = new HashSet<>();
        Tar = target;
        for (int i = 0; i < nums.length && !flag; i++) {
            int temp = nums[i];
            if (!set.contains(temp)) {
                set.add(temp);
                method2(0, nums, i + 1, temp);
            }
        }
        return var1;
    }

    private void method2(int deep, int[] nums, int cur, int sum) {
        if (deep == 2) {
            int dif_sum = Math.abs(Tar - sum);
            if (differ >= dif_sum) {
                differ = dif_sum;
                var1 = sum;
                if (differ == 0) {
                    // System.out.println(flag);
                    flag = true;
                }
                return;
            }
            return;
        }
        if (cur >= nums.length)
            return;
        for (int i = cur; i < nums.length && !flag; i++) {
            method2(deep + 1, nums, i + 1, sum + nums[i]);
        }
    }
}
