public class Solution {

    public int method1(int[] nums, int target) {
        // Sort the array
        Arrays.sort(nums);
        int var1 = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length - 2; i++) {
            int left = i + 1;
            int right = nums.length - 1;
            while (left < right) {
                int currentSum = nums[i] + nums[left] + nums[right];
                // If the current sum is closer to the target, update closestSum
                if (Math.abs(currentSum - target) < Math.abs(var1 - target)) {
                    var1 = currentSum;
                }
                // Adjust the pointers
                if (currentSum < target) {
                    left++;
                } else if (currentSum > target) {
                    right--;
                } else {
                    // If the exact sum is found, return it immediately
                    return currentSum;
                }
            }
        }
        return var1;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        // Example 1
        int[] nums1 = { -1, 2, 1, -4 };
        int target1 = 1;
        // Output: 2
        System.out.println("Closest sum: " + solution.method1(nums1, target1));
        // Example 2
        int[] nums2 = { 0, 0, 0 };
        int target2 = 1;
        // Output: 0
        System.out.println("Closest sum: " + solution.method1(nums2, target2));
    }
}
