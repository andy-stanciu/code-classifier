class Solution {

    public int method1(int[] nums, int target) {
        if (nums == null || nums.length < 3) {
            return 0;
        }
        selectionSort(nums);
        int diff = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length && diff != 0; i++) {
            int left = i + 1;
            int right = nums.length - 1;
            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];
                // Check closest
                if (Math.abs(target - sum) < Math.abs(diff)) {
                    diff = target - sum;
                }
                // Continue search
                if (sum > target) {
                    right--;
                } else {
                    left++;
                }
            }
        }
        return target - diff;
    }

    private void selectionSort(int[] nums) {
        for (int i = 0; i < nums.length - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < nums.length; j++) {
                if (nums[j] < nums[minIndex]) {
                    minIndex = j;
                }
            }
            // Swap values
            int temp = nums[i];
            nums[i] = nums[minIndex];
            nums[minIndex] = temp;
        }
    }
}
