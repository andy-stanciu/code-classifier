class Solution {

    public boolean method1(String s, String t) {
        /*
        Idea 1:
        Count the letters and check if the other one has the same.
        That is:
        s.letters -> hashmap(char,count)
        t.letters -> hasmap(char,c--)
        hasmap.values = 0

        Idea 2:
        sort alphabetically both and compare

        Idea 3:
        s.letters -> removeFirst(char)
        if no errors they are equal
        */
        // lets start with idea 3
        var wrapper = new Object() {

            String t_new = t;

            public void remove(String c) {
                t_new = t_new.replaceFirst(c, "");
            }
        };
        s.chars().forEach(c -> wrapper.remove(String.valueOf((char) c)));
        // in case s is longer we should do the same thing but different order
        var wrap2 = new Object() {

            String s_new = s;

            public void remove(String c) {
                s_new = s_new.replaceFirst(c, "");
            }
        };
        t.chars().forEach(c -> wrap2.remove(String.valueOf((char) c)));
        return wrapper.t_new.length() == 0 && wrap2.s_new.length() == 0;
        // don\'t want ot implement the others
    }
}
