class Solution {

    public boolean method1(String s, String t) {
        if (s.length() != t.length()) {
            return false;
        }
        HashMap<Character, Integer> map_s = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            if (map_s.containsKey(s.charAt(i))) {
                map_s.put(s.charAt(i), map_s.get(s.charAt(i)) + 1);
            } else {
                map_s.put(s.charAt(i), 1);
            }
        }
        HashMap<Character, Integer> map_r = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            if (map_r.containsKey(t.charAt(i))) {
                map_r.put(t.charAt(i), map_r.get(t.charAt(i)) + 1);
            } else {
                map_r.put(t.charAt(i), 1);
            }
        }
        if (map_s.size() != map_r.size()) {
            return false;
        }
        for (int i = 0; i < s.length(); i++) {
            if (map_s.containsKey(s.charAt(i)) && map_r.containsKey(s.charAt(i))) {
                int x = map_s.get(s.charAt(i)).intValue();
                int y = map_r.get(s.charAt(i)).intValue();
                if (x != y) {
                    return false;
                }
            } else {
                return false;
            }
        }
        return true;
    }
}
