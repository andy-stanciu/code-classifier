class Solution {

    public boolean method1(String s, String t) {
        if (s.length() != t.length())
            return false;
        HashMap<Character, Integer> sMap = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            char key = s.charAt(i);
            if (sMap.containsKey(key)) {
                int freq = sMap.get(key);
                sMap.put(key, freq + 1);
            } else
                sMap.put(key, 1);
        }
        HashMap<Character, Integer> tMap = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            char key = t.charAt(i);
            if (tMap.containsKey(key)) {
                int freq = tMap.get(key);
                tMap.put(key, freq + 1);
            } else
                tMap.put(key, 1);
        }
        //we will iterate any one of the string and check if the frequency of that character in both hashmap is same or not
        for (int i = 0; i < s.length(); i++) {
            char key = s.charAt(i);
            //get frequency of that char in first hashmap
            int v1 = sMap.get(key);
            //checking if the charcter of the first string is present in the hashmap of the second string
            if (!tMap.containsKey(key))
                return false;
            //get frequency of that char in second hashmap
            int v2 = tMap.get(key);
            if (v1 != v2)
                return false;
        }
        return true;
    }
}
