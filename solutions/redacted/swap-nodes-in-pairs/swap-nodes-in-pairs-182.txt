/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            // Return head if the list is empty or has only one node.
            return head;
        }
        ListNode newHead = head.next;
        ListNode p = head;
        ListNode q = head.next;
        ListNode prev = null;
        while (q != null && p != null) {
            ListNode temp = q.next;
            q.next = p;
            if (prev != null) {
                prev.next = q;
            }
            p.next = temp;
            prev = p;
            p = temp;
            q = (p != null) ? p.next : null;
        }
        return newHead;
    }
}
