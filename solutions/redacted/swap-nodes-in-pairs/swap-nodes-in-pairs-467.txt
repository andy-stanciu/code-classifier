/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        List<Integer> list = new ArrayList<>();
        ListNode current = head;
        while (current != null) {
            list.add(current.val);
            current = current.next;
        }
        if (list.size() <= 1) {
            return head;
        }
        List<Integer> res = new ArrayList<>();
        for (int i = 0; i < list.size(); i += 2) {
            if (i + 1 < list.size()) {
                res.add(list.get(i + 1));
                res.add(list.get(i));
            } else {
                res.add(list.get(i));
            }
        }
        ListNode dummy = new ListNode(0);
        ListNode curr = dummy;
        for (int val : res) {
            curr.next = new ListNode(val);
            curr = curr.next;
        }
        return dummy.next;
    }
}
