/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null)
            return null;
        if (head.next == null)
            return head;
        List<ListNode> list = new ArrayList<>();
        while (head != null) {
            list.add(head);
            head = head.next;
        }
        for (int i = 0; i < list.size(); i++) {
            list.get(i).next = null;
            if (i % 2 == 1) {
                ListNode temp = list.get(i);
                list.set(i, list.get(i - 1));
                list.set(i - 1, temp);
            }
        }
        ListNode result = list.get(0);
        head = result;
        for (int i = 1; i < list.size(); i++) {
            result.next = list.get(i);
            result = result.next;
        }
        return head;
    }
}
