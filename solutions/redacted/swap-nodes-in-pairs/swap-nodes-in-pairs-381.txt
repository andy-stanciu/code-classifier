/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if ((head == null) || (head.next == null))
            return head;
        // Store the second node
        ListNode n = head.next;
        // Recursively swap the rest of the list and link the first node to the result
        head.next = method1(head.next.next);
        // Complete the swap by linking the second node to the first node
        n.next = head;
        return n;
    }
}
