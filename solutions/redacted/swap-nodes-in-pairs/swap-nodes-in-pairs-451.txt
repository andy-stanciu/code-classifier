/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        //assigning the reference of head
        ListNode temp = head;
        // as the test case starts form 0 so it is important to check is head null or not and head.next is null or not, if it is null than return head
        if (head == null || head.next == null)
            return head;
        while (temp != null) {
            //running the loop for swapping the values
            //if the size of linkedlist is odd than this condition is true
            if (temp.next == null)
                return head;
            int x = temp.val;
            temp.val = temp.next.val;
            temp.next.val = x;
            temp = temp.next.next;
        }
        return head;
    }
}
