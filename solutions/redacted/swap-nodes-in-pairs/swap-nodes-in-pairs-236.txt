/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null)
            return null;
        if (head.next == null)
            return head;
        ListNode current = head;
        ListNode temp = null;
        ListNode t = null;
        ListNode tempHead = new ListNode(-1);
        ListNode cc = tempHead;
        // 1 2 3
        while (current != null) {
            if (current.next != null) {
                // 3
                temp = current.next.next;
                // 2 ->3
                ListNode dummy2 = current.next;
                // 2 null
                dummy2.next = null;
                // 1 2 null
                ListNode dummy1 = current;
                // 1 null
                dummy1.next = null;
                // 1 null
                t = dummy1;
                // 2 null
                dummy1 = dummy2;
                // 1 null
                dummy2 = t;
                // 2 1 null
                dummy1.next = dummy2;
                cc.next = dummy1;
                //	System.out.println(cc);
                cc = cc.next.next;
                // 3
                current = temp;
            } else {
                cc.next = current;
                current = current.next;
            }
        }
        return tempHead.next;
    }
}
