/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        // keeping the reference to second node
        ListNode dummy = head.next;
        ListNode prev = null;
        while (head != null && head.next != null) {
            if (prev != null) {
                prev.next = head.next;
            }
            prev = head;
            // access the node next to head.next
            ListNode temp = head.next.next;
            // after updating next pointer of head.next, we lose access to temp node
            head.next.next = head;
            head.next = temp;
            head = temp;
        }
        return dummy;
    }
}
