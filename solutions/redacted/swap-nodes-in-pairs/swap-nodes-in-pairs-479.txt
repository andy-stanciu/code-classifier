/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null)
            return null;
        int count = 0;
        ListNode temp = head;
        while (temp != null) {
            count++;
            temp = temp.next;
        }
        ListNode ttemp, ntemp, ptemp;
        temp = head;
        if (count == 2) {
            ttemp = temp.next;
            ttemp.next = head;
            temp.next = null;
            head = ttemp;
            return head;
        }
        int num = 1;
        while (temp.next != null && temp.next.next != null && num < count) {
            ttemp = temp.next;
            ntemp = ttemp.next;
            if (num == 1) {
                temp.next = ntemp;
                ttemp.next = temp;
                head = ttemp;
            } else if (num <= count - 2) {
                ptemp = ntemp.next;
                temp.next = ntemp;
                ntemp.next = ttemp;
                ttemp.next = ptemp;
                temp = ttemp;
            } else if (num == count - 1) {
                temp.next = ntemp;
                ntemp.next = ttemp;
                ttemp.next = null;
            }
            num += 2;
        }
        return head;
    }
}
