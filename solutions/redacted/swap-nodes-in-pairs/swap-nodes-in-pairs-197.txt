/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null)
            return null;
        ListNode ans = new ListNode(0);
        implementation(head, ans);
        return ans.next;
    }

    private void implementation(ListNode carry, ListNode solln) {
        if (carry.next == null) {
            solln.next = carry;
            return;
        }
        ListNode temp = carry;
        ListNode temp1 = carry.next;
        carry = carry.next.next;
        solln.next = temp1;
        solln = solln.next;
        solln.next = temp;
        solln = solln.next;
        //		this is important , otherwise the last two nodes will a cycle and test case will fal
        solln.next = null;
        if (carry != null)
            implementation(carry, solln);
        return;
    }
}
