/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        int c = 0;
        ListNode temp = head;
        while (temp != null) {
            c++;
            temp = temp.next;
        }
        temp = head;
        if (c < 2) {
            return head;
        }
        int[] arr = new int[c];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = temp.val;
            temp = temp.next;
        }
        for (int i = 0; i < arr.length - 1; i += 2) {
            int tem = arr[i];
            arr[i] = arr[i + 1];
            arr[i + 1] = tem;
        }
        ListNode prev = null;
        ListNode h = null;
        for (int i = 0; i < c; i++) {
            ListNode current = new ListNode();
            if (i == 0) {
                h = current;
            }
            current.val = arr[i];
            if (prev != null) {
                prev.next = current;
            }
            prev = current;
            current.next = null;
        }
        return h;
    }
}
