/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode tempPrev = head, tempNext = head, back = null;
        boolean start = true;
        boolean permission = true;
        while (tempNext != null) {
            if (tempPrev.next == null)
                return head;
            if (permission) {
                if (start) {
                    tempNext = tempNext.next;
                    tempPrev.next = tempNext.next;
                    tempNext.next = tempPrev;
                    head = tempNext;
                    start = false;
                } else {
                    tempNext = tempNext.next;
                    tempPrev.next = tempNext.next;
                    back.next = tempNext;
                    tempNext.next = tempPrev;
                }
                tempNext = tempPrev;
                back = tempPrev;
            } else {
                tempPrev = tempPrev.next;
                tempNext = tempNext.next;
            }
            permission = !permission;
        }
        return head;
    }
}
