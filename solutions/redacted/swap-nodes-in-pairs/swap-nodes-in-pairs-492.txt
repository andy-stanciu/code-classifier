/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        int size = size(head);
        int[] arr = new int[size];
        ListNode temp = head;
        int i = 0;
        while (temp != null) {
            arr[i] = temp.val;
            temp = temp.next;
            i++;
        }
        for (int x = 0; x < arr.length - 1; x += 2) {
            int t = arr[x];
            arr[x] = arr[x + 1];
            arr[x + 1] = t;
        }
        ListNode ans = new ListNode(0);
        ListNode var1 = ans;
        int p = 0;
        ListNode temp1 = head;
        while (temp1 != null) {
            ans.next = new ListNode(arr[p]);
            ans = ans.next;
            temp1 = temp1.next;
            p++;
        }
        return var1.next;
    }

    public int size(ListNode head) {
        int c = 0;
        ListNode temp = head;
        while (temp != null) {
            c++;
            temp = temp.next;
        }
        return c;
    }
}
