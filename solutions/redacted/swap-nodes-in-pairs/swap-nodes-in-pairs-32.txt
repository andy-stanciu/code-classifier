class Solution {

    public ListNode method1(ListNode head) {
        // base case if linkedlist contains zero or only one element in it ( to avoid null pointer exception).
        if (head == null || head.next == null)
            return head;
        ListNode first = head;
        ListNode second = head.next;
        while (first != null && first.next != null) {
            // swap only the value of first and second node.
            int temp = first.val;
            first.val = second.val;
            second.val = temp;
            // Move first node to 3rd node OR two node further.
            first = second.next;
            if (// to avoid null pointer exception.
            first != null)
                // Move second node to 4th node OR two node further.
                second = first.next;
        }
        // Return the head node
        return head;
    }
}
