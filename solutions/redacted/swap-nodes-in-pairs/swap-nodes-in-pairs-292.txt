class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode dumHead = new ListNode(0);
        dumHead.next = head;
        ListNode backM = dumHead;
        while (backM.next != null && backM.next.next != null) {
            //Instead of declaring and worrying about the swap after
            ListNode back = backM.next;
            //Declare them in the loop according to pointer we know will be working
            ListNode front = backM.next.next;
            // Perform the swap
            back.next = front.next;
            front.next = back;
            backM.next = front;
            // Update pointers
            backM = back;
        }
        return dumHead.next;
    }
}
