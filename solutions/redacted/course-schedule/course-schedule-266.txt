class Solution {

    private boolean dfs(ArrayList<Integer>[] graph, boolean[] vis, boolean[] done, int u) {
        vis[u] = true;
        done[u] = true;
        for (int i : graph[u]) {
            if (done[i] || (!vis[i] && dfs(graph, vis, done, i)))
                return true;
        }
        done[u] = false;
        return false;
    }

    public boolean canFinish(int n, int[][] pre) {
        ArrayList<Integer>[] graph = new ArrayList[n];
        for (int i = 0; i < n; i++) {
            graph[i] = new ArrayList<>();
        }
        for (int[] i : pre) {
            graph[i[0]].add(i[1]);
        }
        boolean[] vis = new boolean[n];
        boolean[] done = new boolean[n];
        for (int i = 0; i < n; i++) {
            if (!vis[i] && dfs(graph, vis, done, i)) {
                return false;
            }
        }
        return true;
    }
}
