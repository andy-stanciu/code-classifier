/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (// for eg: head =1 || head.next=2 , then doesn\'t satisfies the condtion, if head=1 || head.next= null, then returns 1
        head == null || head.next == null) {
            // return brackets[] when there is no head node
            return head;
        }
        //now, 2.next will be recurively go to 5 and then 5.next=null; then we have to use the head.next.next;
        ListNode var1 = method1(head.next);
        // Listnode varaiable = function(parameter);
        // for eg: 5.next.next=5, 4.next.next=4, and so on
        head.next.next = head;
        // 5.next = null-->[5],4.next=null-->[5,4],3.next=null-->[5,4,3], and so on
        head.next = null;
        // returns reverse[5,4,3,2,1]
        return var1;
    }
}
