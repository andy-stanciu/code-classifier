/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode tail = method1(head.next);
        // tail will equal to end of linkedlist 1 -> 2 -> 3 -> 4 -> 5
        // first loop, head = 4 -> 5 and tail = 5;
        head.next.next = head;
        // head = 4 -> 5 -> 4
        // now head will create a loop 4 will point to 5 and 5 points back to 4
        head.next = null;
        // 5 -> 4 -> null
        // now (tail) 5 points to 4 (head) and head points to null
        // return tail = 5 -> 4 -> null
        return tail;
        // the next loop, head = 3 -> 4 then 2 -> 3, 1 -> 2
    }
}
