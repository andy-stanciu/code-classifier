/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (//check if List contains 0 or 1 element
        head == null || head.next == null)
            return head;
        //Proceeding if list has atleast 2 elements
        ListNode ptr1 = null;
        ListNode ptr2 = head;
        while (ptr2.next != null) {
            ListNode temp = ptr2.next;
            ptr2.next = ptr1;
            ptr1 = ptr2;
            ptr2 = temp;
        }
        ptr2.next = ptr1;
        head = ptr2;
        return head;
    }
}
