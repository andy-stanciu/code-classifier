/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        return method2(null, head);
    }

    public ListNode method2(ListNode prevNode, ListNode curNode) {
        if (curNode == null) {
            return prevNode;
        }
        // Store next of curNode
        ListNode temp = curNode.next;
        // Reverse the link
        curNode.next = prevNode;
        // Recursive call with updated nodes
        return method2(curNode, temp);
    }
}
