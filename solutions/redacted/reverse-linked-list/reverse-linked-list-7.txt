/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        // Iterative approach
        //     if(head==null || head.next==null){
        //         return head;
        //     }
        //     ListNode prevnode=head;
        //     ListNode currnode=head.next;
        //     while(currnode!=null){
        //         ListNode newnode=currnode.next;
        //         currnode.next=prevnode;
        //         prevnode=currnode;
        //         currnode=newnode;
        //     }
        //     head.next=null;
        //     head=prevnode;
        //     return head;
        ListNode ans = recursive(head);
        return ans;
    }

    static ListNode recursive(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode newhead = recursive(head.next);
        head.next.next = head;
        head.next = null;
        return newhead;
    }
}
