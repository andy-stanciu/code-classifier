/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    static int countNodes(ListNode head) {
        int count = 0;
        ListNode current = head;
        while (current != null) {
            count++;
            current = current.next;
        }
        return count;
    }

    public ListNode method1(ListNode head) {
        int n = countNodes(head);
        int[] arr = new int[n];
        ListNode current = head;
        int i = 0, x = n;
        while (x > 0) {
            arr[i] = current.val;
            if (x != 1)
                current = current.next;
            i++;
            x--;
        }
        current = head;
        i = n - 1;
        x = n;
        while (x > 0) {
            current.val = arr[i];
            if (x != 1)
                current = current.next;
            i--;
            x--;
        }
        return head;
    }
}
