/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        // Previous node (initially null)
        ListNode prev = null;
        // Current node (starts at head)
        ListNode current = head;
        while (current != null) {
            // Iterate while current is not null
            // Temporarily save next node
            ListNode next = current.next;
            // Reverse the current node\'s pointer
            current.next = prev;
            // Move prev forward
            prev = current;
            // Move current forward
            current = next;
        }
        // New head of reversed list
        return prev;
    }
}
