class Solution {

    public ListNode method1(ListNode head) {
        if (head == null || head.next == null)
            return head;
        //return if linkedlist length is 0 or 1
        Stack<Integer> stack = new Stack<>();
        //create a stack to store the value of linkedlist
        ListNode var1 = new ListNode(0);
        // create node to return
        ListNode temp = head;
        //create node for temporary use
        while (temp != null) {
            stack.push(temp.val);
            //push the value to the stack
            temp = temp.next;
        }
        temp = var1;
        //make the temp node to point to reverse node
        while (!stack.isEmpty()) {
            //pop values from top and add in reverse
            temp.next = new ListNode(stack.pop());
            temp = temp.next;
        }
        // return the final linkedlist
        return var1.next;
    }
}
