/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        if (head == null) {
            return null;
        }
        ListNode prevNode = head;
        ListNode currNode = head.next;
        while (currNode != null) {
            ListNode nextNode = currNode.next;
            currNode.next = prevNode;
            prevNode = currNode;
            currNode = nextNode;
        }
        head.next = null;
        head = prevNode;
        return head;
    }
}

class SolutionRecursive {

    public ListNode method2(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode newHead = method2(head.next);
        head.next.next = head;
        head.next = null;
        return newHead;
    }
}
