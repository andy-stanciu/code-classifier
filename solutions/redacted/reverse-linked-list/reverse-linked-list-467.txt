/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head) {
        /*Stack<Integer> st = new Stack<>();
        ListNode ptr = head;
        while(ptr != null){
            st.push(ptr.val);
            ptr = ptr.next;
        }
        ListNode dummy = new ListNode();
        ListNode h = dummy;
        ListNode result = dummy;
        while(!st.isEmpty()){
            int temp = st.pop();
            ListNode node = new ListNode();
            h.next=node;
            node.val = temp;
            node.next = null;
            h= h.next;
        }
     return result.next; */
        if (head == null || head.next == null) {
            return head;
        }
        ListNode temp = null;
        ListNode temp2 = head.next;
        head.next = temp;
        temp = head;
        head = temp2;
        temp2 = temp2.next;
        while (temp2 != null) {
            head.next = temp;
            temp = head;
            head = temp2;
            temp2 = temp2.next;
        }
        head.next = temp;
        return head;
    }
}
