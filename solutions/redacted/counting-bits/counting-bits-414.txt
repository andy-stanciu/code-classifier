class Solution {

    static int method1(int N) {
        int count = 0;
        while (N != 0) {
            if (N % 2 == 1)
                count++;
            N /= 2;
        }
        return count;
        // code here
    }

    public int[] solve(int n) {
        int[] ans = new int[n + 1];
        for (int i = 0; i <= n; i++) ans[i] = method1(i);
        return ans;
    }

    public int[] solveMEM(int n) {
        int[] ans = new int[n + 1];
        ans[0] = 0;
        for (int i = 1; i <= n; i++) if (// if its odd , sets bits equals to what its there in its half ,
        i % 2 == 0)
            ans[i] = ans[i / 2];
        else
            // if its odd , its 1 + sets bits of its half
            ans[i] = 1 + ans[i / 2];
        return ans;
    }

    public int[] method2(int n) {
        //return solve(n); // nlogn complexity
        return solveMEM(n);
    }
}
