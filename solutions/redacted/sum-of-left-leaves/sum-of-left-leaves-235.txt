/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        return dfs(root, 0, false);
    }

    private int dfs(TreeNode node, int param1, boolean param2) {
        if (node == null)
            return param1;
        if (node.param2 == null && node.right == null) {
            System.out.println(node.val + " " + param2);
            if (param2)
                param1 += node.val;
            return param1;
        }
        if (node.param2 != null)
            param1 = dfs(node.param2, param1, true);
        if (node.right != null)
            param1 = dfs(node.right, param1, false);
        return param1;
    }
}
