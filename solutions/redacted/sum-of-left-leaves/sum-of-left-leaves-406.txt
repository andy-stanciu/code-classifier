/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public void method1(TreeNode root, int[] param1, int k) {
        if (root == null) {
            return;
        }
        if (k == 1) {
            param1[0] += root.val;
        }
        method1(root.left, param1, 1);
        method1(root.right, param1, 0);
    }

    public void method2(TreeNode root, int[] param1) {
        if (root == null) {
            return;
        }
        if (root.left != null && root.left.left == null && root.left.right == null) {
            param1[0] += root.left.val;
        }
        method2(root.left, param1);
        method2(root.right, param1);
    }

    public int method3(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int[] param1 = new int[] { 0 };
        method2(root, param1);
        return param1[0];
    }
}
