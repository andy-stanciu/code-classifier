/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        if (root == null)
            return 0;
        if (root.left != null && root.left.left == null && root.left.right == null) {
            return root.left.val + method1(root.right);
        }
        return method1(root.left) + method1(root.right);
    }
    // static int sum;
    // public int sumOfLeftLeaves(TreeNode root) {
    //     if(root==null || (root.left==null && root.right==null)) return 0;
    //     sum=0;
    //     boolean flag=true;
    //     findSum(root.left, flag);
    //     findSum(root.right, (!flag));
    //     return sum;
    // }
    // private void findSum(TreeNode node, boolean flag){
    //     if(node==null)return;
    //     if(flag){
    //         //left side
    //         if(node.left==null && node.right==null){
    //             sum+=node.val;
    //             return;
    //         }
    //         else{
    //             findSum(node.left, flag);
    //             findSum(node.right, (!flag));
    //         }
    //     }
    //     else{
    //         findSum(node.left, (!flag));
    //         findSum(node.right, flag);
    //     }
    // }
}
