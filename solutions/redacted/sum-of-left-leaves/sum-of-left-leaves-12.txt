/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        if (root == null) {
            // no nodes in the tree
            return 0;
        }
        //as the root is not the left or right child
        return method2(root, false);
    }

    private int method2(TreeNode root, boolean param1) {
        //check if this is the leaf node
        if (root.left == null && root.right == null) {
            if (param1 == true) {
                //if it is a leaf and also left child
                return root.val;
            } else {
                //if it is the leaf but not left_child
                return 0;
            }
        }
        int var1 = 0;
        if (root.left != null) {
            //its the left child so true ..
            var1 += method2(root.left, true);
        }
        if (root.right != null) {
            //if the root has right child but it is not the left node so false..
            var1 += method2(root.right, false);
        }
        return var1;
    }
}
