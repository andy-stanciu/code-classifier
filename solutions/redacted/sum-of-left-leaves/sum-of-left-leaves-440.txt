class Solution {

    //used to store the total leaf node sum
    public int var1 = 0;

    //used to flag if a node is a right node
    public boolean isRight = false;

    public int method1(TreeNode root) {
        if (root == null || (root.left == null && root.right == null))
            return 0;
        //base condition to \'return 0\' if only root is present.
        //call the recursive inOrder function.
        return var1(root);
    }

    public int var1(TreeNode root) {
        if (root == null)
            return 0;
        if (root.left != null) {
            //making the node left
            isRight = false;
            var1(root.left);
        }
        //checking if the node is a leaf node, and also is a left node
        if (root.left == null && root.right == null && isRight == false) {
            //if true, adds the value
            var1 += root.val;
        }
        if (root.right != null) {
            //making the node right
            isRight = true;
            var1(root.right);
        }
        return var1;
    }
}
