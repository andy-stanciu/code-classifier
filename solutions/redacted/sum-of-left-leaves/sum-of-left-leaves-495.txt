/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int var1 = 0;

    public int method1(TreeNode root) {
        if (root != null) {
            traverse(root);
        }
        return var1;
    }

    private void traverse(TreeNode root) {
        if (root == null) {
            return;
        }
        // Check the left child
        if (root.left != null) {
            if (isLeafNode(root.left)) {
                var1 += root.left.val;
            } else {
                // Recursively process the left child
                traverse(root.left);
            }
        }
        // Recursively process the right child
        if (root.right != null) {
            traverse(root.right);
        }
    }

    private boolean isLeafNode(TreeNode node) {
        return node != null && node.left == null && node.right == null;
    }
}
