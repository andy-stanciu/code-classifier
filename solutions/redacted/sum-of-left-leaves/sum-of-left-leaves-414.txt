/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Pair {

    TreeNode first;

    int second;

    int var1;

    Pair(TreeNode first, int second, int var1) {
        this.first = first;
        this.second = second;
        this.var1 = var1;
    }
}

class Solution {

    public int method1(TreeNode root) {
        Queue<Pair> queue = new LinkedList<>();
        queue.add(new Pair(root, 0, 0));
        int count = 0;
        while (!queue.isEmpty()) {
            TreeNode curr = queue.peek().first;
            int level = queue.peek().second;
            int var1 = queue.peek().var1;
            queue.remove();
            if (curr.left != null) {
                queue.add(new Pair(curr.left, level + 1, 1));
            }
            if (curr.right != null) {
                queue.add(new Pair(curr.right, level + 1, 0));
            }
            if (curr.left == null && curr.right == null && var1 == 1) {
                count += curr.val;
            }
        }
        return count;
    }
}
