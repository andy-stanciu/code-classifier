/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int method1(TreeNode root, int param1, boolean param2) {
        // Base case
        if (root == null)
            return param1;
        // Traverse left subtree
        param1 = method1(root.left, param1, true);
        // If node is left leaf, add its value to sum
        if (root.left == null && root.right == null && param2)
            param1 += root.val;
        // Traverse right subtree
        param1 = method1(root.right, param1, false);
        // Return updated sum
        return param1;
    }

    public int method2(TreeNode root) {
        return method1(root, 0, false);
    }
}
