/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int var1 = 0;
        while (!queue.isEmpty()) {
            TreeNode newnode = queue.poll();
            if (newnode.left != null) {
                if (newnode.left.right == null && newnode.left.left == null) {
                    var1 = var1 + newnode.left.val;
                } else {
                    queue.offer(newnode.left);
                }
            }
            if (newnode.right != null) {
                queue.offer(newnode.right);
            }
        }
        return var1;
    }
}
