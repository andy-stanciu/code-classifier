/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        if (root == null)
            return 0;
        int var1 = 0;
        Queue<TreeNode> nodes = new LinkedList<>();
        Queue<TreeNode> var2 = new LinkedList<>();
        nodes.add(root);
        while (!nodes.isEmpty()) {
            TreeNode currentNode = nodes.poll();
            if (currentNode.left != null) {
                nodes.add(currentNode.left);
                var2.add(currentNode.left);
            }
            if (currentNode.right != null) {
                nodes.add(currentNode.right);
            }
        }
        while (!var2.isEmpty()) {
            TreeNode var3 = var2.poll();
            if (var3.left == null && var3.right == null) {
                var1 += var3.val;
            }
        }
        return var1;
    }
}
