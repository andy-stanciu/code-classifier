/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int method1(TreeNode root) {
        int var1 = 0;
        Queue<TreeNode> q = new ArrayDeque<>();
        q.add(root);
        ArrayList<TreeNode> al = new ArrayList<>();
        while (!q.isEmpty()) {
            int size = q.size();
            for (int i = 0; i < size; i++) {
                TreeNode curr = q.poll();
                // System.out.println(curr.val);
                if (curr.left != null) {
                    al.add(curr.left);
                }
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
        }
        // System.out.println(al);
        for (TreeNode curr : al) {
            if (curr.left == null && curr.right == null) {
                var1 += curr.val;
            }
        }
        return var1;
    }
}
