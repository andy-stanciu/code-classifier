/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Pair<TreeNode, Boolean> {

    TreeNode node;

    boolean var1;
}

class Solution {

    public int method1(TreeNode root) {
        if (root == null) {
            return 0;
        }
        Queue<Pair<TreeNode, Boolean>> queue = new LinkedList<>();
        Pair p = new Pair<>();
        p.node = root;
        p.var1 = false;
        queue.add(p);
        int var2 = 0;
        while (!queue.isEmpty()) {
            int size = queue.size();
            for (int i = 0; i < size; i++) {
                Pair<TreeNode, Boolean> front = queue.remove();
                if (front.node.var3 != null) {
                    Pair var3 = new Pair<>();
                    var3.node = front.node.var3;
                    var3.var1 = true;
                    queue.add(var3);
                }
                if (front.node.right != null) {
                    Pair right = new Pair<>();
                    right.node = front.node.right;
                    right.var1 = false;
                    queue.add(right);
                }
                if (front.node.var3 == null && front.node.right == null) {
                    if (front.var1 == true) {
                        var2 = var2 + front.node.val;
                    } else {
                        continue;
                    }
                }
            }
        }
        return var2;
    }
}
