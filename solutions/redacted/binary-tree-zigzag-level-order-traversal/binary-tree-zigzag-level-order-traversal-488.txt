class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null) {
            return Collections.emptyList();
        }
        List<List<Integer>> results = new ArrayList<>();
        Deque<TreeNode> deque = new LinkedList<>();
        deque.addLast(root);
        boolean direct = true;
        while (!deque.isEmpty()) {
            int size = deque.size();
            List<Integer> result = new ArrayList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = deque.removeFirst();
                if (node.left != null) {
                    deque.addLast(node.left);
                }
                if (node.right != null) {
                    deque.addLast(node.right);
                }
                result.add(node.val);
            }
            if (!direct) {
                Collections.reverse(result);
            }
            results.add(result);
            direct = !direct;
        }
        return results;
    }
}
