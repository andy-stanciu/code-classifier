/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ds = new ArrayList<>();
        if (root == null)
            return ds;
        Queue<TreeNode> q = new LinkedList<>();
        int flag = 0;
        q.add(root);
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> li = new ArrayList<>();
            while (size-- > 0) {
                TreeNode t = q.remove();
                if (t != null) {
                    if (flag == 0) {
                        li.add(t.val);
                    } else if (flag == 1) {
                        li.add(0, t.val);
                    }
                }
                if (t.left != null)
                    q.add(t.left);
                if (t.right != null)
                    q.add(t.right);
            }
            ds.add(li);
            flag = 1 - flag;
        }
        return ds;
    }
}
