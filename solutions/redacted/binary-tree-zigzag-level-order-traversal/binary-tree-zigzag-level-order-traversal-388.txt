/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> list2 = new ArrayList<>();
        if (root == null) {
            return list;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        int nodeCount;
        queue.add(root);
        TreeNode temp;
        int var1 = 0;
        while (!queue.isEmpty()) {
            nodeCount = queue.size();
            var1++;
            while (nodeCount > 0) {
                temp = queue.poll();
                list2.add(temp.val);
                if (temp.left != null) {
                    queue.add(temp.left);
                }
                if (temp.right != null) {
                    queue.add(temp.right);
                }
                nodeCount--;
            }
            if (var1 % 2 == 0) {
                Collections.reverse(list2);
            }
            list.add(new ArrayList<>(list2));
            list2.clear();
        }
        return list;
    }
}
