/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        if (root == null)
            return result;
        queue.add(root);
        boolean flag = true;
        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> temp = new ArrayList<>();
            while (size > 0) {
                TreeNode n = queue.poll();
                if (n == null)
                    continue;
                temp.add(n.val);
                if (n.left != null) {
                    queue.offer(n.left);
                }
                if (n.right != null)
                    queue.offer(n.right);
                size--;
            }
            if (!flag)
                Collections.reverse(temp);
            flag = !flag;
            result.add(temp);
        }
        return result;
    }
}
