/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Queue<TreeNode> q = new ArrayDeque<>();
        int var1 = 0;
        q.add(root);
        while (q.size() > 0) {
            List<Integer> var2 = new ArrayList<>();
            int var3 = q.size();
            var1++;
            for (int i = 0; i < var3; i++) {
                TreeNode x = q.poll();
                var2.add(x.val);
                if (x.left != null) {
                    q.add(x.left);
                }
                if (x.right != null) {
                    q.add(x.right);
                }
            }
            if (var1 % 2 == 0) {
                Collections.reverse(var2);
            }
            result.add(var2);
        }
        return result;
    }
}
