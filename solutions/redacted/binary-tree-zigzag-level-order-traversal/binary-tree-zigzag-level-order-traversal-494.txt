/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> f = new ArrayList<>();
        if (root == null)
            return f;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean flag = true;
        while (!q.isEmpty()) {
            int w = q.size();
            List<Integer> l = new ArrayList<>(w);
            for (int i = 0; i < w; i++) {
                TreeNode top = q.peek();
                if (top.left != null)
                    q.add(top.left);
                if (top.right != null)
                    q.add(top.right);
                if (flag)
                    l.add(q.remove().val);
                else
                    l.add(0, q.remove().val);
            }
            f.add(l);
            flag = !flag;
        }
        return f;
    }
}
