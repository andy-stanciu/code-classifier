/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> res = new ArrayList<>();
        if (root == null)
            return res;
        q.offer(root);
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> cur = new ArrayList<>();
            while (size-- > 0) {
                root = q.poll();
                cur.add(root.val);
                if (root.left != null)
                    q.offer(root.left);
                if (root.right != null)
                    q.offer(root.right);
            }
            res.add(cur);
        }
        for (int i = 1; i < res.size(); i++) if (i % 2 != 0)
            Collections.reverse(res.get(i));
        return res;
    }
}
