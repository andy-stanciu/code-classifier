class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        // BFS
        List<List<Integer>> res = new LinkedList<>();
        if (root == null)
            return res;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int flag = -1;
        while (!queue.isEmpty()) {
            int size = queue.size();
            flag++;
            List<Integer> list = new LinkedList<>();
            for (int i = 0; i < size; i++) {
                TreeNode node = queue.poll();
                list.add(node.val);
                if (node.left != null)
                    queue.offer(node.left);
                if (node.right != null)
                    queue.offer(node.right);
            }
            if (flag % 2 == 0)
                res.add(list);
            else {
                Collections.reverse(list);
                res.add(list);
            }
        }
        return res;
    }
}
