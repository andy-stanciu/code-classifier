class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return res;
        }
        q.offer(root);
        boolean flag = true;
        while (!q.isEmpty()) {
            int len = q.size();
            List<Integer> temp = new ArrayList<>();
            for (int i = 0; i < len; i++) {
                if (q.peek().left != null)
                    q.offer(q.peek().left);
                if (q.peek().right != null)
                    q.offer(q.peek().right);
                temp.add(q.poll().val);
            }
            if (flag == false) {
                List<Integer> n = new ArrayList<>();
                for (int i = temp.size() - 1; i >= 0; i--) {
                    n.add(temp.get(i));
                }
                res.add(n);
                flag = true;
            } else {
                res.add(temp);
                flag = false;
            }
        }
        return res;
    }
}
