/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    List<List<Integer>> result = new LinkedList<>();

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null) {
            return result;
        }
        traverse(root, 0);
        return result;
    }

    private void traverse(TreeNode node, int param1) {
        if (node == null) {
            return;
        }
        if (result.size() == param1) {
            result.add(new LinkedList<>());
        }
        List<Integer> var1 = result.get(param1);
        if (param1 % 2 == 1) {
            var1.addFirst(node.val);
        } else {
            var1.addLast(node.val);
        }
        traverse(node.left, param1 + 1);
        traverse(node.right, param1 + 1);
    }
}
