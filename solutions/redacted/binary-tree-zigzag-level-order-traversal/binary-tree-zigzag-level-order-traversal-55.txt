/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        LinkedList<TreeNode> var1 = new LinkedList<>();
        if (root == null)
            return ans;
        var1.add(root);
        boolean ltr = false;
        while (var1 != null && var1.size() != 0) {
            LinkedList<Integer> var2 = new LinkedList<>();
            int n = var1.size();
            int i = n - 1;
            LinkedList<TreeNode> var3 = new LinkedList<>();
            while (i >= 0) {
                root = var1.pollLast();
                var2.addFirst(root.val);
                if (ltr) {
                    if (root.left != null)
                        var3.add(root.left);
                    if (root.right != null)
                        var3.add(root.right);
                } else {
                    if (root.right != null)
                        var3.add(root.right);
                    if (root.left != null)
                        var3.add(root.left);
                }
                i--;
            }
            ans.add(var2);
            ltr = !ltr;
            var1 = var3;
        }
        return ans;
    }
}
