/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null) {
            return new ArrayList<List<Integer>>();
        }
        var direction = true;
        var res = new ArrayList<List<Integer>>();
        var queue = new ArrayDeque<TreeNode>();
        queue.add(root);
        while (!queue.isEmpty()) {
            var len = queue.size();
            var arr = new Integer[len];
            for (int i = 0; i < len; i++) {
                var node = queue.remove();
                if (direction) {
                    arr[i] = node.val;
                } else {
                    arr[len - i - 1] = node.val;
                }
                if (node.left != null) {
                    queue.add(node.left);
                }
                if (node.right != null) {
                    queue.add(node.right);
                }
            }
            direction = !direction;
            res.add(Arrays.asList(arr));
        }
        return res;
    }
}
