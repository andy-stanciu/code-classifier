/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }
        q.add(root);
        int var1 = 0;
        while (!q.isEmpty()) {
            int len = q.size();
            List<Integer> sub = new ArrayList<>();
            for (int i = 0; i < len; i++) {
                if (q.peek().left != null)
                    q.add(q.peek().left);
                if (q.peek().right != null)
                    q.add(q.peek().right);
                if (var1 % 2 == 0) {
                    sub.add(q.poll().val);
                } else {
                    sub.add(0, q.poll().val);
                }
            }
            ans.add(sub);
            var1++;
        }
        return ans;
    }
}
