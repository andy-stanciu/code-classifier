/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> method1(TreeNode root) {
        if (root == null) {
            return result;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        int turn = 0;
        while (!q.isEmpty()) {
            int count = q.size();
            List<Integer> ls = new ArrayList<>();
            for (int i = 0; i < count; i++) {
                TreeNode x = q.remove();
                ls.add(x.val);
                if (x.left != null) {
                    q.add(x.left);
                }
                if (x.right != null) {
                    q.add(x.right);
                }
            }
            if (turn % 2 != 0) {
                Collections.reverse(ls);
            }
            turn++;
            result.add(ls);
        }
        return result;
    }
}
