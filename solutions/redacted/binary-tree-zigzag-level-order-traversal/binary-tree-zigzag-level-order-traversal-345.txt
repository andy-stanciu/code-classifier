/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        Queue<TreeNode> q = new LinkedList();
        List<List<Integer>> res = new ArrayList<>();
        if (root == null)
            return res;
        q.add(root);
        boolean toggle = true;
        //Do BFS
        while (!q.isEmpty()) {
            int len = q.size();
            List<Integer> l = new ArrayList<>();
            for (int i = 0; i < len; i++) {
                TreeNode n = q.poll();
                //Just switch the order you add to this level\'s list using a toggle
                if (toggle) {
                    l.add(n.val);
                } else {
                    l.add(0, n.val);
                }
                if (n.left != null)
                    q.add(n.left);
                if (n.right != null)
                    q.add(n.right);
            }
            res.add(l);
            toggle = !toggle;
        }
        return res;
    }
}
