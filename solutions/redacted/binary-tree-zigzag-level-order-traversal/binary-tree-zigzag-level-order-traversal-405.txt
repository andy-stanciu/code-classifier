/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) {
            return ans;
        }
        q.add(root);
        int cnt = 0;
        while (!q.isEmpty()) {
            int var1 = q.size();
            List<Integer> list = new ArrayList<>();
            for (int i = 0; i < var1; i++) {
                if (q.peek().left != null) {
                    q.add(q.peek().left);
                }
                if (q.peek().right != null) {
                    q.add(q.peek().right);
                }
                list.add(q.poll().val);
            }
            if (cnt % 2 != 0) {
                Collections.reverse(list);
                ans.add(list);
            } else {
                ans.add(list);
            }
            cnt++;
        }
        return ans;
    }
}
