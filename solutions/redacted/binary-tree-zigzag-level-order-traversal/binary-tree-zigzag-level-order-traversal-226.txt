/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null)
            return result;
        q.offer(root);
        boolean ltr = true;
        while (!q.isEmpty()) {
            int size = q.size();
            List<Integer> ls = new ArrayList<>(Collections.nCopies(size, 0));
            for (int i = 0; i < size; i++) {
                TreeNode crnt = q.peek();
                q.poll();
                int index = ltr ? i : (size - 1 - i);
                ls.set(index, crnt.val);
                if (crnt.left != null)
                    q.offer(crnt.left);
                if (crnt.right != null)
                    q.offer(crnt.right);
            }
            ltr = !ltr;
            result.add(ls);
        }
        return result;
    }
}
