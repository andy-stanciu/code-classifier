/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> method1(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        if (root == null) {
            return list;
        }
        bfs(list, root, 0);
        return list;
    }

    public void bfs(List<List<Integer>> list, TreeNode node, int param1) {
        if (node == null) {
            return;
        }
        if (param1 == list.size()) {
            list.add(new ArrayList<>());
        }
        if (param1 % 2 == 0) {
            list.get(param1).add(node.val);
        } else {
            list.get(param1).add(0, node.val);
        }
        bfs(list, node.left, param1 + 1);
        bfs(list, node.right, param1 + 1);
    }
}
