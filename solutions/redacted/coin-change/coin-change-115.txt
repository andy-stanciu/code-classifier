class Solution {

    public int method1(int[] param1, int amount) {
        if (param1.length == 1) {
            if (amount % param1[0] != 0)
                return -1;
            else
                return amount / param1[0];
        }
        int[][] dp = new int[param1.length][amount + 1];
        for (int[] e : dp) {
            Arrays.fill(e, Integer.MAX_VALUE - 1);
        }
        // fill the base cases
        int n = param1.length;
        for (int i = 0; i < n; i++) {
            dp[i][0] = 0;
        }
        for (int j = 0; j < amount + 1; j++) {
            if (param1[0] <= j) {
                if (j % param1[0] == 0) {
                    dp[0][j] = j / param1[0];
                }
            }
        }
        for (int i = 1; i < n; i++) {
            for (int j = 0; j < amount + 1; j++) {
                if (j < param1[i]) {
                    dp[i][j] = dp[i - 1][j];
                } else {
                    dp[i][j] = Math.min(dp[i - 1][j], 1 + dp[i][j - param1[i]]);
                }
            }
        }
        if (dp[n - 1][amount] == Integer.MAX_VALUE - 1) {
            return -1;
        } else
            return dp[n - 1][amount];
    }
}
