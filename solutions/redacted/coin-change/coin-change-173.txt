class Solution {

    public int method1(int[] param1, int amount) {
        int[] dp = new int[amount + 1];
        // Initialize dp array
        for (int i = 1; i <= amount; i++) {
            dp[i] = amount + 1;
        }
        dp[0] = 0;
        // Dynamic Programming
        for (int var1 : param1) {
            for (int i = var1; i <= amount; i++) {
                dp[i] = Math.min(dp[i], dp[i - var1] + 1);
            }
        }
        // If dp[amount] is still amount + 1, it means amount can\'t be formed by any combination of the given coins
        return dp[amount] > amount ? -1 : dp[amount];
    }
}
