class Solution {

    public int method1(int[] param1, int amount) {
        int[][] dp = new int[param1.length + 1][amount + 1];
        for (int[] i : dp) {
            Arrays.fill(i, -1);
        }
        //  Arrays.fill(dp,-1);
        int k = solve(amount, param1, dp, param1.length - 1);
        if (k >= 1000000) {
            return -1;
        }
        return k;
    }

    static int solve(int n, int[] param1, int[][] dp, int i) {
        if (n == 0) {
            return 0;
        }
        if (i < 0 || n < 0) {
            return 1000000;
        }
        if (dp[i][n] != -1) {
            return dp[i][n];
        }
        int take = 1000000;
        if (param1[i] <= n) {
            take = 1 + solve(n - param1[i], param1, dp, i);
        }
        int nottake = solve(n, param1, dp, i - 1);
        return dp[i][n] = Math.min(take, nottake);
    }
}
