class Solution {

    public int method1(int[] param1, int amount) {
        int n = param1.length;
        int[][] dp = new int[n][amount + 1];
        for (int i = 0; i < n; i++) for (int j = 0; j <= amount; j++) dp[i][j] = -1;
        int ret = Math.max(-1, method2(param1, amount, n - 1, dp));
        if (ret >= 1000000)
            return -1;
        return ret;
    }

    public int method2(int[] param1, int amount, int ind, int[][] dp) {
        if (ind == 0) {
            if (amount % param1[0] == 0)
                return amount / param1[0];
            else
                return Integer.MAX_VALUE - 10000;
        }
        if (amount == 0)
            return 0;
        if (dp[ind][amount] != -1)
            return dp[ind][amount];
        int notTake = method2(param1, amount, ind - 1, dp);
        int take = Integer.MAX_VALUE;
        if (amount >= param1[ind])
            take = 1 + method2(param1, amount - param1[ind], ind, dp);
        return dp[ind][amount] = Math.min(take, notTake);
    }
}
