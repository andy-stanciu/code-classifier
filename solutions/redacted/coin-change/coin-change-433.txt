class Solution {

    public int method1(int[] param1, int amount) {
        int ans = (int) dfs(param1, amount, new HashMap<>());
        return ans != Integer.MAX_VALUE ? ans : -1;
    }

    long dfs(int[] param1, int amount, HashMap<Integer, Long> dp) {
        if (amount == 0)
            return 0;
        if (amount < 0)
            return Integer.MAX_VALUE;
        if (dp.containsKey(amount))
            return dp.get(amount);
        long var1 = 0;
        long min = Integer.MAX_VALUE;
        for (int i = 0; i < param1.length; i++) {
            var1 = 1 + dfs(param1, amount - param1[i], dp);
            min = Math.min(min, var1);
        }
        dp.put(amount, min);
        return min;
    }
}
