class Solution {

    public static int find(int[] nums, int s, int e) {
        if (s == e)
            return nums[s];
        int mid = (s + e) / 2;
        int lmax = Integer.MIN_VALUE;
        int sum = 0;
        for (int i = mid; i >= s; i--) {
            sum += nums[i];
            if (sum > lmax) {
                lmax = sum;
            }
        }
        int rmax = Integer.MIN_VALUE;
        sum = 0;
        for (int i = mid + 1; i <= e; i++) {
            sum += nums[i];
            if (sum > rmax) {
                rmax = sum;
            }
        }
        int maxLR = Math.max(find(nums, s, mid), find(nums, mid + 1, e));
        return Math.max(maxLR, lmax + rmax);
    }

    public static int method1(int[] nums) {
        if (nums == null || nums.length == 0)
            return 0;
        return find(nums, 0, nums.length - 1);
    }
}
