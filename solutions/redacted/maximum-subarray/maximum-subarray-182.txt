class Solution {

    public int method1(int[] nums) {
        // if the array has only 1 element
        if (nums.length == 1)
            return nums[0];
        // the maximum sum of the contiguous subarray
        int maxSum = Integer.MIN_VALUE;
        // the maximum sum of the contiguous subarray till that point
        int maxCurrent = 0;
        for (int num : nums) {
            // sum after including the current number
            int currentSum = num + maxCurrent;
            // check if the number alone is good enough
            maxCurrent = Math.max(num, currentSum);
            // update the maximum sum
            maxSum = Math.max(maxSum, maxCurrent);
        }
        return maxSum;
    }
}
/*
Time complexity: O(n)
Space complexity: O(1)
*/
