class Solution {

    public int method1(int[] nums) {
        int left = 0;
        int currSum = 0;
        int max = Integer.MIN_VALUE;
        while (left < nums.length) {
            // create the window, keep adding to existing currSum.
            currSum += nums[left];
            max = Math.max(max, currSum);
            if (currSum < 0) {
                // constraint break condition.
                // For -ve aubarray sum, reset sum to 0.
                currSum = 0;
            }
            left++;
        }
        return max;
    }
}
