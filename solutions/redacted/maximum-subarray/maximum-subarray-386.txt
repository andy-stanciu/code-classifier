class Solution {

    public int method1(int[] nums) {
        return method2(nums, 0, nums.length - 1);
    }

    public int method2(int[] nums, int l, int h) {
        if (l == h) {
            return nums[l];
        }
        int mid = (l + h) / 2;
        int lss = method2(nums, l, mid);
        int rss = method2(nums, mid + 1, h);
        int css = method3(nums, l, mid, h);
        return Math.max(lss, Math.max(rss, css));
    }

    public int method3(int[] nums, int l, int mid, int h) {
        int leftSum = nums[mid];
        int sum = 0;
        for (int i = mid; i >= l; i--) {
            sum = sum + nums[i];
            if (leftSum < sum) {
                leftSum = sum;
            }
        }
        int rightSum = nums[mid + 1];
        sum = 0;
        for (int i = mid + 1; i <= h; i++) {
            sum = sum + nums[i];
            if (rightSum < sum) {
                rightSum = sum;
            }
        }
        return leftSum + rightSum;
    }
}
