class Solution {

    public ListNode method1(ListNode head) {
        ListNode pre = null;
        ListNode curr = head;
        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = pre;
            pre = curr;
            curr = temp;
        }
        return pre;
    }

    public ListNode method2(ListNode head, int k) {
        if (head == null || k == 1)
            return head;
        ListNode first = head;
        ListNode last = head;
        ListNode temp = head;
        ListNode pre = head;
        while (last != null) {
            for (int i = 0; i < k - 1; i++) {
                if (last == null)
                    break;
                last = last.next;
            }
            if (last == null)
                break;
            temp = last.next;
            last.next = null;
            ListNode node = method1(first);
            if (head == first) {
                head = node;
            } else {
                pre.next = last;
                pre = first;
            }
            first = temp;
            last = first;
        }
        if (first != null) {
            pre.next = first;
        }
        return head;
    }
}
