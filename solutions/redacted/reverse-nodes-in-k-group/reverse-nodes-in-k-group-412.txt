/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, ListNode merge) {
        ListNode p1 = merge;
        ListNode p2 = head;
        while (p2 != merge) {
            ListNode p3 = p2.next;
            p2.next = p1;
            p1 = p2;
            p2 = p3;
        }
        head = p1;
        return head;
    }

    public ListNode method2(ListNode head, int k) {
        ListNode temp = head;
        ListNode ans = new ListNode(-1);
        ListNode t2 = ans;
        while (temp != null) {
            ListNode start = temp;
            boolean c = true;
            for (int i = 0; i < k; i++) {
                if (temp == null) {
                    c = false;
                    break;
                }
                temp = temp.next;
            }
            if (c)
                t2.next = method1(start, temp);
            t2 = start;
        }
        return ans.next;
    }
}
