/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode temp = head;
        ListNode last = null;
        while (temp != null) {
            ListNode kth = method3(temp, k);
            if (kth == null) {
                if (last != null)
                    last.next = temp;
                break;
            }
            ListNode nxt = kth.next;
            kth.next = null;
            method2(temp);
            if (head == temp)
                head = kth;
            else {
                last.next = kth;
            }
            last = temp;
            temp = nxt;
        }
        return head;
    }

    public void method2(ListNode head) {
        ListNode curr = head;
        ListNode prev = null;
        while (curr != null) {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
    }

    public ListNode method3(ListNode head, int k) {
        ListNode curr = head;
        while (curr != null && k != 1) {
            curr = curr.next;
            k--;
        }
        if (k == 1)
            return curr;
        return null;
    }
}
