/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode dummy = new ListNode(0, head);
        ListNode var1 = dummy;
        while (true) {
            ListNode kth = getKth(var1, k);
            if (kth == null) {
                break;
            }
            ListNode var2 = kth.next;
            ListNode prev = kth.next;
            ListNode curr = var1.next;
            while (curr != var2) {
                ListNode tmp = curr.next;
                curr.next = prev;
                prev = curr;
                curr = tmp;
            }
            ListNode tmp = var1.next;
            var1.next = kth;
            var1 = tmp;
        }
        return dummy.next;
    }

    public ListNode getKth(ListNode curr, int k) {
        while (curr != null && k > 0) {
            curr = curr.next;
            k = k - 1;
        }
        return curr;
    }
}
