/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode temp = head;
        int cnt = 0;
        while (temp != null) {
            cnt++;
            temp = temp.next;
        }
        return method2(head, k, cnt);
    }

    public ListNode method2(ListNode head, int k, int cnt) {
        if (head == null || head.next == null)
            return head;
        if (cnt < k)
            return head;
        ListNode curr = head;
        ListNode prev = null;
        ListNode next = null;
        int i = k;
        while (i > 0 && curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
            i--;
        }
        ListNode tail = head;
        ListNode newhead = method2(curr, k, cnt - k);
        tail.next = newhead;
        return prev;
    }
}
