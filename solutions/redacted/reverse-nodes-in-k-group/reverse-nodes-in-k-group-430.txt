class Solution {

    public ListNode method1(ListNode head, int k) {
        return method2(head, k);
    }

    private static ListNode method2(ListNode head, int k) {
        ListNode newTail = head;
        ListNode newHead = null;
        if (method5(head, k)) {
            ListNode var1 = method4(head, k);
            newHead = method3(head, var1);
            newTail.next = method2(var1, k);
            return newHead;
        } else
            return head;
    }

    private static ListNode method3(ListNode param1, ListNode end) {
        ListNode newHead = param1;
        ListNode tail = null;
        while (newHead != end) {
            ListNode next = newHead.next;
            newHead.next = tail;
            tail = newHead;
            newHead = next;
        }
        return tail;
    }

    private static ListNode method4(ListNode param1, int k) {
        ListNode end = param1;
        for (int i = 0; end != null && i < k; i++) end = end.next;
        return end;
    }

    private static boolean method5(ListNode param1, int k) {
        int count = 0;
        while (param1 != null && count < k) {
            count++;
            param1 = param1.next;
        }
        return count == k;
    }
}
