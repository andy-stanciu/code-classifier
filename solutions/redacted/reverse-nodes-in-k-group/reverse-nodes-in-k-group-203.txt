/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode a = new ListNode();
        ListNode b = a;
        ArrayList<Integer> ab = new ArrayList<>();
        ArrayList<Integer> bc = new ArrayList<>();
        while (head != null) {
            ab.add(head.val);
            head = head.next;
        }
        for (int i = 0; i < ab.size() - k + 1; i++) {
            for (int j = i + k - 1; j >= i; j--) {
                bc.add(ab.get(j));
            }
            i = i + k - 1;
        }
        int n = ab.size() % k;
        if (n > 0) {
            for (int i = ab.size() - n; i < ab.size(); i++) {
                bc.add(ab.get(i));
            }
        }
        for (int i : bc) {
            a.next = new ListNode(i);
            a = a.next;
        }
        return b.next;
    }
}
