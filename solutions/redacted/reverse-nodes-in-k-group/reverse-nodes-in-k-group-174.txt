/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || head.next == null)
            return head;
        ListNode prev = null;
        ListNode cur = head;
        int length = length(head);
        ListNode curr1 = cur;
        ListNode prev1 = prev;
        while (length >= k) {
            for (int i = 0; i < k; i++) {
                ListNode nex = cur.next;
                cur.next = prev;
                prev = cur;
                cur = nex;
            }
            curr1.next = cur;
            if (prev1 != null)
                prev1.next = prev;
            else
                head = prev;
            length = length - k;
            prev1 = curr1;
            curr1 = cur;
        }
        return head;
    }

    public int length(ListNode head) {
        int length = 0;
        ListNode cur = head;
        while (cur != null) {
            cur = cur.next;
            length++;
        }
        return length;
    }
}
