/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        List<Integer> list = new ArrayList<>();
        ListNode temp = head;
        while (temp != null) {
            list.add(temp.val);
            temp = temp.next;
        }
        int len = list.size();
        for (int i = 0; i < len; i++) {
            int start = i;
            int end = k - 1 + i;
            i = end;
            if (end >= len)
                break;
            while (start < end) {
                int temp1 = list.get(start);
                list.set(start, list.get(end));
                list.set(end, temp1);
                start++;
                end--;
            }
        }
        ListNode res = new ListNode();
        temp = res;
        for (int ele : list) {
            ListNode node = new ListNode(ele);
            temp.next = node;
            temp = temp.next;
        }
        return res.next;
    }
}
