/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || k == 1)
            return head;
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode curr = head;
        int nodeC = 0;
        while (curr != null) {
            nodeC++;
            curr = curr.next;
        }
        curr = head;
        ListNode prev = dummy;
        while (nodeC >= k) {
            ListNode tail = curr;
            ListNode next = null;
            for (int i = 0; i < k; i++) {
                next = curr.next;
                curr.next = prev.next;
                prev.next = curr;
                curr = next;
            }
            tail.next = curr;
            prev = tail;
            nodeC -= k;
        }
        return dummy.next;
    }
}
