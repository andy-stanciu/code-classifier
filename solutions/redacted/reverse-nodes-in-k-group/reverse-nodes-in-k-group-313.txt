/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        if (head == null || k == 1) {
            return head;
        }
        ListNode current = head;
        int count = 0;
        while (current != null && count < k) {
            count++;
            current = current.next;
        }
        if (count == k) {
            current = head;
            ListNode prev = null;
            ListNode forward = null;
            for (int i = 0; i < k; i++) {
                forward = current.next;
                current.next = prev;
                prev = current;
                current = forward;
            }
            head.next = method1(forward, k);
            return prev;
        }
        return head;
    }
}
