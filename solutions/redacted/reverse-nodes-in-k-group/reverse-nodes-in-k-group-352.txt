/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        if (k == 1 || head.next == null)
            return head;
        ListNode temp = head;
        ListNode new_temp = null;
        ListNode d = new ListNode();
        ListNode t = d;
        int kk = k;
        int flag = 0;
        ListNode p = null;
        ListNode non_k = null;
        int i = 1;
        while (temp != null) {
            if (kk == k) {
                p = temp;
            }
            if (kk == 1) {
                new_temp = temp.next;
                temp.next = null;
                ListNode f = rev(p);
                t.next = f;
                t = p;
                kk = k + 1;
                p = null;
                temp = new_temp;
                flag = 1;
            }
            if (flag != 1) {
                temp = temp.next;
            }
            flag = 0;
            kk--;
            i++;
        }
        if (p != null)
            t.next = p;
        return d.next;
    }

    public ListNode rev(ListNode head) {
        if (head.next == null)
            return head;
        ListNode new_head = rev(head.next);
        ListNode k = head.next;
        k.next = head;
        head.next = null;
        return new_head;
    }
}
