/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode start, ListNode end) {
        ListNode prev = null;
        ListNode temp = start;
        while (start != end) {
            start = start.next;
            temp.next = prev;
            prev = temp;
            temp = start;
        }
        return prev;
    }

    public ListNode method2(ListNode head, int k) {
        int count = 0;
        ListNode resultHead = null;
        ListNode startHead = head;
        ListNode var1 = null;
        ListNode prev = null;
        while (head != null) {
            count += 1;
            if (count == k) {
                head = head.next;
                prev = head;
                ListNode rev = method1(startHead, head);
                if (resultHead == null)
                    resultHead = rev;
                if (var1 == null)
                    var1 = startHead;
                else {
                    var1.next = rev;
                    var1 = startHead;
                }
                startHead = head;
                count = 1;
            }
            if (head != null)
                head = head.next;
        }
        if (count == 1 || count != k)
            var1.next = startHead;
        return resultHead;
    }
}
