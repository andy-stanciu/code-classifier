/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode dummy = new ListNode(-1);
        ListNode tail = dummy;
        ListNode curHead = null;
        ListNode prevHead = head;
        ListNode cur = head;
        int c = k;
        while (cur != null) {
            ListNode next = cur.next;
            cur.next = curHead;
            curHead = cur;
            cur = next;
            c--;
            if (c == 0) {
                tail.next = curHead;
                tail = prevHead;
                prevHead = cur;
                curHead = null;
                c = k;
            }
        }
        if (c != 0) {
            tail.next = method2(curHead);
        } else {
            tail.next = curHead;
        }
        return dummy.next;
    }

    private ListNode method2(ListNode head) {
        ListNode curHead = null;
        while (head != null) {
            ListNode next = head.next;
            head.next = curHead;
            curHead = head;
            head = next;
        }
        return curHead;
    }
}
