/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    ListNode oh = null;

    ListNode ot = null;

    ListNode th = null;

    ListNode tt = null;

    public int getSize(ListNode head) {
        ListNode temp = head;
        int size = 0;
        while (temp != null) {
            temp = temp.next;
            size++;
        }
        return size;
    }

    public void addFirst(ListNode nn) {
        if (th == null) {
            th = nn;
            tt = nn;
        } else {
            nn.next = th;
            th = nn;
        }
    }

    public void method1() {
        if (oh == null) {
            oh = th;
            ot = tt;
        } else {
            ot.next = th;
            ot = tt;
        }
    }

    public ListNode method2(ListNode head, int k) {
        int len = getSize(head);
        ListNode temp = head;
        while (len >= k) {
            int K = k;
            while (K > 0) {
                ListNode tempKN = temp.next;
                temp.next = null;
                addFirst(temp);
                temp = tempKN;
                K--;
            }
            method1();
            // For next step
            th = null;
            tt = null;
            len -= k;
        }
        ot.next = temp;
        return oh;
    }
}
