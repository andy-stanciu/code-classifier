/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode var1 = dummy;
        while (head != null) {
            ListNode var2 = head;
            ListNode var3 = method2(head, k);
            if (var3 == null)
                break;
            var1.next = method3(var2, var3.next);
            var1 = var2;
            head = var1.next;
        }
        ListNode newHead = dummy.next;
        return newHead;
    }

    private ListNode method2(ListNode head, int k) {
        while (head != null && --k > 0) head = head.next;
        return head;
    }

    private ListNode method3(ListNode head, ListNode stop) {
        ListNode prev = stop;
        while (head != stop) {
            ListNode next = head.next;
            head.next = prev;
            prev = head;
            head = next;
        }
        return prev;
    }
}
