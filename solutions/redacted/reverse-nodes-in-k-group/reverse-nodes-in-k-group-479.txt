/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public static ListNode rev(ListNode head, int k) {
        int size = 1;
        ListNode temp = head;
        while (temp != null && temp.next != null) {
            temp = temp.next;
            size++;
        }
        if (temp == null)
            size = 0;
        if (size < k)
            return head;
        ListNode prev = null;
        ListNode curr = head;
        ListNode forw = head.next;
        ListNode x = head;
        int count = 1;
        while (count <= k) {
            curr.next = prev;
            prev = curr;
            curr = forw;
            if (forw != null)
                forw = forw.next;
            count++;
        }
        x.next = rev(curr, k);
        return prev;
    }

    public ListNode method1(ListNode head, int k) {
        return rev(head, k);
    }
}
