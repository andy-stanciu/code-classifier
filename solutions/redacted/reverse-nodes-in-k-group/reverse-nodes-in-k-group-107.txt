/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int k) {
        ListNode current = head;
        ListNode prev = head;
        int count = k;
        if (head == null || head.next == null) {
            return head;
        }
        while (count > 0 && prev.next != null) {
            prev = current;
            current = current.next;
            count--;
        }
        if (count != 0)
            return head;
        prev.next = null;
        prev = head;
        head = method2(head);
        prev.next = method1(current, k);
        return head;
    }

    static ListNode method2(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode newHead = method2(head.next);
        head.next.next = head;
        head.next = null;
        return newHead;
    }
}
