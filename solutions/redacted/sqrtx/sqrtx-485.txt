class Solution {

    public int mySqrt(int x) {
        if (x == 0 || x == 1)
            return x;
        int mid = -1;
        int start = 1;
        int end = x;
        int result = 0;
        while (start <= end) {
            mid = start + (end - start) / 2;
            //this is check for if mid*mid == x
            //mid*mid overflow can happen
            if (mid == x / mid)
                return mid;
            //mid*mid overflow can happen
            if (mid < x / mid) {
                start = mid + 1;
                //store the possible result since we need to return the square root of x rounded down to the nearest integer.
                //Example: For 8, we need to return 2
                result = mid;
            } else {
                end = mid - 1;
            }
        }
        return result;
    }
}
