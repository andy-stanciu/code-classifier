class Solution {

    public int mySqrt(int x) {
        long i;
        double x2, y;
        final double threehalfs = 1.5;
        x2 = x * 0.5;
        y = x;
        // Convert the double to a raw long bit pattern
        i = Double.doubleToLongBits(y);
        // Initial magic number constant and bit shift
        i = 0x5fe6eb50c7b537a9L - (i >> 1);
        // Convert bits back to double
        y = Double.longBitsToDouble(i);
        for (int j = 0; j < 4; j++) {
            // 4 iterations of interpolation
            y = y * (threehalfs - (x2 * y * y));
        }
        return (int) (y * x);
    }
}
