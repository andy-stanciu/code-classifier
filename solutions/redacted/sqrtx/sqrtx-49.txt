/*
Square of any number like : num * num = num^2;
So thats the simle formula. We will use it with binary search algorithm.

1. Our start number will be 1 and end will be the num itself.
2. Calculate the mid number
3. If the num is exactly or less than (mid * mid) , then mid will be store in the 
	ans (because it can be varies.) and increase the start value to increase the mid value. 
4. check the condition again if num is exactly less than (mid * mid) if it is then do the previous 
	things again or decrease the end number so that mid number can be lower than previous value.
5. It will do it until start is actually greater than end. 
*/
class Solution {

    public int mySqrt(int x) {
        // using binarySearch algorithm here
        int start = 1;
        int end = x;
        int ans = 0;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            // check can be do with mid * mid but have to make all the variable type to long
            if (mid <= x / mid) {
                start = mid + 1;
                ans = mid;
            } else {
                end = mid - 1;
            }
        }
        return ans;
    }
}
