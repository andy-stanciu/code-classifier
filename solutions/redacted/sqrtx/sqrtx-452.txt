class Solution {

    static int sqrt(int x) {
        long start = 0;
        long end = x;
        while (start <= end) {
            long mid = start + (end - start) / 2;
            if (mid * mid == x || (mid * mid < x && (mid + 1) * (mid + 1) > x)) {
                return (int) mid;
            } else if (mid * mid < x) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return (int) start;
    }

    public int mySqrt(int x) {
        // return sqrt(x);
        return (int) Math.sqrt(x);
        // if (x <= 1) return x;
        // long i = 1;
        // long sq = i * i;
        // while (x >= sq) {
        //     i++;
        //     sq = i * i;
        // }
        // return (int) (i - 1);
    }
}
