class Solution {

    public int method1(int[] nums) {
        // Step 1: Sort the input array in ascending order.
        Arrays.sort(nums);
        // Step 2: Handle the base case when the array is empty.
        if (nums.length == 0) {
            return 0;
        }
        // Initialize a variable to track the last processed number.
        int last_number = Integer.MIN_VALUE;
        // Initialize a counter for the current consecutive sequence length.
        int cnt = 0;
        // Initialize a variable to store the maximum consecutive sequence length.
        int var1 = 1;
        // Step 3: Iterate through the sorted array.
        for (int num : nums) {
            if (num - 1 == last_number) {
                // Step 4: If the current number is consecutive to the previous one, increment the counter.
                cnt++;
                last_number = num;
            } else if (num != last_number) {
                // Step 5: If the current number is not consecutive, update \'cnt\' and \'last_number\'.
                cnt = 1;
                last_number = num;
            }
            // Step 6: Update \'longest\' with the maximum of \'longest\' and \'cnt\'.
            var1 = Math.max(var1, cnt);
        }
        // Step 7: Return \'longest\' as the result, representing the length of the longest consecutive sequence.
        return var1;
    }
}
