class Solution {

    public int method1(int[] nums) {
        if (nums.length == 0) {
            return 0;
        }
        PriorityQueue<Integer> pq = new PriorityQueue();
        for (int i = 0; i < nums.length; i++) {
            pq.offer(nums[i]);
        }
        int maxCount = 1;
        int count = 1;
        int prev = pq.poll();
        while (!pq.isEmpty()) {
            int el = pq.poll();
            if (el == prev) {
                continue;
            }
            if (el - prev == 1) {
                count++;
            } else {
                count = 1;
            }
            maxCount = Math.max(maxCount, count);
            prev = el;
        }
        return maxCount;
    }
}
