public class Solution {

    public int method1(int[] nums) {
        // If the array is empty, return 0
        if (nums.length == 0) {
            return 0;
        }
        // Use a HashSet to store the elements for O(1) lookup
        Set<Integer> numSet = new HashSet<>();
        for (int num : nums) {
            numSet.add(num);
        }
        int var1 = 0;
        // Iterate through the set
        for (int num : numSet) {
            // Check if it is the start of a sequence
            if (!numSet.contains(num - 1)) {
                int currentNum = num;
                int currentStreak = 1;
                // Count consecutive elements
                while (numSet.contains(currentNum + 1)) {
                    currentNum += 1;
                    currentStreak += 1;
                }
                // Update the longest streak
                var1 = Math.max(var1, currentStreak);
            }
        }
        return var1;
    }
}
