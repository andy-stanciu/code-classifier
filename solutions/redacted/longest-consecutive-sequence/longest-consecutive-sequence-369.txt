class Solution {

    public static int method1(int[] nums) {
        // Initialize the HashSet to remove duplicates and for O(1) access
        HashSet<Integer> set = new HashSet<Integer>();
        for (int num : nums) {
            set.add(num);
        }
        System.out.println("Set: " + set);
        // If the input array is empty, return 0
        if (nums.length == 0) {
            return 0;
        }
        // Initialize maxCount to keep track of the maximum length of consecutive sequence
        int maxCount = 0;
        for (int num : set) {
            // Only start counting if `num` is the beginning of a sequence
            if (!set.contains(num - 1)) {
                int currentNum = num;
                int count = 1;
                // Count the length of the current sequence
                while (set.contains(currentNum + 1)) {
                    currentNum++;
                    count++;
                }
                // Update maxCount if the current sequence is longer
                maxCount = Math.max(maxCount, count);
            }
        }
        return maxCount;
    }
}
