class Solution {

    public int method1(int[] nums) {
        int inputLength = nums.length;
        if (inputLength <= 1) {
            return inputLength;
        }
        // O (n)
        Set<Integer> uniquesNums = new HashSet<>();
        for (int index = 0; index < inputLength; index++) {
            int currentNum = nums[index];
            uniquesNums.add(currentNum);
        }
        int var1 = 1;
        // O(n)
        for (int i = 0; i < inputLength; i++) {
            int k = nums[i];
            if (uniquesNums.remove(k)) {
                int lowVal = k - 1;
                int upVal = k + 1;
                int var2 = 1;
                while (uniquesNums.remove(lowVal)) {
                    var2 += 1;
                    lowVal -= 1;
                }
                while (uniquesNums.remove(upVal)) {
                    var2 += 1;
                    upVal += 1;
                }
                var1 = Math.max(var1, var2);
            }
        }
        return var1;
    }
}
