class Solution {

    public int method1(int[] nums) {
        // O(n) solution
        if (nums.length < 2)
            return nums.length;
        Set<Integer> set = new HashSet<>();
        for (int num : nums) {
            set.add(num);
        }
        int var1 = 0;
        for (int num : nums) {
            // start of a sequence
            // The inner loop will iterate only in one condition, when the same numbers are encountered again they will be skipped at this condition. so overall time complexity would be O(n)
            if (!set.contains(num - 1)) {
                int current = num;
                int count = 1;
                while (set.contains(current + 1)) {
                    count++;
                    current++;
                }
                var1 = Math.max(count, var1);
            }
        }
        return var1;
    }
}
