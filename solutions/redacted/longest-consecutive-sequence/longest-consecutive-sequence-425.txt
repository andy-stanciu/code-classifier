class Solution {

    public int method1(int[] nums) {
        // 1 ) push them to hashset first
        //now iterate the set as we have unique entries in it and check if previous number is present in hashset
        //yes -> its not the first longest
        //no -> it may be first largest element and start counting the length
        int n = nums.length;
        if (n == 0)
            return 0;
        // 1
        HashSet<Integer> set = new HashSet<>();
        for (int num : nums) {
            set.add(num);
        }
        int var1 = 1;
        // 2
        for (int i : set) {
            if (!set.contains(i - 1)) {
                int value = i;
                int length = 1;
                while (set.contains(value + 1)) {
                    length++;
                    value++;
                }
                var1 = Math.max(var1, length);
            }
        }
        return var1;
    }
}
