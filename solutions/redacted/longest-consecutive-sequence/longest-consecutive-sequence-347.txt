class Solution {

    public int method1(int[] nums) {
        List<Integer> ls = Arrays.stream(nums).boxed().distinct().sorted().collect(Collectors.toList());
        if (ls.size() == 0) {
            return 0;
        }
        int init = ls.get(0);
        int left = 0;
        int right = 1;
        int diff = 1;
        int counter = 1;
        List<Integer> result = new ArrayList();
        result.add(1);
        while (right != ls.size()) {
            if (diff == (ls.get(right) - ls.get(left))) {
                counter = counter + 1;
                left++;
                right++;
                continue;
            }
            result.add(counter);
            counter = 1;
            left++;
            right++;
        }
        result.add(counter);
        return result.stream().max(Integer::compareTo).get().intValue();
        //-1.0,1,3,4,5,6,7,8,9
    }
}
