class Solution {

    public boolean method1(int[] nums) {
        if (nums.length == 1) {
            return true;
        }
        if (nums[0] == 0) {
            return false;
        }
        int[] dp = new int[nums.length];
        Arrays.fill(dp, 0);
        dp[0] = nums[0];
        for (int i = 1; i < nums.length; i++) {
            if (dp[i - 1] == 0) {
                return false;
            }
            dp[i] = Math.max(dp[i - 1] - 1, nums[i]);
        }
        return dp[dp.length - 2] != 0;
    }
}
/**
 * if beggining is 0 return false
 * [0 1 2]
 *
 * [6 3 1 1 0]
 * [5 4 3 2 2] <- is a nubmer end return true
 *
 * [2,3,1,1,4]
 * [2        ]
 *
 * [3 2 1 0 4]
 * [3 2 1 0 4] IF w[N-2] == 0  return false
 *
 * [1, 2]
 * [0. 0]
 *
 * [1,0,1,0]
 * [1 0 0 0]
 */
