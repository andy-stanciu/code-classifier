class Solution {

    public boolean method1(int[] nums) {
        int[] visited = new int[nums.length];
        return help(nums, 0, visited);
    }

    private boolean help(int[] nums, int index, int[] visited) {
        return (visited[index] == -1) ? false : (index + nums[index] >= nums.length - 1) ? true : help2(nums, index, visited);
    }

    private boolean help2(int[] nums, int index, int[] visited) {
        boolean result = false;
        if (visited[index] == -1)
            return false;
        visited[index] = -1;
        for (int i = index + nums[index]; i >= index + 1; i--) {
            if (visited[i] != -1 && help(nums, i, visited))
                return true;
        }
        return false;
    }
}
