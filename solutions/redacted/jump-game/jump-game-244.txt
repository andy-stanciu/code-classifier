class Solution {

    public boolean isPossibleToReach(int[] nums, int index, int[] dp) {
        if (index >= nums.length - 1) {
            return true;
        }
        if (dp[index] != -1) {
            return dp[index] == 1 ? true : false;
        }
        int limit = nums[index];
        for (int i = index + 1; i <= (index + limit) && i < nums.length; i++) {
            dp[index] = isPossibleToReach(nums, i, dp) ? 1 : 0;
            if (dp[index] == 1) {
                return true;
            }
        }
        dp[index] = 0;
        return false;
    }

    public boolean method1(int[] nums) {
        int[] dp = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            dp[i] = -1;
        }
        return isPossibleToReach(nums, 0, dp);
    }
}
