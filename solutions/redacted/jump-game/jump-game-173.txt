class Solution {

    public boolean method1(int[] nums) {
        int farthest = 0;
        for (int i = 0; i < nums.length; i++) {
            // If we reach an index that is not reachable, return false
            if (i > farthest) {
                return false;
            }
            // Update the farthest we can reach
            farthest = Math.max(farthest, i + nums[i]);
            // If we can reach the last index, return true
            if (farthest >= nums.length - 1) {
                return true;
            }
        }
        return false;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        // Test case 1
        int[] nums1 = { 2, 3, 1, 1, 4 };
        // Output: true
        System.out.println("Can jump (test case 1): " + solution.method1(nums1));
        // Test case 2
        int[] nums2 = { 3, 2, 1, 0, 4 };
        // Output: false
        System.out.println("Can jump (test case 2): " + solution.method1(nums2));
        // Additional test case
        int[] nums3 = { 2, 0, 0 };
        // Output: true
        System.out.println("Can jump (additional test case): " + solution.method1(nums3));
    }
}
