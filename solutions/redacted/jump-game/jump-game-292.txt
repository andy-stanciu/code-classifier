class Solution {

    public boolean method1(int[] n, int i, int[] a) {
        if (i >= n.length)
            return false;
        if (i == n.length - 1)
            return true;
        if (a[i] != -1)
            return false;
        int steps = n[i];
        for (int ii = 1; ii <= steps && i + ii < n.length; ii++) {
            int index = i + ii;
            if (a[index] == 1)
                return true;
            if (a[index] == 0)
                continue;
            if (method1(n, i + ii, a) == true)
                return true;
            else
                a[index] = 0;
        }
        a[i] = 0;
        return false;
    }

    public boolean method2(int[] nums) {
        int[] a = new int[nums.length];
        Arrays.fill(a, -1);
        return method1(nums, 0, a);
    }
}
