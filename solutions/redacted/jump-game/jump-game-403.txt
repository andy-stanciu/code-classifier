class Solution {

    public boolean method1(int[] nums) {
        int n = nums.length;
        //stepLeft will count how far we need to go
        int stepsLeft = n - 1;
        // If we can go from the second-to-last index to the first,
        //it means we can also come from the first to here
        for (int i = n - 2; i >= 0; i--) {
            //if we can jump back by nums[i] steps & its >= stepLeft make jump
            if (i + nums[i] >= stepsLeft) {
                stepsLeft = i;
            }
        }
        return stepsLeft == 0;
    }
}
