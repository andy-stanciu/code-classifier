class Solution {

    public void swap(int[] arr, int i, int j) {
        int t = arr[i];
        arr[i] = arr[j];
        arr[j] = t;
    }

    public void permut(int[] arr, Set<List<Integer>> l, int n) {
        if (n == arr.length - 1) {
            List<Integer> h = new ArrayList<>();
            for (int i : arr) {
                h.add(i);
            }
            l.add(h);
        }
        for (int i = n; i < arr.length; i++) {
            swap(arr, i, n);
            permut(arr, l, n + 1);
            swap(arr, i, n);
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        Set<List<Integer>> ans = new HashSet<>();
        permut(nums, ans, 0);
        List<List<Integer>> f = new ArrayList<>(ans);
        return f;
    }
}
