class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums);
        helper(res, new ArrayList<>(nums.length), nums, new boolean[nums.length]);
        return res;
    }

    public void helper(List<List<Integer>> res, ArrayList<Integer> list, int[] nums, boolean[] flag) {
        if (list.size() == nums.length && !res.contains(list)) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (flag[i])
                continue;
            flag[i] = true;
            list.add(nums[i]);
            helper(res, list, nums, flag);
            flag[i] = false;
            list.remove(list.size() - 1);
        }
    }
}
