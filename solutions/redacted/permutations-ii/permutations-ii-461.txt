class Solution {

    HashSet<List<Integer>> set = new HashSet<>();

    public List<List<Integer>> permuteUnique(int[] nums) {
        method1(nums, 0);
        List<List<Integer>> ans = new ArrayList(set);
        return ans;
    }

    public void method1(int[] nums, int start) {
        if (start == nums.length) {
            List<Integer> list = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                list.add(nums[i]);
            }
            set.add(new ArrayList(list));
            return;
        }
        for (int i = start; i < nums.length; i++) {
            swap(nums, start, i);
            method1(nums, start + 1);
            swap(nums, start, i);
        }
    }

    public void swap(int[] nums, int start, int i) {
        int temp = nums[start];
        nums[start] = nums[i];
        nums[i] = temp;
    }
}
