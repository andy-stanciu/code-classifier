class Solution {

    List<List<Integer>> list = new ArrayList<>();

    HashSet<String> set = new HashSet<>();

    public List<List<Integer>> permuteUnique(int[] nums) {
        permutation(nums, 0, nums.length - 1);
        return list;
    }

    public void permutation(int[] nums, int l, int r) {
        if (l == r && !set.contains(Arrays.toString(nums))) {
            set.add(Arrays.toString(nums));
            List<Integer> list1 = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                list1.add(new Integer(nums[i]));
            }
            list.add(list1);
            return;
        } else {
            for (int i = l; i <= r; i++) {
                int temp = nums[i];
                nums[i] = nums[l];
                nums[l] = temp;
                permutation(nums, l + 1, r);
                temp = nums[i];
                nums[i] = nums[l];
                nums[l] = temp;
            }
        }
    }
}
