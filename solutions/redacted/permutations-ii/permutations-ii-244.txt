class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        Set<List<Integer>> ans = new HashSet<>();
        List<Integer> temp = new ArrayList<>();
        int[] visited = new int[nums.length];
        helper(nums, ans, temp, visited);
        return new ArrayList<>(ans);
    }

    public void helper(int[] nums, Set<List<Integer>> ans, List<Integer> temp, int[] visited) {
        if (temp.size() == nums.length) {
            ans.add(new ArrayList<>(temp));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (visited[i] == 1)
                continue;
            temp.add(nums[i]);
            visited[i] = 1;
            helper(nums, ans, temp, visited);
            temp.remove(temp.size() - 1);
            visited[i] = 0;
        }
    }
}
