class Solution {

    public void rec(int[] nums, int start, List<List<Integer>> ans) {
        if (start == nums.length) {
            List<Integer> temp = new ArrayList<>();
            for (int i : nums) temp.add(i);
            ans.add(temp);
            return;
        }
        HashSet<Integer> set = new HashSet<>();
        for (int i = start; i < nums.length; i++) {
            if (set.add(nums[i])) {
                int temp = nums[start];
                nums[start] = nums[i];
                nums[i] = temp;
                rec(nums, start + 1, ans);
                temp = nums[start];
                nums[start] = nums[i];
                nums[i] = temp;
            }
        }
    }

    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        rec(nums, 0, ans);
        return ans;
    }
}
