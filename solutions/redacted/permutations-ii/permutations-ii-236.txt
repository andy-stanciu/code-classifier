class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        Helper(nums, new ArrayList<>(), 0);
        return ans;
    }

    public void Helper(int[] nums, List<Integer> l, int count) {
        if (count == nums.length) {
            ans.add(new ArrayList<>(l));
            return;
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 11)
                continue;
            if (i > 0 && nums[i - 1] == nums[i] && nums[i - 1] != 11)
                continue;
            l.add(nums[i]);
            int temp = nums[i];
            nums[i] = 11;
            Helper(nums, l, count + 1);
            l.remove(l.size() - 1);
            nums[i] = temp;
        }
    }
}
