class Solution {

    List<List<Integer>> ans = new ArrayList<>();

    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        permute(new ArrayList<>(), new boolean[nums.length], nums);
        return ans;
    }

    void permute(List<Integer> list, boolean[] used, int[] nums) {
        if (list.size() == nums.length) {
            ans.add(new ArrayList<>(list));
        } else {
            for (int i = 0; i < nums.length; i++) {
                if (used[i] || (i > 0 && nums[i] == nums[i - 1] && !used[i - 1])) {
                    continue;
                }
                list.add(nums[i]);
                used[i] = true;
                permute(list, used, nums);
                used[i] = false;
                list.remove(list.size() - 1);
            }
        }
    }
}
