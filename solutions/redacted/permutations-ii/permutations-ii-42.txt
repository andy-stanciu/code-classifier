class Solution {

    public List<List<Integer>> permuteUnique(int[] nums) {
        Arrays.sort(nums);
        Set<List<Integer>> result = new HashSet<>();
        permute(nums, 0, result);
        return new ArrayList<>(result);
    }

    public void permute(int[] numbers, int start, Set<List<Integer>> result) {
        if (start == numbers.length) {
            result.add(Arrays.stream(numbers).boxed().toList());
        } else {
            for (int i = start; i < numbers.length; i++) {
                swap(numbers, start, i);
                permute(numbers, start + 1, result);
                swap(numbers, i, start);
            }
        }
    }

    public void swap(int[] numbers, int position, int position2) {
        int temp = numbers[position];
        numbers[position] = numbers[position2];
        numbers[position2] = temp;
    }
}
