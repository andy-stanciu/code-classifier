class Solution {

    public String method1(String s, String t) {
        if (s == "" || t == "")
            return "";
        HashMap<Character, Integer> hm = new HashMap<>();
        for (int i = 0; i < t.length(); i++) hm.put(t.charAt(i), hm.getOrDefault(t.charAt(i), 0) + 1);
        int min = Integer.MAX_VALUE;
        int j = 0, i = 0;
        int count = hm.size();
        String ans = "";
        while (j < s.length()) {
            char ch = s.charAt(j);
            if (!hm.containsKey(ch))
                j++;
            else if (hm.containsKey(ch)) {
                hm.put(ch, hm.get(ch) - 1);
                if (hm.get(ch) == 0)
                    count--;
                if (count == 0) {
                    while (count == 0) {
                        if (j - i + 1 < min) {
                            min = j - i + 1;
                            ans = s.substring(i, j + 1);
                        }
                        if (hm.containsKey(s.charAt(i))) {
                            hm.put(s.charAt(i), hm.get(s.charAt(i)) + 1);
                            if (hm.get(s.charAt(i)) == 1)
                                count++;
                        }
                        i++;
                    }
                }
                j++;
            }
        }
        return ans;
    }
}

// If the question was just to calc the min length
class Solution1 {

    public String method1(String s, String t) {
        if (s == "" || t == "")
            return "";
        HashMap<Character, Integer> hm = new HashMap<>();
        for (int i = 0; i < t.length(); i++) hm.put(t.charAt(i), hm.getOrDefault(t.charAt(i), 0) + 1);
        int min = Integer.MAX_VALUE;
        int j = 0, i = 0;
        int count = hm.size();
        while (j < s.length()) {
            char ch = s.charAt(j);
            if (!hm.containsKey(ch))
                j++;
            else if (hm.containsKey(ch)) {
                hm.put(ch, hm.get(ch) - 1);
                if (hm.get(ch) == 0)
                    count--;
                if (count == 0) {
                    while (count == 0) {
                        if (j - i + 1 < min)
                            min = j - i + 1;
                        if (hm.containsKey(s.charAt(i))) {
                            hm.put(s.charAt(i), hm.get(s.charAt(i)) + 1);
                            if (hm.get(s.charAt(i)) == 1)
                                count++;
                        }
                        i++;
                    }
                }
                j++;
            }
        }
        String ans = String.valueOf(min);
        return ans;
    }
}
