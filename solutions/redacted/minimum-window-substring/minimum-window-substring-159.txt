class Solution {

    public String method1(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            char c = t.charAt(i);
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        int count = 0;
        int min = Integer.MAX_VALUE;
        int left = 0;
        int right = 0;
        int startIndex = -1;
        while (right < s.length()) {
            char rChar = s.charAt(right);
            if (map.containsKey(rChar)) {
                map.put(rChar, map.get(rChar) - 1);
                if (map.get(rChar) >= 0) {
                    count++;
                }
            }
            while (count == t.length()) {
                if (right - left + 1 < min) {
                    min = right - left + 1;
                    startIndex = left;
                }
                char lChar = s.charAt(left);
                if (map.containsKey(lChar)) {
                    map.put(lChar, map.get(lChar) + 1);
                    if (map.get(lChar) > 0) {
                        count--;
                    }
                }
                left++;
            }
            right++;
        }
        return startIndex == -1 ? "" : s.substring(startIndex, startIndex + min);
    }
}
