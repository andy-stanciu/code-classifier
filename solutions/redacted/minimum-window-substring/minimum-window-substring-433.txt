class Solution {

    public String method1(String s, String t) {
        Map<Character, Integer> tMap = new HashMap<>();
        for (char c : t.toCharArray()) {
            tMap.put(c, tMap.getOrDefault(c, 0) + 1);
        }
        int left = 0;
        int minLen = Integer.MAX_VALUE;
        int minLeft = 0;
        int count = tMap.size();
        Map<Character, Integer> wMap = new HashMap();
        for (int right = 0; right < s.length(); right++) {
            char charRight = s.charAt(right);
            if (tMap.containsKey(charRight)) {
                wMap.put(charRight, wMap.getOrDefault(charRight, 0) + 1);
                if (wMap.get(charRight).equals(tMap.get(charRight))) {
                    count--;
                }
            }
            while (count == 0) {
                if (right - left + 1 < minLen) {
                    minLen = right - left + 1;
                    minLeft = left;
                }
                char charLeft = s.charAt(left);
                if (tMap.containsKey(charLeft)) {
                    wMap.put(charLeft, wMap.get(charLeft) - 1);
                    if (wMap.get(charLeft) < tMap.get(charLeft)) {
                        count++;
                    }
                }
                left++;
            }
        }
        return minLen == Integer.MAX_VALUE ? "" : s.substring(minLeft, minLeft + minLen);
    }
}
