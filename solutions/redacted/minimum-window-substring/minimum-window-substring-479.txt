class Solution {

    public String method1(String s, String t) {
        Map<Character, Integer> need = new HashMap<>();
        Map<Character, Integer> var1 = new HashMap<>();
        // \u7EDF\u8BA1 t \u4E2D\u5404\u5B57\u7B26\u51FA\u73B0\u6B21\u6570
        for (char c : t.toCharArray()) need.put(c, need.getOrDefault(c, 0) + 1);
        int left = 0, right = 0;
        // \u7A97\u53E3\u4E2D\u6EE1\u8DB3\u9700\u8981\u7684\u5B57\u7B26\u4E2A\u6570
        int valid = 0;
        // \u8BB0\u5F55\u6700\u5C0F\u8986\u76D6\u5B50\u4E32\u7684\u8D77\u59CB\u7D22\u5F15\u53CA\u957F\u5EA6
        int start = 0, len = Integer.MAX_VALUE;
        while (right < s.length()) {
            // c \u662F\u5C06\u79FB\u5165\u7A97\u53E3\u7684\u5B57\u7B26
            char c = s.charAt(right);
            // \u6269\u5927\u7A97\u53E3
            right++;
            // \u8FDB\u884C\u7A97\u53E3\u5185\u6570\u636E\u7684\u4E00\u7CFB\u5217\u66F4\u65B0
            if (need.containsKey(c)) {
                var1.put(c, var1.getOrDefault(c, 0) + 1);
                if (var1.get(c).equals(need.get(c)))
                    // \u53EA\u6709\u5F53 window[c] \u548C need[c] \u5BF9\u5E94\u7684\u51FA\u73B0\u6B21\u6570\u4E00\u81F4\u65F6\uFF0C\u624D\u80FD\u6EE1\u8DB3\u6761\u4EF6\uFF0Cvalid \u624D\u80FD +1
                    valid++;
            }
            // \u5224\u65AD\u5DE6\u4FA7\u7A97\u53E3\u662F\u5426\u8981\u6536\u7F29
            while (valid == need.size()) {
                // \u66F4\u65B0\u6700\u5C0F\u8986\u76D6\u5B50\u4E32
                if (right - left < len) {
                    start = left;
                    len = right - left;
                }
                // d \u662F\u5C06\u79FB\u51FA\u7A97\u53E3\u7684\u5B57\u7B26
                char d = s.charAt(left);
                // \u7F29\u5C0F\u7A97\u53E3
                left++;
                // \u8FDB\u884C\u7A97\u53E3\u5185\u6570\u636E\u7684\u4E00\u7CFB\u5217\u66F4\u65B0
                if (need.containsKey(d)) {
                    if (var1.get(d).equals(need.get(d)))
                        // \u53EA\u6709\u5F53 window[d] \u5185\u7684\u51FA\u73B0\u6B21\u6570\u548C need[d] \u76F8\u7B49\u65F6\uFF0C\u624D\u80FD -1
                        valid--;
                    var1.put(d, var1.get(d) - 1);
                }
            }
        }
        // \u8FD4\u56DE\u6700\u5C0F\u8986\u76D6\u5B50\u4E32
        return len == Integer.MAX_VALUE ? "" : s.substring(start, start + len);
    }
}
