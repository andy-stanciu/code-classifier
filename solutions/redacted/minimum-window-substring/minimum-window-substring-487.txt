class Solution {

    public String method1(String s, String t) {
        HashMap<Character, Integer> map = new HashMap<>();
        for (char c : t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        int left = 0, right = 0;
        int minLeft = 0, minLen = Integer.MAX_VALUE;
        int charNeed = t.length(), charCounter = 0;
        while (right < s.length()) {
            char endChar = s.charAt(right);
            if (map.containsKey(endChar)) {
                int count = map.get(endChar);
                if (count > 0)
                    charCounter++;
                map.put(endChar, count - 1);
            }
            right++;
            /*pop as much as possible*/
            while (charCounter == charNeed) {
                /*update min substring*/
                if (right - left < minLen) {
                    minLeft = left;
                    minLen = right - left;
                }
                char startChar = s.charAt(left);
                if (map.containsKey(startChar)) {
                    int count = map.get(startChar);
                    if (count >= 0) {
                        charCounter--;
                    }
                    map.put(startChar, count + 1);
                }
                left++;
            }
        }
        return minLen != Integer.MAX_VALUE ? s.substring(minLeft, minLeft + minLen) : "";
    }
}
