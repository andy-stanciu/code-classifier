class Solution {

    public String method1(String s, String t) {
        if (s.length() == 0 || t.length() == 0 || s.length() < t.length())
            return "";
        Map<Character, Integer> tMap = new HashMap<>();
        for (int i = 0; i < t.length(); i++) {
            tMap.put(t.charAt(i), tMap.getOrDefault(t.charAt(i), 0) + 1);
        }
        int required = tMap.size();
        int l = 0, r = 0;
        int create = 0;
        int[] result = { -1, 0, 0 };
        Map<Character, Integer> var1 = new HashMap<>();
        while (r < s.length()) {
            char c = s.charAt(r);
            int count = var1.getOrDefault(c, 0);
            var1.put(c, count + 1);
            if (tMap.containsKey(c) && var1.get(c).intValue() == tMap.get(c).intValue()) {
                create++;
            }
            while (l <= r && required == create) {
                c = s.charAt(l);
                if (result[0] == -1 || result[0] >= r - l + 1) {
                    result[0] = r - l + 1;
                    result[1] = l;
                    result[2] = r;
                }
                var1.put(c, var1.get(c) - 1);
                if (tMap.containsKey(c) && var1.get(c).intValue() < tMap.get(c).intValue()) {
                    create--;
                }
                l++;
            }
            r++;
        }
        if (result[0] == -1) {
            return "";
        } else {
            return s.substring(result[1], result[2] + 1);
        }
    }
}
