class Solution {

    public String method1(String s, String t) {
        int i = 0, j = 0;
        Map<Character, Integer> var1 = new HashMap<>();
        for (char c : t.toCharArray()) {
            var1.put(c, var1.getOrDefault(c, 0) + 1);
        }
        int requiredCharacters = t.length();
        int minLeft = 0, minRight = 0;
        int minLen = Integer.MAX_VALUE;
        while (j < s.length()) {
            char current = s.charAt(j);
            var1.put(current, var1.getOrDefault(current, 0) - 1);
            if (var1.get(current) >= 0) {
                requiredCharacters--;
            }
            while (requiredCharacters == 0) {
                if (j - i + 1 < minLen) {
                    minLen = j - i + 1;
                    minLeft = i;
                    minRight = j + 1;
                }
                char leftChar = s.charAt(i);
                var1.put(leftChar, var1.get(leftChar) + 1);
                if (var1.get(leftChar) > 0) {
                    requiredCharacters++;
                }
                i++;
            }
            j++;
        }
        return minLen == Integer.MAX_VALUE ? "" : s.substring(minLeft, minRight);
    }
}
