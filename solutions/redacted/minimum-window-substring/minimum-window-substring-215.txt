class Solution {

    public String method1(String s, String t) {
        if (t.isEmpty()) {
            return "";
        }
        HashMap<Character, Integer> tmap = new HashMap<>();
        for (Character ch : t.toCharArray()) {
            tmap.put(ch, tmap.getOrDefault(ch, 0) + 1);
        }
        int need = tmap.size();
        int have = 0;
        int[] res = { -1, -1 };
        int resLen = Integer.MAX_VALUE;
        HashMap<Character, Integer> var1 = new HashMap<>();
        int j = 0;
        int i = 0;
        while (j < s.length()) {
            char c = s.charAt(j);
            var1.put(c, var1.getOrDefault(c, 0) + 1);
            if (tmap.containsKey(c) && var1.get(c).intValue() == tmap.get(c).intValue()) {
                have++;
            }
            while (have == need) {
                if ((j - i + 1) < resLen) {
                    resLen = j - i + 1;
                    res[0] = i;
                    res[1] = j;
                }
                var1.put(s.charAt(i), var1.get(s.charAt(i)) - 1);
                if (tmap.containsKey(s.charAt(i)) && var1.get(s.charAt(i)).intValue() < tmap.get(s.charAt(i)).intValue()) {
                    have--;
                }
                i++;
            }
            j++;
        }
        return res[0] == -1 ? "" : s.substring(res[0], res[1] + 1);
    }
}
