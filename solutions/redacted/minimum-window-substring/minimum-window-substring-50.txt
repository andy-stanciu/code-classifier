class Solution {

    public String method1(String s, String t) {
        // Store t freq in map
        // if curr char preset in map and > 0 pick and reduce freq map and increase count
        // if count == t , compare windowSize, if start present in map, map freq inc
        // shift left window till count == t
        int n = s.length();
        if (t.length() > n)
            return "";
        Map<Character, Integer> map = new HashMap<>();
        for (char ch : t.toCharArray()) {
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        int var1 = Integer.MAX_VALUE;
        int var2 = 0;
        int count = 0;
        int minLeft = 0;
        for (int var4 = 0; var4 < n; var4++) {
            if (map.containsKey(s.charAt(var4))) {
                if (map.get(s.charAt(var4)) > 0) {
                    count++;
                }
                map.put(s.charAt(var4), map.get(s.charAt(var4)) - 1);
            }
            while (count == t.length()) {
                int var3 = var4 - var2 + 1;
                if (var3 < var1) {
                    var1 = var3;
                    minLeft = var2;
                }
                if (map.containsKey(s.charAt(var2))) {
                    map.put(s.charAt(var2), map.get(s.charAt(var2)) + 1);
                    if (map.get(s.charAt(var2)) > 0) {
                        count--;
                    }
                }
                var2++;
            }
        }
        return var1 == Integer.MAX_VALUE ? "" : s.substring(minLeft, var1 + minLeft);
    }
}
