class Solution {

    public String method1(String s, String t) {
        int start = 0;
        int match = 0;
        int minLength = s.length() + 1;
        int var1 = 0;
        HashMap<Character, Integer> map = new HashMap<>();
        for (char c : t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        for (int end = 0; end < s.length(); ++end) {
            char rightChar = s.charAt(end);
            if (map.containsKey(rightChar)) {
                map.put(rightChar, map.get(rightChar) - 1);
                if (map.get(rightChar) >= 0) {
                    match++;
                }
            }
            while (match == t.length()) {
                if (minLength > (end - start + 1)) {
                    minLength = end - start + 1;
                    var1 = start;
                }
                char leftChar = s.charAt(start++);
                if (map.containsKey(leftChar)) {
                    if (map.get(leftChar) == 0) {
                        match--;
                    }
                    map.put(leftChar, map.get(leftChar) + 1);
                }
            }
        }
        return minLength > s.length() ? "" : s.substring(var1, var1 + minLength);
    }
}
