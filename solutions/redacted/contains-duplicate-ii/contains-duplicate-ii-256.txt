class Solution {

    public boolean method1(int[] nums, int k) {
        // TODO \u8A08\u7B97\u91CF
        // nums[i] == nums[j] \u3068\u306A\u308B\u3088\u3046\u306Ai, j\u306E\u30DA\u30A2\u306E\u3046\u3061\u3001\u5DEE\u5206\u304Ck\u4EE5\u4E0B\u306E\u3082\u306E
        // \u30DE\u30C3\u30D7\u306B(nums[i], {index1, 2...})\u3092\u8A2D\u5B9A
        // i\u306B\u3064\u3044\u3066\u3001nums[i]\u306E\u30AD\u30FC\u304C\u5B58\u5728\u3057\u305F\u3068\u304D\u3001indices\u306E\u914D\u5217\u306E\u4E2D\u3067\u5DEE\u5206\u304Ck\u4EE5\u4E0B\u306E\u3082\u306E\u304C\u3042\u308B\u304B\u30C1\u30A7\u30C3\u30AF
        Map<Integer, List<Integer>> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            if (map.containsKey(nums[i])) {
                for (int index : map.get(nums[i])) {
                    if (Math.abs(index - i) <= k) {
                        return true;
                    }
                }
                map.get(nums[i]).add(i);
            }
            map.put(nums[i], new ArrayList<Integer>(Arrays.asList(i)));
            // put (value, index) to map
        }
        return false;
    }
}
