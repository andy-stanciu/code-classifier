class Solution {

    public boolean method1(int[] nums, int k) {
        // maintain hashmap with value and index
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            // if value already exits
            if (map.containsKey(nums[i])) {
                // get the previous index
                int j = map.get(nums[i]);
                //check if less than k return true if yes
                if (Math.abs(i - j) <= k)
                    return true;
            }
            // if value is not present we will put new value in map and
            // **** if the value exists in the map also we will update as we already dont have the index difference less than k. so if we update with latest index in the next same value we may find it.
            //example  [1,0,1,1]  k=1
            // index     0 1 2 3  for i=2 if we dont update the 1 with latest index 2 , we cannt find the next duplicate pair
            map.put(nums[i], i);
        }
        return false;
    }
}
