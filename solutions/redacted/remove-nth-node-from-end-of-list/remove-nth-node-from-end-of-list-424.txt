/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int n) {
        // counting number of nodes in the LL
        ListNode currchar = head;
        int count = 1;
        while (currchar.next != null) {
            count++;
            currchar = currchar.next;
        }
        if (head.next == null) {
            return null;
        }
        // node from starting
        int var1 = count - n + 1;
        if (var1 == 1) {
            head = head.next;
            return head;
        }
        ListNode var2 = head;
        ListNode currchar2 = head.next;
        int count2 = 2;
        while (count2 != var1) {
            var2 = currchar2;
            currchar2 = currchar2.next;
            count2++;
        }
        var2.next = currchar2.next;
        return head;
    }
}
