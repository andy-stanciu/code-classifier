/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int n) {
        //n from the start means size of the linked list +1 ;
        int len = 1;
        if (head.next == null) {
            return null;
        }
        ListNode t = head;
        while (t != null) {
            len++;
            t = t.next;
        }
        int index = len - n;
        ListNode temp = head;
        ListNode temp1 = head.next;
        if (index == 1) {
            return head.next;
        }
        for (int i = 2; i < index; i++) {
            temp = temp.next;
            temp1 = temp1.next;
        }
        System.out.println(len);
        System.out.println(temp.val);
        System.out.println(temp1.val);
        if (temp1.next == null) {
            temp.next = null;
            temp1.next = null;
        } else {
            temp.next = temp1.next;
            temp1.next = null;
        }
        return head;
    }
}
