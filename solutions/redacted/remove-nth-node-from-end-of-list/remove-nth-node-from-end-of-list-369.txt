class Solution {

    public ListNode method1(ListNode head, int n) {
        if (head == null) {
            return null;
        }
        int size = 0;
        ListNode temp = head;
        while (temp != null) {
            temp = temp.next;
            size++;
        }
        if (n == size) {
            //n i.e. size nodes from behind is head
            return head.next;
        }
        //to find and delete nth node from behind first find the node previous to the node which is to be removed
        //size-n+1 gives nth node from behind i.e. the node to be removed
        //so -1 to it will give prevNode
        // it gives position of the node which is 1 previous to the nth node from behind
        int ptf = size - n;
        temp = head;
        // iterator variable
        int pN = 1;
        while (pN < ptf) {
            temp = temp.next;
            pN++;
        }
        // after reaching at the size-n position, just remove the next node and update the pointers
        temp.next = temp.next.next;
        return head;
    }
}
// posToRemove = size - n + 1
// 1prev to this posToRemove will be our node which is to be reached in order to remove its next node
