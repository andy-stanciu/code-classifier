/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int n) {
        ListNode ptr = head;
        int length = 0;
        while (ptr != null) {
            ptr = ptr.next;
            length++;
        }
        if (length == 1) {
            return null;
        }
        ListNode slow = new ListNode(0);
        slow.next = head;
        ListNode fast = head;
        for (int i = length; i > 0; i--) {
            if (i == n && i == length) {
                return head.next;
            }
            if (i == n && i == 1) {
                slow.next = null;
                break;
            }
            if (i == n) {
                slow.next = fast.next;
                fast.next = null;
                break;
            }
            slow = slow.next;
            fast = fast.next;
        }
        return head;
    }
}
