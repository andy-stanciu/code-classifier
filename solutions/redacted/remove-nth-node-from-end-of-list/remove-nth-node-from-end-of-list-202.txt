class Solution {

    public ListNode reversed(ListNode head) {
        ListNode current = head;
        ListNode prev = null;
        while (current != null) {
            ListNode temp = current.next;
            current.next = prev;
            prev = current;
            current = temp;
        }
        return prev;
    }

    public ListNode method1(ListNode head, int n) {
        if (head == null) {
            return null;
        }
        ListNode reversedHead = reversed(head);
        if (n == 1) {
            reversedHead = reversedHead.next;
            return reversed(reversedHead);
        }
        ListNode current = reversedHead;
        int count = 1;
        while (current != null) {
            count++;
            if (count == n) {
                current.next = current.next.next;
            }
            current = current.next;
        }
        return reversed(reversedHead);
    }
}
