//Bottom_View
class Solution {

    //Function to return a list of nodes visible from the top view
    //from left to right in Binary Tree.
    static ArrayList<Integer> bottomView(Node root) {
        // add your code
        ArrayList<Integer> result = new ArrayList<>();
        if (root == null)
            return result;
        Map<Integer, Integer> map = new TreeMap<>();
        Queue<Pair> queue = new LinkedList<>();
        queue.add(new Pair(root, 0));
        while (!queue.isEmpty()) {
            Pair currentPair = queue.poll();
            int hd = currentPair.horizontalDistance;
            Node var1 = currentPair.var2;
            // If the line (horizontal distance) is not present in the map, add it
            // 100% working
            map.put(hd, var1.data);
            // Enqueue left and right children with their respective horizontal distances
            if (var1.left != null) {
                queue.add(new Pair(var1.left, hd - 1));
            }
            if (var1.right != null) {
                queue.add(new Pair(var1.right, hd + 1));
            }
        }
        // Add values from the map to the result list
        result.addAll(map.values());
        return result;
    }
}

class Pair {

    Node var2;

    int horizontalDistance;

    public Pair(Node var2, int horizontalDistance) {
        this.var2 = var2;
        this.horizontalDistance = horizontalDistance;
    }
}
