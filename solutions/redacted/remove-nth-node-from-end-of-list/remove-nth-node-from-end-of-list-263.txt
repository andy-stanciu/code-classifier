class Solution {

    public ListNode method1(ListNode head, int n) {
        // adding one extra node to avoid null ptr exception
        ListNode dummy = new ListNode(404);
        dummy.next = head;
        ListNode fast = dummy;
        ListNode slow = dummy;
        // moving n+1 positon ahead
        for (int i = 0; i <= n; i++) {
            fast = fast.next;
        }
        // At last just fast will be null and slow will reach at last nth position
        while (fast != null) {
            slow = slow.next;
            fast = fast.next;
        }
        // removing that node
        slow.next = slow.next.next;
        // retuning dummy.next because we can remove head so it will give us error
        return dummy.next;
    }
}
