/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int n) {
        ListNode fast = head;
        int i = 1;
        while (fast.next != null && fast.next.next != null) {
            fast = fast.next.next;
            i += 2;
        }
        if (fast.next != null) {
            i++;
        }
        System.out.println(i);
        int k = 1;
        if (i == n) {
            head = head.next;
        } else {
            ListNode res = head;
            while ((i - k - 1) >= (n - 1)) {
                if ((i - k - 1) == (n - 1)) {
                    head.next = head.next.next;
                } else {
                    head = head.next;
                }
                k++;
            }
            return res;
        }
        return head;
    }
}
