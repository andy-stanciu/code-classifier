/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int n) {
        int i = 0;
        int l = 0;
        ListNode curr = head;
        ListNode prev = head;
        if ((head == null) || (head.next == null)) {
            return null;
        }
        while (curr != null) {
            curr = curr.next;
            l++;
        }
        curr = head;
        int m = l - n;
        while (curr != null) {
            if (m == 0) {
                head = head.next;
                return head;
            }
            if ((i == m) && (curr.next != null)) {
                prev.next = curr.next;
            } else if ((i == m)) {
                prev.next = null;
            }
            prev = curr;
            i++;
            curr = curr.next;
        }
        return head;
    }
}
