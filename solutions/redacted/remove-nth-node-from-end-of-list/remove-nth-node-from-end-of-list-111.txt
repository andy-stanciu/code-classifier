class Solution {

    public ListNode method1(ListNode head, int n) {
        // Create a dummy node to handle edge cases where the head might need to be removed
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        // Initialize two pointers, first and second, both pointing to the dummy node initially
        ListNode first = dummy;
        ListNode second = dummy;
        // Move the first pointer forward by n+1 steps
        for (int i = 1; i <= n + 1; i++) {
            first = first.next;
        }
        // Move both pointers simultaneously until first reaches the end of the list
        while (first != null) {
            first = first.next;
            second = second.next;
        }
        // Remove the nth node from the end by adjusting the next pointer of the node pointed to by second
        second.next = second.next.next;
        // Return the next pointer of the dummy node, which points to the modified linked list
        return dummy.next;
    }
}
