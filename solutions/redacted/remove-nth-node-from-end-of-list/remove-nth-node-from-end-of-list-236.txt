/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    int var1 = 0;

    public ListNode method1(ListNode head, int n) {
        ListNode dummyHead = new ListNode(-1);
        dummyHead.next = head;
        recursion(head, dummyHead, 0, n);
        return dummyHead.next;
    }

    public void recursion(ListNode param1, ListNode prev, int count, int n) {
        if (param1 == null) {
            var1 = count;
            return;
        }
        recursion(param1.next, param1, count + 1, n);
        if (var1 - count == n) {
            prev.next = param1.next;
        }
    }
}
