class Solution {

    public ListNode method1(ListNode head, int n) {
        ListNode temp = head;
        int len = 0;
        //first find the length of the list
        while (temp != null) {
            temp = temp.next;
            len++;
        }
        //check if n == len to avoid the worst case if asked the remove the first node
        if (n == len) {
            return head.next;
        }
        len = len - n;
        // re inititalize the temp node as it is currently pointing to the null
        temp = head;
        // loop to find the 1 node before the node to be deleted
        for (int i = 1; i < len; i++) {
            temp = temp.next;
        }
        //if temp is not pointing to the last make it point to next to next node as it will remove the connection to the nth last node
        if (temp.next != null) {
            temp.next = temp.next.next;
        }
        return head;
    }
}
