class Solution {

    public ListNode method1(ListNode head, int n) {
        if (head.next == null)
            return null;
        // take pointer p1 and forward it n+1 times
        ListNode p1 = head;
        boolean isDeletingHead = false;
        for (int i = 1; i <= n + 1; i++) {
            if (p1 == null) {
                isDeletingHead = true;
                break;
            }
            p1 = p1.next;
        }
        // if we are deleting the head node
        if (isDeletingHead) {
            head = head.next;
        } else {
            // forward both pointers till p1 == null
            ListNode p2 = head;
            while (p1 != null) {
                p1 = p1.next;
                p2 = p2.next;
            }
            // now p2 is pointing to the previous node of the node we want to delete
            // delete the node (check if we are deleting the tail node)
            ListNode var1 = p2.next;
            if (var1.next == null)
                p2.next = null;
            else
                p2.next = var1.next;
        }
        return head;
    }
}
