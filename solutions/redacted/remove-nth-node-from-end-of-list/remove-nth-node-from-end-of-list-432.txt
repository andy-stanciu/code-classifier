/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int n) {
        ListNode var1 = head;
        int size = 0;
        while (var1 != null) {
            var1 = var1.next;
            size++;
        }
        int var2 = size - n;
        int trav = 0;
        ListNode var3 = head;
        ListNode var4 = null;
        while (head != null) {
            if (var2 == 0 && var4 == null && head.next == null) {
                var3 = null;
                break;
            } else if (trav == var2 && var4 == null) {
                var3 = head.next;
                break;
            } else if (trav == var2) {
                if (var4 == null) {
                    head.next = null;
                }
                var4.next = head.next;
            } else {
                var4 = head;
                head = head.next;
            }
            trav++;
        }
        return var3;
    }
}
