class Solution {

    public ListNode method1(ListNode head, int n) {
        // Initialize two pointers
        ListNode fast = head;
        ListNode slow = head;
        // Move fast pointer n steps ahead
        for (int i = 0; i < n; i++) {
            fast = fast.next;
        }
        // If fast is null, we need to remove the head node
        if (fast == null) {
            return head.next;
        }
        // Move both pointers until fast reaches the last node
        while (fast.next != null) {
            fast = fast.next;
            slow = slow.next;
        }
        // Skip the target node
        slow.next = slow.next.next;
        return head;
    }
}
