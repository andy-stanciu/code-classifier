class Solution {

    public static ListNode method1(ListNode head, int n) {
        ListNode fastp = head;
        ListNode slowp = head;
        // Move fast pointer n steps ahead
        for (int i = 0; i < n; i++) {
            fastp = fastp.next;
        }
        // If fastp is null, it means we need to remove the head
        if (fastp == null) {
            return head.next;
        }
        // Move both pointers until fastp reaches the last node
        while (fastp.next != null) {
            fastp = fastp.next;
            slowp = slowp.next;
        }
        // Remove the nth node from the end
        ListNode var1 = slowp.next;
        slowp.next = slowp.next.next;
        return head;
    }
}
