/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int n) {
        int size = method2(head);
        if (head.next == null) {
            head = null;
            return head;
        } else if (n == size) {
            head = head.next;
            return head;
        }
        ListNode temp = method3((size - n), head);
        temp.next = temp.next.next;
        return head;
    }

    private int method2(ListNode temp) {
        int count = 0;
        while (temp != null) {
            count++;
            temp = temp.next;
        }
        return count;
    }

    private ListNode method3(int index, ListNode temp) {
        for (int i = 1; i < index; i++) {
            temp = temp.next;
        }
        return temp;
    }
}
