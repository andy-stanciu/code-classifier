/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode head, int n) {
        int var1 = 0;
        ListNode var2 = null;
        ListNode var3 = head;
        while (var3 != null) {
            //since n is 1 based ( not zero based ), matching with the exact count gives us the node
            //one above the node that needs to be removed
            if (var1 == n)
                var2 = head;
            else if (var2 != null)
                var2 = var2.next;
            var3 = var3.next;
            var1++;
        }
        if (var2 == null)
            head = head.next;
        else
            var2.next = var2.next.next;
        return head;
    }
}
