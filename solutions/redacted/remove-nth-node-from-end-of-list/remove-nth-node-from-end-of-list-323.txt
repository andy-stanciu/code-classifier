/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public int size(ListNode head) {
        int count = 0;
        ListNode ptr = head;
        while (ptr != null) {
            count++;
            ptr = ptr.next;
        }
        return count;
    }

    public ListNode method1(ListNode head, int n) {
        //     if(head==null ){
        //         return null;
        //     }
        //   ListNode slow =head;
        //   ListNode fast=head;
        //   while(n>0){
        //     fast=fast.next;
        //     n--;
        //   }
        //   if(fast==null){
        //     return head.next;
        //   }
        //   while(fast.next!=null){
        //     slow=slow.next;
        //     fast=fast.next;
        //   }
        //   slow.next=slow.next.next;
        //   return head;
        //by using size() methode
        if (head == null || head.next == null) {
            return null;
        }
        int totalCount = size(head) - n - 1;
        ListNode ptr = head;
        while (totalCount > 0) {
            ptr = ptr.next;
            totalCount--;
        }
        if (totalCount < 0) {
            return head.next;
        }
        ptr.next = ptr.next.next;
        return head;
    }
}
