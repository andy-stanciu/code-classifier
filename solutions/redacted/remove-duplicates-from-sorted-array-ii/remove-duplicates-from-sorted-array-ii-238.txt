class Solution {

    public int method1(int[] nums) {
        // Initialize `i` to 0, which will be the index of the next unique element to be written
        int i = 0;
        // Initialize `count` to 1, which will keep track of the number of duplicates
        int count = 1;
        // Iterate through the array using the `j` pointer, starting from the second element (index 1)
        for (int j = 1; j < nums.length; j++) {
            // Check if the current element is equal to the current element at index `i`
            if (nums[j] == nums[i]) {
                // If `count` is less than 2, increment `i`, write the current element at index `i`, and increment `count`
                if (count < 2) {
                    i++;
                    nums[i] = nums[j];
                    count++;
                }
            } else {
                // If the element is not equal to the current element at index `i`, increment `i`, write the current element at index `i`, and reset `count` to 1
                i++;
                nums[i] = nums[j];
                count = 1;
            }
        }
        // Return `i + 1` as the length of the modified array
        return i + 1;
    }
}
