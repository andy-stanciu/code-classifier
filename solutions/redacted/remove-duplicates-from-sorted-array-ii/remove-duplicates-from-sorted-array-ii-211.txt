class Solution {

    public int method1(int[] nums, int offset) {
        if (nums.length <= offset) {
            return nums.length;
        }
        int size = nums.length;
        int falsePosition = offset;
        int index = offset;
        // Imagine a 2-D symmetric matrix [N+1][N+1] size, with first row and first colum
        // containing the numes Array of size N.
        while (index < size && falsePosition < size) {
            if (nums[falsePosition - offset] != nums[index]) {
                // We found a candidate index to replace the
                // falsePosition
                nums[falsePosition++] = nums[index++];
            } else {
                // Still looking for the next candidate
                index++;
            }
        }
        return falsePosition;
    }

    public int method2(int[] nums) {
        return method1(nums, 2);
    }
}
