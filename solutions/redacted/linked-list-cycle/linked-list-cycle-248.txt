/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean method1(ListNode head) {
        if (head == null) {
            return false;
        }
        ListNode slow = head;
        ListNode fast = head;
        while (fast != null && fast.next != null) {
            // Move slow pointer by 1
            slow = slow.next;
            // Move fast pointer by 2
            fast = fast.next.next;
            if (slow == fast) {
                // Cycle detected
                return true;
            }
        }
        return false;
    }
}
