/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean method1(ListNode head) {
        //slow - fast approach in which slow will move +1 node and fast will move +2 nodes
        ListNode slow = head;
        ListNode fast = head;
        while (fast != null && fast.next != null) {
            //+1
            slow = slow.next;
            //+2
            fast = fast.next.next;
            if (slow == fast) {
                //cyle exist
                return true;
            }
        }
        //cycle doesn\'t exist
        return false;
    }
}
