/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean method1(ListNode head) {
        if (head == null) {
            // no cycle
            return false;
        }
        // by turtle and hair approach if hair and turtle meet at common point it mean there is cycle in it.
        ListNode hair = head;
        ListNode turtle = head;
        while (hair != null && hair.next != null) {
            hair = hair.next.next;
            turtle = turtle.next;
            if (turtle == hair) {
                // linked list have cycle;
                return true;
            }
        }
        //no cycle
        return false;
    }
}
