/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public boolean method1(ListNode head) {
        //No element
        if (head == null) {
            return false;
        }
        ListNode fast = head;
        ListNode slow = head;
        while (fast != null && fast.next != null) {
            //Move from its position
            //1 step
            slow = slow.next;
            //2 step
            fast = fast.next.next;
            if (fast == slow) {
                //Cycle detected
                return true;
            }
        }
        //No Cycle
        return false;
    }
}
