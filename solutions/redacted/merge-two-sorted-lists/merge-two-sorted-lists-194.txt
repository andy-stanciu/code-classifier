/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        ArrayList<Integer> arr = new ArrayList<Integer>();
        while (list1 != null) {
            arr.add(list1.val);
            list1 = list1.next;
        }
        while (list2 != null) {
            arr.add(list2.val);
            list2 = list2.next;
        }
        Collections.sort(arr);
        ListNode head = null, temp = null;
        boolean f = true;
        for (int a : arr) {
            ListNode nn = new ListNode(a);
            if (f) {
                head = nn;
                head.val = a;
                temp = head;
                f = false;
            } else {
                ListNode t1 = null;
                temp.next = nn;
                temp = temp.next;
            }
        }
        return head;
    }
}
