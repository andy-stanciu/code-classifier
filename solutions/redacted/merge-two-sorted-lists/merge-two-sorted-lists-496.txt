/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        boolean one = false, var1 = false;
        ListNode temp = null, list3 = null;
        if (list1 != null && list2 != null) {
            if (list1.val > list2.val) {
                list3 = new ListNode(list2.val);
                list2 = list2.next;
            } else {
                list3 = new ListNode(list1.val);
                list1 = list1.next;
            }
            temp = list3;
            while (list1 != null || list2 != null) {
                int val1 = Integer.MAX_VALUE, val2 = Integer.MAX_VALUE;
                if (list1 != null) {
                    val1 = list1.val;
                }
                if (list2 != null) {
                    val2 = list2.val;
                }
                // System.out.println("val1- "+val1 );
                // System.out.println("Val2 :- "+val2);
                if (val1 > val2) {
                    list3.next = new ListNode(val2);
                    list2 = list2.next;
                } else {
                    list3.next = new ListNode(val1);
                    list1 = list1.next;
                }
                list3 = list3.next;
                // System.out.println(list3.val);
            }
        } else if (list1 == null)
            return list2;
        else
            return list1;
        return temp;
    }
}
