/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        // Check if one is null
        if (list1 == null) {
            return list2;
        } else if (list2 == null) {
            return list1;
        }
        // Determine initial node
        ListNode head;
        if (list1.val <= list2.val) {
            head = list1;
            if (list1.next == null) {
                head.next = list2;
                return head;
            } else {
                list1 = list1.next;
            }
        } else {
            head = list2;
            if (list2.next == null) {
                head.next = list1;
                return head;
            } else {
                list2 = list2.next;
            }
        }
        // Add next nodes one after another
        ListNode current = head;
        while (true) {
            if (list1.val <= list2.val) {
                current.next = list1;
                current = current.next;
                if (list1.next == null) {
                    current.next = list2;
                    return head;
                } else {
                    list1 = list1.next;
                }
            } else {
                current.next = list2;
                current = current.next;
                if (list2.next == null) {
                    current.next = list1;
                    return head;
                } else {
                    list2 = list2.next;
                }
            }
        }
    }
}
