/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        if (list1 == null && list2 == null)
            return null;
        if (list1 == null)
            return list2;
        if (list2 == null)
            return list1;
        ListNode a = list1;
        ListNode b = list2;
        ListNode ans = new ListNode(0);
        ListNode dd = ans;
        while (a != null && b != null) {
            int c = Math.min(a.val, b.val);
            if (a.val == c && b.val == c) {
                ans.next = a;
                ans = ans.next;
                a = a.next;
                ans.next = b;
                ans = ans.next;
                b = b.next;
            } else if (a.val == c) {
                ans.next = a;
                ans = ans.next;
                a = a.next;
            } else if (b.val == c) {
                ans.next = b;
                ans = ans.next;
                b = b.next;
            }
        }
        while (a != null) {
            ans.next = a;
            ans = ans.next;
            a = a.next;
        }
        while (b != null) {
            ans.next = b;
            ans = ans.next;
            b = b.next;
        }
        return dd.next;
    }
}
