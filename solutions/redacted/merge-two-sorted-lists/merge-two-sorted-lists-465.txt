/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        if (l1 == null && l2 == null) {
            return null;
        } else if (l1 != null && l2 == null) {
            return l1;
        } else if (l1 == null && l2 != null) {
            return l2;
        }
        int var = 0;
        if (l1.val <= l2.val) {
            var = l1.val;
            l1 = l1.next;
        } else {
            var = l2.val;
            l2 = l2.next;
        }
        ListNode temp = new ListNode(var);
        ListNode ref = temp;
        while (l1 != null || l2 != null) {
            if (l1 != null && l2 != null) {
                if (l1.val <= l2.val) {
                    var = l1.val;
                    l1 = l1.next;
                } else {
                    var = l2.val;
                    l2 = l2.next;
                }
            } else if (l1 == null && l2 != null) {
                var = l2.val;
                l2 = l2.next;
            } else if (l1 != null && l2 == null) {
                var = l1.val;
                l1 = l1.next;
            }
            ListNode newNode = new ListNode(var);
            ref.next = newNode;
            ref = newNode;
        }
        return temp;
    }
}
