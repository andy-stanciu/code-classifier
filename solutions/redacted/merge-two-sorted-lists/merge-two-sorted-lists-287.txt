/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        if (list1 == null && list2 == null) {
            return null;
        }
        ListNode finalResult;
        ListNode resultList;
        if (isFirstOneGreater(list1, list2)) {
            resultList = new ListNode(list1.val);
            list1 = list1.next;
        } else {
            resultList = new ListNode(list2.val);
            list2 = list2.next;
        }
        finalResult = resultList;
        while (list1 != null || list2 != null) {
            if (isFirstOneGreater(list1, list2)) {
                resultList.next = new ListNode(list1.val);
                list1 = list1.next;
            } else {
                resultList.next = new ListNode(list2.val);
                list2 = list2.next;
            }
            resultList = resultList.next;
        }
        return finalResult;
    }

    private static boolean isFirstOneGreater(ListNode list1, ListNode list2) {
        if (list1 == null) {
            return false;
        } else if (list2 == null) {
            return true;
        } else
            return list1.val < list2.val;
    }
}
