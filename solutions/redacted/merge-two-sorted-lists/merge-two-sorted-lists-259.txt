/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        ListNode newlist = new ListNode();
        ListNode temp = newlist;
        while (list1 != null && list2 != null) {
            if (list1.val <= list2.val) {
                temp.next = list1;
                // move it to next element
                list1 = list1.next;
            } else {
                temp.next = list2;
                // move it to next element
                list2 = list2.next;
            }
            temp = temp.next;
        }
        //if incase any of the list remains then we will link them to end.
        temp.next = (list1 == null) ? list2 : list1;
        // newlist.next points to the head of new merged list.
        return newlist.next;
    }
}
