/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        ArrayList<Integer> temp = new ArrayList<Integer>();
        //    if(list1.next==null)
        //    {
        //         temp.add(list1.val);
        //    }
        //     if(list2.next==null)
        //    {
        //         temp.add(list2.val);
        //    }
        while (list1 != null) {
            temp.add(list1.val);
            list1 = list1.next;
        }
        while (list2 != null) {
            temp.add(list2.val);
            list2 = list2.next;
        }
        Collections.sort(temp);
        ListNode head = null;
        if (!temp.isEmpty()) {
            head = new ListNode(temp.get(0));
            ListNode prev = head;
            for (int i = 1; i < temp.size(); i++) {
                ListNode t = new ListNode(temp.get(i));
                prev.next = t;
                prev = t;
            }
        }
        return head;
    }
}
