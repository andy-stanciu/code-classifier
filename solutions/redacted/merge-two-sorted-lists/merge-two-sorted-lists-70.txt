class Solution {

    public ListNode method1(ListNode l1, ListNode l2) {
        // Create a new empty list to store the merged list.
        ListNode var1 = new ListNode();
        ListNode currentNode = var1;
        // Loop until one of the lists is empty.
        while (l1 != null && l2 != null) {
            // Compare the values of the nodes at the head of each list.
            if (l1.val < l2.val) {
                // Append the smaller node to the end of the merged list.
                currentNode.next = l1;
                l1 = l1.next;
            } else {
                currentNode.next = l2;
                l2 = l2.next;
            }
            // Move to the next node in the merged list.
            currentNode = currentNode.next;
        }
        // Append the remaining nodes from the non-empty list to the end of the merged list.
        if (l1 != null)
            currentNode.next = l1;
        if (l2 != null)
            currentNode.next = l2;
        return var1.next;
    }
}
