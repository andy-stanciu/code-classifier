/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        if (list1 == null)
            return list2;
        if (list2 == null)
            return list1;
        PriorityQueue<ListNode> pq = new PriorityQueue<ListNode>((a, b) -> a.val < b.val ? -1 : 1);
        ListNode dummy = new ListNode(0);
        ListNode head = dummy;
        pq.add(list1);
        pq.add(list2);
        while (!pq.isEmpty()) {
            ListNode e = pq.poll();
            head.next = e;
            if (head.next.next != null) {
                pq.add(head.next.next);
            }
            head = head.next;
        }
        return dummy.next;
    }
}
