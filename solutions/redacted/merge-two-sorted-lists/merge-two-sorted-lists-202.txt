class Solution {

    ListNode result;

    ListNode head;

    public ListNode method1(ListNode list1, ListNode list2) {
        if (list1 == null)
            return list2;
        else if (list2 == null)
            return list1;
        ListNode temp1 = list1;
        ListNode temp2 = list2;
        while (temp1 != null && temp2 != null) {
            if (temp1.val <= temp2.val) {
                if (result == null) {
                    result = new ListNode(temp1.val, null);
                    temp1 = temp1.next;
                    head = result;
                } else {
                    ListNode flag = new ListNode(temp1.val, null);
                    result.next = flag;
                    result = result.next;
                    temp1 = temp1.next;
                }
            } else {
                if (result == null) {
                    result = new ListNode(temp2.val, null);
                    temp2 = temp2.next;
                    head = result;
                } else {
                    ListNode flag = new ListNode(temp2.val, null);
                    result.next = flag;
                    result = result.next;
                    temp2 = temp2.next;
                }
            }
        }
        if (temp1 == null) {
            while (temp2 != null) {
                ListNode flag = new ListNode(temp2.val, null);
                result.next = flag;
                result = result.next;
                temp2 = temp2.next;
            }
        } else {
            while (temp1 != null) {
                ListNode flag = new ListNode(temp1.val, null);
                result.next = flag;
                result = result.next;
                temp1 = temp1.next;
            }
        }
        return head;
    }
}
