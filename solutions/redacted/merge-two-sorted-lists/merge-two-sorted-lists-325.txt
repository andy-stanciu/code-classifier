/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        //default case ie empty node
        if (list1 == null) {
            return list2;
        } else if (list2 == null) {
            return list1;
        }
        ListNode newNode = null;
        // compare list next val with list two
        //its sorted so node .next will always be less , but we dont know abot the other list
        if (list1.val <= list2.val) {
            //less than or equals to
            newNode = list1;
            ListNode nextNode1 = list1.next;
            newNode.next = method1(nextNode1, list2);
        } else {
            // list1 is greater than list 2
            newNode = list2;
            ListNode nextNode2 = list2.next;
            newNode.next = method1(nextNode2, list1);
        }
        return newNode;
    }
}
