/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        if (list1 == null && list2 == null)
            return null;
        if (list1 == null)
            return list2;
        if (list2 == null)
            return list1;
        ListNode n = new ListNode();
        ListNode curr = n;
        ListNode c1 = list1;
        ListNode c2 = list2;
        while (c1 != null && c2 != null) {
            if (c1.val <= c2.val) {
                curr.next = new ListNode(c1.val);
                c1 = c1.next;
            } else if (c1.val > c2.val) {
                curr.next = new ListNode(c2.val);
                c2 = c2.next;
            }
            curr = curr.next;
        }
        if (c1 == null)
            curr.next = c2;
        if (c2 == null)
            curr.next = c1;
        return n.next;
    }
}
