/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode method1(ListNode list1, ListNode list2) {
        ListNode l1 = list1, l2 = list2;
        //create dummy node
        ListNode dummy = new ListNode(0);
        ListNode curr = dummy;
        if (//return list2 if list1 is null
        //return list2 if list1 is null
        l1 == null) {
            return l2;
        } else //return list1 if list2 is null
        if (l2 == null) {
            return l1;
        }
        while (l1 != null && l2 != null) {
            if (l1.val < l2.val) {
                //adding list1 node
                curr.next = l1;
                //increment to next node in list1
                l1 = l1.next;
            } else {
                //adding list2 node
                curr.next = l2;
                //increment to next node in list2
                l2 = l2.next;
            }
            curr = curr.next;
        }
        //adding last remaining node
        curr.next = l1 == null ? l2 : l1;
        //we don\'t need first dummy node that is what we created inititally
        return dummy.next;
    }
}
