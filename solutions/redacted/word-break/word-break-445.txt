class Solution {

    HashSet<String> set;

    public boolean method1(String s, List<String> param1) {
        set = new HashSet<>();
        for (String cur : param1) {
            set.add(cur);
        }
        Boolean[] dp = new Boolean[s.length() + 1];
        return dfs(s, 0, dp);
    }

    public boolean dfs(String s, int index, Boolean[] dp) {
        if (index == s.length()) {
            return true;
        }
        if (dp[index] != null) {
            return dp[index];
        }
        boolean res = false;
        for (int i = index; i < s.length(); i++) {
            String sub = s.substring(index, i + 1);
            if (set.contains(sub)) {
                if (dfs(s, i + 1, dp)) {
                    res = true;
                    break;
                }
            }
        }
        return dp[index] = res;
    }
}
