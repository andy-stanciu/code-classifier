class Solution {

    int[] dp;

    boolean solve(String s, int i, List<String> param1) {
        if (i == s.length()) {
            return true;
        }
        if (dp[i] != -1) {
            return dp[i] == 1;
        }
        for (int j = 0; j < param1.size(); j++) {
            if (i + param1.get(j).length() <= s.length() && s.substring(i, i + param1.get(j).length()).equals(param1.get(j))) {
                if (solve(s, i + param1.get(j).length(), param1)) {
                    dp[i] = 1;
                    return true;
                }
            }
        }
        dp[i] = 0;
        return false;
    }

    public boolean method1(String s, List<String> param1) {
        dp = new int[s.length()];
        for (int i = 0; i < dp.length; i++) {
            dp[i] = -1;
        }
        return solve(s, 0, param1);
    }
}
