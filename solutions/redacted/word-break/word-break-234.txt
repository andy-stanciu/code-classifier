class Solution {

    String s;

    List<String> arr;

    int n;

    int[] memo;

    public boolean method1(String s, List<String> param1) {
        this.s = s;
        this.arr = param1;
        n = s.length();
        memo = new int[n];
        Arrays.fill(memo, -1);
        return dp(0);
    }

    public boolean dp(int i) {
        if (i == n) {
            return true;
        }
        if (memo[i] != -1) {
            return (memo[i] == 1);
        }
        for (String var1 : arr) {
            int len = var1.length();
            if (i + len <= n && s.substring(i, i + len).equals(var1)) {
                //word is a valid prefix
                if (dp(i + len)) {
                    memo[i] = 1;
                    return true;
                }
            }
        }
        memo[i] = 0;
        return false;
    }
}
