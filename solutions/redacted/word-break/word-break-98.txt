class Solution {

    Map<String, Boolean> memo;

    public boolean method1(String s, List<String> param1) {
        this.memo = new HashMap<>();
        //iterate thru worddict,
        //add in tempstring if its valid aka if letters checks out
        //if longer than s, return false
        //if s == tempstring return true.
        return recur("", s, param1);
    }

    public boolean recur(String tempString, String s, List<String> param1) {
        if (tempString.length() == s.length())
            return true;
        if (tempString.length() > s.length())
            return false;
        if (memo.containsKey(tempString))
            return memo.get(tempString);
        for (String w : param1) {
            String temp = tempString + w;
            //if try is prefix of s
            if (s.startsWith(temp)) {
                if (recur(temp, s, param1)) {
                    memo.put(tempString, true);
                    return true;
                }
            }
        }
        memo.put(tempString, false);
        return false;
    }
}
