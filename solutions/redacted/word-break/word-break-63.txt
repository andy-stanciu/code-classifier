class Solution {

    public boolean method1(String s, List<String> param1) {
        int len = s.length();
        boolean[] dp = new boolean[len + 1];
        // set our Base case if we ever reach to our end goal by Breaking the String down from Given set of Words in Our List of Words
        dp[len] = true;
        for (int i = len - 1; i > -1; i--) {
            for (// Iterating for Each Word in the List
            // Iterating for Each Word in the List
            String var1 : param1) {
                //Check if the SubString from our Main String from the Current Index MATCHES any other word from the List
                if (i + var1.length() <= len && s.substring(i, i + var1.length()).equals(var1)) {
                    // Build our Memoized State from the Previous Indexes
                    dp[i] = dp[i + var1.length()];
                }
                if (// return if we have already encountered the Current Index previously
                dp[i])
                    break;
            }
        }
        return dp[0];
    }
}
