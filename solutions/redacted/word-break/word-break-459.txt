class Solution {

    public boolean method1(String s, List<String> param1) {
        return left(s, param1) || right(s, param1);
    }

    public boolean left(String s, List<String> param1) {
        int upper = s.length();
        int lower = 0;
        while (lower < s.length()) {
            if (upper - lower > 20) {
                upper = lower + 20;
            }
            while (lower < upper) {
                if (param1.contains(s.substring(lower, upper))) {
                    break;
                } else {
                    upper--;
                }
            }
            if (lower == upper) {
                return false;
            }
            lower = upper;
            upper = s.length();
        }
        return true;
    }

    public boolean right(String s, List<String> param1) {
        int upper = s.length();
        int lower = 0;
        while (upper > 0) {
            if (upper - lower > 20) {
                lower = upper - 20;
            }
            while (lower < upper) {
                if (param1.contains(s.substring(lower, upper))) {
                    break;
                } else {
                    lower++;
                }
            }
            if (lower == upper) {
                return false;
            }
            upper = lower;
            lower = 0;
        }
        return true;
    }
}
