class Solution {

    public boolean method1(String s, List<String> param1) {
        final int n = s.length();
        Set<String> var1 = new HashSet<>(param1);
        // dp[i] := true if s[0..i) can be segmented
        boolean[] dp = new boolean[n + 1];
        dp[0] = true;
        for (int i = 1; i <= n; ++i) for (// s[0..j) can be segmented and s[j..i) in wordSet, so s[0..i) can be
        // s[0..j) can be segmented and s[j..i) in wordSet, so s[0..i) can be
        // s[0..j) can be segmented and s[j..i) in wordSet, so s[0..i) can be
        // segmented
        int j = 0; j < i; ++j) if (dp[j] && var1.contains(s.substring(j, i))) {
            dp[i] = true;
            break;
        }
        return dp[n];
    }
}
