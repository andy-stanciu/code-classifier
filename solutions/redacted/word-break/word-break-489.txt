class Solution {

    public boolean method1(String s, List<String> param1) {
        int[] dp = new int[s.length() + 1];
        Arrays.fill(dp, -1);
        return find(0, s, param1, dp);
        // boolean[] dp=new boolean[s.length()+1];
        // dp[s.length()]=true;
        // for(int index=s.length()-1;index>=0;index--){
        //     boolean result=false;
        //     for(String i:wordDict){
        //         if(s.startsWith(i,index) && index+i.length()<=s.length()){
        //             result|=dp[index+i.length()];
        //         }
        //     }
        //     dp[index]=result;
        // }
        // return dp[0];
    }

    public static boolean find(int index, String s, List<String> arr, int[] dp) {
        if (index == s.length()) {
            return true;
        }
        if (s.length() < index) {
            return false;
        }
        if (dp[index] != -1) {
            return dp[index] == 1;
        }
        boolean result = false;
        for (String i : arr) {
            if (s.startsWith(i, index)) {
                result |= find(index + i.length(), s, arr, dp);
            }
        }
        dp[index] = result ? 1 : 0;
        return result;
    }
}
