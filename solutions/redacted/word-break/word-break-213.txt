class Solution {

    public boolean method1(String s, List<String> param1) {
        boolean[] dp = new boolean[s.length() + 1];
        //set out of bounds to true
        dp[s.length()] = true;
        //botttom up tabulation
        for (int i = s.length() - 1; i >= 0; i--) {
            for (String w : param1) {
                //if word length is comparable  and is equal to portion of substring of s
                if (i + w.length() <= s.length() && s.substring(i, i + w.length()).equals(w)) {
                    dp[i] = dp[i + w.length()];
                }
                if (dp[i]) {
                    break;
                }
            }
        }
        return dp[0];
    }
}
