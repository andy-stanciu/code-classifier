class Solution {

    public boolean method1(String s, List<String> param1) {
        Boolean[] dp = new Boolean[s.length()];
        Set<String> set = new HashSet<>(param1);
        return helper(0, 0, s, set, dp);
    }

    public boolean helper(int i, int j, String s, Set<String> set, Boolean[] dp) {
        if (i == s.length()) {
            return true;
        }
        if (dp[i] != null) {
            return dp[i];
        }
        for (int k = i; k <= s.length(); k++) {
            if (set.contains(s.substring(i, k))) {
                if (helper(k, k + 1, s, set, dp))
                    return true;
            }
        }
        return dp[i] = false;
    }
}
