class Solution {

    public boolean method1(String s, List<String> param1) {
        Set<String> set = new HashSet<>(param1);
        boolean[] dp = new boolean[s.length() + 1];
        dp[0] = true;
        return method2(s, set, dp);
    }

    public boolean method2(String s, Set<String> set, boolean[] dp) {
        for (int j = 0; j < s.length(); j++) {
            if (dp[j]) {
                for (int k = j + 1; k <= s.length(); k++) {
                    if (!dp[k]) {
                        // Already found a word on this index
                        dp[k] = set.contains(s.substring(j, k));
                    }
                }
            } else {
                // Reach to first true value and search for all possible words
                continue;
            }
            // Found the last segmented word
            if (dp[s.length()])
                return true;
            //System.out.println(Arrays.toString(dp));
        }
        return false;
    }
}
