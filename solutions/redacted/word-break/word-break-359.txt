class Solution {

    public boolean method1(String s, List<String> param1) {
        Set<String> set = new HashSet<>();
        for (String str : param1) set.add(str);
        int[] t = new int[s.length()];
        Arrays.fill(t, -1);
        return isPossible(s, 0, set, t);
    }

    boolean isPossible(String s, int idx, Set<String> set, int[] t) {
        if (idx >= s.length())
            return true;
        boolean ans = false;
        if (t[idx] != -1)
            return t[idx] == 1 ? true : false;
        for (int i = idx; i <= s.length(); i++) {
            if (set.contains(s.substring(idx, i))) {
                ans = ans | isPossible(s, i, set, t);
            }
        }
        t[idx] = ans ? 1 : 0;
        return ans;
    }
}
