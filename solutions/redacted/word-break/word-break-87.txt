class Solution {

    public boolean method1(String s, List<String> param1) {
        HashSet<String> set = new HashSet<>(param1);
        HashMap<Integer, Boolean> memo = new HashMap<>();
        return recurse(s, set, 0, memo);
    }

    private boolean recurse(String s, HashSet<String> set, int index, Map<Integer, Boolean> memo) {
        if (index == s.length())
            return true;
        if (memo.containsKey(index))
            return memo.get(index);
        for (int i = index + 1; i <= s.length(); i++) {
            String sub = s.substring(index, i);
            if (set.contains(sub)) {
                if (recurse(s, set, i, memo))
                    return true;
            }
        }
        memo.put(index, false);
        return false;
    }
}
