class Solution {

    public boolean method1(String s, List<String> param1) {
        if (s.isEmpty() || param1.isEmpty())
            return false;
        Set<String> var1 = new HashSet<>(param1);
        // for each i, it stores true/false if i chars taken from s can be matched with wordDict
        boolean[] dp = new boolean[s.length() + 1];
        // base case - if 0 chars taken/empty string it will be matched.
        dp[0] = true;
        for (int i = 1; i <= s.length(); i++) {
            for (int j = 0; j < i; j++) {
                if (dp[j] && var1.contains(s.substring(j, i))) {
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[s.length()];
    }
}
