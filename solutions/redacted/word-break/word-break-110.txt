class Solution {

    private Set<String> dictionary;

    private Boolean[][] segmentPossible;

    private int n;

    public boolean method1(String s, List<String> param1) {
        n = s.length();
        dictionary = new HashSet<>(param1);
        segmentPossible = new Boolean[n][n];
        return method2(s, 0, 0);
    }

    private boolean method2(String s, int start, int end) {
        return end == n ? false : (segmentPossible[start][end] == null ? segmentPossible[start][end] = (dictionary.contains(word.substring(start, ++end)) ? (end == n ? true : method2(word, end, end)) : false) || method2(word, start, end) : segmentPossible[start][end]);
    }
}
