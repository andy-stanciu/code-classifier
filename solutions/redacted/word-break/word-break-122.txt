class Solution {

    Boolean[] dp;

    boolean solve(String s, Set<String> set, int i) {
        if (i >= s.length())
            return true;
        if (set.contains(s))
            return true;
        if (dp[i] != null)
            return dp[i];
        for (int l = i + 1; l <= s.length(); l++) {
            String temp = s.substring(i, l);
            if (set.contains(temp) && solve(s, set, l))
                return dp[i] = true;
        }
        return dp[i] = false;
    }

    public boolean method1(String s, List<String> param1) {
        Set<String> set = new HashSet<>();
        dp = new Boolean[s.length()];
        for (String str : param1) set.add(str);
        return solve(s, set, 0);
    }
}
