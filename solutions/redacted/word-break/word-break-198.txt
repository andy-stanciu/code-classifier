class Solution {

    public boolean method1(String s, List<String> param1) {
        Map<String, Boolean> memo = new HashMap<String, Boolean>();
        Set<String> var1 = new HashSet<String>(param1);
        return dfs(s, var1, memo);
    }

    private boolean dfs(String s, Set<String> var1, Map<String, Boolean> memo) {
        if (memo.containsKey(s)) {
            return memo.get(s);
        }
        if (var1.contains(s)) {
            return true;
        }
        for (int i = 1; i < s.length(); i++) {
            String prefix = s.substring(0, i);
            if (var1.contains(prefix) && dfs(s.substring(i), var1, memo)) {
                memo.put(s, true);
                return true;
            }
        }
        memo.put(s, false);
        return false;
    }
}
