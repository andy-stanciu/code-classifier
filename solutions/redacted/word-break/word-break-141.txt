class Solution {

    static int n;

    public static boolean solve(String s, int idx, List<String> param1, int[] dp) {
        if (idx == n) {
            return true;
        }
        if (dp[idx] != -1) {
            if (dp[idx] == 1) {
                return true;
            }
            return false;
        }
        for (int i = idx + 1; i <= n; i++) {
            String subs = s.substring(idx, i);
            System.out.println(subs);
            System.out.println(i);
            if (param1.contains(subs)) {
                System.out.println(subs);
                if (solve(s, i, param1, dp)) {
                    dp[idx] = 1;
                    return true;
                }
            }
        }
        dp[idx] = 0;
        return false;
    }

    public boolean method1(String s, List<String> param1) {
        n = s.length();
        int[] dp = new int[s.length()];
        Arrays.fill(dp, -1);
        return solve(s, 0, param1, dp);
    }
}
