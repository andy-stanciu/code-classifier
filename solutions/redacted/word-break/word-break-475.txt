class Solution {

    public boolean method1(String s, List<String> param1) {
        return dfs(s, 0, param1, new int[s.length()]);
    }

    private boolean dfs(String s, int i, List<String> wD, int[] dp) {
        if (i == s.length()) {
            return true;
        }
        if (dp[i] != 0) {
            return dp[i] == 1;
        }
        String sb = s.substring(i, s.length());
        for (String w : wD) {
            if (sb.startsWith(w) && dp[i] != 1) {
                dp[i] = dfs(s, i + w.length(), wD, dp) ? 1 : -1;
            }
        }
        return dp[i] == 1;
    }
}
