class Solution {

    public List<Integer> method1(int[] nums) {
        int n = nums.length, low = 0, window = n / 3;
        Set<Integer> set = new HashSet<>();
        if (n == 1 || n == 2) {
            for (int i = 0; i < n; i++) {
                set.add(nums[i]);
            }
            return set.stream().collect(Collectors.toList());
        }
        Arrays.sort(nums);
        while (low < n) {
            if (low + window < n && nums[low] == nums[low + window]) {
                set.add(nums[low]);
                low += window;
            } else {
                low++;
            }
        }
        return set.stream().collect(Collectors.toList());
    }
}
