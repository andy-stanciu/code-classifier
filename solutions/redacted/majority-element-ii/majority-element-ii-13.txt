class Solution {

    public List<Integer> method1(int[] nums) {
        int count1 = 0;
        int count2 = 0;
        int elt1 = Integer.MIN_VALUE;
        int elt2 = Integer.MIN_VALUE;
        // Now dont act smart and take a random number as ur elts as
        // it might collide and pose a problem. I was dumped that way.
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == elt1) {
                count1++;
            } else if (nums[i] == elt2) {
                count2++;
            } else //The below && condition is imp otherwise end up taking same
            //elt as elt1 and elt2
            if (count1 == 0 && nums[i] != elt2) {
                elt1 = nums[i];
                count1 = 1;
            } else if (count2 == 0) {
                elt2 = nums[i];
                count2 = 1;
            } else {
                count1--;
                count2--;
            }
        }
        count1 = 0;
        count2 = 0;
        int length = nums.length / 3;
        // The reason for another dry run is that it can be that you
        // have 2 numbers and out of those only one is your answer.
        List<Integer> ans = new ArrayList<>();
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == elt1) {
                count1++;
            }
            if (nums[i] == elt2) {
                count2++;
            }
        }
        if (count1 > length)
            ans.add(elt1);
        if (count2 > length)
            ans.add(elt2);
        return ans;
    }
}
