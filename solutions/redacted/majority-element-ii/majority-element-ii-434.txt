class Solution {

    public List<Integer> method1(int[] nums) {
        int ele1 = Integer.MIN_VALUE, ele2 = Integer.MIN_VALUE, cnt1 = 0, cnt2 = 0;
        for (int n : nums) {
            if (cnt1 == 0 && n != ele2) {
                ele1 = n;
                cnt1++;
            } else if (cnt2 == 0 && n != ele1) {
                ele2 = n;
                cnt2++;
            } else if (n == ele1)
                cnt1++;
            else if (n == ele2)
                cnt2++;
            else {
                cnt1--;
                cnt2--;
            }
        }
        List<Integer> res = new ArrayList<>();
        cnt1 = 0;
        cnt2 = 0;
        for (int n : nums) {
            if (n == ele1)
                cnt1++;
            if (n == ele2)
                cnt2++;
        }
        if (cnt1 > nums.length / 3)
            res.add(ele1);
        if (cnt2 > nums.length / 3)
            res.add(ele2);
        Collections.sort(res);
        return res;
        /* using hashing
        List<Integer> res = new ArrayList<>();
        Map<Integer, Integer> map = new HashMap<>();
        for(int n : nums) {
            map.put(n, map.getOrDefault(n, 0) + 1);
            if(map.get(n) == (nums.length/3)+1) res.add(n);
        }
        return res;*/
    }
}
