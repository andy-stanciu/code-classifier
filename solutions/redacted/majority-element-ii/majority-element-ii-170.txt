class Solution {

    public List<Integer> method1(int[] nums) {
        int n = nums.length;
        int firstValue, secondValue, firstCount, secondCount;
        firstValue = nums[0];
        firstCount = 1;
        secondValue = -10;
        secondCount = 0;
        for (int i = 1; i < n; i++) {
            if (firstValue == nums[i])
                firstCount++;
            else if (secondValue == nums[i])
                secondCount++;
            else if (firstCount == 0) {
                firstValue = nums[i];
                firstCount = 1;
            } else if (secondCount == 0) {
                secondValue = nums[i];
                secondCount = 1;
            } else {
                firstCount--;
                secondCount--;
            }
        }
        int c1, c2;
        c1 = 0;
        c2 = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] == firstValue)
                c1++;
            if (nums[i] == secondValue)
                c2++;
        }
        List<Integer> ans = new ArrayList<>();
        if (c1 > (n / 3))
            ans.add(firstValue);
        if (c2 > (n / 3))
            ans.add(secondValue);
        return ans;
    }
}
