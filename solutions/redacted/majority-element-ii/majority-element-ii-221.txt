class Solution {

    public List<Integer> method1(int[] nums) {
        int n = nums.length;
        List<Integer> res = new ArrayList<>();
        int elem1 = 0, elem2 = 0;
        int count1 = 0, count2 = 0;
        // First pass: Find the two most frequent elements using the Boyer-Moore Voting Algorithm
        for (int num : nums) {
            if (num == elem1) {
                count1++;
            } else if (num == elem2) {
                count2++;
            } else if (count1 == 0) {
                elem1 = num;
                count1 = 1;
            } else if (count2 == 0) {
                elem2 = num;
                count2 = 1;
            } else {
                count1--;
                count2--;
            }
        }
        // Reset counts for validation
        count1 = 0;
        count2 = 0;
        // Second pass: Validate the two elements found in the first pass
        for (int num : nums) {
            if (num == elem1)
                count1++;
            else if (num == elem2)
                count2++;
        }
        // Check if they are truly majority elements (appear more than n/3 times)
        if (count1 > n / 3)
            res.add(elem1);
        if (count2 > n / 3 && elem1 != elem2)
            res.add(elem2);
        return res;
    }
}
